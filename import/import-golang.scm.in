(define-module (gnu packages golang-import)
  #:use-module ((guix licenses) #:prefix license:)
  #:use-module (guix build-system go)
  #:use-module (guix gexp)
  #:use-module (guix git-download)
  #:use-module (guix packages)
  #:use-module (guix utils)
  #:use-module (gnu packages)
  #:use-module (gnu packages golang)
  #:use-module (gnu packages golang-check)
  #:use-module (gnu packages ipfs)
  #:use-module (gnu packages golang-build)
  #:use-module (gnu packages golang-compression)
  #:use-module (gnu packages prometheus)
  #:use-module (gnu packages version-control) ; move to golang-vcs
  #:use-module (gnu packages serialization) ; move to golang-vcs
  #:use-module (gnu packages web) ; move to golang-web
  #:use-module (gnu packages databases) ; move to golang-xyz
  #:use-module (gnu packages docker) ; move to golang-xyz
  #:use-module (gnu packages syncthing) ; move to golang-xyz
  #:use-module (gnu packages golang-maths)
  #:use-module (gnu packages golang-crypto)
  #:use-module (gnu packages golang-vcs)
  #:use-module (gnu packages golang-web)
  #:use-module (gnu packages golang-xyz)
  #:use-module (gnu packages golang-xyz))

(define-public go-0xacab-org-leap-bitmask-core
  (package
    (name "go-0xacab-org-leap-bitmask-core")
    (version "0.0.0-20250131173412-2f546686314d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://0xacab.org/leap/bitmask-core.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "059rymcclivp2rj5m2k4112xmqsdv1vldlcckqb2lr2lc0991s8z"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "0xacab.org/leap/bitmask-core"))
    (propagated-inputs (list
                             go-0xacab-org-leap-menshen
                             go-0xacab-org-leap-obfsvpn       ; packaged
                             go-0xacab-org-leap-tunnel-telemetry
                             go-github-com-asdine-storm-v3    ; packaged
                             go-github-com-babolivier-go-doh-client
                             go-github-com-go-openapi-runtime ; packaged
                             go-github-com-mitchellh-go-homedir
                             go-github-com-prometheus-community-pro-bing
                             go-github-com-refraction-networking-utls
                             go-github-com-rs-zerolog         ; packaged
                             go-github-com-stretchr-testify   ; packaged
                             go-golang-org-x-exp              ; packaged
                             go-golang-org-x-net              ; packaged
                             ))
    (home-page "https://0xacab.org/leap/bitmask-core")
    (synopsis "bitmask-core")
    (description
     "@@code{bitmask-core} is a library to handle bootstrap for a LEAP provider in an
unified way.")
    (license license:gpl3)))

(define-public go-0xacab-org-leap-bitmask-vpn
  (package
    (name "go-0xacab-org-leap-bitmask-vpn")
    (version "0.0.0-20250131100516-8473f488dac0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://0xacab.org/leap/bitmask-vpn.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1g7rdq7n0x5n48j0d4qza6ph1pqwf8582wq4bf7m1jwnwnqc6iga"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; #:go ; check
      #:import-path "0xacab.org/leap/bitmask-vpn"))
    (propagated-inputs (list
                        go-0xacab-org-leap-bitmask-core
                        go-0xacab-org-leap-menshen
                        go-0xacab-org-leap-obfsvpn ; packaged
                        ;; go-git-torproject-org-pluggable-transports-goptlib-git
                        ;; go-git-torproject-org-pluggable-transports-snowflake-git
                        go-github-com-cretz-bine
                        go-github-com-keybase-go-ps
                        go-github-com-natefinch-npipe
                        go-github-com-pion-webrtc-v3
                        go-github-com-prometheus-community-pro-bing
                        go-github-com-protonmail-go-autostart
                        go-github-com-rs-zerolog ; packaged
                        go-github-com-smartystreets-goconvey
                        go-github-com-stretchr-testify
                        go-github-com-xtaci-kcp-go-v5
                        go-github-com-xtaci-smux
                        go-golang-org-x-sys
                        ))
    (home-page "https://0xacab.org/leap/bitmask-vpn")
    (synopsis "Bitmask - Desktop client")
    (description
     "@@strong{Bitmask} needs the following minimum versions of supported operating
systems:.")
    (license license:gpl3)))

(define-public go-0xacab-org-leap-menshen
  (package
    (name "go-0xacab-org-leap-menshen")
    (version "0.0.0-20250131170728-16eaebb6d93d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://0xacab.org/leap/menshen.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lsk1s2y388ncvhpchfpp7whqms78mqv84cxx0f908hhcy9xrrdm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "0xacab.org/leap/menshen"))
    (propagated-inputs (list
                             go-0xacab-org-leap-bitmask-core
                             go-0xacab-org-leap-lb                  ; packaged
                             go-github-com-go-openapi-errors        ; packaged
                             go-github-com-go-openapi-runtime       ; packaged
                             go-github-com-go-openapi-strfmt        ; packaged
                             go-github-com-go-openapi-swag          ; packaged
                             go-github-com-go-openapi-validate      ; packaged
                             go-github-com-jmoiron-sqlx             ; packaged
                             go-github-com-kellydunn-golang-geo
                             go-github-com-labstack-echo-v4         ; packaged
                             go-github-com-mattn-go-sqlite3 ; packaged         ; packaged
                             go-github-com-prometheus-client-golang ; packaged
 ; packaged
                             go-github-com-rs-zerolog               ; packaged
                             go-github-com-spf13-cobra              ; packaged
                             go-github-com-spf13-pflag              ; packaged
                             go-github-com-spf13-viper              ; packaged
                             go-github-com-stretchr-testify         ; packaged
                             go-github-com-swaggo-echo-swagger
                             go-github-com-swaggo-swag              ; packaged
                             go-github-com-tidwall-cities           ; packaged
                             go-github-com-tj-assert                ; packaged
                             go-golang-org-x-crypto                 ; packaged
                             go-golang-org-x-exp                    ; packaged
                             go-gonum-org-v1-gonum                  ; packaged
                             go-google-golang-org-grpc              ; packaged
                             go-gopkg-in-yaml-v2                    ; packaged
                             ))
    (home-page "https://0xacab.org/leap/menshen")
    (synopsis "Menshen")
    (description
     "Menshen is a gateway & bridge distribution service for LEAP VPN.")
    (license license:gpl3)))

(define-public go-0xacab-org-leap-tunnel-telemetry
  (package
    (name "go-0xacab-org-leap-tunnel-telemetry")
    (version "0.0.0-20240830081933-7328bb50078b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://0xacab.org/leap/tunnel-telemetry.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w235y1qyx7c8ckaywg50vcqwwi9hv83am7glq1h3mspbk02x27n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "0xacab.org/leap/tunnel-telemetry"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-spf13-viper
                             go-github-com-spf13-cobra
                             go-github-com-rs-zerolog ; packaged
                             go-github-com-pion-stun
                             go-github-com-ooni-probe-engine
                             go-github-com-labstack-gommon
                             go-github-com-labstack-echo-v4
                             go-github-com-google-uuid))
    (home-page "https://0xacab.org/leap/tunnel-telemetry")
    (synopsis "Open Tunnel Telemetry")
    (description
     "This package provides a @code{PoC} implementation for a Open Tunnel Telemetry
collector and client.  See the [spec].")
    (license license:gpl3)))

(define-public go-4d63-com-gocheckcompilerdirectives
  (package
    (name "go-4d63-com-gocheckcompilerdirectives")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/leighmcculloch/gocheckcompilerdirectives")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nffidnf8ggp7f9yzpkvbjcjcq0303z9z5bqch6p7vkq293qrwfb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "4d63.com/gocheckcompilerdirectives"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://4d63.com/gocheckcompilerdirectives")
    (synopsis "gocheckcompilerdirectives")
    (description
     "Check that go compiler directives (@@code{//go:} comments) are valid and catch
easy mistakes.")
    (license license:expat)))

(define-public go-4d63-com-gochecknoglobals
  (package
    (name "go-4d63-com-gochecknoglobals")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/leighmcculloch/gochecknoglobals")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "157g88dry8ryb5dckp6hfm96zzd4sc36rqd633jxsi66x534f3y6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "4d63.com/gochecknoglobals"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://4d63.com/gochecknoglobals")
    (synopsis "gochecknoglobals")
    (description "Check that no globals are present in Go code.")
    (license license:expat)))

(define-public go-bitbucket-org-creachadair-shell
  (package
    (name "go-bitbucket-org-creachadair-shell")
    (version "0.19.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://bitbucket.org/creachadair/shell")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nllz4b6nnpiv1lg63wjyaa2v6ibb9xzqg3gypgycd26gixghi2i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "bitbucket.org/creachadair/shell"))
    (home-page "https://cel.dev/expr")
    (synopsis "")
    (description
     "")
    (license license:asl2.0)))

(define-public go-bitbucket-org-liamstask-goose
  (package
    (name "go-bitbucket-org-liamstask-goose")
    (version "0.19.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://bitbucket.org/liamstask/goose")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nllz4b6nnpiv1lg63wjyaa2v6ibb9xzqg3gypgycd26gixghi2i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "bitbucket.org/liamstask/goose"))
    (home-page "https://bitbucket.org/liamstask/goose")
    (synopsis "")
    (description
     "")
    (license license:asl2.0)))

(define-public go-buf-build-gen-go-bufbuild-bufplugin-protocolbuffers-go
  (package
    (name "go-buf-build-gen-go-bufbuild-bufplugin-protocolbuffers-go")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/bufplugin-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "146a2faqcncbyx0md9cl53bpwnwjgv0r0gckja6hscva5vmy8fw6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "buf.build/go/bufplugin"))
    (home-page "https://buf.build/go/bufplugin")
    (synopsis "bufplugin-go")
    (description
     "")
    (license license:asl2.0)))

(define-public go-buf-build-gen-go-bufbuild-registry-connectrpc-go
  (package
    (name "go-buf-build-gen-go-bufbuild-registry-connectrpc-go")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/bufplugin-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "146a2faqcncbyx0md9cl53bpwnwjgv0r0gckja6hscva5vmy8fw6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "buf.build/go/bufplugin"))
    (home-page "https://buf.build/go/bufplugin")
    (synopsis "bufplugin-go")
    (description
     "")
    (license license:asl2.0)))

(define-public go-buf-build-gen-go-bufbuild-registry-protocolbuffers-go
  (package
    (name "go-buf-build-gen-go-bufbuild-registry-protocolbuffers-go")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/bufplugin-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "146a2faqcncbyx0md9cl53bpwnwjgv0r0gckja6hscva5vmy8fw6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "buf.build/go/bufplugin"))
    (home-page "https://buf.build/go/bufplugin")
    (synopsis "bufplugin-go")
    (description
     "")
    (license license:asl2.0)))

(define-public go-buf-build-go-bufplugin
  (package
    (name "go-buf-build-go-bufplugin")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/bufplugin-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "146a2faqcncbyx0md9cl53bpwnwjgv0r0gckja6hscva5vmy8fw6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "buf.build/go/bufplugin"))
    (propagated-inputs (list go-pluginrpc-com-pluginrpc
                        go-google-golang-org-protobuf
                        go-github-com-stretchr-testify
                        go-github-com-bufbuild-protovalidate-go
                        go-github-com-bufbuild-protocompile
                        go-buf-build-go-spdx
                        go-buf-build-gen-go-bufbuild-bufplugin-protocolbuffers-go))
    (home-page "https://buf.build/go/bufplugin")
    (synopsis "bufplugin-go")
    (description
     "This is the Go SDK for the
@@url{https://github.com/bufbuild/bufplugin,Bufplugin} framework.
@@code{bufplugin-go} currently provides the
@@url{https://pkg.go.dev/buf.build/go/bufplugin/check,check},
@@url{https://pkg.go.dev/buf.build/go/bufplugin/check/checkutil,checkutil}, and
@@url{https://pkg.go.dev/buf.build/go/bufplugin/check/checktest,checktest}
packages to make it simple to author test custom lint and breaking change
plugins.  It wraps the @@code{bufplugin} API with
@@url{https://github.com/pluginrpc/pluginrpc-go,pluginrpc-go} in easy-to-use
interfaces and concepts that organize around the standard
@@url{https://pkg.go.dev/google.golang.org/protobuf@@v1.34.2/reflect/protoreflect,protoreflect}
API that powers most of the Go Protobuf ecosystem. @@code{bufplugin-go} is also
the framework that the Buf team uses to author all of the builtin lint and
breaking change rules within the @@url{https://github.com/bufbuild/buf,Buf CLI}
- we've made sure that @@code{bufplugin-go} is powerful enough to represent the
most complex lint and breaking change rules while keeping it as simple as
possible for you to use.  If you want to author a lint or breaking change plugin
today, you should use @@code{bufplugin-go}.")
    (license license:asl2.0)))

(define-public go-buf-build-gen-go-pluginrpc-pluginrpc-protocolbuffers-go
  (package
    (name "go-buf-build-gen-go-pluginrpc-pluginrpc-protocolbuffers-go")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/bufplugin-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "146a2faqcncbyx0md9cl53bpwnwjgv0r0gckja6hscva5vmy8fw6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "buf.build/go/bufplugin"))
    (home-page "https://buf.build/go/bufplugin")
    (synopsis "bufplugin-go")
    (description
     "")
    (license license:asl2.0)))

(define-public go-buf-build-go-protoyaml
  (package
    (name "go-buf-build-go-protoyaml")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/protoyaml-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gr6nf2sycjhcjq4n8h35fwhay2j1knvdc99dhjgmmp7fmyj8h1b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "buf.build/go/protoyaml"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                        go-google-golang-org-protobuf
                        go-github-com-stretchr-testify
                        go-github-com-google-go-cmp
                        go-github-com-bufbuild-protovalidate-go
                        go-buf-build-gen-go-bufbuild-protovalidate-protocolbuffers-go ; packaged
))
    (home-page "https://buf.build/go/protoyaml")
    (synopsis "ProtoYAML")
    (description
     "Marshal and unmarshal Protocol Buffers as YAML. Provides fine-grained error
details with file, line, column and snippet information.")
    (license license:asl2.0)))

(define-public go-buf-build-go-spdx
  (package
    (name "go-buf-build-go-spdx")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/spdx-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fzl2yyanfkrbrwcrn1n9ra0nyxfl5nbnf9mkn96q0g1m4wb2r1s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "buf.build/go/spdx"))
    (home-page "https://buf.build/go/spdx")
    (synopsis "spdx-go")
    (description "Package spdx contains license information from SPDX.")
    (license license:asl2.0)))

(define-public go-chainguard-dev-apko
  (package
    (name "go-chainguard-dev-apko")
    (version "0.27.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chainguard-dev/apko")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16nw3k7f21aaq4d717jaigjgfhi508wcv4f3baqzc0bl5k566r3b"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "chainguard.dev/apko"))
    (propagated-inputs (list go-sigs-k8s-io-release-utils
                             go-k8s-io-apimachinery
                             go-gopkg-in-yaml-v3
                             go-gopkg-in-ini-v1
                             go-google-golang-org-api
                             go-golang-org-x-time
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-oauth2
                             go-go-step-sm-crypto
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel
                             go-go-lsp-dev-uri
                             go-github-com-u-root-u-root
                             go-github-com-tmc-dot
                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-skratchdot-open-golang
                             go-github-com-package-url-packageurl-go
                             go-github-com-klauspost-pgzip
                             go-github-com-klauspost-compress
                             go-github-com-invopop-jsonschema
                             go-github-com-hashicorp-go-retryablehttp
                             go-github-com-hashicorp-go-cleanhttp
                             go-github-com-google-shlex
                             go-github-com-google-go-containerregistry
                             go-github-com-google-go-cmp
                             go-github-com-go-git-go-git-v5
                             go-github-com-charmbracelet-log
                             go-github-com-chainguard-dev-clog
                             go-chainguard-dev-sdk))
    (home-page "https://chainguard.dev/apko")
    (synopsis "apko: apk-based OCI image builder")
    (description
     "Build and publish @@url{https://opencontainers.org/,OCI container images} built
from @@url{https://wiki.alpinelinux.org/wiki/Package_management,apk} packages.")
    (license license:asl2.0)))

(define-public go-chainguard-dev-go-grpc-kit
  (package
    (name "go-chainguard-dev-go-grpc-kit")
    (version "0.17.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chainguard-dev/go-grpc-kit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ian1vx6pf73jvx03m328y0s6xxkx1i04jzpixll7vlywb5lkn41"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "chainguard.dev/go-grpc-kit"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto-googleapis-api
                        go-google-golang-org-api
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-kelseyhightower-envconfig
                        go-github-com-grpc-ecosystem-grpc-gateway-v2
                        go-github-com-grpc-ecosystem-go-grpc-prometheus ; packaged
                        go-github-com-grpc-ecosystem-go-grpc-middleware
                        go-github-com-google-go-cmp
                        go-github-com-chainguard-dev-clog))
    (home-page "https://chainguard.dev/go-grpc-kit")
    (synopsis "gRPC Kit")
    (description "This repository contains helpers working with @code{gRPC}.")
    (license license:asl2.0)))

(define-public go-chainguard-dev-go-oidctest
  (package
    (name "go-chainguard-dev-go-oidctest")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chainguard-dev/go-oidctest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gzs63x7jbilglaywyvirvdiyf9fvsbdjs08ymhqhm1l7q4vbmny"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "chainguard.dev/go-oidctest"))
    (propagated-inputs (list go-github-com-go-jose-go-jose-v4 ; packaged
                             go-github-com-coreos-go-oidc-v3))
    (home-page "https://chainguard.dev/go-oidctest")
    (synopsis "go-oidc-test")
    (description "Library for creating fake OIDC issuers in tests.")
    (license license:asl2.0)))

(define-public go-chainguard-dev-sdk
  (package
    (name "go-chainguard-dev-sdk")
    (version "0.1.33")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chainguard-dev/sdk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09mz4lqmpkjp8hh1y7ql7nil0i40frhrxxbk9jl6wqwxd007wdg9"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "chainguard.dev/sdk"))
    (propagated-inputs (list go-k8s-io-apimachinery
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc-cmd-protoc-gen-go-grpc
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api
                             go-google-golang-org-api
                             go-golang-org-x-oauth2
                             go-golang-org-x-exp
                             go-github-com-sigstore-sigstore
                             go-github-com-russross-blackfriday-v2
                             go-github-com-pkg-browser
                             go-github-com-microcosm-cc-bluemonday
                             go-github-com-grpc-ecosystem-grpc-gateway-v2
                             go-github-com-google-go-containerregistry
                             go-github-com-google-go-cmp
                             go-github-com-go-jose-go-jose-v4 ; packaged
                             go-github-com-coreos-go-oidc-v3
                             go-github-com-cloudevents-sdk-go-v2
                             go-github-com-chainguard-dev-clog
                             go-github-com-bits-and-blooms-bitset
                             go-github-com-aws-aws-sdk-go-v2
                             go-cloud-google-com-go-compute-metadata
                             go-chainguard-dev-go-oidctest
                             go-chainguard-dev-go-grpc-kit
                             go-chainguard-dev-apko))
    (home-page "https://chainguard.dev/sdk")
    (synopsis "SDK")
    (description
     "This repository contains the public @@url{https://grpc.io/,@code{gRPC}} protos
supporting our services and packages to ease integration with the Chainguard
platform.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go
  (package
    (name "go-cloud-google-com-go")
    (version "0.117.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zpwarp5sf6mcyw8lh57c35rmiqcybyhmpvb5iclkrll7sjlyk5l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-oauth2
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opentelemetry-io-otel
                             go-go-opencensus-io ; packaged

                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-martian-v3
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-storage))
    (home-page "https://cloud.google.com/go")
    (synopsis "Google Cloud Client Libraries for Go")
    (description
     "Package cloud is the root of the packages used to access Google Cloud Services.
See
@@url{https://pkg.go.dev/cloud.google.com/go#section-directories,https://pkg.go.dev/cloud.google.com/go#section-directories}
for a full list of sub-modules.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-accessapproval
  (package
    (name "go-cloud-google-com-go-accessapproval")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "accessapproval"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/accessapproval"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Access Approval API")
    (description "Go Client Library for Access Approval API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-accesscontextmanager
  (package
    (name "go-cloud-google-com-go-accesscontextmanager")
    (version "1.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "accesscontextmanager"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/accesscontextmanager"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Access Context Manager API")
    (description "Go Client Library for Access Context Manager API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-ai
  (package
    (name "go-cloud-google-com-go-ai")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "ai"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04m0y21hijqbjmyv4w38iqm43nj0787pgj9q3ghcs6s8xgc0g0fg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/ai"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Generative Language API")
    (description "Go Client Library for Generative Language API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-aiplatform
  (package
    (name "go-cloud-google-com-go-aiplatform")
    (version "1.69.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "aiplatform"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fskcjjqylz2pnbhpgsic48m18jp2cmblk06xd87cvw21d1q7r9s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/aiplatform"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Vertex AI API")
    (description "Go Client Library for Vertex AI API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-analytics
  (package
    (name "go-cloud-google-com-go-analytics")
    (version "0.25.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "analytics"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/analytics"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Analytics API")
    (description "Go Client Library for Analytics API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-apigateway
  (package
    (name "go-cloud-google-com-go-apigateway")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "apigateway"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/apigateway"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "API Gateway API")
    (description "Go Client Library for API Gateway API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-apigeeconnect
  (package
    (name "go-cloud-google-com-go-apigeeconnect")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "apigeeconnect"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/apigeeconnect"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Apigee Connect API")
    (description "Go Client Library for Apigee Connect API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-apigeeregistry
  (package
    (name "go-cloud-google-com-go-apigeeregistry")
    (version "0.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "apigeeregistry"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/apigeeregistry"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Apigee Registry API")
    (description "Go Client Library for Apigee Registry API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-appengine
  (package
    (name "go-cloud-google-com-go-appengine")
    (version "1.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "appengine"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/appengine"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "App Engine Admin API")
    (description "Go Client Library for App Engine Admin API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-area120
  (package
    (name "go-cloud-google-com-go-area120")
    (version "0.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "area120"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/area120"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Area120 API")
    (description "Go Client Library for Area120 API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-artifactregistry
  (package
    (name "go-cloud-google-com-go-artifactregistry")
    (version "1.16.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "artifactregistry"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hdbiw8xfzxyv9jr6ms0bkx519917zqgxmg2fsz01pgv6nh587wn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/artifactregistry"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Artifact Registry API")
    (description "Go Client Library for Artifact Registry API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-asset
  (package
    (name "go-cloud-google-com-go-asset")
    (version "1.20.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "asset"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/asset"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-osconfig
                             go-cloud-google-com-go-orgpolicy
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam
                             go-cloud-google-com-go-accesscontextmanager))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Asset API")
    (description "Go Client Library for Cloud Asset API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-assuredworkloads
  (package
    (name "go-cloud-google-com-go-assuredworkloads")
    (version "1.12.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "assuredworkloads"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/assuredworkloads"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Assured Workloads API")
    (description "Go Client Library for Assured Workloads API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-auth
  (package
    (name "go-cloud-google-com-go-auth")
    (version "0.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "auth"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0v6b4r0khwq57lpcl4d4bvrl8nhwvpkrj0dx3nlrjc81xfijqd8b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/auth"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list
                        go-cloud-google-com-go-compute-metadata ; packaged
                        go-github-com-google-go-cmp ; packaged
                        go-github-com-google-s2a-go
                        go-github-com-googleapis-enterprise-certificate-proxy
                        go-github-com-googleapis-gax-go-v2
                        go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-golang-org-x-net ; packaged
                        go-google-golang-org-grpc ; packaged
                        go-google-golang-org-protobuf ; packaged
                        ))
    (home-page "https://cloud.google.com/go")
    (synopsis "Google Auth Library for Go")
    (description
     "Package auth provides utilities for managing Google Cloud credentials, including
functionality for creating, caching, and refreshing OAuth2 tokens.  It offers
customizable options for different OAuth2 flows, such as 2-legged (2LO) and
3-legged (3LO) OAuth, along with support for PKCE and automatic token
management.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-auth-oauth2adapt
  (package
    (name "go-cloud-google-com-go-auth-oauth2adapt")
    (version "0.2.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "auth/oauth2adapt"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ga365ql1wapp1kp16x58zg6dfd6kzhwwsm6la4pk31mdrwyyva8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/auth/oauth2adapt"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-golang-org-x-oauth2
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-auth))
    (home-page "https://cloud.google.com/go")
    (synopsis #f)
    (description "Package oauth2adapt helps converts types used in
@@url{/cloud.google.com/go/auth,cloud.google.com/go/auth} and
@@url{/golang.org/x/oauth2,golang.org/x/oauth2}.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-automl
  (package
    (name "go-cloud-google-com-go-automl")
    (version "1.14.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "automl"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1r4r28z407irgg6m86m3pvz1qik1y0798a301m12kjchji77cisj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/automl"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud AutoML API")
    (description "Go Client Library for Cloud @code{AutoML} API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-baremetalsolution
  (package
    (name "go-cloud-google-com-go-baremetalsolution")
    (version "1.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "baremetalsolution"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/baremetalsolution"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Bare Metal Solution API")
    (description "Go Client Library for Bare Metal Solution API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-batch
  (package
    (name "go-cloud-google-com-go-batch")
    (version "1.11.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "batch"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1r4r28z407irgg6m86m3pvz1qik1y0798a301m12kjchji77cisj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/batch"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Batch API")
    (description "Go Client Library for Batch API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-beyondcorp
  (package
    (name "go-cloud-google-com-go-beyondcorp")
    (version "1.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "beyondcorp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/beyondcorp"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "BeyondCorp API")
    (description "Go Client Library for @code{BeyondCorp} API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-bigquery
  (package
    (name "go-cloud-google-com-go-bigquery")
    (version "1.65.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "bigquery"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ziwf52xw3vcq0sfqc8vxylrv6254bvz3qy6drljly1qkr4q3l4b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/bigquery"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-xerrors
                             go-golang-org-x-sync
                             go-go-opencensus-io ; packaged

                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-github-com-apache-arrow-go-v15
                             go-cloud-google-com-go-storage
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam
                             go-cloud-google-com-go-datacatalog
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "BigQuery")
    (description
     "Package bigquery provides a client for the @code{BigQuery} service.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-bigtable
  (package
    (name "go-cloud-google-com-go-bigtable")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "bigtable"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ww03cabcsvxjk6rhiwaq8gf6k58k4rhslsdrx4pz6dmyhjng33k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/bigtable"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-genproto-googleapis-api ; packaged
                        go-github-com-google-uuid
                        go-cloud-google-com-go-monitoring
                        go-rsc-io-binaryregexp
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto-googleapis-rpc
                        go-google-golang-org-genproto
                        go-google-golang-org-api
                        go-go-opentelemetry-io-otel-sdk-metric
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-metric ; packaged
                        go-go-opentelemetry-io-otel
                        go-github-com-googleapis-gax-go-v2
                        go-github-com-googleapis-cloud-bigtable-clients-test
                        go-github-com-google-go-cmp
                        go-github-com-google-btree
                        go-cloud-google-com-go-longrunning
                        go-cloud-google-com-go-iam
                        go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis #f)
    (description "Package bigtable is an API to Google Cloud Bigtable.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-billing
  (package
    (name "go-cloud-google-com-go-billing")
    (version "1.20.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "billing"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bws86nhyx7k2y7k7lkn8kyj20rh498irxfs4cllwhsasnwpzl00"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/billing"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Billing API")
    (description "Go Client Library for Cloud Billing API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-binaryauthorization
  (package
    (name "go-cloud-google-com-go-binaryauthorization")
    (version "1.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "binaryauthorization"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/binaryauthorization"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Binary Authorization API")
    (description "Go Client Library for Binary Authorization API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-certificatemanager
  (package
    (name "go-cloud-google-com-go-certificatemanager")
    (version "1.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "certificatemanager"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/certificatemanager"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Certificate Manager API")
    (description "Go Client Library for Certificate Manager API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-channel
  (package
    (name "go-cloud-google-com-go-channel")
    (version "1.19.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "channel"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/channel"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Channel API")
    (description "Go Client Library for Cloud Channel API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-cloudbuild
  (package
    (name "go-cloud-google-com-go-cloudbuild")
    (version "1.19.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "cloudbuild"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1r4r28z407irgg6m86m3pvz1qik1y0798a301m12kjchji77cisj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/cloudbuild"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Build API")
    (description "Go Client Library for Cloud Build API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-clouddms
  (package
    (name "go-cloud-google-com-go-clouddms")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "clouddms"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/clouddms"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Database Migration API")
    (description "Go Client Library for Database Migration API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-cloudtasks
  (package
    (name "go-cloud-google-com-go-cloudtasks")
    (version "1.13.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "cloudtasks"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/cloudtasks"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Tasks API")
    (description "Go Client Library for Cloud Tasks API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-compute
  (package
    (name "go-cloud-google-com-go-compute")
    (version "1.31.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "compute"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05zw592nl4z5xbyl5pa1z0j7vkllni0ailij2vfmi6kmnb8j22fc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/compute"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Compute API")
    (description "Go Client Library for Compute API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-contactcenterinsights
  (package
    (name "go-cloud-google-com-go-contactcenterinsights")
    (version "1.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "contactcenterinsights"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cj1r4yxyncwbjdfkz1zbczrh9556lmrdj4nq05nwfcw58sl6jfw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/contactcenterinsights"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Contact Center AI Insights API")
    (description "Go Client Library for Contact Center AI Insights API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-container
  (package
    (name "go-cloud-google-com-go-container")
    (version "1.42.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "container"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10726mh4g0crxiv9bglad974i9fgw4q3kqvlj6chsv040gmry93q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/container"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Kubernetes Engine API")
    (description
     "Package container contains a deprecated Google Container Engine client.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-containeranalysis
  (package
    (name "go-cloud-google-com-go-containeranalysis")
    (version "0.13.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "containeranalysis"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/containeranalysis"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam
                             go-cloud-google-com-go-grafeas
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Container Analysis API")
    (description "Go Client Library for Container Analysis API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-datacatalog
  (package
    (name "go-cloud-google-com-go-datacatalog")
    (version "1.24.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "datacatalog"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cj1r4yxyncwbjdfkz1zbczrh9556lmrdj4nq05nwfcw58sl6jfw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/datacatalog"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Google Cloud Data Catalog API")
    (description "Go Client Library for Google Cloud Data Catalog API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-dataflow
  (package
    (name "go-cloud-google-com-go-dataflow")
    (version "0.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "dataflow"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/dataflow"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Dataflow API")
    (description "Go Client Library for Dataflow API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-dataform
  (package
    (name "go-cloud-google-com-go-dataform")
    (version "0.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "dataform"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/dataform"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Dataform API")
    (description "Go Client Library for Dataform API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-datafusion
  (package
    (name "go-cloud-google-com-go-datafusion")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "datafusion"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/datafusion"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Data Fusion API")
    (description "Go Client Library for Cloud Data Fusion API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-datalabeling
  (package
    (name "go-cloud-google-com-go-datalabeling")
    (version "0.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "datalabeling"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/datalabeling"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Data Labeling API")
    (description "Go Client Library for Data Labeling API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-dataplex
  (package
    (name "go-cloud-google-com-go-dataplex")
    (version "1.20.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "dataplex"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p1ka4ri9v93wm19ig1g2160rf59skn5jhkq50ckzf2w50d51bnp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/dataplex"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Dataplex API")
    (description "Go Client Library for Cloud Dataplex API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-dataproc-v2
  (package
    (name "go-cloud-google-com-go-dataproc-v2")
    (version "2.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "dataproc"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/dataproc/v2"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Dataproc API")
    (description "Go Client Library for Cloud Dataproc API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-dataqna
  (package
    (name "go-cloud-google-com-go-dataqna")
    (version "0.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "dataqna"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/dataqna"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Data QnA API")
    (description "Go Client Library for Data @code{QnA} API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-datastore
  (package
    (name "go-cloud-google-com-go-datastore")
    (version "1.20.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "datastore"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fj48fav12jrg3dzbbal8h5rv3xhgq0kc9vnihnxdj5nvbig9y8f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/datastore"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Datastore")
    (description
     "Package datastore provides a client for Google Cloud Datastore.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-datastream
  (package
    (name "go-cloud-google-com-go-datastream")
    (version "1.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "datastream"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04z4a3lwqmfbbsp6knrzyyfzars9h9k2yq8nmz04z414ddwb1fs0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/datastream"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Datastream API")
    (description "Go Client Library for Datastream API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-deploy
  (package
    (name "go-cloud-google-com-go-deploy")
    (version "1.26.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "deploy"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bws86nhyx7k2y7k7lkn8kyj20rh498irxfs4cllwhsasnwpzl00"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/deploy"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Google Cloud Deploy API")
    (description "Go Client Library for Google Cloud Deploy API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-dialogflow
  (package
    (name "go-cloud-google-com-go-dialogflow")
    (version "1.64.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "dialogflow"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cj1r4yxyncwbjdfkz1zbczrh9556lmrdj4nq05nwfcw58sl6jfw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/dialogflow"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Dialogflow API")
    (description "Go Client Library for Dialogflow API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-dlp
  (package
    (name "go-cloud-google-com-go-dlp")
    (version "1.20.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "dlp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/dlp"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Data Loss Prevention (DLP) API")
    (description "Go Client Library for Cloud Data Loss Prevention (DLP) API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-documentai
  (package
    (name "go-cloud-google-com-go-documentai")
    (version "1.35.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "documentai"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/documentai"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Document AI API")
    (description "Go Client Library for Cloud Document AI API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-domains
  (package
    (name "go-cloud-google-com-go-domains")
    (version "0.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "domains"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/domains"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Domains API")
    (description "Go Client Library for Cloud Domains API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-edgecontainer
  (package
    (name "go-cloud-google-com-go-edgecontainer")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "edgecontainer"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hdbiw8xfzxyv9jr6ms0bkx519917zqgxmg2fsz01pgv6nh587wn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/edgecontainer"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Distributed Cloud Edge Container API")
    (description "Go Client Library for Distributed Cloud Edge Container API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-errorreporting
  (package
    (name "go-cloud-google-com-go-errorreporting")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "errorreporting"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00bdhr81cr37vy0llh0sifhx0ya5izhdwy95y72ykhavvivlksyd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/errorreporting"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Error Reporting API")
    (description
     "Package errorreporting is a Google Cloud Error Reporting library.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-essentialcontacts
  (package
    (name "go-cloud-google-com-go-essentialcontacts")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "essentialcontacts"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/essentialcontacts"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Essential Contacts API")
    (description "Go Client Library for Essential Contacts API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-eventarc
  (package
    (name "go-cloud-google-com-go-eventarc")
    (version "1.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "eventarc"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hdbiw8xfzxyv9jr6ms0bkx519917zqgxmg2fsz01pgv6nh587wn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/eventarc"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Eventarc API")
    (description "Go Client Library for Eventarc API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-filestore
  (package
    (name "go-cloud-google-com-go-filestore")
    (version "1.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "filestore"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/filestore"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Filestore API")
    (description "Go Client Library for Cloud Filestore API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-firestore
  (package
    (name "go-cloud-google-com-go-firestore")
    (version "1.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "firestore"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pkm7s6ignqgznkg379xnav3pa4ahf58ig9anh7qlwzbysv0cid1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/firestore"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-time
                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis #f)
    (description
     "Package firestore provides a client for reading and writing to a Cloud Firestore
database.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-functions
  (package
    (name "go-cloud-google-com-go-functions")
    (version "1.19.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "functions"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/functions"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Functions API")
    (description "Go Client Library for Cloud Functions API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-gkebackup
  (package
    (name "go-cloud-google-com-go-gkebackup")
    (version "1.6.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "gkebackup"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/gkebackup"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Backup for GKE API")
    (description "Go Client Library for Backup for GKE API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-gkeconnect
  (package
    (name "go-cloud-google-com-go-gkeconnect")
    (version "0.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "gkeconnect"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10726mh4g0crxiv9bglad974i9fgw4q3kqvlj6chsv040gmry93q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/gkeconnect"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "GKE Connect APIs")
    (description "Go Client Library for GKE Connect APIs.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-gkehub
  (package
    (name "go-cloud-google-com-go-gkehub")
    (version "0.15.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "gkehub"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/gkehub"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "GKE Hub")
    (description "Go Client Library for GKE Hub.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-gkemulticloud
  (package
    (name "go-cloud-google-com-go-gkemulticloud")
    (version "1.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "gkemulticloud"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/gkemulticloud"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Anthos Multi-Cloud API")
    (description "Go Client Library for Anthos Multi-Cloud API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-grafeas
  (package
    (name "go-cloud-google-com-go-grafeas")
    (version "0.3.12")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "grafeas"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/grafeas"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Grafeas API")
    (description "Go Client Library for Grafeas API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-gsuiteaddons
  (package
    (name "go-cloud-google-com-go-gsuiteaddons")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "gsuiteaddons"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/gsuiteaddons"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Google Workspace Add-ons API")
    (description "Go Client Library for Google Workspace Add-ons API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-iam
  (package
    (name "go-cloud-google-com-go-iam")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "iam"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bws86nhyx7k2y7k7lkn8kyj20rh498irxfs4cllwhsasnwpzl00"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/iam"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "IAM API")
    (description
     "Package iam supports the resource-specific operations of Google Cloud IAM
(Identity and Access Management) for the Google Cloud Libraries.  See
@@url{https://cloud.google.com/iam,https://cloud.google.com/iam} for more about
IAM.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-iap
  (package
    (name "go-cloud-google-com-go-iap")
    (version "1.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "iap"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/iap"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Identity-Aware Proxy API")
    (description "Go Client Library for Cloud Identity-Aware Proxy API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-ids
  (package
    (name "go-cloud-google-com-go-ids")
    (version "1.5.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "ids"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/ids"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud IDS API")
    (description "Go Client Library for Cloud IDS API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-iot
  (package
    (name "go-cloud-google-com-go-iot")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "iot"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/iot"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud IoT API")
    (description "Go Client Library for Cloud @code{IoT} API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-kms
  (package
    (name "go-cloud-google-com-go-kms")
    (version "1.20.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "kms"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cj1r4yxyncwbjdfkz1zbczrh9556lmrdj4nq05nwfcw58sl6jfw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/kms"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Key Management Service (KMS) API")
    (description
     "Go Client Library for Cloud Key Management Service (KMS) API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-language
  (package
    (name "go-cloud-google-com-go-language")
    (version "1.14.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "language"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/language"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Natural Language API")
    (description "Go Client Library for Cloud Natural Language API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-lifesciences
  (package
    (name "go-cloud-google-com-go-lifesciences")
    (version "0.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "lifesciences"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/lifesciences"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Life Sciences API")
    (description "Go Client Library for Cloud Life Sciences API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-logging
  (package
    (name "go-cloud-google-com-go-logging")
    (version "1.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "logging"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "169z658ri3z6sq62glg9d9givhkc3s7mvxq4055w1jk0kmpch1s4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/logging"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-oauth2
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opencensus-io ; packaged

                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-storage
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam
                             go-cloud-google-com-go-compute-metadata ; packaged
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Logging")
    (description
     "Package logging contains a Cloud Logging client suitable for writing logs.  For
reading logs, and working with sinks, metrics and monitored resources, see
package cloud.google.com/go/logging/logadmin.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-longrunning
  (package
    (name "go-cloud-google-com-go-longrunning")
    (version "0.6.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "longrunning"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p1ka4ri9v93wm19ig1g2160rf59skn5jhkq50ckzf2w50d51bnp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/longrunning"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "longrunning")
    (description
     "Package longrunning supports Long Running Operations for the Google Cloud
Libraries.  See google.golang.org/genproto/googleapis/longrunning for its
service definition.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-managedidentities
  (package
    (name "go-cloud-google-com-go-managedidentities")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "managedidentities"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/managedidentities"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Managed Service for Microsoft Active Directory API")
    (description
     "Go Client Library for Managed Service for Microsoft Active Directory API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-maps
  (package
    (name "go-cloud-google-com-go-maps")
    (version "1.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "maps"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1r4r28z407irgg6m86m3pvz1qik1y0798a301m12kjchji77cisj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/maps"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Google Maps Platform APIs")
    (description "Go Client Library for Google Maps Platform APIs.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-mediatranslation
  (package
    (name "go-cloud-google-com-go-mediatranslation")
    (version "0.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "mediatranslation"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/mediatranslation"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Media Translation API")
    (description "Go Client Library for Media Translation API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-memcache
  (package
    (name "go-cloud-google-com-go-memcache")
    (version "1.11.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "memcache"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/memcache"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Memorystore for Memcached API")
    (description "Go Client Library for Cloud Memorystore for Memcached API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-metastore
  (package
    (name "go-cloud-google-com-go-metastore")
    (version "1.14.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "metastore"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/metastore"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Dataproc Metastore API")
    (description "Go Client Library for Dataproc Metastore API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-monitoring
  (package
    (name "go-cloud-google-com-go-monitoring")
    (version "1.22.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "monitoring"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bws86nhyx7k2y7k7lkn8kyj20rh498irxfs4cllwhsasnwpzl00"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/monitoring"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Monitoring API")
    (description "Go Client Library for Cloud Monitoring API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-networkconnectivity
  (package
    (name "go-cloud-google-com-go-networkconnectivity")
    (version "1.16.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "networkconnectivity"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bws86nhyx7k2y7k7lkn8kyj20rh498irxfs4cllwhsasnwpzl00"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/networkconnectivity"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Network Connectivity API")
    (description "Go Client Library for Network Connectivity API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-networkmanagement
  (package
    (name "go-cloud-google-com-go-networkmanagement")
    (version "1.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "networkmanagement"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p1ka4ri9v93wm19ig1g2160rf59skn5jhkq50ckzf2w50d51bnp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/networkmanagement"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Network Management API")
    (description "Go Client Library for Network Management API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-networksecurity
  (package
    (name "go-cloud-google-com-go-networksecurity")
    (version "0.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "networksecurity"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/networksecurity"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Network Security API")
    (description "Go Client Library for Network Security API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-notebooks
  (package
    (name "go-cloud-google-com-go-notebooks")
    (version "1.12.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "notebooks"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/notebooks"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Notebooks API")
    (description "Go Client Library for Notebooks API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-optimization
  (package
    (name "go-cloud-google-com-go-optimization")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "optimization"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/optimization"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Optimization API")
    (description "Go Client Library for Cloud Optimization API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-orchestration
  (package
    (name "go-cloud-google-com-go-orchestration")
    (version "1.11.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "orchestration"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1r4r28z407irgg6m86m3pvz1qik1y0798a301m12kjchji77cisj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/orchestration"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Composer API")
    (description "Go Client Library for Cloud Composer API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-orgpolicy
  (package
    (name "go-cloud-google-com-go-orgpolicy")
    (version "1.14.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "orgpolicy"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/orgpolicy"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Organization Policy API")
    (description "Go Client Library for Organization Policy API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-osconfig
  (package
    (name "go-cloud-google-com-go-osconfig")
    (version "1.14.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "osconfig"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/osconfig"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "OS Config API")
    (description "Go Client Library for OS Config API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-oslogin
  (package
    (name "go-cloud-google-com-go-oslogin")
    (version "1.14.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "oslogin"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/oslogin"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud OS Login API")
    (description "Go Client Library for Cloud OS Login API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-phishingprotection
  (package
    (name "go-cloud-google-com-go-phishingprotection")
    (version "0.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "phishingprotection"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/phishingprotection"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Phishing Protection API")
    (description "Go Client Library for Phishing Protection API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-policytroubleshooter
  (package
    (name "go-cloud-google-com-go-policytroubleshooter")
    (version "1.11.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "policytroubleshooter"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/policytroubleshooter"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Policy Troubleshooter API")
    (description "Go Client Library for Policy Troubleshooter API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-privatecatalog
  (package
    (name "go-cloud-google-com-go-privatecatalog")
    (version "0.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "privatecatalog"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/privatecatalog"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Private Catalog API")
    (description "Go Client Library for Cloud Private Catalog API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-profiler
  (package
    (name "go-cloud-google-com-go-profiler")
    (version "0.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "profiler"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yjwg4py2pzsrv0wmm54hy2108ykxnaqwjl7bwpzyi43vc7pgvyb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/profiler"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-oauth2
                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-pprof
                             go-github-com-golang-mock ; packaged
                             go-cloud-google-com-go-storage
                             go-cloud-google-com-go-compute-metadata ; packaged
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Profiler")
    (description
     "Package profiler is a client for the Cloud Profiler service.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-pubsub
  (package
    (name "go-cloud-google-com-go-pubsub")
    (version "1.45.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "pubsub"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "011jw8q8idhcpwq7v09jr5rvvz04d2d803xm71m162rirfngszxd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/pubsub"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-time
                             go-golang-org-x-sync
                             go-golang-org-x-oauth2
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opentelemetry-io-otel
                             go-go-opencensus-io ; packaged

                             go-go-einride-tech-aip
                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-kms
                             go-cloud-google-com-go-iam
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Pub/Sub")
    (description
     "Package pubsub provides an easy way to publish and receive Google Cloud Pub/Sub
messages, hiding the details of the underlying server RPCs.  Pub/Sub is a
many-to-many, asynchronous messaging system that decouples senders and
receivers.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-pubsublite
  (package
    (name "go-cloud-google-com-go-pubsublite")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "pubsublite"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0c7ycyzxbk6k4s63r0f8crb8i4jcc3lsk5n2wcnfdk6qkzs15572"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/pubsublite"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-sync
                             go-golang-org-x-oauth2
                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-pubsub
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Pub/Sub Lite")
    (description
     "Package pubsublite provides an easy way to publish and receive messages using
the Pub/Sub Lite service.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-recaptchaenterprise-v2
  (package
    (name "go-cloud-google-com-go-recaptchaenterprise-v2")
    (version "2.19.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "recaptchaenterprise"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bws86nhyx7k2y7k7lkn8kyj20rh498irxfs4cllwhsasnwpzl00"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/recaptchaenterprise/v2"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "reCAPTCHA Enterprise API")
    (description "Go Client Library for @code{reCAPTCHA} Enterprise API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-recommendationengine
  (package
    (name "go-cloud-google-com-go-recommendationengine")
    (version "0.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "recommendationengine"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/recommendationengine"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Recommendations AI")
    (description "Go Client Library for Recommendations AI.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-recommender
  (package
    (name "go-cloud-google-com-go-recommender")
    (version "1.13.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "recommender"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/recommender"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Recommender API")
    (description "Go Client Library for Recommender API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-redis
  (package
    (name "go-cloud-google-com-go-redis")
    (version "1.17.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "redis"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/redis"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Google Cloud Memorystore for Redis API")
    (description
     "Go Client Library for Google Cloud Memorystore for Redis API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-resourcemanager
  (package
    (name "go-cloud-google-com-go-resourcemanager")
    (version "1.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "resourcemanager"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/resourcemanager"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Resource Manager API")
    (description "Go Client Library for Cloud Resource Manager API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-resourcesettings
  (package
    (name "go-cloud-google-com-go-resourcesettings")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "resourcesettings"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/resourcesettings"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Resource Settings API")
    (description "Go Client Library for Resource Settings API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-retail
  (package
    (name "go-cloud-google-com-go-retail")
    (version "1.19.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "retail"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/retail"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Retail API")
    (description "Go Client Library for Retail API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-run
  (package
    (name "go-cloud-google-com-go-run")
    (version "1.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "run"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p1ka4ri9v93wm19ig1g2160rf59skn5jhkq50ckzf2w50d51bnp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/run"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Run Admin API")
    (description "Go Client Library for Cloud Run Admin API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-scheduler
  (package
    (name "go-cloud-google-com-go-scheduler")
    (version "1.11.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "scheduler"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/scheduler"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Scheduler API")
    (description "Go Client Library for Cloud Scheduler API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-secretmanager
  (package
    (name "go-cloud-google-com-go-secretmanager")
    (version "1.14.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "secretmanager"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/secretmanager"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Secret Manager API")
    (description "Go Client Library for Secret Manager API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-security
  (package
    (name "go-cloud-google-com-go-security")
    (version "1.18.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "security"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/security"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Security APIs")
    (description "Go Client Library for Security APIs.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-securitycenter
  (package
    (name "go-cloud-google-com-go-securitycenter")
    (version "1.35.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "securitycenter"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/securitycenter"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Security Command Center API")
    (description "Go Client Library for Security Command Center API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-servicedirectory
  (package
    (name "go-cloud-google-com-go-servicedirectory")
    (version "1.12.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "servicedirectory"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/servicedirectory"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "Service Directory API")
    (description "Go Client Library for Service Directory API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-shell
  (package
    (name "go-cloud-google-com-go-shell")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "shell"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/shell"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Shell API")
    (description "Go Client Library for Cloud Shell API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-spanner
  (package
    (name "go-cloud-google-com-go-spanner")
    (version "1.73.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "spanner"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lkashwmkkjc3jf7hw3lfna65bfzw0aw8a5pbf9a4yq98jm7fjpg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/spanner"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto-googleapis-rpc
                        go-google-golang-org-genproto-googleapis-api ; packaged
                        go-google-golang-org-genproto
                        go-google-golang-org-api
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-go-opentelemetry-io-otel-sdk-metric
                        go-go-opentelemetry-io-otel-metric ; packaged
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-detectors-gcp
                        go-go-opencensus-io ; packaged

                        go-github-com-googleapis-gax-go-v2
                        go-github-com-google-uuid
                        go-github-com-google-go-cmp
                        go-github-com-googlecloudplatform-grpc-gcp-go-grpcgcp
                        go-cloud-google-com-go-monitoring
                        go-cloud-google-com-go-longrunning
                        go-cloud-google-com-go-iam
                        go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Spanner")
    (description
     "Package spanner provides a client for reading and writing to Cloud Spanner
databases.  See the packages under admin for clients that operate on databases
and instances.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-speech
  (package
    (name "go-cloud-google-com-go-speech")
    (version "1.25.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "speech"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/speech"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Speech-to-Text API")
    (description "Go Client Library for Cloud Speech-to-Text API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-storage
  (package
    (name "go-cloud-google-com-go-storage")
    (version "1.49.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "storage"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xs883kvz1pnjznj6h7yam085g15z78nc1r5n6x9k6c78y157qak"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/storage"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf ; packaged
                        go-google-golang-org-grpc ; packaged
                        go-google-golang-org-genproto-googleapis-api ; packaged
                        go-google-golang-org-genproto
                        go-google-golang-org-api
                        go-golang-org-x-sync ; packaged
                        go-golang-org-x-oauth2 ; packaged
                        go-go-opentelemetry-io-otel-sdk-metric
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-stdout-stdoutmetric
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-detectors-gcp
                        go-github-com-googleapis-gax-go-v2
                        go-github-com-google-uuid ; packaged
                        go-github-com-google-go-cmp ; packaged
                        go-github-com-googlecloudplatform-opentelemetry-operations-go-exporter-metric
                        go-cloud-google-com-go-longrunning
                        go-cloud-google-com-go-iam
                        go-cloud-google-com-go-compute-metadata
                        go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Storage")
    (description
     "Package storage provides an easy way to work with Google Cloud Storage.  Google
Cloud Storage stores data in named objects, which are grouped into buckets.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-storagetransfer
  (package
    (name "go-cloud-google-com-go-storagetransfer")
    (version "1.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "storagetransfer"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cj1r4yxyncwbjdfkz1zbczrh9556lmrdj4nq05nwfcw58sl6jfw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/storagetransfer"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Storage Transfer API")
    (description "Go Client Library for Storage Transfer API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-talent
  (package
    (name "go-cloud-google-com-go-talent")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "talent"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/talent"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Talent Solution API")
    (description "Go Client Library for Cloud Talent Solution API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-texttospeech
  (package
    (name "go-cloud-google-com-go-texttospeech")
    (version "1.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "texttospeech"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hdbiw8xfzxyv9jr6ms0bkx519917zqgxmg2fsz01pgv6nh587wn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/texttospeech"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Text-to-Speech API")
    (description "Go Client Library for Cloud Text-to-Speech API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-tpu
  (package
    (name "go-cloud-google-com-go-tpu")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "tpu"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/tpu"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud TPU API")
    (description "Go Client Library for Cloud TPU API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-trace
  (package
    (name "go-cloud-google-com-go-trace")
    (version "1.11.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "trace"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/trace"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Stackdriver Trace API")
    (description "Go Client Library for Stackdriver Trace API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-translate
  (package
    (name "go-cloud-google-com-go-translate")
    (version "1.12.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "translate"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/translate"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-text
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Translation API")
    (description
     "Package translate is the v2 client for the Google Translation API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-vertexai
  (package
    (name "go-cloud-google-com-go-vertexai")
    (version "0.13.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "vertexai"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15xpp4p869q7ga4wni8zw0gx5syajlz371g70kknsqbi37lcnzjz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/vertexai"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-text
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-aiplatform
                             go-cloud-google-com-go))
    (home-page "https://cloud.google.com/go")
    (synopsis "Vertex AI Go SDK")
    (description
     "Package vertexai provides a client for interacting with Vertex AI APIs.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-video
  (package
    (name "go-cloud-google-com-go-video")
    (version "1.23.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "video"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/video"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Video APIs")
    (description "Go Client Library for Video APIs.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-videointelligence
  (package
    (name "go-cloud-google-com-go-videointelligence")
    (version "1.12.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "videointelligence"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/videointelligence"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Google Cloud Video Intelligence API")
    (description "Go Client Library for Google Cloud Video Intelligence API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-vision-v2
  (package
    (name "go-cloud-google-com-go-vision-v2")
    (version "2.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "vision"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/vision/v2"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Cloud Vision API")
    (description "Go Client Library for Cloud Vision API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-vmmigration
  (package
    (name "go-cloud-google-com-go-vmmigration")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "vmmigration"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/vmmigration"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "VM Migration API")
    (description "Go Client Library for VM Migration API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-vmwareengine
  (package
    (name "go-cloud-google-com-go-vmwareengine")
    (version "1.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "vmwareengine"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/vmwareengine"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-iam))
    (home-page "https://cloud.google.com/go")
    (synopsis "VMware Engine API")
    (description "Go Client Library for VMware Engine API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-vpcaccess
  (package
    (name "go-cloud-google-com-go-vpcaccess")
    (version "1.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "vpcaccess"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/vpcaccess"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Serverless VPC Access API")
    (description "Go Client Library for Serverless VPC Access API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-webrisk
  (package
    (name "go-cloud-google-com-go-webrisk")
    (version "1.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "webrisk"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/webrisk"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Web Risk API")
    (description "Go Client Library for Web Risk API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-websecurityscanner
  (package
    (name "go-cloud-google-com-go-websecurityscanner")
    (version "1.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "websecurityscanner"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/websecurityscanner"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2))
    (home-page "https://cloud.google.com/go")
    (synopsis "Web Security Scanner API")
    (description "Go Client Library for Web Security Scanner API.")
    (license license:asl2.0)))

(define-public go-cloud-google-com-go-workflows
  (package
    (name "go-cloud-google-com-go-workflows")
    (version "1.13.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go")
             (commit (go-version->git-ref version
                                          #:subdir "workflows"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16cf5vvnnmlc7xd5f694azdr463nzvlxjdj86y4lz5jb65hiapb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "cloud.google.com/go/workflows"
      #:unpack-path "cloud.google.com/go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-longrunning))
    (home-page "https://cloud.google.com/go")
    (synopsis "Workflows API")
    (description "Go Client Library for Workflows API.")
    (license license:asl2.0)))

(define-public go-code-gitea-io-actions-proto-go
  (package
    (name "go-code-gitea-io-actions-proto-go")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/gitea/actions-proto-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13pw09nzhg03yrbm15ijmlbfq8h9r3r3kr5f1ysgad2k4r77y4xp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "code.gitea.io/actions-proto-go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-connectrpc-com-connect))
    (home-page "https://code.gitea.io/actions-proto-go")
    (synopsis "proto-go")
    (description #f)
    (license license:expat)))

(define-public go-code-gitea-io-gitea
  (package
    (name "go-code-gitea-io-gitea")
    (version "1.22.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-gitea/gitea")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w7sl180rz2iva0pk6dn5vmhd83ygmqmrkdgsmjnfnrj3q1i23sr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "code.gitea.io/gitea"))
    (propagated-inputs (list go-github-com-anchore-archiver-v3
                        go-github-com-nektos-act
                        go-github-com-lunny-vfsgen
                        go-github-com-6543-go-version
                        go-xorm-io-xorm
                        go-xorm-io-builder
                        go-strk-kbt-io-projects-go-libravatar
                        go-mvdan-cc-xurls-v2
                        go-gopkg-in-yaml-v3
                        go-gopkg-in-ini-v1
                        go-gopkg-in-gomail-v2
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-golang-org-x-tools
                        go-golang-org-x-text
                        go-golang-org-x-sys
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-golang-org-x-image
                        go-golang-org-x-crypto
                        go-github-com-yuin-goldmark-meta
                        go-github-com-yuin-goldmark-highlighting-v2
                        go-github-com-yuin-goldmark
                        go-github-com-yohcop-openid-go
                        go-github-com-xeipuuv-gojsonschema
                        go-github-com-xanzy-go-gitlab
                        go-github-com-urfave-cli-v2
                        go-github-com-ulikunitz-xz
                        go-github-com-tstranex-u2f
                        go-github-com-syndtr-goleveldb
                        go-github-com-stretchr-testify
                        go-github-com-sergi-go-diff ; packaged
                        go-github-com-sassoftware-go-rpmutils
                        go-github-com-santhosh-tekuri-jsonschema-v5 ; packaged
                        go-github-com-robfig-cron-v3
                        go-github-com-redis-go-redis-v9 ; packaged

                        go-github-com-quasoft-websspi
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-pquerna-otp
                        go-github-com-pkg-errors
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-olivere-elastic-v7
                        go-github-com-niklasfasching-go-org
                        go-github-com-msteinert-pam
                        go-github-com-minio-minio-go-v7 ; packaged
                        go-github-com-microsoft-go-mssqldb
                        go-github-com-microcosm-cc-bluemonday
                        go-github-com-meilisearch-meilisearch-go
                        go-github-com-mattn-go-sqlite3 ; packaged
                        go-github-com-mattn-go-isatty
                        go-github-com-markbates-goth
                        go-github-com-lib-pq
                        go-github-com-klauspost-cpuid-v2
                        go-github-com-klauspost-compress ; packaged
                        go-github-com-keybase-go-crypto
                        go-github-com-kballard-go-shellquote ; packaged
                        go-github-com-json-iterator-go
                        go-github-com-jhillyerd-enmime
                        go-github-com-jaytaylor-html2text
                        go-github-com-huandu-xstrings
                        go-github-com-hashicorp-golang-lru-v2 ; packaged
                        go-github-com-gorilla-sessions
                        go-github-com-gorilla-feeds
                        go-github-com-google-uuid
                        go-github-com-google-pprof
                        go-github-com-google-go-github-v57
                        go-github-com-golang-jwt-jwt-v5 ;packaged

                        go-github-com-gogs-go-gogs-client
                        go-github-com-gogs-chardet
                        go-github-com-gobwas-glob
                        go-github-com-go-webauthn-webauthn
                        go-github-com-go-testfixtures-testfixtures-v3
                        go-github-com-go-swagger-go-swagger
                        go-github-com-go-sql-driver-mysql
                        go-github-com-go-ldap-ldap-v3
                        go-github-com-go-git-go-git-v5
                        go-github-com-go-git-go-billy-v5
                        go-github-com-go-fed-httpsig ; packaged
                        go-github-com-go-enry-go-enry-v2
                        go-github-com-go-co-op-gocron
                        go-github-com-go-chi-cors
                        go-github-com-go-chi-chi-v5 ; packaged
                        go-github-com-go-ap-jsonld
                        go-github-com-go-ap-activitypub
                        go-github-com-gliderlabs-ssh
                        go-github-com-fsnotify-fsnotify ; packaged
                        go-github-com-felixge-fgprof
                        go-github-com-ethantkoenig-rupture
                        go-github-com-emirpasic-gods
                        go-github-com-emersion-go-imap
                        go-github-com-editorconfig-editorconfig-core-go-v2
                        go-github-com-dustin-go-humanize ; packaged
                        go-github-com-dsnet-compress
                        go-github-com-djherbis-nio-v3
                        go-github-com-djherbis-buffer
                        go-github-com-dimiro1-reply
                        go-github-com-chi-middleware-proxy
                        go-github-com-caddyserver-certmagic
                        go-github-com-buildkite-terminal-to-html-v3
                        go-github-com-blevesearch-bleve-v2
                        go-github-com-blakesmith-ar
                        go-github-com-alecthomas-chroma-v2
                        go-github-com-puerkitobio-goquery
                        go-github-com-azure-go-ntlmssp ; packaged
                        go-github-com-42wim-sshsig
                        go-gitea-com-lunny-levelqueue
                        go-gitea-com-lunny-dingtalk-webhook
                        go-gitea-com-go-chi-session
                        go-gitea-com-go-chi-captcha
                        go-gitea-com-go-chi-cache
                        go-gitea-com-go-chi-binding
                        go-connectrpc-com-connect
                        go-codeberg-org-gusted-mcaptcha
                        go-code-gitea-io-sdk-gitea ; packaged
                        go-code-gitea-io-gitea-vet
                        go-code-gitea-io-actions-proto-go))
    (home-page "https://code.gitea.io/gitea")
    (synopsis "Gitea")
    (description
     "The goal of this project is to make the easiest, fastest, and most painless way
of setting up a self-hosted Git service.")
    (license license:expat)))

(define-public go-code-gitea-io-gitea-vet
  (package
    (name "go-code-gitea-io-gitea-vet")
    (version "0.2.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/gitea/gitea-vet")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gdq9r2y1mfyxbfq1dqhgy0kjxz29jn9xzpipay10scyi6miishv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "code.gitea.io/gitea-vet"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://code.gitea.io/gitea-vet")
    (synopsis "gitea-vet")
    (description "@@code{go vet} tool for Gitea.")
    (license license:expat)))

(define-public go-code-rocketnine-space-tslocum-cbind
  (package
    (name "go-code-rocketnine-space-tslocum-cbind")
    (version "0.1.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://code.rocket9labs.com/tslocum/cbind")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nc05lwd8kjwf0sx22kcd4lhss1ny0rll3vjkmry37fm09qadcbq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "code.rocketnine.space/tslocum/cbind"))
    (propagated-inputs (list go-github-com-gdamore-tcell-v2))
    (home-page "https://code.rocketnine.space/tslocum/cbind")
    (synopsis "!!! cbind has moved to")
    (description
     "Package cbind provides tcell key event encoding, decoding and handling.")
    (license license:expat)))

(define-public go-code-sajari-com-docconv
  (package
    (name "go-code-sajari-com-docconv")
    (version "1.3.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sajari/docconv")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12mkrdnq1gnxp82k6c9qqdixilibpyi0zgi0z7w5zmqqwh8inp5r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "code.sajari.com/docconv"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-golang-org-x-net
                             go-github-com-richardlehane-msoleps
                             go-github-com-richardlehane-mscfb
                             go-github-com-otiai10-gosseract-v2
                             go-github-com-gorilla-mux
                             go-github-com-google-go-cmp
                             go-github-com-advancedlogic-goose
                             go-github-com-jalfresi-justext
                             go-cloud-google-com-go-errorreporting
                             go-cloud-google-com-go-compute))
    (home-page "https://code.sajari.com/docconv")
    (synopsis "docconv")
    (description
     "This package provides a Go wrapper library to convert PDF, DOC, DOCX, XML, HTML,
RTF, ODT, Pages documents and images (see optional dependencies below) to plain
text.")
    (license license:expat)))

(define-public go-codeberg-org-gusted-mcaptcha
  (package
    (name "go-codeberg-org-gusted-mcaptcha")
    (version "0.0.0-20220723083913-4f3072e1d570")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://codeberg.org/gusted/mcaptcha.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d1lq5bff099i923b3r63fwzi72j3qmkmsj1p7ns3vy3lg8v9p0d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "codeberg.org/gusted/mcaptcha"))
    (home-page "https://codeberg.org/gusted/mcaptcha")
    (synopsis "mCaptcha Go")
    (description "@code{mCaptcha} is a Go library to interact with
@@url{https://github.com/@code{mCaptcha/mCaptcha,mCaptcha}}.")
    (license license:expat)))

(define-public go-connectrpc-com-connect
  (package
    (name "go-connectrpc-com-connect")
    (version "1.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/connectrpc/connect-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yyi0sy4ig9bby8638s3k9bv33a24rm97viqp25bkv1navdwjphq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "connectrpc.com/connect"))
    (propagated-inputs (list go-google-golang-org-protobuf go-golang-org-x-net
                             go-github-com-google-go-cmp))
    (home-page "https://connectrpc.com/connect")
    (synopsis "Connect")
    (description
     "Package connect is a slim RPC framework built on Protocol Buffers and
@@url{/net/http,net/http}.  In addition to supporting its own protocol, Connect
handlers and clients are wire-compatible with @code{gRPC} and @code{gRPC-Web},
including streaming.")
    (license license:asl2.0)))

(define-public go-connectrpc-com-cors
  (package
    (name "go-connectrpc-com-cors")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/connectrpc/cors-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xwh46ixzwbzpicgca7nizwnm5396i9fg2zgcjah5clxk06bapd5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "connectrpc.com/cors"))
    (home-page "https://connectrpc.com/cors")
    (synopsis "cors")
    (description
     "Package cors provides helpers to configure cross-origin resource sharing (CORS)
for Connect servers.")
    (license license:asl2.0)))

(define-public go-connectrpc-com-otelconnect
  (package
    (name "go-connectrpc-com-otelconnect")
    (version "0.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/connectrpc/otelconnect-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zwhfjskh39qnka377myjqk4cqcdky0gb5qsavva8slrdh2yk2gf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "connectrpc.com/otelconnect"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-sdk-metric
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opentelemetry-io-otel-metric ; packaged
                             go-go-opentelemetry-io-otel
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-connectrpc-com-connect))
    (home-page "https://connectrpc.com/otelconnect")
    (synopsis "otelconnect")
    (description
     "Package otelconnect provides @code{OpenTelemetry} tracing and metrics for
@@url{/connectrpc.com/connect,connectrpc.com/connect} servers and clients.  The
specification followed was the
@@url{https://github.com/open-telemetry/opentelemetry-specification,@code{OpenTelemetry}
specification} with both the
@@url{https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/rpc-metrics.md,rpc
metrics specification} and
@@url{https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/rpc.md,rpc
trace specification} implemented.")
    (license license:asl2.0)))

(define-public go-contrib-go-opencensus-io-exporter-aws
  (package
    (name "go-contrib-go-opencensus-io-exporter-aws")
    (version "0.0.0-20230502192102-15967c811cec")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/census-ecosystem/opencensus-go-exporter-aws")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yz1iagy8wx57cqn7g0wz8xa5wsnf7s07nxkj8qsz1q1g6ida59z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "contrib.go.opencensus.io/exporter/aws"))
    (propagated-inputs (list go-go-opencensus-io ; packaged
 go-github-com-aws-aws-sdk-go))
    (home-page "https://contrib.go.opencensus.io/exporter/aws")
    (synopsis "aws")
    (description
     "Package aws provides Exporter support for AWS XRay for traces.")
    (license license:asl2.0)))

(define-public go-contrib-go-opencensus-io-exporter-stackdriver
  (package
    (name "go-contrib-go-opencensus-io-exporter-stackdriver")
    (version "0.13.14")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/census-ecosystem/opencensus-go-exporter-stackdriver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0iap2j4sfzbf25xhc0fd6xgsh24mnwlwhqqdg9znxvs5jrsr3rgf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "contrib.go.opencensus.io/exporter/stackdriver"))
    (propagated-inputs (list go-honnef-co-go-tools
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto
                        go-google-golang-org-api
                        go-golang-org-x-tools
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-golang-org-x-lint
                        go-go-opencensus-io ; packaged
                        go-github-com-rakyll-embedmd
                        go-github-com-prometheus-prometheus
                        go-github-com-jstemmer-go-junit-report
                        go-github-com-google-go-cmp
                        go-github-com-golang-protobuf
                        go-github-com-census-instrumentation-opencensus-proto
                        go-github-com-aws-aws-sdk-go
                        go-cloud-google-com-go-trace
                        go-cloud-google-com-go-monitoring
                        go-cloud-google-com-go-compute))
    (home-page "https://contrib.go.opencensus.io/exporter/stackdriver")
    (synopsis "OpenCensus Go Stackdriver")
    (description
     "Package stackdriver contains the @code{OpenCensus} exporters for Stackdriver
Monitoring and Stackdriver Tracing.")
    (license license:asl2.0)))

(define-public go-contrib-go-opencensus-io-integrations-ocsql
  (package
    (name "go-contrib-go-opencensus-io-integrations-ocsql")
    (version "0.1.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/opencensus-integrations/ocsql")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1pmwdfhwc2mjdqp07ymp7q506yp81rh7zbbwi8vlgca549ahpqpr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "contrib.go.opencensus.io/integrations/ocsql"))
    (home-page "https://contrib.go.opencensus.io/integrations/ocsql")
    (synopsis "ocsql")
    (description "@code{OpenCensus} SQL database driver wrapper.")
    (license license:asl2.0)))

(define-public go-crawshaw-io-iox
  (package
    (name "go-crawshaw-io-iox")
    (version "0.0.0-20181124134642-c51c3df30797")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/crawshaw/iox")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "180jcd7c34sscaxiydl0i99wry1xawslxss2hl02svxr8b0jwqv0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "crawshaw.io/iox"))
    (home-page "https://crawshaw.io/iox")
    (synopsis "iox: I/O tools for Go programs")
    (description "Package iox contains I/O utilities.")
    (license license:isc)))

(define-public go-crawshaw-io-sqlite
  (package
    (name "go-crawshaw-io-sqlite")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/crawshaw/sqlite")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01km8y906sagdq42ik56iz5z230wpb7xfs0q6w7fwfky60078smj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "crawshaw.io/sqlite"))
    (propagated-inputs (list go-crawshaw-io-iox))
    (home-page "https://crawshaw.io/sqlite")
    (synopsis "Go interface to SQLite.")
    (description "Package sqlite provides a Go interface to SQLite 3.")
    (license license:isc)))

(define-public go-cuelabs-dev-go-oci-ociregistry
  (package
    (name "go-cuelabs-dev-go-oci-ociregistry")
    (version "0.0.0-20250304105642-27e071d2c9b1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://review.gerrithub.io/cue-labs/oci")
             (commit (go-version->git-ref version
                                          #:subdir "ociregistry"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wcbrg0fy7r5sa51f30jjccn6agf52p3v2x5gdaypj0cqjljywk8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "cuelabs.dev/go/oci/ociregistry"
      #:unpack-path "cuelabs.dev/go/oci"))
    (propagated-inputs (list go-github-com-rogpeppe-go-internal
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest
                             go-github-com-go-quicktest-qt))
    (home-page "https://cuelabs.dev/go/oci")
    (synopsis #f)
    (description
     "Package ociregistry provides an abstraction that represents the capabilities
provided by an OCI registry.")
    (license license:asl2.0)))

(define-public go-cuelang-org-go
  (package
    (name "go-cuelang-org-go")
    (version "0.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://review.gerrithub.io/cue-lang/cue")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gf6gmhwvi9j86l9dqjrslxflzf77pgjy2gn88hp4wqjgikn7xs6"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "cuelang.org/go"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-tools
                             go-golang-org-x-text
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-oauth2
                             go-golang-org-x-net
                             go-golang-org-x-mod
                             go-github-com-yuin-goldmark
                             go-github-com-tetratelabs-wazero
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-rogpeppe-go-internal
                             go-github-com-protocolbuffers-txtpbfmt
                             go-github-com-pelletier-go-toml-v2
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest
                             go-github-com-google-uuid
                             go-github-com-google-shlex
                             go-github-com-google-go-cmp
                             go-github-com-go-quicktest-qt
                             go-github-com-emicklei-proto
                             go-github-com-cockroachdb-apd-v3
                             go-cuelabs-dev-go-oci-ociregistry))
    (home-page "https://cuelang.org/go")
    (synopsis "CUE -")
    (description
     "CUE makes it easy to validate data, write schemas, and ensure configurations
align with policies.")
    (license license:asl2.0)))

(define-public go-dmitri-shuralyov-com-gpu-mtl
  (package
    (name "go-dmitri-shuralyov-com-gpu-mtl")
    (version "0.0.0-20221208032759-85de2813cf6b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://dmitri.shuralyov.com/gpu/mtl")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1smmksax508kyh62cjmdmpk1ia0a90xm340r94k56js99zmxprgp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "dmitri.shuralyov.com/gpu/mtl"))
    (home-page "https://dmitri.shuralyov.com/gpu/mtl")
    (synopsis #f)
    (description
     "Package mtl provides access to Apple's Metal API
(@@url{https://developer.apple.com/documentation/metal,https://developer.apple.com/documentation/metal}).")
    (license license:bsd-3)))

(define-public go-drjosh-dev-zzglob
  (package
    (name "go-drjosh-dev-zzglob")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/DrJosh9000/zzglob")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01h11qd52hqpy6b64c3g2qyd4yksih40r4a8rgrz982rppbzg9i7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "drjosh.dev/zzglob"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://drjosh.dev/zzglob")
    (synopsis "zzglob")
    (description "Package zzglob implements a file path walker.")
    (license license:asl2.0)))

(define-public go-eliasnaur-com-font
  (package
    (name "go-eliasnaur-com-font")
    (version "0.0.0-20230308162249-dd43949cb42d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~eliasnaur/font")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j1ra6w642bynfzda7cx33nj3fm7dx3pz5vhpfx1rsb3qc782q41"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "eliasnaur.com/font"))
    (home-page "https://eliasnaur.com/font")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-entgo-io-ent
  (package
    (name "go-entgo-io-ent")
    (version "0.14.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ent/ent")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q99k50g5zgfjcmac6am0a90wdivsmvzfjndanw8fznvr1b4i7rp"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "entgo.io/ent"))
    (propagated-inputs (list go-golang-org-x-tools ;
                             go-golang-org-x-sync
                             go-go-opencensus-io ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-olekukonko-tablewriter
                             go-github-com-modern-go-reflect2
                             go-github-com-mitchellh-mapstructure
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-json-iterator-go
                             go-github-com-jessevdk-go-flags
                             go-github-com-gorilla-websocket ; packaged
                             go-github-com-google-uuid ; packaged
                             go-github-com-go-openapi-inflect ; packaged
                             go-github-com-data-dog-go-sqlmock ; packaged
                             go-ariga-io-atlas ; packaged
                             ))
    (home-page "https://entgo.io/ent")
    (synopsis "ent - An Entity Framework For Go")
    (description
     "Package ent is the interface between end-user schemas and entc (ent codegen).")
    (license license:asl2.0)))

(define-public go-filippo-io-mkcert
  (package
    (name "go-filippo-io-mkcert")
    (version "1.4.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/FiloSottile/mkcert")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ms9mjspiwlsgsnir0ccj3w8vhvrphf5i6k9q3hrz47y2a6igh0l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "filippo.io/mkcert"))
    (propagated-inputs (list go-software-sslmate-com-src-go-pkcs12
                             go-howett-net-plist go-golang-org-x-net))
    (home-page "https://filippo.io/mkcert")
    (synopsis "mkcert")
    (description
     "Command mkcert is a simple zero-config tool to make development certificates.")
    (license license:bsd-3)))

(define-public go-fyne-io-systray
  (package
    (name "go-fyne-io-systray")
    (version "1.11.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fyne-io/systray")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0yrd4f3n8wrqcqradmqq9w0b31hd5hali876xkynfhm3nhaz4j1i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "fyne.io/systray"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-godbus-dbus-v5))
    (home-page "https://fyne.io/systray")
    (synopsis "Systray")
    (description
     "Package systray is a cross-platform Go library to place an icon and menu in the
notification area.")
    (license license:asl2.0)))

(define-public go-gioui-org
  (package
    (name "go-gioui-org")
    (version "0.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~eliasnaur/gio")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1k6aigkl3y9kxn41a7nyi2abqbfy8lwbfqm22skci0b29074fz7i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gioui.org"))
    (propagated-inputs (list go-golang-org-x-text
                             go-golang-org-x-sys
                             go-golang-org-x-image
                             go-golang-org-x-exp-shiny
                             go-golang-org-x-exp
                             go-github-com-go-text-typesetting
                             go-gioui-org-shader
                             go-gioui-org-cpu
                             go-eliasnaur-com-font))
    (home-page "https://gioui.org")
    (synopsis "Gio -")
    (description
     "Immediate mode GUI programs in Go for Android, @code{iOS}, @code{macOS}, Linux,
@code{FreeBSD}, @code{OpenBSD}, Windows, and @code{WebAssembly} (experimental).")
    (license license:expat))) ; check-license

(define-public go-gioui-org-cpu
  (package
    (name "go-gioui-org-cpu")
    (version "0.0.0-20220412190645-f1e9e8c3b1f7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~eliasnaur/gio-cpu")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gybz3mz5qr2zc5jjsbksrpd0gqm7gwyr2q6fymi0rxn6sk531x2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gioui.org/cpu"))
    (home-page "https://gioui.org/cpu")
    (synopsis "Compile and run compute programs on CPU")
    (description
     "This projects contains the compiler for turning Vulkan SPIR-V compute shaders
into binaries for arm64, arm or amd64, using
@@url{https://github.com/eliasnaur/swiftshader,@code{SwiftShader}} with a few
modifications.  A runtime implemented in C and Go is available for running the
resulting binaries.")
    (license license:expat))) ; check-license

(define-public go-gioui-org-shader
  (package
    (name "go-gioui-org-shader")
    (version "1.0.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~eliasnaur/gio-shader")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14p8vwcqwd66w6i2s64ingb2g9cq0i7fz4fwrxvlxv6l5hwxj69j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gioui.org/shader"))
    (propagated-inputs (list go-gioui-org-cpu))
    (home-page "https://gioui.org/shader")
    (synopsis "GPU programs for the Gio project")
    (description
     "This repository contains source code for the @@url{https://gioui.org,Gio}
project.  It also contains the generators and derived versions for use with the
GPU APIs supported by Gio.")
    (license license:expat))) ; check-license

(define-public go-gioui-org-x
  (package
    (name "go-gioui-org-x")
    (version "0.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~whereswaldon/gio-x")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16abz0dc49g13j24dn2hngs066p4gi0w9inl8bnq61glc58iqxvq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gioui.org/x"))
    (propagated-inputs (list go-golang-org-x-text
                             go-golang-org-x-sys
                             go-golang-org-x-image
                             go-golang-org-x-exp-shiny
                             go-golang-org-x-exp
                             go-github-com-yuin-goldmark
                             go-github-com-godbus-dbus-v5
                             go-github-com-esiqveland-notify
                             go-github-com-andybalholm-stroke
                             go-git-wow-st-gmp-jni
                             go-git-sr-ht--jackmordaunt-go-toast
                             go-gioui-org))
    (home-page "https://gioui.org/x")
    (synopsis "gio-x")
    (description
     "This repository hosts @@code{gioui.org/x}.  Two kinds of package exist in this
namespace.  Some are extensions that will eventually be merged into
@@code{gioui.org}'s core repository once their APIs stabilize and their value to
the community is proven.  The rest are extensions to Gio that are not likely to
be needed by every application and require new dependencies.  These will likely
never be merged to the core repository, but will be maintained here.")
    (license license:expat))) ; check-license

(define-public go-git-sr-ht--jackmordaunt-go-toast
  (package
    (name "go-git-sr-ht--jackmordaunt-go-toast")
    (version "1.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~jackmordaunt/go-toast")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12ag1b2zp6ka3md7zmhni5mkca8h8jsynkr42bi3ayrnmnbnxnf4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "git.sr.ht/~jackmordaunt/go-toast"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-go-ole-go-ole))
    (home-page "https://git.sr.ht/~jackmordaunt/go-toast")
    (synopsis "go-toast")
    (description
     "Package toast wraps the lower-level wintoast api and provides an easy way to
send and respond to toast notifications on Windows.")
    (license license:expat))) ; check-license

(define-public go-git-sr-ht--mariusor-go-xsd-duration
  (package
    (name "go-git-sr-ht--mariusor-go-xsd-duration")
    (version "0.0.0-20220703122237-02e73435a078")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~mariusor/go-xsd-duration")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ibrjaf12bylma6phhdi46xcx7gxxrvmzggpspjrlq2xg7zzgv75"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "git.sr.ht/~mariusor/go-xsd-duration"))
    (home-page "https://git.sr.ht/~mariusor/go-xsd-duration")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-git-sr-ht--nelsam-correct
  (package
    (name "go-git-sr-ht--nelsam-correct")
    (version "0.0.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~nelsam/correct")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00if3sqwczjbm4yhhcwi12cpxr7l6876sj7c7ngjy0jkzg5p08mn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "git.sr.ht/~nelsam/correct"))
    (propagated-inputs (list go-golang-org-x-exp go-github-com-poy-onpar
                             go-github-com-fatih-color
                             go-git-sr-ht--nelsam-hel))
    (home-page "https://git.sr.ht/~nelsam/correct")
    (synopsis "correct")
    (description
     "Mission: to cleanly express the inputs and outputs that prove a piece of
software as correct.")
    (license license:mpl2.0)))

(define-public go-git-sr-ht--nelsam-hel
  (package
    (name "go-git-sr-ht--nelsam-hel")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~nelsam/hel")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0wdhrq0wgfbh4hcy8lpgcv14i1bwncj13ayyj2a54rd7r7d5s7qc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "git.sr.ht/~nelsam/hel"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-spf13-cobra
                             go-github-com-poy-onpar
                             go-github-com-google-go-cmp
                             go-github-com-fatih-color
                             go-git-sr-ht--nelsam-correct))
    (home-page "https://git.sr.ht/~nelsam/hel")
    (synopsis "Hel")
    (description "Package main implements the hel command.")
    (license license:unlicense)))

(define-public go-git-sr-ht--sbinet-cmpimg
  (package
    (name "go-git-sr-ht--sbinet-cmpimg")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~sbinet/cmpimg")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1riaadpclqkbb2gx8zycapcx30h69fsaf6lj6m007sg2jdmscf3i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "git.sr.ht/~sbinet/cmpimg"))
    (propagated-inputs (list go-rsc-io-pdf go-golang-org-x-image))
    (home-page "https://git.sr.ht/~sbinet/cmpimg")
    (synopsis "cmpimg")
    (description
     "Package cmpimg compares the raw representation of images taking into account
idiosyncracies related to their underlying format (SVG, PDF, PNG, ...).")
    (license license:bsd-3)))

(define-public go-git-sr-ht--sbinet-gg
  (package
    (name "go-git-sr-ht--sbinet-gg")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~sbinet/gg")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xrr7yjciv0v788vag1h4jgka6rhy9hqva2ia5v6ramzd5if964h"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "git.sr.ht/~sbinet/gg"))
    (propagated-inputs (list go-golang-org-x-image
                             go-github-com-golang-freetype
                             go-github-com-campoy-embedmd
                             go-git-sr-ht--sbinet-cmpimg))
    (home-page "https://git.sr.ht/~sbinet/gg")
    (synopsis "Go Graphics")
    (description
     "Package gg provides a simple API for rendering 2D graphics in pure Go.")
    (license license:expat)))

(define-public go-git-wow-st-gmp-jni
  (package
    (name "go-git-wow-st-gmp-jni")
    (version "0.0.0-20210610011705-34026c7e22d0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.wow.st/gmp/jni.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18swbr0gkprgi0nhbdasafngx4fgsmrll2xj50dw2sx82rizk9kn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "git.wow.st/gmp/jni"))
    (home-page "https://git.wow.st/gmp/jni")
    (synopsis "JNI")
    (description
     "Package jni implements various helper functions for communicating with the
Android JVM though JNI.")
    (license license:bsd-3)))

(define-public go-gitea-com-go-chi-binding
  (package
    (name "go-gitea-com-go-chi-binding")
    (version "0.0.0-20240430071103-39a851e106ed")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/go-chi/binding.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1755bhbhb9366fvdb59qy6f2riv20f7w9d104mkxr1cxjr0ifh52"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitea.com/go-chi/binding"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-goccy-go-json
                             go-github-com-go-chi-chi-v5 ; packaged
                             ))
    (home-page "https://gitea.com/go-chi/binding")
    (synopsis "License")
    (description
     "Package binding is a middleware that provides request data binding and
validation for Chi.")
    (license license:asl2.0)))

(define-public go-gitea-com-go-chi-cache
  (package
    (name "go-gitea-com-go-chi-cache")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/go-chi/cache.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12c7w6d9m7kplp2jszr453b18zazyw6rvhrcai9mfvj9lv35w1jh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitea.com/go-chi/cache"))
    (propagated-inputs (list go-gopkg-in-ini-v1
                             go-golang-org-x-crypto
                             go-github-com-unknwon-com
                             go-github-com-stretchr-testify
                             go-github-com-siddontang-ledisdb
                             go-github-com-lunny-nodb
                             go-github-com-lib-pq
                             go-github-com-go-sql-driver-mysql
                             go-github-com-go-redis-redis
                             go-github-com-bradfitz-gomemcache))
    (home-page "https://gitea.com/go-chi/cache")
    (synopsis "cache")
    (description
     "Package cache is a middleware that aim to have a transparent interface for a lot
of cache implementations.")
    (license license:asl2.0)))

(define-public go-gitea-com-go-chi-captcha
  (package
    (name "go-gitea-com-go-chi-captcha")
    (version "0.0.0-20240315150714-fb487f629098")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/go-chi/captcha.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15417ds7h7xqa1xy02g83qk8by3labx78zsvjjgbmdml1rxwkvwg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitea.com/go-chi/captcha"))
    (propagated-inputs (list go-github-com-unknwon-com
                             go-github-com-smartystreets-goconvey
                             go-github-com-go-chi-chi-v5 ; packaged
                             go-gitea-com-go-chi-cache))
    (home-page "https://gitea.com/go-chi/captcha")
    (synopsis "captcha")
    (description
     "Package captcha a middleware that provides captcha service for chi.")
    (license license:asl2.0)))

(define-public go-gitea-com-go-chi-session
  (package
    (name "go-gitea-com-go-chi-session")
    (version "0.0.0-20240316035857-16768d98ec96")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/go-chi/session.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0yx224mw1q2halp4h4ac0k3wacalnmn1pccjw8kilz1x06vf60n9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitea.com/go-chi/session"))
    (propagated-inputs (list go-gopkg-in-ini-v1
                             go-github-com-unknwon-com
                             go-github-com-smartystreets-goconvey
                             go-github-com-siddontang-ledisdb
                             go-github-com-lib-pq
                             go-github-com-go-sql-driver-mysql
                             go-github-com-go-redis-redis-v8
                             go-github-com-go-chi-chi-v5 ; packaged
                             go-github-com-couchbase-go-couchbase
                             go-github-com-bradfitz-gomemcache))
    (home-page "https://gitea.com/go-chi/session")
    (synopsis "Session")
    (description
     "Package session a middleware that provides the session management of Macaron.")
    (license license:asl2.0)))

(define-public go-gitea-com-lunny-dingtalk-webhook
  (package
    (name "go-gitea-com-lunny-dingtalk-webhook")
    (version "0.0.0-20171025031554-e3534c89ef96")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/lunny/dingtalk_webhook.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dw6vzv6aq1yfxyllc406q69vlrk39m5jdcj355y9h9ak84plznw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitea.com/lunny/dingtalk_webhook"))
    (home-page "https://gitea.com/lunny/dingtalk_webhook")
    (synopsis "非官方 Dingtalk webhook Golang SDK")
    (description "首先在dingtalk中创建一个机器人，将@code{accessToken拷贝出来，然后执行下面方法即可}.")
    (license license:expat)))

(define-public go-gitea-com-lunny-levelqueue
  (package
    (name "go-gitea-com-lunny-levelqueue")
    (version "0.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/lunny/levelqueue.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ppgr841qp7z2gp93ymkw7xy56jdb6h2r9zy8nn4v3d3lxr0gl0n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitea.com/lunny/levelqueue"))
    (propagated-inputs (list go-github-com-syndtr-goleveldb
                             go-github-com-stretchr-testify))
    (home-page "https://gitea.com/lunny/levelqueue")
    (synopsis "levelqueue")
    (description
     "Level queue is a simple queue golang library base on go-leveldb.")
    (license license:expat)))

(define-public go-gitea-com-xorm-sqlfiddle
  (package
    (name "go-gitea-com-xorm-sqlfiddle")
    (version "0.0.0-20180821085327-62ce714f951a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/xorm/sqlfiddle.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03g79q02djhk7rjp4k6jh9aaq6z3sqwjcyz4zzml1klv5gwyb1ij"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitea.com/xorm/sqlfiddle"))
    (home-page "https://gitea.com/xorm/sqlfiddle")
    (synopsis "SQL Fiddle API (UnOfficial)")
    (description "This Go library is aimed to provide an API to operate
@@url{http://sqlfiddle.com/,http://sqlfiddle.com/}.")
    (license license:expat)))

(define-public go-gitee-com-travelliu-dm
  (package
    (name "go-gitee-com-travelliu-dm")
    (version "1.8.11192")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitee.com/travelliu/dm.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "077jwlqyrvnkbmrj8wdfw90q3r5vmz1p12m3s9lrnj15gb8aqn6d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitee.com/travelliu/dm"))
    (propagated-inputs (list go-golang-org-x-text go-github-com-golang-snappy))
    (home-page "https://gitee.com/travelliu/dm")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-1password-onepassword-sdk-go
  (package
    (name "go-github-com-1password-onepassword-sdk-go")
    (version "0.1.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/1Password/onepassword-sdk-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07s8hdd63h58hck8m1191b9ibwxjiwqrmwjhljg0jrwb7mdc2s03"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/1password/onepassword-sdk-go"))
    (propagated-inputs (list go-github-com-tetratelabs-wazero
                             go-github-com-stretchr-testify
                             go-github-com-extism-go-sdk))
    (home-page "https://github.com/1password/onepassword-sdk-go")
    (synopsis "🚀 Get started")
    (description "Code generated by typeshare 1.12.0.  DO NOT EDIT.")
    (license license:expat)))

(define-public go-github-com-42wim-go-gitter
  (package
    (name "go-github-com-42wim-go-gitter")
    (version "1.26.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/42wim/go-gitter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0939fiy7z53izznfhlr7c6vaskbmkbj3ncb09fzx5dmz9cjngy80"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/42wim/go-gitter"))
    (home-page "https://github.com/42wim/go-gitter")
    (synopsis "")
    (description
     "")
    (license license:asl2.0)))

(define-public go-github-com-42wim-matterbridge
  (package
    (name "go-github-com-42wim-matterbridge")
    (version "1.26.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/42wim/matterbridge")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0939fiy7z53izznfhlr7c6vaskbmkbj3ncb09fzx5dmz9cjngy80"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/42wim/matterbridge"))
    (propagated-inputs
     (list go-github-com-42wim-go-gitter
           go-github-com-baozisoftware-qrcode-terminal-go
           go-github-com-benau-tgsconverter
           go-github-com-bwmarrin-discordgo
           go-github-com-d5-tengo-v2
           go-github-com-davecgh-go-spew       ; packaged
           go-github-com-fsnotify-fsnotify     ; packaged
           go-github-com-go-telegram-bot-api-telegram-bot-api-v5
           go-github-com-gomarkdown-markdown   ; packaged
           go-github-com-google-gops           ; packages
           go-github-com-gorilla-schema
           go-github-com-gorilla-websocket
           go-github-com-harmony-development-shibshib
           go-github-com-hashicorp-golang-lru
           go-github-com-jpillora-backoff
           go-github-com-keybase-go-keybase-chat-bot
           go-github-com-kyokomi-emoji-v2
           go-github-com-labstack-echo-v4      ; packaged
           go-github-com-lrstanley-girc
           go-github-com-matterbridge-go-xmpp
           go-github-com-matterbridge-gomatrix ; packaged
           go-github-com-matterbridge-gozulipbot
           go-github-com-matterbridge-logrus-prefixed-formatter
           go-github-com-matterbridge-matterclient
           go-github-com-matterbridge-rocket-chat-go-sdk
           go-github-com-mattermost-mattermost-server-v5
           go-github-com-mattermost-mattermost-server-v6
           go-github-com-mattn-godown          ; packaged
           go-github-com-mdp-qrterminal
           go-github-com-nelsonken-gomf
           go-github-com-paulrosania-go-charset
           go-github-com-philipp15b-go-steam
           go-github-com-rhymen-go-whatsapp
           go-github-com-rs-xid                ; packaged
           go-github-com-russross-blackfriday
           go-github-com-saintfish-chardet
           go-github-com-severecloud-vksdk-v2
           go-github-com-shazow-ssh-chat
           go-github-com-sirupsen-logrus
           go-github-com-slack-go-slack
           go-github-com-spf13-viper
           go-github-com-stretchr-testify
           go-github-com-vincent-petithory-dataurl
           go-github-com-writeas-go-strip-markdown
           go-github-com-yaegashi-msgraph-go
           go-github-com-zfjagann-golang-ring
           go-go-mau-fi-whatsmeow              ; packaged
           go-golang-org-x-image               ; packaged
           go-golang-org-x-oauth2              ; packaged
           go-golang-org-x-text                ; packaged
           go-gomod-garykim-dev-nc-talk
           go-google-golang-org-protobuf
           go-gopkg-in-olahol-melody-v1
           go-layeh-com-gumble
           go-modernc-org-sqlite
           ))
    (home-page "https://github.com/42wim/matterbridge")
    (synopsis "Table of Contents")
    (description
     "The API is basic at the moment.  More info and examples on the
@@url{https://github.com/42wim/matterbridge/wiki/Api,wiki}.")
    (license license:asl2.0)))

(define-public go-github-com-42wim-sshsig
  (package
    (name "go-github-com-42wim-sshsig")
    (version "0.0.0-20240818000253-e3a6333df815")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/42wim/sshsig")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1w1vp776kzslpqwa83sycpik84ilrdz8c5d8ji555cbvhc1fz37s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/42wim/sshsig"))
    (propagated-inputs (list go-golang-org-x-crypto))
    (home-page "https://github.com/42wim/sshsig")
    (synopsis "Armored ssh signatures in go")
    (description
     "Package sshsig implements signing/verifying armored SSH signatures.  You can use
this package to sign data and verify signatures using your ssh private keys or
your ssh agent.  It gives the same output as using `ssh-keygen`, eg when signing
`ssh-keygen -Y sign -f keyfile -n namespace data`.")
    (license license:asl2.0)))

(define-public go-github-com-4meepo-tagalign
  (package
    (name "go-github-com-4meepo-tagalign")
    (version "1.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/4meepo/tagalign")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0swk61dkiq4ncd9j1qr5anhn097pwzfndlzjvnd3chsp3cvjkh3l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/4meepo/tagalign"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-stretchr-testify
                             go-github-com-fatih-structtag))
    (home-page "https://github.com/4meepo/tagalign")
    (synopsis "Go Tag Align")
    (description
     "@code{TagAlign} is used to align and sort tags in Go struct.  It can make the
struct more readable and easier to maintain.")
    (license license:expat)))

(define-public go-github-com-6543-go-version
  (package
    (name "go-github-com-6543-go-version")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/6543/go-version")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qlgwxhw9r2r88ap1m9q1hknn4g3xvcdpjgq14gswcqzd34pyg2v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/6543/go-version"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/6543/go-version")
    (synopsis "Versioning Library for Go")
    (description
     "Package version provides functionality for parsing and comparing version
strings.  It supports semantic versioning and includes methods for version
comparison, manipulation, and formatting.")
    (license license:mpl2.0)))

(define-public go-github-com-99designs-gqlgen
  (package
    (name "go-github-com-99designs-gqlgen")
    (version "0.17.73")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/99designs/gqlgen")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xs867y230zzbx9ws42nzqxnp44205v9hsdqv0hifljx26igv85k"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/99designs/gqlgen"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-google-golang-org-protobuf
                             go-golang-org-x-tools
                             go-golang-org-x-text
                             go-github-com-vektah-gqlparser-v2
                             go-github-com-urfave-cli-v2
                             go-github-com-stretchr-testify
                             go-github-com-sosodev-duration
                             go-github-com-mattn-go-isatty
                             go-github-com-mattn-go-colorable
                             go-github-com-matryer-moq
                             go-github-com-logrusorgru-aurora-v4
                             go-github-com-kevinmbeaulieu-eq-go
                             go-github-com-hashicorp-golang-lru-v2
                             go-github-com-gorilla-websocket
                             go-github-com-google-uuid
                             go-github-com-go-viper-mapstructure-v2
                             go-github-com-puerkitobio-goquery))
    (home-page "https://github.com/99designs/gqlgen")
    (synopsis "gqlgen")
    (description
     "@@url{https://github.com/99designs/gqlgen,gqlgen} is a Go library for building
@code{GraphQL} servers without any fuss.")
    (license license:expat)))

(define-public go-github-com-a8m-tree
  (package
    (name "go-github-com-a8m-tree")
    (version "0.0.0-20240104212747-2c8764a5f17e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/a8m/tree")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0alkk8ghgmdzx4585r5562igsj39g89zlzdw109hdm5c1vmrm8dw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/a8m/tree"))
    (home-page "https://github.com/a8m/tree")
    (synopsis "tree")
    (description
     "You can take a look on
@@url{https://github.com/a8m/tree/raw/master/cmd/tree/tree.go,(code cmd/tree)},
and @@url{http://github.com/a8m/s3tree,s3tree} or see the example below.")
    (license license:expat)))

(define-public go-github-com-aalpar-deheap
  (package
    (name "go-github-com-aalpar-deheap")
    (version "0.0.0-20210914013432-0cc84d79dec3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aalpar/deheap")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1709nykin03n1adhh1kqx9j3w03awvd0p7bsim7p1xaqgdzqisq6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aalpar/deheap"))
    (home-page "https://github.com/aalpar/deheap")
    (synopsis "deheap")
    (description
     "Package deheap provides the implementation of a doubly ended heap.  Doubly ended
heaps are heaps with two sides, a min side and a max side.  Like normal
single-sided heaps, elements can be pushed onto and pulled off of a deheap.
deheaps have an additional Pop function, @code{PopMax}, that returns elements
from the opposite side of the ordering.")
    (license license:expat)))

(define-public go-github-com-abbot-go-http-auth
  (package
    (name "go-github-com-abbot-go-http-auth")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/abbot/go-http-auth")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0phsnkfq1vy9b7nqsqqf0llvm7kad0nkmcrnlbwarci3p5p083qf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/abbot/go-http-auth"))
    (home-page "https://github.com/abbot/go-http-auth")
    (synopsis "HTTP Authentication implementation in Go")
    (description
     "Package auth is an implementation of HTTP Basic and HTTP Digest authentication.")
    (license license:asl2.0)))

(define-public go-github-com-abirdcfly-dupword
  (package
    (name "go-github-com-abirdcfly-dupword")
    (version "0.1.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Abirdcfly/dupword")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ajx969wbb1yb2044vb2c82nap5m32i9i5smk66fh1wkpg6lw95l"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/Abirdcfly/dupword"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/Abirdcfly/dupword")
    (synopsis "dupword")
    (description
     "Package dupword defines an Analyzer that checks that duplicate words int the
source code.")
    (license license:expat)))

(define-public go-github-com-acarl005-stripansi
  (package
    (name "go-github-com-acarl005-stripansi")
    (version "0.0.0-20180116102854-5a71ef0e047d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/acarl005/stripansi")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02sxiishdixm791jqbkmhdcvc712l0fb8rqmibxzgc61h0qs6rs3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/acarl005/stripansi"))
    (home-page "https://github.com/acarl005/stripansi")
    (synopsis "Strip ANSI")
    (description "This Go package removes ANSI escape codes from strings.")
    (license license:expat)))

(define-public go-github-com-adamkorcz-go-118-fuzz-build
  (package
    (name "go-github-com-adamkorcz-go-118-fuzz-build")
    (version "0.0.0-20231105174938-2b5cbb29f3e2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AdamKorcz/go-118-fuzz-build")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0936c7brfwz8yxvc5rv862q2fgnzkqf3jn20zykn5akmwy56g9ww"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/AdamKorcz/go-118-fuzz-build"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-adalogics-go-fuzz-headers ; packaged ; packaged
                             ))
    (home-page "https://github.com/AdamKorcz/go-118-fuzz-build")
    (synopsis "Go-118-fuzz-build")
    (description
     "Go-118-fuzz-build is a tool to compile native Golang fuzzers to @code{libFuzzer}
fuzzers.  The tool was initially developed because continuous and CI fuzzing
providers have developed platforms that depend on features in fuzzing engines
that the native Go engine was not released with.  To accomodate this,
Go-118-fuzz-build changes the fuzz harnesses into @code{libFuzzer} harnesses
that can then be intrumented with @code{libFuzzer}.")
    (license license:asl2.0)))

(define-public go-github-com-adamkorcz-go-fuzz-headers
  (package
    (name "go-github-com-adamkorcz-go-fuzz-headers")
    (version "0.0.0-20210319161527-f761c2329661")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AdamKorcz/go-fuzz-headers")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "043a8lialk5kmxy2g5ka1pss8k71d42y4g0ikkv0ls8kgvxw3cc6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/AdamKorcz/go-fuzz-headers"))
    (home-page "https://github.com/AdamKorcz/go-fuzz-headers")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-adamkorcz-go-fuzz-headers-1
  (package
    (name "go-github-com-adamkorcz-go-fuzz-headers-1")
    (version "0.0.0-20230919221257-8b5d3ce2d11d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AdamKorcz/go-fuzz-headers-1")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vs1krh7izjsq33mg66b9w3cf955xb61hw2hh8i3rryb9hvpfkdr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/AdamKorcz/go-fuzz-headers-1"))
    (propagated-inputs (list go-k8s-io-api))
    (home-page "https://github.com/AdamKorcz/go-fuzz-headers-1")
    (synopsis "go-fuzz-headers")
    (description
     "This repository contains various helper functions for go fuzzing.  It is mostly
used in combination with @@url{https://github.com/dvyukov/go-fuzz,go-fuzz}, but
compatibility with fuzzing in the standard library will also be supported.  Any
coverage guided fuzzing engine that provides an array or slice of bytes can be
used with go-fuzz-headers.")
    (license license:asl2.0)))

(define-public go-github-com-adamslevy-jsonrpc2-v14
  (package
    (name "go-github-com-adamslevy-jsonrpc2-v14")
    (version "14.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AdamSLevy/jsonrpc2")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ggf99r30j42lqah9lmq3lvi80xr415l5b0sy6wpkfl64kifnl3i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/AdamSLevy/jsonrpc2/v14"
      #:unpack-path "github.com/AdamSLevy/jsonrpc2"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/AdamSLevy/jsonrpc2")
    (synopsis "github.com/AdamSLevy/jsonrpc2/v14")
    (description
     "Package jsonrpc2 is a complete and strictly conforming implementation of the
JSON-RPC 2.0 protocol for both clients and servers.")
    (license license:expat)))

(define-public go-github-com-adigunhammedolalekan-registry-auth
  (package
    (name "go-github-com-adigunhammedolalekan-registry-auth")
    (version "0.0.0-20200730122110-8cde180a3a60")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/adxgun/registry-auth")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0855a5c0ifi6q2ghb6gax0kwwra5j7pd2lplq4wp8r83dnv4vwj0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/adigunhammedolalekan/registry-auth"))
    (propagated-inputs (list go-github-com-docker-libtrust
                             go-github-com-docker-distribution))
    (home-page "https://github.com/adigunhammedolalekan/registry-auth")
    (synopsis "registry-auth")
    (description
     "a package to implements docker registry token authentication server as described
here
[@@url{https://github.com/docker/distribution/raw/1b9ab303a477ded9bdd3fc97e9119fa8f9e58fca/docs/spec/auth/index.md%5D,https://github.com/docker/distribution/blob/1b9ab303a477ded9bdd3fc97e9119fa8f9e58fca/docs/spec/auth/index.md]}.")
    (license license:expat)))

(define-public go-github-com-advancedlogic-goose
  (package
    (name "go-github-com-advancedlogic-goose")
    (version "0.0.0-20231203033844-ae6b36caf275")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/advancedlogic/GoOse")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kw7vsg97gby3lhcf275x28sndvz319nrj1k4irqi9zq34f1x1fa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/advancedlogic/GoOse"))
    (propagated-inputs (list go-golang-org-x-text
                             go-golang-org-x-net
                             go-github-com-pkg-errors
                             go-github-com-jaytaylor-html2text
                             go-github-com-go-resty-resty-v2
                             go-github-com-gigawattio-window
                             go-github-com-fatih-set
                             go-github-com-araddon-dateparse
                             go-github-com-puerkitobio-goquery))
    (home-page "https://github.com/advancedlogic/GoOse")
    (synopsis "GoOse")
    (description
     "This is a golang port of \"Goose\" originaly licensed to Gravity.com under one or
more contributor license agreements.  See the NOTICE file distributed with this
work for additional information regarding copyright ownership.")
    (license license:asl2.0)))

(define-public go-github-com-afex-hystrix-go
  (package
    (name "go-github-com-afex-hystrix-go")
    (version "0.0.0-20180502004556-fa1af6a1f4f5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/afex/hystrix-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zlj0330j816flvwvis4d4vv1gigpxlghph7awbc9jb7ggf2qssn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/afex/hystrix-go"))
    (home-page "https://github.com/afex/hystrix-go")
    (synopsis "hystrix-go")
    (description
     "@@url{https://github.com/Netflix/Hystrix,Hystrix} is a great project from
Netflix.")
    (license license:expat)))

(define-public go-github-com-airbrake-gobrake
  (package
    (name "go-github-com-airbrake-gobrake")
    (version "3.7.4+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/airbrake/gobrake")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fkahxbzv4888l4dzpjp4v6qzgw8azw41xipd1jjl5r84w08ws1j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/airbrake/gobrake"))
    (home-page "https://github.com/airbrake/gobrake")
    (synopsis "Airbrake Golang Notifier")
    (description
     "@@url{https://airbrake.io/docs/airbrake-faq/what-is-severity/,Severity} allows
categorizing how severe an error is.  By default, it's set to @@code{error}.  To
redefine severity, simply overwrite @@code{context/severity} of a notice object.
 For example:.")
    (license license:bsd-3)))

(define-public go-github-com-ajg-form
  (package
    (name "go-github-com-ajg-form")
    (version "1.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ajg/form")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d6sxzzf9yycdf8jm5877y0khmhkmhxfw3sc4xpdcsrdlc7gqh5a"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ajg/form"))
    (home-page "https://github.com/ajg/form")
    (synopsis "form")
    (description "Package form implements encoding and decoding of
application/x-www-form-urlencoded data.")
    (license license:bsd-3)))

(define-public go-github-com-ajstarks-deck-generate
  ;; XXX: No release and not published in <https://pkg.go.dev/>.
  (let ((commit "ef6ed1252085d413716fef773cc99af73affbb6d")
        (revision "0"))
    (package
      (name "go-github-com-ajstarks-deck-generate")
      (version (git-version "0.0.0" revision commit))
      (source
       (origin
         (method git-fetch)
         (uri (git-reference
               (url "https://github.com/ajstarks/deck")
               (commit commit)))
         (file-name (git-file-name name version))
         (sha256
          (base32 "1m8l45xi1fpjjpk0hydjbrasykzixkap14ws4442zzjl5s8kh8x4"))
         (modules '((guix build utils)
                    (ice-9 ftw)
                    (srfi srfi-26)))
         (snippet
          #~(begin
              ;; XXX: 'delete-all-but' is copied from the turbovnc package.
              (define (delete-all-but directory . preserve)
                (define (directory? x)
                  (and=> (stat x #f)
                         (compose (cut eq? 'directory <>) stat:type)))
                (with-directory-excursion directory
                  (let* ((pred
                          (negate (cut member <> (append '("." "..") preserve))))
                         (items (scandir "." pred)))
                    (for-each (lambda (item)
                                (if (directory? item)
                                    (delete-file-recursively item)
                                    (delete-file item)))
                              items))))
              (delete-all-but "." "generate")))))
      (build-system go-build-system)
      (arguments
       (list
        #:import-path "github.com/ajstarks/deck/generate"
        #:unpack-path "github.com/ajstarks/deck"))
      (home-page "https://github.com/ajstarks/svgo")
      (synopsis "High-level API for the creation of slide decks")
      (description
       "This package provides a high-level API for the creation of slide decks
using the structures of the deck package (github.com/ajstarks/deck).
Initialization of the package specifies the io.Writer destination for the
generated markup, along with the width and height of the slides's canvas.
Each deck element (text, list, image, rect, ellipse, line, curve, arc, and
polygon) are supported.  Slides use a percentage-based coordinate
system (origin at the lower left corner, x increasing left to right, 0-100%, y
increasing upwards, 0-100%).")
      ;; generate/LICENSE.txt: Creative Commons Attribution-ShareAlike 3.0
      ;; International Public License
      (license license:cc-by3.0))))

(define-public go-github-com-ajstarks-svgo
  (package
    (name "go-github-com-ajstarks-svgo")
    (version "0.0.0-20211024235047-1546f124cd8b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ajstarks/svgo")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1h0y8c1cw49lm0f324kvgvwc24q6r64pzzzrqpfgp2wd9ljszfnd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ajstarks/svgo"))
    (propagated-inputs (list go-honnef-co-go-tools
                             go-github-com-ajstarks-deck-generate))
    (home-page "https://github.com/ajstarks/svgo")
    (synopsis "SVGo: A Go library for SVG generation")
    (description
     "Package svg generates SVG as defined by the Scalable Vector Graphics 1.1
Specification
(<@@url{http://www.w3.org/TR/SVG11/,http://www.w3.org/TR/SVG11/}>).  Output goes
to the specified io.Writer.")
    (license license:cc-by4.0)))

(define-public go-github-com-akamai-akamaiopen-edgegrid-golang
  (package
    (name "go-github-com-akamai-akamaiopen-edgegrid-golang")
    (version "1.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/akamai/AkamaiOPEN-edgegrid-golang")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00w7f0d4hn0w465jcjyx84yh6gdyv94h593w0gbgp0xlywaz0r4x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/akamai/AkamaiOPEN-edgegrid-golang"))
    (propagated-inputs (list go-gopkg-in-ini-v1
                             go-gopkg-in-h2non-gock-v1
                             go-github-com-xeipuuv-gojsonschema
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-patrickmn-go-cache
                             go-github-com-mitchellh-go-homedir
                             go-github-com-google-uuid
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/akamai/AkamaiOPEN-edgegrid-golang")
    (synopsis "Akamai OPEN EdgeGrid for GoLang v1")
    (description
     "Package edgegrid provides the Akamai OPEN Edgegrid Authentication scheme.")
    (license license:asl2.0)))

(define-public go-github-com-akavel-rsrc
  (package
    (name "go-github-com-akavel-rsrc")
    (version "0.10.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/akavel/rsrc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1frdxqdnk923p4245lk0wwqrxsdy8aj2qxl3m0zfgnh02vfz3hs2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/akavel/rsrc"))
    (home-page "https://github.com/akavel/rsrc")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-akeylesslabs-akeyless-go-v3
  (package
    (name "go-github-com-akeylesslabs-akeyless-go-v3")
    (version "3.6.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/akeylesslabs/akeyless-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q3v9wia4w64l33fb1zzwa0577q308lgkjhw1y5a6z4ffab0yr6w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/akeylesslabs/akeyless-go/v3"
      #:unpack-path "github.com/akeylesslabs/akeyless-go"))
    (propagated-inputs (list go-golang-org-x-oauth2))
    (home-page "https://github.com/akeylesslabs/akeyless-go")
    (synopsis "Go API client for akeyless")
    (description
     "The purpose of this application is to provide access to Akeyless API.")
    (license license:asl2.0)))

(define-public go-github-com-akeylesslabs-akeyless-go-v4
  (package
    (name "go-github-com-akeylesslabs-akeyless-go-v4")
    (version "4.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/akeylesslabs/akeyless-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xkhh3yz48vs2w2hjssijz4s8ra35cn7gzysf5nhq47d6i63ax0y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/akeylesslabs/akeyless-go/v4"
      #:unpack-path "github.com/akeylesslabs/akeyless-go"))
    (propagated-inputs (list go-golang-org-x-oauth2))
    (home-page "https://github.com/akeylesslabs/akeyless-go")
    (synopsis "Go API client for akeyless")
    (description
     "The purpose of this application is to provide access to Akeyless API.")
    (license license:asl2.0)))

(define-public go-github-com-akeylesslabs-akeyless-go-cloud-id
  (package
    (name "go-github-com-akeylesslabs-akeyless-go-cloud-id")
    (version "0.3.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/akeylesslabs/akeyless-go-cloud-id")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ii9fgvmn972a8z2zqdxgx6lwxhi58b0hw13fp6as1l3kmn9fybx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/akeylesslabs/akeyless-go-cloud-id"))
    (propagated-inputs (list go-google-golang-org-api
                        go-github-com-aws-aws-sdk-go
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/akeylesslabs/akeyless-go-cloud-id")
    (synopsis "akeyless-go-cloud-id")
    (description
     "Retrieves cloud identity.  Currently AWS, Azure and GCP are supported.")
    (license license:asl2.0)))

(define-public go-github-com-akutz-memconn
  (package
    (name "go-github-com-akutz-memconn")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/akutz/memconn")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mhghzcx2zxr4bpyf4wx3j7ph9srw38wxg78svwbjh930r2kzssq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/akutz/memconn"))
    (home-page "https://github.com/akutz/memconn")
    (synopsis "MemConn")
    (description
     "@code{MemConn} provides named, in-memory network connections for Go.")
    (license license:asl2.0)))

(define-public go-github-com-alecaivazis-survey-v2
  (package
    (name "go-github-com-alecaivazis-survey-v2")
    (version "2.3.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AlecAivazis/survey")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0l3wqphqvm0qxv33pj9f1r72z5fln99vg735fcigv8k513m2aw9l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/AlecAivazis/survey/v2"
      #:unpack-path "github.com/AlecAivazis/survey"))
    (propagated-inputs (list go-golang-org-x-text ; packaged
                             go-golang-org-x-term ; packaged
                             go-github-com-stretchr-testify ; packaged
                             go-github-com-mgutz-ansi ; packaged
                             go-github-com-mattn-go-isatty ; packaged
                             go-github-com-kballard-go-shellquote ; packaged
                             go-github-com-hinshun-vt10x
                             go-github-com-creack-pty ; packaged
                             go-github-com-netflix-go-expect
                             ))
    (home-page "https://github.com/AlecAivazis/survey")
    (synopsis "Survey")
    (description
     "This package provides a library for building interactive and accessible prompts
on terminals supporting ANSI escape sequences.")
    (license license:expat)))

(define-public go-github-com-alecthomas-atomic
  (package
    (name "go-github-com-alecthomas-atomic")
    (version "0.1.0-alpha2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alecthomas/atomic")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0i22lhd020yg90asrw02jc9b5g1vwhi3ykhkb56lprkzhvfxg9i8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alecthomas/atomic"))
    (propagated-inputs (list go-github-com-alecthomas-assert-v2))
    (home-page "https://github.com/alecthomas/atomic")
    (synopsis "Type-safe atomic values for Go")
    (description "Package atomic contains type-safe atomic types.")
    (license license:expat)))

(define-public go-github-com-alecthomas-go-check-sumtype
  (package
    (name "go-github-com-alecthomas-go-check-sumtype")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alecthomas/go-check-sumtype")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0k85g809lraj89a2zqrl9gsvn2b36d43q345p30snbd4z1fgqhlm"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/alecthomas/go-check-sumtype"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-alecthomas-assert-v2))
    (home-page "https://github.com/alecthomas/go-check-sumtype")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-aleksi-pointer
  (package
    (name "go-github-com-aleksi-pointer")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AlekSi/pointer")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rncmanv62wwy7ihvjhvb695mkvy4kdzhgnn90zygs9yrfzzk0wk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/AlekSi/pointer"))
    (home-page "https://github.com/AlekSi/pointer")
    (synopsis "pointer")
    (description
     "Package pointer provides helpers to convert between pointers and values of
built-in (and, with generics, of any) types.")
    (license license:expat)))

(define-public go-github-com-alexbrainman-sspi
  (package
    (name "go-github-com-alexbrainman-sspi")
    (version "0.0.0-20231016080023-1a75b4708caa")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alexbrainman/sspi")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hjv98c51n6bma11dxsxvbyhqgk0sn9469sr8vjswz38y0svz1i6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alexbrainman/sspi"))
    (home-page "https://github.com/alexbrainman/sspi")
    (synopsis #f)
    (description
     "This repository holds Go packages for accessing Security Support Provider
Interface on Windows.")
    (license license:bsd-3)))

(define-public go-github-com-alexcesaro-log
  (package
    (name "go-github-com-alexcesaro-log")
    (version "0.0.0-20150915221235-61e686294e58")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alexcesaro/log")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ckd5crq9rd12wpclahg2q0wprfg0whd6k9zbfzzkr6l1qpmmfam"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alexcesaro/log"))
    (home-page "https://github.com/alexcesaro/log")
    (synopsis "stdlog")
    (description
     "Package log provides a common interface for logging libraries.")
    (license license:expat)))

(define-public go-github-com-alexflint-go-arg
  (package
    (name "go-github-com-alexflint-go-arg")
    (version "1.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alexflint/go-arg")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ip899829v9n0aqq1z30x8lnb60lirfgwqr4y2mckg8md8w31911"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alexflint/go-arg"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-alexflint-go-scalar))
    (home-page "https://github.com/alexflint/go-arg")
    (synopsis "Installation")
    (description
     "Package arg parses command line arguments using the fields from a struct.")
    (license license:bsd-2)))

(define-public go-github-com-alexflint-go-filemutex
  (package
    (name "go-github-com-alexflint-go-filemutex")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alexflint/go-filemutex")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kx31qar8265jrvdvwja1snlfy6kxpaay654lqqsalp1spgrcazp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alexflint/go-filemutex"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/alexflint/go-filemutex")
    (synopsis "FileMutex")
    (description
     "@code{FileMutex} is similar to @@code{sync.RWMutex}, but also synchronizes
across processes.  On Linux, OSX, and other POSIX systems it uses the flock
system call.  On windows it uses the @code{LockFileEx} and @code{UnlockFileEx}
system calls.")
    (license license:expat)))

(define-public go-github-com-alexflint-go-scalar
  (package
    (name "go-github-com-alexflint-go-scalar")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alexflint/go-scalar")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1c78yd7w5sxdfmnhqk8c4cyb2by0cp9qh3ab19sz5b5avbpwcary"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alexflint/go-scalar"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/alexflint/go-scalar")
    (synopsis "Scalar parsing library")
    (description
     "Scalar is a library for parsing strings into arbitrary scalars (integers,
floats, strings, booleans, etc).  It is helpful for tasks such as parsing
strings passed as environment variables or command line arguments.")
    (license license:bsd-2)))

(define-public go-github-com-alexkohler-nakedret-v2
  (package
    (name "go-github-com-alexkohler-nakedret-v2")
    (version "2.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alexkohler/nakedret")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fw5rygfpid89s8jqif1qgb67s1ixal4awlg6gaqyzcs186h1rg8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alexkohler/nakedret/v2"
      #:unpack-path "github.com/alexkohler/nakedret"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/alexkohler/nakedret")
    (synopsis "nakedret")
    (description
     "nakedret is a Go static analysis tool to find naked returns in functions greater
than a specified function length.")
    (license license:expat)))

(define-public go-github-com-alexkohler-prealloc
  (package
    (name "go-github-com-alexkohler-prealloc")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alexkohler/prealloc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "011i8yqzyjgwj17k44xvvg4bxfv8z20s0416r2d3yf4s3wqqygpq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alexkohler/prealloc"))
    (home-page "https://github.com/alexkohler/prealloc")
    (synopsis "prealloc")
    (description
     "prealloc is a Go static analysis tool to find slice declarations that could
potentially be preallocated.")
    (license license:expat)))

(define-public go-github-com-alibabacloud-go-alibabacloud-gateway-spi
  (package
    (name "go-github-com-alibabacloud-go-alibabacloud-gateway-spi")
    (version "0.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/alibabacloud-go/alibabacloud-gateway-spi")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gxd122dxmyrh32wl28fhwcbic7zh3r0mxx8drck1xx6zhxqjhks"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/alibabacloud-gateway-spi"))
    (propagated-inputs (list go-github-com-aliyun-credentials-go
                             go-github-com-alibabacloud-go-tea))
    (home-page "https://github.com/alibabacloud-go/alibabacloud-gateway-spi")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-cr-20160607
  (package
    (name "go-github-com-alibabacloud-go-cr-20160607")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/cr-20160607")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z8j0sphf4j0vz5cb866ix87dfyxa45xhrdr1f1wzrpadwh8yhww"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/cr-20160607"))
    (propagated-inputs (list go-github-com-alibabacloud-go-tea-utils
                             go-github-com-alibabacloud-go-tea
                             go-github-com-alibabacloud-go-openapi-util
                             go-github-com-alibabacloud-go-endpoint-util
                             go-github-com-alibabacloud-go-darabonba-openapi))
    (home-page "https://github.com/alibabacloud-go/cr-20160607")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-alibabacloud-go-cr-20181201
  (package
    (name "go-github-com-alibabacloud-go-cr-20181201")
    (version "1.0.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/cr-20181201")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ir7ahijyv9fkl5n95367i46qw0z2f8a43pm8jhiq1bl5jjjfs6a"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/cr-20181201"))
    (propagated-inputs (list go-github-com-alibabacloud-go-tea-utils
                             go-github-com-alibabacloud-go-tea
                             go-github-com-alibabacloud-go-openapi-util
                             go-github-com-alibabacloud-go-endpoint-util
                             go-github-com-alibabacloud-go-darabonba-openapi))
    (home-page "https://github.com/alibabacloud-go/cr-20181201")
    (synopsis "Alibaba Cloud cr SDK for Go")
    (description
     "English |
@@url{https://github.com/alibabacloud-go/cr-20181201/blob/v1.0.10/README-CN.md,简体中文}.")
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-darabonba-openapi
  (package
    (name "go-github-com-alibabacloud-go-darabonba-openapi")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/darabonba-openapi")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1h7yj2bs1v8i2ax3x7l4725y8qsd0qi2s9wsmx1vhxcm9rbjz8ar"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/darabonba-openapi"))
    (propagated-inputs (list go-github-com-aliyun-credentials-go
                        go-github-com-alibabacloud-go-tea-xml
                        go-github-com-alibabacloud-go-tea-utils
                        go-github-com-alibabacloud-go-tea
                        go-github-com-alibabacloud-go-openapi-util
                        go-github-com-alibabacloud-go-darabonba-string
                        go-github-com-alibabacloud-go-alibabacloud-gateway-spi))
    (home-page "https://github.com/alibabacloud-go/darabonba-openapi")
    (synopsis "Alibaba Cloud OpenApi Client for Go")
    (description
     "English |
@@url{https://github.com/alibabacloud-go/darabonba-openapi/blob/v0.2.1/README-CN.md,简体中文}.")
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-darabonba-string
  (package
    (name "go-github-com-alibabacloud-go-darabonba-string")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/darabonba-string")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01g0m9m87qj0zh7g4d5yjls41rw8vhwcvirrfaxi5ffrkcbqr9a3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/darabonba-string"))
    (propagated-inputs (list go-github-com-alibabacloud-go-tea))
    (home-page "https://github.com/alibabacloud-go/darabonba-string")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-alibabacloud-go-debug
  (package
    (name "go-github-com-alibabacloud-go-debug")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/debug")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0cf87ihmli1nh7wx1ldgjrfszkb5wjfabfgmrw9gz555bi27z3w5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/debug"))
    (home-page "https://github.com/alibabacloud-go/debug")
    (synopsis "Debug for Golang")
    (description
     "If you want to use the @@code{Debug} function, you need to add the following
code to your project:.")
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-endpoint-util
  (package
    (name "go-github-com-alibabacloud-go-endpoint-util")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/endpoint-util")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bwdh53kyrvdzp05w5mm3waqrda50lx2azqg816qydpllcmjgad2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/endpoint-util"))
    (propagated-inputs (list go-github-com-alibabacloud-go-tea))
    (home-page "https://github.com/alibabacloud-go/endpoint-util")
    (synopsis "Alibaba Cloud Endpoint Util")
    (description
     "English |
@@url{https://github.com/alibabacloud-go/endpoint-util/blob/v1.1.1/README-CN.md,简体中文}.")
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-openapi-util
  (package
    (name "go-github-com-alibabacloud-go-openapi-util")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/openapi-util")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ksygkqn2knsaip6jgms2h3mprl0b13765mrcnb8q5rry5m41jkg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/openapi-util"))
    (propagated-inputs (list go-github-com-tjfoc-gmsm
                             go-github-com-alibabacloud-go-tea-utils-v2
                             go-github-com-alibabacloud-go-tea))
    (home-page "https://github.com/alibabacloud-go/openapi-util")
    (synopsis "Alibaba Cloud OpenApi Util for Go")
    (description
     "English |
@@url{https://github.com/alibabacloud-go/openapi-util/blob/v0.1.1/README-CN.md,简体中文}.")
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-tea
  (package
    (name "go-github-com-alibabacloud-go-tea")
    (version "1.3.9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/tea")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i23j6zpm7vabi1ry480plxndnrf3yzdmg9qqzxx2iy6yajf6axa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/tea"))
    (propagated-inputs (list go-golang-org-x-net
                             go-github-com-modern-go-reflect2
                             go-github-com-json-iterator-go
                             go-github-com-clbanning-mxj-v2
                             go-github-com-alibabacloud-go-tea-utils-v2
                             go-github-com-alibabacloud-go-debug))
    (home-page "https://github.com/alibabacloud-go/tea")
    (synopsis "Tea")
    (description
     "This project is used for support Darabonba @code{OpenAPI} DSL. It's a low-level
library for http request.")
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-tea-utils
  (package
    (name "go-github-com-alibabacloud-go-tea-utils")
    (version "1.4.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/tea-utils")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zdrsy83pv01b4sahda7w6nwhg7cf4crygf2hh376k8zgiirj5la"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/tea-utils"))
    (propagated-inputs (list go-github-com-alibabacloud-go-tea))
    (home-page "https://github.com/alibabacloud-go/tea-utils")
    (synopsis "Alibaba Cloud Tea Util for Go")
    (description
     "English |
@@url{https://github.com/alibabacloud-go/tea-utils/blob/v1.4.5/README-CN.md,简体中文}.")
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-tea-utils-v2
  (package
    (name "go-github-com-alibabacloud-go-tea-utils-v2")
    (version "2.0.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/tea-utils")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ljiqhhzn1srdlm8zd80m3jsg4vf63svak832spyif04vmy3c7sf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/tea-utils/v2"
      #:unpack-path "github.com/alibabacloud-go/tea-utils"))
    (propagated-inputs (list go-github-com-alibabacloud-go-tea))
    (home-page "https://github.com/alibabacloud-go/tea-utils")
    (synopsis "Alibaba Cloud Tea Util for Go")
    (description
     "English |
@@url{https://github.com/alibabacloud-go/tea-utils/blob/v2.0.7/README-CN.md,简体中文}.")
    (license license:asl2.0)))

(define-public go-github-com-alibabacloud-go-tea-xml
  (package
    (name "go-github-com-alibabacloud-go-tea-xml")
    (version "1.1.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alibabacloud-go/tea-xml")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ix4rx5xvdg1dfrg2y6gyc55043dhz6chd97qgdf7isn4jw79k8n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alibabacloud-go/tea-xml"))
    (propagated-inputs (list go-github-com-alibabacloud-go-tea))
    (home-page "https://github.com/alibabacloud-go/tea-xml")
    (synopsis "Alibaba Cloud Tea XML for Go")
    (description
     "English |
@@url{https://github.com/alibabacloud-go/tea-xml/blob/v1.1.3/README-CN.md,简体中文}.")
    (license license:asl2.0)))

(define-public go-github-com-alingse-asasalint
  (package
    (name "go-github-com-alingse-asasalint")
    (version "0.0.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/alingse/asasalint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1avz33cx3gcpps26rxijv7ic0njfmsdkbcp2mqg5yxhdcpq57s0q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/alingse/asasalint"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/alingse/asasalint")
    (synopsis "asasalint")
    (description
     "Golang linter, lint that pass any slice as any in variadic function.")
    (license license:expat)))

(define-public go-github-com-aliyun-alibaba-cloud-sdk-go
  (package
    (name "go-github-com-aliyun-alibaba-cloud-sdk-go")
    (version "1.63.77")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aliyun/alibaba-cloud-sdk-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lvgmgsd66vl5wm243b8w2lk1dxy3bs3hf8x8sp73phm7wh54i9l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aliyun/alibaba-cloud-sdk-go"))
    (propagated-inputs (list go-gopkg-in-ini-v1
                             go-github-com-uber-jaeger-client-go
                             go-github-com-stretchr-testify
                             go-github-com-opentracing-opentracing-go
                             go-github-com-modern-go-reflect2
                             go-github-com-json-iterator-go
                             go-github-com-jmespath-go-jmespath
                             go-github-com-goji-httpauth))
    (home-page "https://github.com/aliyun/alibaba-cloud-sdk-go")
    (synopsis "Troubleshoot")
    (description "This file is created for depping ensure.")
    (license license:asl2.0)))

(define-public go-github-com-aliyun-aliyun-oss-go-sdk
  (package
    (name "go-github-com-aliyun-aliyun-oss-go-sdk")
    (version "3.0.2+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aliyun/aliyun-oss-go-sdk")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s9c3if0is8m52hvb1czh4rb7ck4vk654wbzyq44iq1rqfr6y1ly"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aliyun/aliyun-oss-go-sdk"))
    (home-page "https://github.com/aliyun/aliyun-oss-go-sdk")
    (synopsis "Alibaba Cloud OSS SDK for Go")
    (description
     "More example projects can be found at
src\\github.com\\aliyun\\aliyun-oss-go-sdk\\sample under the installation path of
the OSS Go SDK (the first path of the GOPATH variable).  The directory contains
example projects.  Or you can refer to the example objects in the sample
directory under
@@url{https://github.com/aliyun/aliyun-oss-go-sdk&#39;,https://github.com/aliyun/aliyun-oss-go-sdk'}.")
    (license license:expat)))

(define-public go-github-com-aliyun-credentials-go
  (package
    (name "go-github-com-aliyun-credentials-go")
    (version "1.4.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aliyun/credentials-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hszrzi79jwgd5g497mysywgg29vxbcwkvn1kfzfd0w6rp5hl7v6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aliyun/credentials-go"))
    (propagated-inputs (list go-gopkg-in-ini-v1 go-github-com-stretchr-testify
                             go-github-com-alibabacloud-go-tea
                             go-github-com-alibabacloud-go-debug))
    (home-page "https://github.com/aliyun/credentials-go")
    (synopsis "Alibaba Cloud Credentials for Go")
    (description "Package credentials-go.")
    (license license:asl2.0)))

(define-public go-github-com-aliyuncontainerservice-ack-ram-tool-pkg-credentials-provider
  (package
    (name
     "go-github-com-aliyuncontainerservice-ack-ram-tool-pkg-credentials-provider")
    (version "0.18.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AliyunContainerService/ack-ram-tool")
             (commit (go-version->git-ref version
                                          #:subdir "pkg/credentials/provider"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01l7mamxskycgp25b3l8iad5qpfz52myd7s5y0cqn7xq1ggbgvi5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/AliyunContainerService/ack-ram-tool/pkg/credentials/provider"
      #:unpack-path "github.com/AliyunContainerService/ack-ram-tool"))
    (propagated-inputs (list go-golang-org-x-sync
                        go-github-com-aliyun-credentials-go
                        go-github-com-aliyuncontainerservice-ack-ram-tool-pkg-ecsmetadata))
    (home-page "https://github.com/AliyunContainerService/ack-ram-tool")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-aliyuncontainerservice-ack-ram-tool-pkg-ecsmetadata
  (package
    (name "go-github-com-aliyuncontainerservice-ack-ram-tool-pkg-ecsmetadata")
    (version "0.0.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AliyunContainerService/ack-ram-tool")
             (commit (go-version->git-ref version
                                          #:subdir "pkg/ecsmetadata"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gjpqxw069g5j3rfimnax5l5xp748n41w8cgykclkv9mvq5anx6p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/AliyunContainerService/ack-ram-tool/pkg/ecsmetadata"
      #:unpack-path "github.com/AliyunContainerService/ack-ram-tool"))
    (home-page "https://github.com/AliyunContainerService/ack-ram-tool")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-amikos-tech-chroma-go
  (package
    (name "go-github-com-amikos-tech-chroma-go")
    (version "0.1.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/amikos-tech/chroma-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03mdf4wva6v6cr8jnw1ab8j1cs4d0dwzybdf16h41sa5mdygmqdn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/amikos-tech/chroma-go"))
    (propagated-inputs (list go-google-golang-org-api
                        go-github-com-testcontainers-testcontainers-go-modules-ollama
                        go-github-com-testcontainers-testcontainers-go-modules-chroma
                        go-github-com-testcontainers-testcontainers-go
                        go-github-com-stretchr-testify
                        go-github-com-oklog-ulid
                        go-github-com-joho-godotenv ; packaged
                        go-github-com-google-uuid
                        go-github-com-google-generative-ai-go
                        go-github-com-masterminds-semver))
    (home-page "https://github.com/amikos-tech/chroma-go")
    (synopsis "Chroma Go")
    (description
     "This package provides a simple Chroma Vector Database client written in Go.")
    (license license:expat)))

(define-public go-github-com-anacrolix-dms
  (package
    (name "go-github-com-anacrolix-dms")
    (version "1.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/anacrolix/dms")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07dn5dxpsb2jdanbj0h49r5pvxrawnqdiwigwskhmbbbqgcdirkl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/anacrolix/dms"))
    (propagated-inputs (list go-golang-org-x-sys ; packaged
                             go-golang-org-x-net ; packaged
                             go-github-com-nfnt-resize
                             go-github-com-anacrolix-log ; packaged
                             go-github-com-anacrolix-ffprobe))
    (home-page "https://github.com/anacrolix/dms")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-anacrolix-ffprobe
  (package
    (name "go-github-com-anacrolix-ffprobe")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/anacrolix/ffprobe")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yx8hajqzrf2qn00b3fzb45gfqx7yk99hvklamsgmxzxxmmllcx0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/anacrolix/ffprobe"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-anacrolix-missinggo
                             go-github-com-anacrolix-envpprof ; packaged
                             ))
    (home-page "https://github.com/anacrolix/ffprobe")
    (synopsis #f)
    (description
     "Package ffprobe wraps and interprets ffmpeg's ffprobe for Go.")
    (license license:mpl2.0)))

(define-public go-github-com-anacrolix-missinggo
  (package
    (name "go-github-com-anacrolix-missinggo")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/anacrolix/missinggo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15h0745hm6sx6dg0wmpmbn3k9iacipnb3djbmn1wig65zyvz5z9p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/anacrolix/missinggo"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-ryszard-goskiplist
                             go-github-com-huandu-xstrings
                             go-github-com-google-btree
                             go-github-com-dustin-go-humanize ; packaged
                             go-github-com-docopt-docopt-go
                             go-github-com-bradfitz-iter
                             go-github-com-anacrolix-tagflag
                             go-github-com-anacrolix-missinggo-v2
                             go-github-com-anacrolix-envpprof ; packaged
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/anacrolix/missinggo")
    (synopsis "missinggo")
    (description
     "Package missinggo contains miscellaneous helpers used in many of anacrolix
projects.")
    (license license:expat)))

(define-public go-github-com-anacrolix-missinggo-v2
  (package
    (name "go-github-com-anacrolix-missinggo-v2")
    (version "2.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/anacrolix/missinggo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03p5j4bnvw1rwfc86lc615hd3hy83wxzr0fgi665z7liinklidsi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/anacrolix/missinggo/v2"
      #:unpack-path "github.com/anacrolix/missinggo"))
    (propagated-inputs (list go-zombiezen-com-go-sqlite
                             go-golang-org-x-exp
                             go-go-opencensus-io ; packaged

                             go-github-com-stretchr-testify
                             go-github-com-ryszard-goskiplist
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-huandu-xstrings
                             go-github-com-google-btree
                             go-github-com-frankban-quicktest
                             go-github-com-dustin-go-humanize ; packaged
                             go-github-com-docopt-docopt-go
                             go-github-com-bradfitz-iter
                             go-github-com-anacrolix-tagflag
                             go-github-com-anacrolix-stm
                             go-github-com-anacrolix-missinggo
                             go-github-com-anacrolix-log ; packaged
                             go-github-com-anacrolix-envpprof ; packaged
                             go-github-com-roaringbitmap-roaring
                             go-crawshaw-io-sqlite))
    (home-page "https://github.com/anacrolix/missinggo")
    (synopsis "missinggo")
    (description
     "Package missinggo contains miscellaneous helpers used in many of anacrolix
projects.")
    (license license:expat)))


(define-public go-github-com-anacrolix-stm
  (package
    (name "go-github-com-anacrolix-stm")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/anacrolix/stm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zmk3p9ga8djqdba8i9my3lhvn3j4bsgskpm3garkmqr418rk7lh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/anacrolix/stm"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-benbjohnson-immutable
                             go-github-com-anacrolix-missinggo-v2
                             go-github-com-anacrolix-missinggo
                             go-github-com-anacrolix-envpprof ; packaged
                             go-github-com-alecthomas-atomic))
    (home-page "https://github.com/anacrolix/stm")
    (synopsis "stm")
    (description
     "Package stm provides Software Transactional Memory operations for Go.  This is
an alternative to the standard way of writing concurrent code (channels and
mutexes).  STM makes it easy to perform arbitrarily complex operations in an
atomic fashion.  One of its primary advantages over traditional locking is that
STM transactions are composable, whereas locking functions are not -- the
composition will either deadlock or release the lock between functions (making
it non-atomic).")
    (license license:expat)))

(define-public go-github-com-anacrolix-tagflag
  (package
    (name "go-github-com-anacrolix-tagflag")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/anacrolix/tagflag")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dqmvnhwqmymclwcn6al956b6habnsd9120xsx1izh356mn40sqw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/anacrolix/tagflag"))
    (propagated-inputs (list go-golang-org-x-xerrors
                             go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-huandu-xstrings
                             go-github-com-dustin-go-humanize ; packaged
                             go-github-com-bradfitz-iter
                             go-github-com-anacrolix-missinggo-v2))
    (home-page "https://github.com/anacrolix/tagflag")
    (synopsis "tagflag")
    (description
     "Package tagflag uses reflection to derive flags and positional arguments to a
program, and parses and sets them from a slice of arguments.")
    (license license:expat)))

(define-public go-github-com-anchore-archiver-v3
  (package
    (name "go-github-com-anchore-archiver-v3")
    (version "3.5.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/anchore/archiver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0c4hbd4qbhd1avlvmkhhi1kh5bhj769gkwx2fm2932kymjmls85l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/anchore/archiver/v3"
      #:unpack-path "github.com/anchore/archiver"))
    (propagated-inputs (list go-github-com-xi2-xz
                             go-github-com-ulikunitz-xz
                             go-github-com-pierrec-lz4-v4
                             go-github-com-nwaples-rardecode
                             go-github-com-klauspost-pgzip
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-golang-snappy
                             go-github-com-dsnet-compress
                             go-github-com-andybalholm-brotli))
    (home-page "https://github.com/anchore/archiver")
    (synopsis "archiver")
    (description
     "Package archiver facilitates convenient, cross-platform, high-level archival and
compression operations for a variety of formats and compression algorithms.")
    (license license:expat)))

(define-public go-github-com-anchore-go-struct-converter
  (package
    (name "go-github-com-anchore-go-struct-converter")
    (version "0.0.0-20240925125616-a0883641c664")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/anchore/go-struct-converter")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hdzyib2b8n1lk2ndp59yhx8bq1h1n2v86xryzznwryjsr37ihiw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/anchore/go-struct-converter"))
    (home-page "https://github.com/anchore/go-struct-converter")
    (synopsis "Go")
    (description
     "This package provides a library for converting between Go structs.")
    (license license:asl2.0)))

(define-public go-github-com-andreaskoch-go-fswatch
  (package
    (name "go-github-com-andreaskoch-go-fswatch")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/andreaskoch/go-fswatch")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0caikz1bbb2g9w8hyk7qvwixsy8dvc2gism10927q2cc1100mlr2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/andreaskoch/go-fswatch"))
    (home-page "https://github.com/andreaskoch/go-fswatch")
    (synopsis "fswatch")
    (description
     "fswatch is a go library for watching file system changes to @@strong{does not}
depend on inotify.")
    (license license:bsd-3)))

(define-public go-github-com-andybalholm-stroke
  (package
    (name "go-github-com-andybalholm-stroke")
    (version "0.0.0-20230904101225-24ef450bc62c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/andybalholm/stroke")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03c89wpahmjvjkv1h98dmvr6khhwwpgfssz1pk20skh3q4y2k9rw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/andybalholm/stroke"))
    (home-page "https://github.com/andybalholm/stroke")
    (synopsis #f)
    (description
     "The stroke package provides functions for stroking cubic bezier paths.")
    (license license:expat))) ; check-license

(define-public go-github-com-ankane-disco-go
  (package
    (name "go-github-com-ankane-disco-go")
    (version "0.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ankane/disco-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12g1wknpjpyfjyc8bn83dkjkprichwfxd7ggjbjh6lc1p0chmg3x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ankane/disco-go"))
    (home-page "https://github.com/ankane/disco-go")
    (synopsis "Disco Go")
    (description "🔥 Recommendations for Go using collaborative filtering.")
    (license license:expat)))

(define-public go-github-com-antonboom-errname
  (package
    (name "go-github-com-antonboom-errname")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Antonboom/errname")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lv2r1693v2l8cs44yhjha60nzs48c98gkdw91vdwv7mvwzj5g0j"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/Antonboom/errname"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/Antonboom/errname")
    (synopsis "errname")
    (description
     "Checks that sentinel errors are prefixed with the @@code{Err} and error types
are suffixed with the @@code{Error}.")
    (license license:expat)))

(define-public go-github-com-antonboom-nilnil
  (package
    (name "go-github-com-antonboom-nilnil")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Antonboom/nilnil")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mrf10fv3g9pvb1b9vacw50a6ab147f940qa27gfr6yqz9wqv98w"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/Antonboom/nilnil"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/Antonboom/nilnil")
    (synopsis "nilnil")
    (description
     "Checks that there is no simultaneous return of @@code{nil} error and an invalid
value.")
    (license license:expat)))

(define-public go-github-com-antonboom-testifylint
  (package
    (name "go-github-com-antonboom-testifylint")
    (version "1.5.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Antonboom/testifylint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ldxyaavzwjmmap2wks400kkk6kxwfkkq1khgzqarknnkfz652mp"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/Antonboom/testifylint"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/Antonboom/testifylint")
    (synopsis "testifylint")
    (description
     "Checks usage of
@@url{https://github.com/stretchr/testify,github.com/stretchr/testify}.")
    (license license:expat)))

(define-public go-github-com-apache-arrow-go-arrow
  (package
    (name "go-github-com-apache-arrow-go-arrow")
    (version "0.0.0-20211112161151-bc219186db40")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apache/arrow")
             (commit (go-version->git-ref version
                                          #:subdir "go/arrow"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03nh7c0i3y9rkkzw428knalkrlpb8syr459i00mwp072ijn8v4hx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/apache/arrow/go/arrow"
      #:unpack-path "github.com/apache/arrow"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-gonum-org-v1-gonum ; packaged
                             go-golang-org-x-xerrors
                             go-golang-org-x-exp
                             go-github-com-stretchr-testify
                             go-github-com-pierrec-lz4-v4
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-google-flatbuffers ; packaged
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/apache/arrow")
    (synopsis #f)
    (description "Package arrow provides an implementation of Apache Arrow.")
    (license license:expat))) ; check-license

(define-public go-github-com-apache-arrow-go-v16
  (package
    (name "go-github-com-apache-arrow-go-v16")
    (version "16.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apache/arrow")
             (commit (go-version->git-ref version
                                          #:subdir "go"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xl7apk7yaiv7cikpw5h846bsqb935cr3212b8bzhxqvkswxsm7f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/apache/arrow/go/v16"
      #:unpack-path "github.com/apache/arrow"))
    (propagated-inputs (list go-github-com-tidwall-sjson
                             go-github-com-substrait-io-substrait-go
                             go-github-com-hamba-avro-v2
                             go-github-com-google-uuid
                             go-modernc-org-sqlite
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-gonum-org-v1-gonum ; packaged
                             go-golang-org-x-xerrors
                             go-golang-org-x-tools
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-github-com-zeebo-xxh3
                             go-github-com-stretchr-testify
                             go-github-com-pierrec-lz4-v4
                             go-github-com-minio-c2goasm
                             go-github-com-minio-asm2plan9s
                             go-github-com-klauspost-cpuid-v2
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-klauspost-asmfmt
                             go-github-com-google-flatbuffers ; packaged
                             go-github-com-golang-snappy
                             go-github-com-goccy-go-json
                             go-github-com-docopt-docopt-go
                             go-github-com-apache-thrift
                             go-github-com-andybalholm-brotli
                             go-github-com-johncgriffin-overflow))
    (home-page "https://github.com/apache/arrow")
    (synopsis "Apache Arrow for Go")
    (description
     "@@url{https://arrow.apache.org,Apache Arrow} is a cross-language development
platform for in-memory data.  It specifies a standardized language-independent
columnar memory format for flat and hierarchical data, organized for efficient
analytic operations on modern hardware.  It also provides computational
libraries and zero-copy streaming messaging and inter-process communication.")
    (license license:expat))) ; check-license

(define-public go-github-com-apache-arrow-go-v15
  (package
    (name "go-github-com-apache-arrow-go-v15")
    (version "15.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apache/arrow")
             (commit (go-version->git-ref version
                                          #:subdir "go"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ckv1lk4mm9smp8z545yqz32vs8psqsd9crg038xfz9ifwzq9vcz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/apache/arrow/go/v15"
      #:unpack-path "github.com/apache/arrow"))
    (propagated-inputs (list go-github-com-tidwall-sjson
                             go-github-com-substrait-io-substrait-go
                             go-github-com-hamba-avro-v2
                             go-github-com-google-uuid
                             go-modernc-org-sqlite
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-gonum-org-v1-gonum ; packaged
                             go-golang-org-x-xerrors
                             go-golang-org-x-tools
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-github-com-zeebo-xxh3
                             go-github-com-stretchr-testify
                             go-github-com-pierrec-lz4-v4
                             go-github-com-minio-c2goasm
                             go-github-com-minio-asm2plan9s
                             go-github-com-klauspost-cpuid-v2
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-klauspost-asmfmt
                             go-github-com-google-flatbuffers ; packaged
                             go-github-com-golang-snappy
                             go-github-com-goccy-go-json
                             go-github-com-docopt-docopt-go
                             go-github-com-apache-thrift
                             go-github-com-andybalholm-brotli
                             go-github-com-johncgriffin-overflow))
    (home-page "https://github.com/apache/arrow")
    (synopsis "Apache Arrow for Go")
    (description
     "@@url{https://arrow.apache.org,Apache Arrow} is a cross-language development
platform for in-memory data.  It specifies a standardized language-independent
columnar memory format for flat and hierarchical data, organized for efficient
analytic operations on modern hardware.  It also provides computational
libraries and zero-copy streaming messaging and inter-process communication.")
    (license license:expat))) ; check-license

(define-public go-github-com-apache-beam-sdks-v2
  (package
    (name "go-github-com-apache-beam-sdks-v2")
    (version "2.61.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apache/beam")
             (commit (go-version->git-ref version
                                          #:subdir "sdks"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "019kajw44lgrpvshxxa7qxlp2023mk09abm2n5dl36qa21ibwx89"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/apache/beam/sdks/v2"
      #:unpack-path "github.com/apache/beam"))
    (propagated-inputs (list go-github-com-docker-docker
                        go-golang-org-x-exp
                        go-github-com-golang-cz-devslog
                        go-github-com-fsouza-fake-gcs-server
                        go-github-com-avast-retry-go-v4
                        go-gopkg-in-yaml-v3
                        go-gopkg-in-yaml-v2
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto
                        go-google-golang-org-api
                        go-golang-org-x-text
                        go-golang-org-x-sys
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-go-mongodb-org-mongo-driver
                        go-github-com-xitongsys-parquet-go-source
                        go-github-com-xitongsys-parquet-go
                        go-github-com-tetratelabs-wazero
                        go-github-com-testcontainers-testcontainers-go
                        go-github-com-spf13-cobra
                        go-github-com-proullon-ramsql
                        go-github-com-nats-io-nats-go
                        go-github-com-nats-io-nats-server-v2
                        go-github-com-linkedin-goavro-v2
                        go-github-com-lib-pq
                        go-github-com-johannesboyne-gofakes3
                        go-github-com-google-uuid
                        go-github-com-google-go-cmp
                        go-github-com-go-sql-driver-mysql
                        go-github-com-dustin-go-humanize ; packaged
                        go-github-com-docker-go-connections ; packaged
                        go-github-com-aws-smithy-go
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-aws-aws-sdk-go-v2-feature-s3-manager
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2
                        go-cloud-google-com-go-storage
                        go-cloud-google-com-go-spanner
                        go-cloud-google-com-go-pubsub
                        go-cloud-google-com-go-profiler
                        go-cloud-google-com-go-datastore
                        go-cloud-google-com-go-bigtable
                        go-cloud-google-com-go-bigquery))
    (home-page "https://github.com/apache/beam")
    (synopsis #f)
    (description #f)
    (license license:expat))) ; check-license

(define-public go-github-com-apache-openwhisk-client-go
  (package
    (name "go-github-com-apache-openwhisk-client-go")
    (version "0.0.0-20241028140229-bb8408824b9b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apache/openwhisk-client-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w777r8sjc1mya977ddybv9gzyk4j717j41ms6m57jamca8305h3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/apache/openwhisk-client-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-nicksnyder-go-i18n ; packaged
                             go-github-com-hokaccha-go-prettyjson
                             go-github-com-google-go-querystring
                             go-github-com-fatih-color
                             go-github-com-cloudfoundry-jibber-jabber))
    (home-page "https://github.com/apache/openwhisk-client-go")
    (synopsis "Openwhisk Client Go")
    (description
     "This project @@code{openwhisk-client-go} is a Go client library to access the
Openwhisk API.")
    (license license:asl2.0)))

(define-public go-github-com-apache-thrift
  (package
    (name "go-github-com-apache-thrift")
    (version "0.21.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apache/thrift")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x8m5n5nw80y4r81wl1w6yni6djm3wwfm7w1r6n16p8fdwafjprq"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/apache/thrift"))
    (home-page "https://github.com/apache/thrift")
    (synopsis "Apache Thrift")
    (description
     "Thrift is a lightweight, language-independent software stack for point-to-point
RPC implementation.  Thrift provides clean abstractions and implementations for
data transport, data serialization, and application level processing.  The code
generation system takes a simple definition language as input and generates code
across programming languages that uses the abstracted stack to build
interoperable RPC clients and servers.")
    (license license:expat))) ; check-license

(define-public go-github-com-apapsch-go-jsonmerge-v2
  (package
    (name "go-github-com-apapsch-go-jsonmerge-v2")
    (version "2.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apapsch/go-jsonmerge")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ca5bprbws9y31wv5x6nlzvfwg8wss5chgjm8ri6vsnw26rsc3k3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/apapsch/go-jsonmerge/v2"
      #:unpack-path "github.com/apapsch/go-jsonmerge"))
    (propagated-inputs (list go-github-com-spkg-bom go-github-com-juju-gnuflag
                             go-github-com-bmatcuk-doublestar
                             go-github-com-ravenox-go-jsoncommentstrip))
    (home-page "https://github.com/apapsch/go-jsonmerge")
    (synopsis "go-jsonmerge")
    (description "Package jsonmerge helps mergeing JSON objects.")
    (license license:expat)))

(define-public go-github-com-apparentlymart-go-cidr
  (package
    (name "go-github-com-apparentlymart-go-cidr")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apparentlymart/go-cidr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12b8qhazgdqr9p3sw5vma7va5j1fvm454cyd0ccc0wi96df3wk4i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/apparentlymart/go-cidr"))
    (home-page "https://github.com/apparentlymart/go-cidr")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-appscode-go-querystring
  (package
    (name "go-github-com-appscode-go-querystring")
    (version "0.0.0-20170504095604-0126cfb3f1dc")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/appscode/go-querystring")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jzpdf6sdgm1xw5b5mkqiaz7l4rs677habrwclfpc3szxkllclks"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/appscode/go-querystring"))
    (home-page "https://github.com/appscode/go-querystring")
    (synopsis "go-querystring")
    (description
     "go-querystring is Go library for encoding structs into URL query parameters.")
    (license license:bsd-3)))

(define-public go-github-com-aquilax-go-perlin
  (package
    (name "go-github-com-aquilax-go-perlin")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aquilax/go-perlin")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vmvpskxmn2b866q6jsb94mngdp0q2isrdc5wip5vg190dpq5wip"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aquilax/go-perlin"))
    (home-page "https://github.com/aquilax/go-perlin")
    (synopsis "GO Perlin Noise generator")
    (description
     "Package perlin provides coherent noise function over 1, 2 or 3 dimensions This
code is go adaptation based on C implementation that can be found here:
@@url{http://git.gnome.org/browse/gegl/tree/operations/common/perlin/perlin.c,http://git.gnome.org/browse/gegl/tree/operations/common/perlin/perlin.c}
(original copyright Ken Perlin).")
    (license license:expat)))

(define-public go-github-com-araddon-dateparse
  (package
    (name "go-github-com-araddon-dateparse")
    (version "0.0.0-20210429162001-6b43995a97de")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/araddon/dateparse")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p60rdbfk7d97hb1kk225lvnqvhw04d822782hn66i4yfvigrraj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/araddon/dateparse"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-scylladb-termtables))
    (home-page "https://github.com/araddon/dateparse")
    (synopsis "Go Date Parser")
    (description
     "Package dateparse parses date-strings without knowing the format in advance,
using a fast lex based approach to eliminate shotgun attempts.  It leans towards
US style dates when there is a conflict.")
    (license license:expat)))

(define-public go-github-com-armon-circbuf
  (package
    (name "go-github-com-armon-circbuf")
    (version "0.0.0-20190214190532-5111143e8da2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/armon/circbuf")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nhzs8wza5sxqjh0920jypy9irq6cspd55g8a9vgyjjfrqb5njs0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/armon/circbuf"))
    (home-page "https://github.com/armon/circbuf")
    (synopsis "circbuf")
    (description
     "This repository provides the @@code{circbuf} package.  This provides a
@@code{Buffer} object which is a circular (or ring) buffer.  It has a fixed
size, but can be written to infinitely.  Only the last @@code{size} bytes are
ever retained.  The buffer implements the @@code{io.Writer} interface.")
    (license license:expat)))

(define-public go-github-com-armon-go-metrics
  (package
    (name "go-github-com-armon-go-metrics")
    (version "0.5.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-metrics")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rw8251w6lkpbm6qhbdi37jbjknmlw1ampqicfyk32mfq3grn0ar"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-metrics"))
    (propagated-inputs                                     ;; all packaged
     (list go-github-com-circonus-labs-circonus-gometrics
           go-github-com-datadog-datadog-go
           go-github-com-golang-protobuf
           go-github-com-hashicorp-go-immutable-radix
           go-github-com-pascaldekloe-goe
           go-github-com-prometheus-client-golang ; packaged

           go-github-com-prometheus-client-model
           go-github-com-prometheus-common))
    (home-page "https://github.com/armon/go-metrics")
    (synopsis "Exporting metrics to external metrics systems")
    (description
     "This package implements a functionality which can be used in instrument
code, expose application metrics, and profile runtime performance in a
flexible manner.  It makes use of a @code{MetricSink} interface to support
delivery to any type of backend.

Currently the following sinks are provided:
@itemize
@item StatsiteSink : Sinks to a @url{https://github.com/statsite/statsite/,
statsite} instance (TCP)
@item StatsdSink: Sinks to a @url{https://github.com/statsd/statsd/, StatsD} /
statsite instance (UDP)
@item PrometheusSink: Sinks to a @url{http://prometheus.io/, Prometheus}
metrics endpoint (exposed via HTTP for scrapes)
@item InmemSink : Provides in-memory aggregation, can be used to export stats
@item FanoutSink : Sinks to multiple sinks. Enables writing to multiple
statsite instances for example
@item BlackholeSink : Sinks to nowhere
@end itemize")
    (license license:expat)))

(define-public go-github-com-ashanbrown-forbidigo
  (package
    (name "go-github-com-ashanbrown-forbidigo")
    (version "1.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ashanbrown/forbidigo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wkyxs5v4xwvm2163isz8rrgdj0l18rrx1sj9ai5kx50fvslq299"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ashanbrown/forbidigo"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-golang-org-x-tools
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/ashanbrown/forbidigo")
    (synopsis "forbidigo")
    (description
     "@@code{forbidigo} is a Go static analysis tool to forbidigo use of particular
identifiers.")
    (license license:asl2.0)))

(define-public go-github-com-ashanbrown-makezero
  (package
    (name "go-github-com-ashanbrown-makezero")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ashanbrown/makezero")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "050l5jdv9z6xjy6ycqnn8qsabqs9s4v1p35ii2gilfbam8vvczh5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ashanbrown/makezero"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/ashanbrown/makezero")
    (synopsis "makezero")
    (description
     "makezero is a Go static analysis tool to find slice declarations that are not
initialized with zero length and are later used with append.")
    (license license:asl2.0)))

(define-public go-github-com-assemblyai-assemblyai-go-sdk
  (package
    (name "go-github-com-assemblyai-assemblyai-go-sdk")
    (version "1.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/AssemblyAI/assemblyai-go-sdk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16wwhp5qf030967iwqldz5lx02qjnqhjdabq946nlig5bsd0h17c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/AssemblyAI/assemblyai-go-sdk"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-go-querystring
                             go-github-com-coder-websocket
                             go-github-com-cenkalti-backoff))
    (home-page "https://github.com/AssemblyAI/assemblyai-go-sdk")
    (synopsis "AssemblyAI Go SDK")
    (description "This package provides a Go client library for accessing
@@url{https://assemblyai.com,@code{AssemblyAI}}.")
    (license license:expat)))

(define-public go-github-com-astromechza-etcpwdparse
  (package
    (name "go-github-com-astromechza-etcpwdparse")
    (version "0.0.0-20170319193008-f0e5f0779716")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/astromechza/etcpwdparse")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04qiwcbm80mqsr414z68xd81q3kqan0yvyz11iphr6ajw81k65z5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/astromechza/etcpwdparse"))
    (home-page "https://github.com/astromechza/etcpwdparse")
    (synopsis "Golang library")
    (description
     "Package etcpwdparse provides straightforward functionality for loading an
/etc/passwd file and doing lookups on its content.")
    (license license:expat)))

(define-public go-github-com-av-elier-go-decimal-to-rational
  (package
    (name "go-github-com-av-elier-go-decimal-to-rational")
    (version "0.0.0-20191127152832-89e6aad02ecf")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/av-elier/go-decimal-to-rational")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "152jsvkxfkw9wpkqas12vc3fzq7kpwjxrc3pjw6ykvh75gl1wznp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/av-elier/go-decimal-to-rational"))
    (home-page "https://github.com/av-elier/go-decimal-to-rational")
    (synopsis "go-decimal-to-rational")
    (description
     "Go library to convert decimal (float64) to rational fraction with required
precision.")
    (license license:expat)))

(define-public go-github-com-avct-uasurfer
  (package
    (name "go-github-com-avct-uasurfer")
    (version "0.0.0-20240501094946-ca0c4d1e541b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/avct/uasurfer")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1180dgac0casll9c9kmc045yymb4w43ixlm4pynq5xizcqd60rjk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/avct/uasurfer"))
    (home-page "https://github.com/avct/uasurfer")
    (synopsis "uasurfer")
    (description
     "Package uasurfer provides fast and reliable abstraction of HTTP User-Agent
strings.  The philosophy is to identify technologies that holds >1% market
share, and to avoid expending resources and accuracy on guessing at esoteric UA
strings.")
    (license license:asl2.0)))

(define-public go-github-com-avvmoto-buf-readerat
  (package
    (name "go-github-com-avvmoto-buf-readerat")
    (version "0.0.0-20171115124131-a17c8cb89270")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/avvmoto/buf-readerat")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18vvlpx4484l5i92gn63vqmph9p0n9nskxcq0h2ljp282fwz6l7q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/avvmoto/buf-readerat"))
    (home-page "https://github.com/avvmoto/buf-readerat")
    (synopsis "buf-readerat")
    (description
     "Package buf-readerat implements buffered io.@code{ReaderAt}.  It wraps an
io.@code{ReaderAt} object, creating another io.@code{ReaderAt} object that also
implements the interface but provides buffering.")
    (license license:expat)))

(define-public go-github-com-aws-aws-sdk-go-v2-feature-ec2-imds
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-feature-ec2-imds")
    (version "1.16.22")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "feature/ec2/imds"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/feature/ec2/imds"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package imds provides the API client for interacting with the Amazon EC2
Instance Metadata Service.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-bedrockruntime
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-bedrockruntime")
    (version "1.23.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/bedrockruntime"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/service/bedrockruntime"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package bedrockruntime provides the API client, operations, and parameter types
for Amazon Bedrock Runtime.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-cloudfront
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-cloudfront")
    (version "1.44.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/cloudfront"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/service/cloudfront"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-jmespath-go-jmespath
                             go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package cloudfront provides the API client, operations, and parameter types for
Amazon @code{CloudFront}.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-cloudwatch
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-cloudwatch")
    (version "1.43.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/cloudwatch"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/service/cloudwatch"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-jmespath-go-jmespath
                             go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package cloudwatch provides the API client, operations, and parameter types for
Amazon @code{CloudWatch}.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-ecr
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-ecr")
    (version "1.44.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/ecr"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j6ncai7pvq9x0nqbyx2128aqcpy4i13m9hcz6zf9crcxc2pdxls"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/aws/aws-sdk-go-v2/service/ecr"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package ecr provides the API client, operations, and parameter types for Amazon
Elastic Container Registry.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-ecrpublic
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-ecrpublic")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/ecrpublic"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j6ncai7pvq9x0nqbyx2128aqcpy4i13m9hcz6zf9crcxc2pdxls"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/aws/aws-sdk-go-v2/service/ecrpublic"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package ecrpublic provides the API client, operations, and parameter types for
Amazon Elastic Container Registry Public.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-kms
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-kms")
    (version "1.37.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/kms"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/service/kms"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package kms provides the API client, operations, and parameter types for AWS Key
Management Service.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-lightsail
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-lightsail")
    (version "1.42.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/lightsail"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/service/lightsail"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package lightsail provides the API client, operations, and parameter types for
Amazon Lightsail.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-route53
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-route53")
    (version "1.46.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/route53"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/service/route53"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-jmespath-go-jmespath
                             go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package route53 provides the API client, operations, and parameter types for
Amazon Route 53.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-sns
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-sns")
    (version "1.33.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/sns"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/service/sns"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package sns provides the API client, operations, and parameter types for Amazon
Simple Notification Service.")
    (license license:asl2.0)))

(define-public go-github-com-aws-aws-sdk-go-v2-service-ssm
  (package
    (name "go-github-com-aws-aws-sdk-go-v2-service-ssm")
    (version "1.56.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/aws/aws-sdk-go-v2")
             (commit (go-version->git-ref version
                                          #:subdir "service/ssm"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n3spqncpw6w11pwkqaiq7jyv6dv0229jsbshibg24l2g3accdqi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/aws/aws-sdk-go-v2/service/ssm"
      #:unpack-path "github.com/aws/aws-sdk-go-v2"))
    (propagated-inputs (list go-github-com-jmespath-go-jmespath
                             go-github-com-aws-smithy-go))
    (home-page "https://github.com/aws/aws-sdk-go-v2")
    (synopsis #f)
    (description
     "Package ssm provides the API client, operations, and parameter types for Amazon
Simple Systems Manager (SSM).")
    (license license:asl2.0)))

(define-public go-github-com-awslabs-amazon-ecr-credential-helper-ecr-login
  (package
    (name "go-github-com-awslabs-amazon-ecr-credential-helper-ecr-login")
    (version "0.9.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/awslabs/amazon-ecr-credential-helper")
             (commit (go-version->git-ref version
                                          #:subdir "ecr-login"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jkli0nvaxqcccgrd4nxwq23mlvr840lwpxah9la290fggq4hzci"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/awslabs/amazon-ecr-credential-helper/ecr-login"
      #:unpack-path "github.com/awslabs/amazon-ecr-credential-helper"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-sirupsen-logrus
                        go-github-com-mitchellh-go-homedir
                        go-github-com-docker-docker-credential-helpers
                        go-github-com-aws-smithy-go
                        go-github-com-aws-aws-sdk-go-v2-service-ecrpublic
                        go-github-com-aws-aws-sdk-go-v2-service-ecr
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2))
    (home-page "https://github.com/awslabs/amazon-ecr-credential-helper")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-aybabtme-humanlog
  (package
    (name "go-github-com-aybabtme-humanlog")
    (version "0.7.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/humanlogio/humanlog")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ld6lpnlz4hgzy72554j9dal61z50xz1k9sf9rc579yj695sqqvk"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "github.com/aybabtme/humanlog"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-gonum-org-v1-gonum ; packaged
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-net
                             go-golang-org-x-exp
                             go-github-com-urfave-cli
                             go-github-com-stretchr-testify
                             go-github-com-rs-cors
                             go-github-com-pkg-browser
                             go-github-com-mattn-go-isatty
                             go-github-com-mattn-go-colorable
                             go-github-com-matoous-go-nanoid
                             go-github-com-lrstanley-bubblezone
                             go-github-com-kr-logfmt
                             go-github-com-humanlogio-api-go
                             go-github-com-google-uuid
                             go-github-com-go-logfmt-logfmt
                             go-github-com-gen2brain-beeep
                             go-github-com-fatih-color
                             go-github-com-cli-safeexec
                             go-github-com-charmbracelet-x-term
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-huh
                             go-github-com-charmbracelet-bubbletea
                             go-github-com-charmbracelet-bubbles
                             go-github-com-blang-semver
                             go-github-com-aybabtme-rgbterm ; packaged
                             go-github-com-nimblemarkets-ntcharts
                             go-github-com-99designs-keyring
                             go-connectrpc-com-cors
                             go-connectrpc-com-connect))
    (home-page "https://github.com/aybabtme/humanlog")
    (synopsis "humanlog")
    (description
     "Read logs from @@code{stdin} and prints them back to @@code{stdout}, but
prettier.")
    (license license:asl2.0)))

(define-public go-github-com-azure-azure-amqp-common-go-v3
  (package
    (name "go-github-com-azure-azure-amqp-common-go-v3")
    (version "3.2.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-amqp-common-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xmsz4x3rlc56bh2z83fpcqhqqayh7pigz4k9qrzp1kqyxkl4lpl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-amqp-common-go/v3"
      #:unpack-path "github.com/Azure/azure-amqp-common-go"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-devigned-tab
                             go-github-com-azure-go-autorest-autorest-adal
                             go-github-com-azure-go-autorest-autorest
                             go-github-com-azure-go-amqp))
    (home-page "https://github.com/Azure/azure-amqp-common-go")
    (synopsis "Azure AMQP Common")
    (description
     "This project contains reusable components for AMQP based services like Event Hub
and Service Bus.  You will find abstractions over authentication, claims-based
security, connection string parsing and RPC for AMQP.")
    (license license:expat)))

(define-public go-github-com-azure-azure-pipeline-go
  (package
    (name "go-github-com-azure-azure-pipeline-go")
    (version "0.2.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-pipeline-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "154qwr7v1q2wjp263jhkvrygi728q568zc930h3fxp75v32laqwb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-pipeline-go"))
    (propagated-inputs (list go-github-com-pkg-errors
                             go-github-com-mattn-go-ieproxy ; packaged
                             ))
    (home-page "https://github.com/Azure/azure-pipeline-go")
    (synopsis "Contributing")
    (description
     "This project welcomes contributions and suggestions.  Most contributions require
you to agree to a Contributor License Agreement (CLA) declaring that you have
the right to, and actually do, grant us the rights to use your contribution.
For details, visit @@url{https://cla.microsoft.com,https://cla.microsoft.com}.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go
  (package
    (name "go-github-com-azure-azure-sdk-for-go")
    (version "68.0.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rwma4by309dp7nks02g6pzwi2prclssdqflsggnmc6fj7mayj46"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-sdk-for-go"))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure SDK for Go")
    (description
     "Package sdk provides Go packages for managing and using Azure services.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-azcore
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-azcore")
    (version "1.16.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir "sdk/azcore"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10vdkbwbqy2kmzv7sdixv9i863hic9plbwwlilwz1ljzm01dyrjf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-sdk-for-go/sdk/azcore"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-golang-org-x-net
                        go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-internal))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Core Client Module for Go")
    (description
     "Package azcore implements an HTTP request/response middleware pipeline used by
Azure SDK clients.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-azidentity
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-azidentity")
    (version "1.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir "sdk/azidentity"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "131hg5qvhji7fqk8lpdvwnj4px2af8qdxsrkds21smf32i7nr8p3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-golang-org-x-crypto
                        go-github-com-stretchr-testify
                        go-github-com-redis-go-redis-v9 ; packaged

                        go-github-com-google-uuid
                        go-github-com-golang-jwt-jwt-v5 ;packaged

                        go-github-com-azuread-microsoft-authentication-library-for-go
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity-cache
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Identity Client Module for Go")
    (description
     "The Azure Identity module provides Microsoft Entra ID
(@@url{https://learn.microsoft.com/entra/fundamentals/new-name,formerly Azure
Active Directory}) token authentication support across the Azure SDK. It
includes a set of @@code{@code{TokenCredential}} implementations, which can be
used with Azure SDK clients supporting token authentication.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-azidentity-cache
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-azidentity-cache")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir "sdk/azidentity/cache"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ypyb9hwz2xkazsqhs0hs13p4v5zpyrp413ndr4fzfrh47vqhib1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-sdk-for-go/sdk/azidentity/cache"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-golang-org-x-sys
                        go-github-com-stretchr-testify
                        go-github-com-google-uuid
                        go-github-com-azuread-microsoft-authentication-library-for-go
                        go-github-com-azuread-microsoft-authentication-extensions-for-go-cache
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Identity Cache Module for Go")
    (description
     "This module implements a cross-platform persistent token cache for
@@url{https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/azidentity,azidentity}
credentials.  See that module's
@@url{https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/azidentity#pkg-examples,examples}
for sample code showing how to configure persistent caching for a credential,
and its @@url{https://aka.ms/azsdk/go/identity/caching,token caching document}
for more information about the implementation.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-internal
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-internal")
    (version "1.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir "sdk/internal"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lgz1nyw8jvz9fy3y4h5j6ksiprg1imxalyqz5g4g75915nrmqxk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-sdk-for-go/sdk/internal"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-golang-org-x-text go-golang-org-x-net
                        go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure.Core Internal Module for Go")
    (description "internal contains content for Azure SDK developers.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-messaging-azservicebus
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-messaging-azservicebus")
    (version "1.7.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "sdk/messaging/azservicebus"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bjj0ia2d336wjq8x8jp9qjb1h4abss8hk0dgbkxfr2p5vms0bas"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/messaging/azservicebus"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-golang-mock ; packaged
                        go-nhooyr-io-websocket
                        go-github-com-stretchr-testify
                        go-github-com-joho-godotenv ; packaged
                        go-github-com-azure-go-amqp
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Service Bus client module for Go")
    (description
     "Package azservicebus provides clients for sending and receiving messages with
Azure Service Bus.  NOTE: for creating and managing entities, use the `Client`
in the `github.com/Azure/azure-sdk-for-go/sdk/messaging/azservicebus/admin`
package.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-compute-armcompute-v5
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-compute-armcompute-v5")
    (version "5.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                      #:subdir "sdk/resourcemanager/compute/armcompute"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dj61g9azlmfmkg649ggd8fz36hvlinvdprhgmj5q3njp4kv4gvv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resources-armresources
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v2
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Compute Module for Go")
    (description
     "The @@code{armcompute} module provides operations for working with Azure
Compute.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-dns-armdns
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-dns-armdns")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "sdk/resourcemanager/dns/armdns"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05yv7ac8zcd10iljnv46jba0g9m4kkwf0axd5czrv0067w3m52b2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dns/armdns"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure DNS Module for Go")
    (description
     "The @@code{armdns} module provides operations for working with Azure DNS.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v2
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v2")
    (version "2.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "sdk/resourcemanager/internal"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0db2hxq8wigvmqkj8h5gfq9lw6bp0k13hvcyi0hxgnriz1mdvpx5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/internal/v2"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resources-armresources
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v3
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v3")
    (version "3.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "sdk/resourcemanager/internal"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0db2hxq8wigvmqkj8h5gfq9lw6bp0k13hvcyi0hxgnriz1mdvpx5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/internal/v2"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resources-armresources
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-managementgroups-armmanagementgroups
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-managementgroups-armmanagementgroups")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                      #:subdir
                      "sdk/resourcemanager/managementgroups/armmanagementgroups"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0l6jdkkgc2fhf43qd3d1s1llnv40skmql6zf9vjbyrc73qad44cj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/managementgroups/armmanagementgroups"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v2
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Management Groups Module for Go")
    (description
     "The @@code{armmanagementgroups} module provides operations for working with
Azure Management Groups.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-network-armnetwork-v4
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-network-armnetwork-v4")
    (version "4.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                      #:subdir "sdk/resourcemanager/network/armnetwork"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16ffwdw8di79canc1v00gfpg6shn1wqd9fbfxyss16m5d8fsxlyy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v2
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Network Module for Go")
    (description
     "The @@code{armnetwork} module provides operations for working with Azure
Network.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-privatedns-armprivatedns
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-privatedns-armprivatedns")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                      #:subdir "sdk/resourcemanager/privatedns/armprivatedns"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ca28dxiszx9xmwq65vhk6jxx3vhxl4cpkzaa5c508ywzqan0vcm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/privatedns/armprivatedns"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resources-armresources
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v3
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Private DNS Module for Go")
    (description
     "The @@code{armprivatedns} module provides operations for working with Azure
Private DNS.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resourcegraph-armresourcegraph
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resourcegraph-armresourcegraph")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                      #:subdir
                      "sdk/resourcemanager/resourcegraph/armresourcegraph"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qkmq5zmix15qfbhsn2dwgm9ws2jqdgp2p70s19zxsw445aq6gh8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resourcegraph/armresourcegraph"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Resource Graph Module for Go")
    (description
     "The @@code{armresourcegraph} module provides operations for working with Azure
Resource Graph.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resources-armresources
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resources-armresources")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                      #:subdir "sdk/resourcemanager/resources/armresources"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01r351rl6w0gdpgpllq692yip5c761l8f8098hfnw4bgsk625qc7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-managementgroups-armmanagementgroups
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v2
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Resources Module for Go")
    (description
     "The @@code{armresources} module provides operations for working with Azure
Resources.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-storage-armstorage
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-storage-armstorage")
    (version "1.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                      #:subdir "sdk/resourcemanager/storage/armstorage"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "093pyp1sxzys003imdsgm5a0cnrj4vyhp9p4fahrgg957bp5fp2i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resources-armresources
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-internal-v3
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Storage Module for Go")
    (description
     "The @@code{armstorage} module provides operations for working with Azure
Storage.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-azkeys
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-azkeys")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "sdk/security/keyvault/azkeys"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p6x4jcp6iksgxlm8wpi2jkqysic5afwxci3fw8d9dh7pyy1kcg9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/security/keyvault/azkeys"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Key Vault Keys client module for Go")
    (description
     "@@url{https://github.com/Azure/azure-sdk-for-go/tree/main/sdk/security/keyvault/azkeys/client.go,Source
code} | @@url{https://aka.ms/azsdk/go/keyvault-keys/docs,Package (pkg.go.dev)} |
@@url{https://docs.microsoft.com/azure/key-vault/,Product documentation} |
@@url{https://aka.ms/azsdk/go/keyvault-keys/docs#pkg-examples,Samples}.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-azsecrets
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-azsecrets")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "sdk/security/keyvault/azsecrets"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p6x4jcp6iksgxlm8wpi2jkqysic5afwxci3fw8d9dh7pyy1kcg9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/security/keyvault/azsecrets"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Key Vault Secrets client module for Go")
    (description "Azure Key Vault helps solve the following problems:.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-internal
  (package
    (name
     "go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-internal")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "sdk/security/keyvault/internal"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0shfbcmzxpfi38zzzkb9v72fis98w473iaic6h6ygvhidjigc3wf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/Azure/azure-sdk-for-go/sdk/security/keyvault/internal"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Key Vault Internal Module for Go")
    (description
     "Copyright (c) Microsoft Corporation.  All rights reserved.  Licensed under the
MIT License.  See License.txt in the project root for license information.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir "sdk/storage/azblob"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1faww06g7wy5qn43r346nf9zndlaym7c0hgafx5dsflmxvdf7q37"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-sdk-for-go/sdk/storage/azblob"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-storage-armstorage
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure Blob Storage module for Go")
    (description
     "Azure Blob Storage is Microsoft's object storage solution for the cloud.  Blob
Storage is optimized for storing massive amounts of unstructured data - data
that does not adhere to a particular data model or definition, such as text or
binary data.  For more information, see
@@url{https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction,Introduction
to Azure Blob Storage}.")
    (license license:expat)))

(define-public go-github-com-azure-azure-sdk-for-go-sdk-storage-azfile
  (package
    (name "go-github-com-azure-azure-sdk-for-go-sdk-storage-azfile")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-sdk-for-go")
             (commit (go-version->git-ref version
                                          #:subdir "sdk/storage/azfile"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00l5xj1cgnkljxxynasfji51bvwfbbnvxzlz2ky6kjc5fgw44c78"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-sdk-for-go/sdk/storage/azfile"
      #:unpack-path "github.com/Azure/azure-sdk-for-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
                        go-github-com-azure-azure-sdk-for-go-sdk-internal
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/Azure/azure-sdk-for-go")
    (synopsis "Azure File Storage SDK for Go")
    (description
     "Azure File Shares offers fully managed file shares in the cloud that are
accessible via the industry standard
@@url{https://learn.microsoft.com/windows/desktop/@code{FileIO/microsoft-smb-protocol-and-cifs-protocol-overview,Server}
Message Block (SMB) protocol}.  Azure file shares can be mounted concurrently by
cloud or on-premises deployments of Windows, Linux, and @code{macOS}.
Additionally, Azure file shares can be cached on Windows Servers with Azure File
Sync for fast access near where the data is being used.")
    (license license:expat)))

(define-public go-github-com-azure-azure-storage-blob-go
  (package
    (name "go-github-com-azure-azure-storage-blob-go")
    (version "0.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/azure-storage-blob-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01njsbyybnvh3kk8jyxpl427i5h99d1fsf270lh77yb53xvh8gbg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/azure-storage-blob-go"))
    (propagated-inputs (list go-gopkg-in-check-v1 go-github-com-google-uuid
                             go-github-com-azure-go-autorest-autorest-adal
                             go-github-com-azure-azure-pipeline-go))
    (home-page "https://github.com/Azure/azure-storage-blob-go")
    (synopsis "Azure Storage Blob SDK for Go (PREVIEW)")
    (description
     "The Microsoft Azure Storage SDK for Go allows you to build applications that
takes advantage of Azure's scalable cloud storage.")
    (license license:expat)))

(define-public go-github-com-azure-go-amqp
  (package
    (name "go-github-com-azure-go-amqp")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-amqp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gqvf0liq305lpc6fqh77wh04wl4bgfhrhva7fjjxg4fx601h7kw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-amqp"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-github-com-fortytw2-leaktest))
    (home-page "https://github.com/Azure/go-amqp")
    (synopsis "AMQP 1.0 Client Module for Go")
    (description "Package amqp provides an AMQP 1.0 client implementation.")
    (license license:expat)))

(define-public go-github-com-azure-go-ansiterm
  (package
    (name "go-github-com-azure-go-ansiterm")
    (version "0.0.0-20230124172434-306776ec8161")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-ansiterm")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qqz5d5fdqnn8ixld8gf0hpd9bsbq53vlp1sfbx1n71pw6h45f6p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-ansiterm"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/Azure/go-ansiterm")
    (synopsis "go-ansiterm")
    (description
     "This is a cross platform Ansi Terminal Emulation library.  It reads a stream of
Ansi characters and produces the appropriate function calls.  The results of the
function calls are platform dependent.")
    (license license:expat)))

(define-public go-github-com-azure-go-autorest
  (package
    (name "go-github-com-azure-go-autorest")
    (version "14.2.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z3j6jj2f9r208vgrg4byaczxbygiw97k2cm83qd64bl82vhyjix"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest"))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis "go-autorest")
    (description
     "Package go-autorest provides an HTTP request client for use with
Autorest-generated API client packages.")
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-autorest
  (package
    (name "go-github-com-azure-go-autorest-autorest")
    (version "0.11.29")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "autorest"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hknm1vm3ccqpwvzi4r40x8skjdp0nis1z9nxjcn91pcvryr45v0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/autorest"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-azure-go-autorest-tracing
                             go-github-com-azure-go-autorest-logger
                             go-github-com-azure-go-autorest-autorest-mocks
                             go-github-com-azure-go-autorest-autorest-adal
                             go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis #f)
    (description
     "Package autorest implements an HTTP request pipeline suitable for use across
multiple go-routines and provides the shared routines relied on by
@code{AutoRest} (see
@@url{https://github.com/Azure/autorest/,https://github.com/Azure/autorest/})
generated Go code.")
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-autorest-adal
  (package
    (name "go-github-com-azure-go-autorest-autorest-adal")
    (version "0.9.24")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "autorest/adal"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sb553g3j8aj4b7j1wvji59qj12yzz60qavrqn3zv67j4cd92ssm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/autorest/adal"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-golang-jwt-jwt-v4
                             go-github-com-azure-go-autorest-tracing
                             go-github-com-azure-go-autorest-logger
                             go-github-com-azure-go-autorest-autorest-mocks
                             go-github-com-azure-go-autorest-autorest-date
                             go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis
     "NOTE: This module will go out of support by March 31, 2023.  For authenticating with Azure AD, use module")
    (description
     "This is a standalone package for authenticating with Azure Active Directory from
other Go libraries and applications, in particular the .")
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-autorest-azure-auth
  (package
    (name "go-github-com-azure-go-autorest-autorest-azure-auth")
    (version "0.5.13")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "autorest/azure/auth"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sb553g3j8aj4b7j1wvji59qj12yzz60qavrqn3zv67j4cd92ssm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/autorest/azure/auth"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-github-com-dimchansky-utfbom
                        go-github-com-azure-go-autorest-logger
                        go-github-com-azure-go-autorest-autorest-azure-cli
                        go-github-com-azure-go-autorest-autorest-adal
                        go-github-com-azure-go-autorest-autorest
                        go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis
     "NOTE: This module will go out of support by March 31, 2023.  For authenticating with Azure AD, use module")
    (description
     "Typical SDK operations must be authenticated and authorized.  The
@@code{autorest.Authorizer} interface allows use of any auth style in requests,
such as inserting an OAuth2 Authorization header and bearer token received from
Azure AD.")
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-autorest-azure-cli
  (package
    (name "go-github-com-azure-go-autorest-autorest-azure-cli")
    (version "0.4.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "autorest/azure/cli"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w0b8z76q0znhzhm8955pwqvvgxk8qfbgj0yqrr5d03chadqk88m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/autorest/azure/cli"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-github-com-mitchellh-go-homedir
                             go-github-com-dimchansky-utfbom
                             go-github-com-azure-go-autorest-autorest-date
                             go-github-com-azure-go-autorest-autorest-adal
                             go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-autorest-date
  (package
    (name "go-github-com-azure-go-autorest-autorest-date")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "autorest/date"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08594gzj6lmparpqddzp8d7h2647r0jqwgy3lmz9visihklxddiy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/autorest/date"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis #f)
    (description
     "Package date provides time.Time derivatives that conform to the Swagger.io
(@@url{https://swagger.io/,https://swagger.io/}) defined date formats: Date and
@code{DateTime}.  Both types may, in most cases, be used in lieu of time.Time
types.  And both convert to time.Time through a @code{ToTime} method.")
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-autorest-mocks
  (package
    (name "go-github-com-azure-go-autorest-autorest-mocks")
    (version "0.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "autorest/mocks"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01nfq39jdnc46jjzj2y5gan1qxacl7g40qw3lzk6skfkwm4f888a"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/autorest/mocks"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis #f)
    (description "Package mocks provides mocks and helpers used in testing.")
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-autorest-to
  (package
    (name "go-github-com-azure-go-autorest-autorest-to")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "autorest/to"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08594gzj6lmparpqddzp8d7h2647r0jqwgy3lmz9visihklxddiy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/autorest/to"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis #f)
    (description
     "Package to provides helpers to ease working with pointer values of marshalled
structures.")
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-logger
  (package
    (name "go-github-com-azure-go-autorest-logger")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "logger"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wl004px2nijq9az79dck9lknddh14r3v8q1yygi2msa1byxak4x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/logger"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-azure-go-autorest-tracing
  (package
    (name "go-github-com-azure-go-autorest-tracing")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Azure/go-autorest")
             (commit (go-version->git-ref version
                                          #:subdir "tracing"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08594gzj6lmparpqddzp8d7h2647r0jqwgy3lmz9visihklxddiy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Azure/go-autorest/tracing"
      #:unpack-path "github.com/Azure/go-autorest"))
    (propagated-inputs (list go-github-com-azure-go-autorest))
    (home-page "https://github.com/Azure/go-autorest")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-azuread-microsoft-authentication-extensions-for-go-cache
  (package
    (name
     "go-github-com-azuread-microsoft-authentication-extensions-for-go-cache")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/AzureAD/microsoft-authentication-extensions-for-go")
             (commit (go-version->git-ref version
                                          #:subdir "cache"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jj7bjdns1dsxsk22p0xdph3j9hhysbwcbxwsqpxyyggzni9zijv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/AzureAD/microsoft-authentication-extensions-for-go/cache"
      #:unpack-path
      "github.com/AzureAD/microsoft-authentication-extensions-for-go"))
    (propagated-inputs (list go-gopkg-in-check-v1 go-golang-org-x-sys
                        go-github-com-stretchr-testify
                        go-github-com-keybase-go-keychain
                        go-github-com-azuread-microsoft-authentication-library-for-go))
    (home-page
     "https://github.com/AzureAD/microsoft-authentication-extensions-for-go")
    (synopsis "Microsoft Authentication Library (MSAL) Extensions for Go")
    (description
     "This module contains a persistent cache for
@@url{https://github.com/@code{AzureAD/microsoft-authentication-library-for-go,Microsoft}
Authentication Library (MSAL) for Go} public client applications such as CLI
tools.  It isn't recommended for web applications or RPC APIs, in which it can
cause scaling and performance problems.")
    (license license:expat)))

(define-public go-github-com-azuread-microsoft-authentication-library-for-go
  (package
    (name "go-github-com-azuread-microsoft-authentication-library-for-go")
    (version "1.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/AzureAD/microsoft-authentication-library-for-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kzqjsrp2h4ajcw3xax4z87p57vdqa8qyqfvxwaijbypgn7mxm3d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/AzureAD/microsoft-authentication-library-for-go"))
    (propagated-inputs (list go-github-com-pkg-browser
                             go-github-com-montanaflynn-stats
                             go-github-com-kylelemons-godebug
                             go-github-com-google-uuid
                             go-github-com-golang-jwt-jwt-v5 ;packaged
))
    (home-page
     "https://github.com/AzureAD/microsoft-authentication-library-for-go")
    (synopsis "Microsoft Authentication Library (MSAL) for Go")
    (description
     "The Microsoft Authentication Library (MSAL) for Go is part of the
@@url{https://aka.ms/aaddevv2,Microsoft identity platform for developers}
(formerly named Azure AD) v2.0.  It allows you to sign in users or apps with
Microsoft identities
(@@url{https://azure.microsoft.com/services/active-directory/,Azure AD} and
@@url{https://account.microsoft.com,Microsoft Accounts}) and obtain tokens to
call Microsoft APIs such as @@url{https://graph.microsoft.io/,Microsoft Graph}
or your own APIs registered with the Microsoft identity platform.  It is built
using industry standard OAuth2 and @code{OpenID} Connect protocols.")
    (license license:expat)))

(define-public go-github-com-backblaze-blazer
  (package
    (name "go-github-com-backblaze-blazer")
    (version "0.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Backblaze/blazer")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j2y6hgv66qbxc1d8a2wxk7hq8fpblb7hcpk7630h87arkvs3d9w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Backblaze/blazer"))
    (propagated-inputs (list go-google-golang-org-grpc                    ; packaged
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-golang-org-x-net                          ; packaged
                             go-github-com-grpc-ecosystem-grpc-gateway
                             go-github-com-google-uuid                    ; packaged
                             go-github-com-google-subcommands             ; packaged
                             go-github-com-golang-protobuf                ; packaged
                             ))
    (home-page "https://github.com/Backblaze/blazer")
    (synopsis "Blazer")
    (description
     "Blazer is a Golang client library for Backblaze B2 Cloud Object Storage.")
    (license license:asl2.0)))

(define-public go-github-com-bahlo-generic-list-go
  (package
    (name "go-github-com-bahlo-generic-list-go")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bahlo/generic-list-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nif01xg2y7ihhik65xkx74kszamgvz9ykknj81p71mmdv0fm304"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bahlo/generic-list-go"))
    (home-page "https://github.com/bahlo/generic-list-go")
    (synopsis "generic-list-go")
    (description "Package list implements a doubly linked list.")
    (license license:bsd-3)))

(define-public go-github-com-baozisoftware-qrcode-terminal-go
  (package
    (name "go-github-com-baozisoftware-qrcode-terminal-go")
    (version "0.0.0-20170407111555-c0650d8dff0f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Baozisoftware/qrcode-terminal-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "166h9zy9y7ygayhybg7d080hpdcf1mvkf3rwnq5lqg8i3cg71s7b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Baozisoftware/qrcode-terminal-go"))
    (home-page "https://github.com/Baozisoftware/qrcode-terminal-go")
    (synopsis "qrcode-terminal-go")
    (description "QRCode terminal for golang.")
    (license license:bsd-3)))

(define-public go-github-com-bazelbuild-rules-go
  (package
    (name "go-github-com-bazelbuild-rules-go")
    (version "0.51.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bazel-contrib/rules_go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zvb2jgvg3pnywgkzk28cbqc251dl64s93svma05l03hc54czfpj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bazelbuild/rules_go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc-cmd-protoc-gen-go-grpc
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto
                             go-golang-org-x-tools
                             go-golang-org-x-net
                             go-github-com-golang-protobuf
                             go-github-com-golang-mock ; packaged
                             go-github-com-gogo-protobuf))
    (home-page "https://github.com/bazelbuild/rules_go")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-bboreham-go-loser
  (package
    (name "go-github-com-bboreham-go-loser")
    (version "0.0.0-20230920113527-fcc2c21820a3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bboreham/go-loser")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vphqyyda0gbnf9glnfjvmkv7g1za0rqir8jv9lv40fhs3qr8bv3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bboreham/go-loser"))
    (propagated-inputs (list go-golang-org-x-exp))
    (home-page "https://github.com/bboreham/go-loser")
    (synopsis "go-loser")
    (description "Loser Tree data structure, for fast k-way merge.")
    (license license:asl2.0)))

(define-public go-github-com-beevik-etree
  (package
    (name "go-github-com-beevik-etree")
    (version "1.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/beevik/etree")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0afvhhww7vavh3gjapbra28j0rz8jzzb08lf6nrnkw12b3ij99s7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/beevik/etree"))
    (home-page "https://github.com/beevik/etree")
    (synopsis "etree")
    (description
     "Package etree provides XML services through an Element Tree abstraction.")
    (license license:bsd-2)))

(define-public go-github-com-benau-go-rlottie
  (package
    (name "go-github-com-benau-go-rlottie")
    (version "0.0.0-20210807002906-98c1b2421989")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Benau/go_rlottie")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ppqrjhbjjhk3kbwv5cmpnibjgiwrzp2qqxy5byznvkq0n44d45i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Benau/go_rlottie"))
    (home-page "https://github.com/Benau/go_rlottie")
    (synopsis #f)
    (description
     "Go binding for
@@url{https://github.com/Samsung/rlottie,https://github.com/Samsung/rlottie},
example at
@@url{https://github.com/Benau/tgsconverter,https://github.com/Benau/tgsconverter}.")
    (license license:expat)))

(define-public go-github-com-benau-tgsconverter
  (package
    (name "go-github-com-benau-tgsconverter")
    (version "0.0.0-20210809170556-99f4a4f6337f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Benau/tgsconverter")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16m7lx5p58v94z6knl350h9g6wyb6biylyyjp2b97r4pjm284ca5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Benau/tgsconverter"))
    (propagated-inputs (list go-github-com-sizeofint-webpanimation
                             go-github-com-kettek-apng
                             go-github-com-av-elier-go-decimal-to-rational
                             go-github-com-benau-go-rlottie))
    (home-page "https://github.com/Benau/tgsconverter")
    (synopsis #f)
    (description
     "Go program to convert .tgs (telegram sticker) to apng, gif, apng or webp,
library api included.")
    (license license:expat)))

(define-public go-github-com-benbjohnson-immutable
  (package
    (name "go-github-com-benbjohnson-immutable")
    (version "0.4.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/benbjohnson/immutable")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0isxzkhhva04va7pp3m5bqp2a8a9bmm9ac189awilxyfk7f9bmmg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/benbjohnson/immutable"))
    (home-page "https://github.com/benbjohnson/immutable")
    (synopsis "Immutable")
    (description "Package immutable provides immutable collection types.")
    (license license:expat)))

(define-public go-github-com-bep-clocks
  (package
    (name "go-github-com-bep-clocks")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/clocks")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0i2g149ldgpz0ji2sjfkfy7y72qlyb4m5xk0jxi3s4jdh1vd3n0c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/clocks"))
    (propagated-inputs (list go-github-com-google-go-cmp
                             go-github-com-frankban-quicktest))
    (home-page "https://github.com/bep/clocks")
    (synopsis #f)
    (description
     "This package provides a that allows you to set the start time.  It also provides
a system clock, both implementing this interface:.")
    (license license:expat)))

(define-public go-github-com-bep-debounce
  (package
    (name "go-github-com-bep-debounce")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/debounce")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i8r381j92b49l7vywcmi4s5hvp9hzj0dmz5n722gln1ifkwx8gf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/debounce"))
    (home-page "https://github.com/bep/debounce")
    (synopsis "Go Debounce")
    (description
     "Package debounce provides a debouncer func.  The most typical use case would be
the user typing a text into a form; the UI needs an update, but let's wait for a
break.")
    (license license:expat)))

(define-public go-github-com-bep-gitmap
  (package
    (name "go-github-com-bep-gitmap")
    (version "1.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/gitmap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08m855ig33ysr93yfgvc0g4bqfdrj97dim2g0i66hs5rbm4c72hc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/gitmap"))
    (home-page "https://github.com/bep/gitmap")
    (synopsis "GitMap")
    (description
     "This package provides a fairly fast way to create a map from all the filenames
to info objects for a given revision of a Git repo.")
    (license license:expat)))

(define-public go-github-com-bep-goat
  (package
    (name "go-github-com-bep-goat")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/goat")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0aziqkkvdrn6bj9ycwdknx0m5kvacajm4w96k15crv9f5ly9lny7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/goat"))
    (propagated-inputs (list go-github-com-google-go-cmp
                             go-github-com-frankban-quicktest))
    (home-page "https://github.com/bep/goat")
    (synopsis "GoAT: Go ASCII Tool")
    (description
     "This is a Go implementation of
@@url{http://casual-effects.com/markdeep/,markdeep.mini.js}'s ASCII diagram
generation.")
    (license license:expat)))

(define-public go-github-com-bep-godartsass-v2
  (package
    (name "go-github-com-bep-godartsass-v2")
    (version "2.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/godartsass")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jxw8is2pprrbcrdl1bc3s9igyxgdc14llfnf7wds7pvjwaw2jzk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/godartsass/v2"
      #:unpack-path "github.com/bep/godartsass"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-frankban-quicktest
                             go-github-com-cli-safeexec))
    (home-page "https://github.com/bep/godartsass")
    (synopsis #f)
    (description
     "Package godartsass provides a Go API for the Dass Sass Embedded protocol.")
    (license license:expat)))

(define-public go-github-com-bep-gowebp
  (package
    (name "go-github-com-bep-gowebp")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/gowebp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xj5hdp5rpr5ci9jcxaxydgssia77fqarvqqg0mvmngkzlsq970q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/gowebp"))
    (home-page "https://github.com/bep/gowebp")
    (synopsis "Update libwebp version")
    (description
     "This library provides C bindings and an API for @@strong{encoding} Webp images
using Google's @@url{https://github.com/webmproject/libwebp,libwebp}.")
    (license license:expat)))

(define-public go-github-com-bep-helpers
  (package
    (name "go-github-com-bep-helpers")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/helpers")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lkmm6wk1k0a8fhdq7696anw7ycriv5jjw0vghxj4rg0x6i9z1wb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/helpers"))
    (propagated-inputs (list go-github-com-frankban-quicktest))
    (home-page "https://github.com/bep/helpers")
    (synopsis #f)
    (description
     "Some helper packages with some helper code that I have had a tendency to copy
from project to project over the years, a clear sign that I should consider some
reuse.")
    (license license:expat)))

(define-public go-github-com-bep-imagemeta
  (package
    (name "go-github-com-bep-imagemeta")
    (version "0.8.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/imagemeta")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pawkny7h6rfnb5wq6jxdxdxxq0zd6518y9iqr163826icmdm7lj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/imagemeta"))
    (propagated-inputs (list go-golang-org-x-text
                             go-github-com-rwcarlsen-goexif ; packaged
                             go-github-com-google-go-cmp
                             go-github-com-frankban-quicktest))
    (home-page "https://github.com/bep/imagemeta")
    (synopsis "This is about READING image metadata")
    (description "Writing is not supported, and never will.")
    (license license:expat)))

(define-public go-github-com-bep-lazycache
  (package
    (name "go-github-com-bep-lazycache")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/lazycache")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jjzbz8gjjx1rz4nv9lnsxp77d781sbzab6p4l8yxg2q0l56bh31"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/lazycache"))
    (propagated-inputs (list go-github-com-hashicorp-golang-lru-v2 ; packaged
                             go-github-com-frankban-quicktest))
    (home-page "https://github.com/bep/lazycache")
    (synopsis #f)
    (description
     "@@strong{Lazycache} is a simple thread safe in-memory LRU cache.  Under the hood
it leverages the great @@url{https://github.com/hashicorp/golang-lru,simpleru
package in golang-lru}, with its exellent performance.  One big difference
between @@code{golang-lru} and this library is the
@@url{https://pkg.go.dev/github.com/bep/lazycache#Cache.@code{GetOrCreate,GetOrCreate}}
method, which provides:.")
    (license license:expat)))

(define-public go-github-com-bep-logg
  (package
    (name "go-github-com-bep-logg")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/logg")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1pd8zwm2vq7ch39gwlpk5kcn20v13r06jl8f3g33l3gm47qlg4kv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/logg"))
    (propagated-inputs (list go-github-com-pkg-errors
                             go-github-com-mattn-go-colorable
                             go-github-com-frankban-quicktest
                             go-github-com-fatih-color
                             go-github-com-bep-clocks))
    (home-page "https://github.com/bep/logg")
    (synopsis "Benchmarks")
    (description "package logg implements a simple structured logging API.")
    (license license:expat)))

(define-public go-github-com-bep-mclib
  (package
    (name "go-github-com-bep-mclib")
    (version "1.20400.20402")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/mclib")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wnv6ripkwmqx671b08lmvg1nfaksacqmc5w6yglwg88zw1mkknl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/mclib"))
    (propagated-inputs (list go-software-sslmate-com-src-go-pkcs12
                             go-howett-net-plist go-golang-org-x-net
                             go-github-com-frankban-quicktest
                             go-github-com-bep-helpers))
    (home-page "https://github.com/bep/mclib")
    (synopsis #f)
    (description
     "This is a simple library to make it possible to run
@@url{https://github.com/@code{FiloSottile/mkcert,Mkcert's}} @@code{main}
method.")
    (license license:expat)))

(define-public go-github-com-bep-overlayfs
  (package
    (name "go-github-com-bep-overlayfs")
    (version "0.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/overlayfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11vcsjb5drm1lzysx9ifqcdwjmgk7a6lf9b1z4254cwlf4x4h50q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/overlayfs"))
    (propagated-inputs (list go-golang-org-x-tools go-github-com-spf13-afero
                             go-github-com-frankban-quicktest))
    (home-page "https://github.com/bep/overlayfs")
    (synopsis #f)
    (description
     "@@strong{overlayfs} is a composite filesystem (currently only) for
@@url{https://github.com/spf13/afero,Afero} with similar but different semantics
compared to Afero's
@@url{https://github.com/spf13/afero/raw/master/@code{copyOnWriteFs.go,copyOnWriteFs}}.
 See the @@url{https://godoc.org/github.com/bep/overlayfs,@code{GoDoc}} for more
information.")
    (license license:expat)))

(define-public go-github-com-bep-simplecobra
  (package
    (name "go-github-com-bep-simplecobra")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/simplecobra")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03dc36bcslcf4ixhxm7x7klkf86x4ad6dja8clqk1d5yk9x7myc6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/simplecobra"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-frankban-quicktest))
    (home-page "https://github.com/bep/simplecobra")
    (synopsis "Differences to Cobra")
    (description
     "So, @@url{https://github.com/spf13/cobra,Cobra} is a Go CLI library with a
feature set that's hard to resist for bigger applications (autocompletion, docs
and man pages auto generation etc.).  But it's also complex to use beyond the
simplest of applications.  This package was built to help rewriting
@@url{https://github.com/gohugoio/hugo,Hugo's} commands package to something
that's easier to understand and maintain.")
    (license license:expat)))

(define-public go-github-com-bep-tmc
  (package
    (name "go-github-com-bep-tmc")
    (version "0.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bep/tmc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jn3j7mh77a5bbwh3hx3r0blzbdj2fvk5wvcfa8fr45qp2zlpbhx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bep/tmc"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-github-com-google-go-cmp
                             go-github-com-frankban-quicktest
                             go-github-com-bep-debounce))
    (home-page "https://github.com/bep/tmc")
    (synopsis "How to Use")
    (description
     "This package provides round-trip serialization of typed Go maps.")
    (license license:expat)))

(define-public go-github-com-bitly-go-simplejson
  (package
    (name "go-github-com-bitly-go-simplejson")
    (version "0.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bitly/go-simplejson")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1780cir8s32dyriijsp6bz1cmd31hq3r8msw4asmzhrh415pi5ya"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bitly/go-simplejson"))
    (home-page "https://github.com/bitly/go-simplejson")
    (synopsis "go-simplejson")
    (description "a Go package to interact with arbitrary JSON.")
    (license license:expat)))

(define-public go-github-com-bkaradzic-go-lz4
  (package
    (name "go-github-com-bkaradzic-go-lz4")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bkaradzic/go-lz4")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vdid8v0c2v2qhrg9rzn3l7ya1h34jirrxfnir7gv7w6s4ivdvc1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bkaradzic/go-lz4"))
    (home-page "https://github.com/bkaradzic/go-lz4")
    (synopsis "go-lz4")
    (description
     "go-lz4 is port of LZ4 lossless compression algorithm to Go.  The original C code
is located at:.")
    (license license:bsd-2)))

(define-public go-github-com-bkielbasa-cyclop
  (package
    (name "go-github-com-bkielbasa-cyclop")
    (version "1.2.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bkielbasa/cyclop")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "003zndl40qcl58lcjdippbvc3sx9v6dr3qzp9g1503zm4zqyhj12"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/bkielbasa/cyclop"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/bkielbasa/cyclop")
    (synopsis "cyclop")
    (description
     "Cyclop calculates cyclomatic complexities of functions in Go source code.
Simple usage:.")
    (license license:expat)))

(define-public go-github-com-blakesmith-ar
  (package
    (name "go-github-com-blakesmith-ar")
    (version "0.0.0-20190502131153-809d4375e1fb")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blakesmith/ar")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00fxkc04b9cb53xxzw5gdqqpwlqv9n5kk0yn2lb5w4rgj5gm8ph1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blakesmith/ar"))
    (home-page "https://github.com/blakesmith/ar")
    (synopsis "Golang ar (archive) file reader")
    (description "Copyright (c) 2013 Blake Smith <blakesmith0@@gmail.com>.")
    (license license:expat)))

(define-public go-github-com-blevesearch-bleve
  (package
    (name "go-github-com-blevesearch-bleve")
    (version "1.0.14")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/bleve")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hslc734gmdirydq4yfz3rrrna34iph62wsgzjvwn9a0z4si6wc9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/bleve"))
    (propagated-inputs (list go-golang-org-x-text
                             go-go-etcd-io-bbolt
                             go-github-com-willf-bitset
                             go-github-com-syndtr-goleveldb
                             go-github-com-steveyen-gtreap
                             go-github-com-spf13-cobra
                             go-github-com-rcrowley-go-metrics
                             go-github-com-kljensen-snowball
                             go-github-com-golang-protobuf
                             go-github-com-couchbase-vellum
                             go-github-com-couchbase-moss
                             go-github-com-blevesearch-zap-v15
                             go-github-com-blevesearch-zap-v14
                             go-github-com-blevesearch-zap-v13
                             go-github-com-blevesearch-zap-v12
                             go-github-com-blevesearch-zap-v11
                             go-github-com-blevesearch-snowballstem
                             go-github-com-blevesearch-segment
                             go-github-com-blevesearch-go-porterstemmer
                             go-github-com-blevesearch-blevex
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/bleve")
    (synopsis "bleve")
    (description "Package bleve is a library for indexing and searching text.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-bleve-v2
  (package
    (name "go-github-com-blevesearch-bleve-v2")
    (version "2.4.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/bleve")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05abr7z7isds7ys0c54qx9b1dmx7kg121c0cfpjanr4hqqbg1riw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/bleve/v2"
      #:unpack-path "github.com/blevesearch/bleve"))
    (propagated-inputs (list go-golang-org-x-text
                             go-go-etcd-io-bbolt
                             go-github-com-spf13-cobra
                             go-github-com-golang-protobuf
                             go-github-com-couchbase-moss
                             go-github-com-blevesearch-zapx-v16
                             go-github-com-blevesearch-zapx-v15
                             go-github-com-blevesearch-zapx-v14
                             go-github-com-blevesearch-zapx-v13
                             go-github-com-blevesearch-zapx-v12
                             go-github-com-blevesearch-zapx-v11
                             go-github-com-blevesearch-vellum
                             go-github-com-blevesearch-upsidedown-store-api
                             go-github-com-blevesearch-stempel
                             go-github-com-blevesearch-snowballstem
                             go-github-com-blevesearch-snowball
                             go-github-com-blevesearch-segment
                             go-github-com-blevesearch-scorch-segment-api-v2
                             go-github-com-blevesearch-gtreap
                             go-github-com-blevesearch-goleveldb
                             go-github-com-blevesearch-go-porterstemmer
                             go-github-com-blevesearch-go-metrics
                             go-github-com-blevesearch-go-faiss
                             go-github-com-blevesearch-geo
                             go-github-com-blevesearch-bleve-index-api
                             go-github-com-bits-and-blooms-bitset
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/bleve")
    (synopsis "bleve")
    (description "Package bleve is a library for indexing and searching text.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-bleve-index-api
  (package
    (name "go-github-com-blevesearch-bleve-index-api")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/bleve_index_api")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0apfxbckmb9skiw2iynmk4ldc337pr22w8lsmh2206i9xbs8ss56"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/bleve_index_api"))
    (home-page "https://github.com/blevesearch/bleve_index_api")
    (synopsis "Bleve Index API")
    (description "Bleve supports a pluggable Index interface.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-blevex
  (package
    (name "go-github-com-blevesearch-blevex")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/blevex")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mh9v3b1n2bhbmsgnsna33kr9k0wxd6mrmnb7cvg2frf2159fpgg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/blevex"))
    (propagated-inputs (list go-github-com-tecbot-gorocksdb
                             go-github-com-tebeka-snowball
                             go-github-com-jmhodges-levigo
                             go-github-com-ikawaha-kagome-ipadic
                             go-github-com-golang-protobuf
                             go-github-com-cznic-b
                             go-github-com-blevesearch-cld2
                             go-github-com-blevesearch-bleve))
    (home-page "https://github.com/blevesearch/blevex")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-blevesearch-cld2
  (package
    (name "go-github-com-blevesearch-cld2")
    (version "0.0.0-20200327141045-8b5f551d37f5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/cld2")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0n9jr6r1h7hbi7iwlk47miabv1jrjsi5x4qgb72x2d4q7ybgc6a9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/cld2"))
    (home-page "https://github.com/blevesearch/cld2")
    (synopsis "this fork")
    (description
     "Package cld2 implements language detection using the Compact Language Detector.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-geo
  (package
    (name "go-github-com-blevesearch-geo")
    (version "0.1.20")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/geo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ysrlpgbn9d9nr0w7l0dfklzh2h69r847qz170fyqv6x6f3giryh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/geo"))
    (propagated-inputs (list go-github-com-json-iterator-go
                             go-github-com-golang-geo
                             go-github-com-blevesearch-bleve-index-api))
    (home-page "https://github.com/blevesearch/geo")
    (synopsis "Overview")
    (description
     "This forked version of s2geometry implements a few essential functionalities
like region term indexer, polygon projections etc for enabling the use of s2geo
in the information retrieval systems that uses an inverted index for indexing
and querying the spatial tokens.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-go-faiss
  (package
    (name "go-github-com-blevesearch-go-faiss")
    (version "1.0.24")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/go-faiss")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05bz5g5dv0x6970kx8xisdmb9gm42z014prz6z7aswyyhyjhb0p2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/go-faiss"))
    (home-page "https://github.com/blevesearch/go-faiss")
    (synopsis "go-faiss")
    (description
     "Package faiss provides bindings to Faiss, a library for vector similarity
search.  More detailed documentation can be found at the Faiss wiki:
@@url{https://github.com/facebookresearch/faiss/wiki,https://github.com/facebookresearch/faiss/wiki}.")
    (license license:expat)))

(define-public go-github-com-blevesearch-go-metrics
  (package
    (name "go-github-com-blevesearch-go-metrics")
    (version "0.0.0-20201227073835-cf1acfcdf475")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/go-metrics")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0s7zab04slz07c7l4h2cqz62qnqah69r6p157vvbd7725a7wzkr0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/go-metrics"))
    (home-page "https://github.com/blevesearch/go-metrics")
    (synopsis "go-metrics")
    (description "Go port of Coda Hale's Metrics library.")
    (license license:expat))) ; check-license

(define-public go-github-com-blevesearch-go-porterstemmer
  (package
    (name "go-github-com-blevesearch-go-porterstemmer")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/go-porterstemmer")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nj448j7kj31vg76xa7nh2i6iz4b4fnvarh0dgsl11ay1pmfhj45"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/go-porterstemmer"))
    (home-page "https://github.com/blevesearch/go-porterstemmer")
    (synopsis "This fork...")
    (description
     "I'm maintaining this fork because the original author was not replying to issues
or pull requests.  For now I plan on maintaining this fork as necessary.")
    (license license:expat)))

(define-public go-github-com-blevesearch-goleveldb
  (package
    (name "go-github-com-blevesearch-goleveldb")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/goleveldb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0yx4vp60nyn7y5i9nfg0vkm3w62lgbgn16la44xh0yjvacqqbm01"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/goleveldb"))
    (propagated-inputs (list go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo
                             go-github-com-golang-snappy))
    (home-page "https://github.com/blevesearch/goleveldb")
    (synopsis "Installation")
    (description
     "This is an implementation of the
@@url{http:code.google.com/p/leveldb,@code{LevelDB} key/value database} in the
@@url{http:golang.org,Go programming language}.")
    (license license:bsd-2)))

(define-public go-github-com-blevesearch-gtreap
  (package
    (name "go-github-com-blevesearch-gtreap")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/gtreap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pkcwgn2nkgqg01w95ivwbggcxihrc04k8i3wgaif2f437jpz2h7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/gtreap"))
    (home-page "https://github.com/blevesearch/gtreap")
    (synopsis "gtreap")
    (description
     "gtreap is an immutable treap implementation in the Go Language.")
    (license license:expat)))

(define-public go-github-com-blevesearch-mmap-go
  (package
    (name "go-github-com-blevesearch-mmap-go")
    (version "1.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/mmap-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1y6qcx92zdcf2gg1ksrqydrgpcxm5x8i8zqlcaiq50ix04q2fbgk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/mmap-go"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/blevesearch/mmap-go")
    (synopsis "mmap-go")
    (description
     "Package mmap allows mapping files into memory.  It tries to provide a simple,
reasonably portable interface, but doesn't go out of its way to abstract away
every little platform detail.  This specifically means:.")
    (license license:bsd-3)))

(define-public go-github-com-blevesearch-scorch-segment-api-v2
  (package
    (name "go-github-com-blevesearch-scorch-segment-api-v2")
    (version "2.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/scorch_segment_api")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0m3bv2wbv4x9d8c38l402q809drnaidplff7i8p1p25in8lgci14"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/scorch_segment_api/v2"
      #:unpack-path "github.com/blevesearch/scorch_segment_api"))
    (propagated-inputs (list go-github-com-blevesearch-bleve-index-api
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/scorch_segment_api")
    (synopsis "Scorch Segment API")
    (description "Scorch supports a pluggable Segment interface.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-segment
  (package
    (name "go-github-com-blevesearch-segment")
    (version "0.9.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/segment")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0y761p1m98kii5ccgfsc96wmlccj41dmg16pa4m0dj03dry130c9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/segment"))
    (home-page "https://github.com/blevesearch/segment")
    (synopsis "segment")
    (description
     "Package segment is a library for performing Unicode Text Segmentation as
described in Unicode Standard Annex #29
@@url{http://www.unicode.org/reports/tr29/,http://www.unicode.org/reports/tr29/}.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-snowball
  (package
    (name "go-github-com-blevesearch-snowball")
    (version "0.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/snowball")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0infs0y0kps7hm255z8x8wq7cnns6c92iasb3k1z2vg80b9wgplf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/snowball"))
    (home-page "https://github.com/blevesearch/snowball")
    (synopsis "Snowball")
    (description
     "This package provides a @@url{http://golang.org,Go (golang)} implementation of
the @@url{http://snowball.tartarus.org/,Snowball stemmer} for natural language
processing.")
    (license license:expat)))

(define-public go-github-com-blevesearch-snowballstem
  (package
    (name "go-github-com-blevesearch-snowballstem")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/snowballstem")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yzglihjjn588xmmkaawqhc95pkk1cyc4bq7ipw7jqfw2np1f2rm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/snowballstem"))
    (home-page "https://github.com/blevesearch/snowballstem")
    (synopsis "snowballstem")
    (description
     "This repository contains the Go stemmers generated by the
@@url{https://github.com/snowballstem/snowball,Snowball} project.  They are
maintained outside of the core bleve package so that they may be more easily be
reused in other contexts.")
    (license license:bsd-3)))

(define-public go-github-com-blevesearch-stempel
  (package
    (name "go-github-com-blevesearch-stempel")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/stempel")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0myqkpsr031q1ipw25lbd1ni1ygvwd50zirjgs7pj47q30hy70xa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/stempel"))
    (propagated-inputs (list go-golang-org-x-text))
    (home-page "https://github.com/blevesearch/stempel")
    (synopsis "stempel")
    (description
     "This package provides a Go implementation of the
@@url{http://www.getopt.org/stempel/,Stempel} stemmer, an algorithmic stemmer
frequently used with (but not limited to) the Polish language.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-upsidedown-store-api
  (package
    (name "go-github-com-blevesearch-upsidedown-store-api")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/upsidedown_store_api")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sjs1ad4iprnmrac6g5acrb68g30q6zfihvnxx498iwq3sg4rbrz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/upsidedown_store_api"))
    (home-page "https://github.com/blevesearch/upsidedown_store_api")
    (synopsis "Upsidedown Store API")
    (description
     "Upsidedown supports a pluggable Key/Value storage interface.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-vellum
  (package
    (name "go-github-com-blevesearch-vellum")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/vellum")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s2rry2g51c3qjf467728nmcj579hi0rcs65lll9idy7fa9rn2ij"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/vellum"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-blevesearch-mmap-go
                             go-github-com-bits-and-blooms-bitset))
    (home-page "https://github.com/blevesearch/vellum")
    (synopsis "vellum")
    (description
     "Package vellum is a library for building, serializing and executing an FST
(finite state transducer).")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zap-v11
  (package
    (name "go-github-com-blevesearch-zap-v11")
    (version "11.0.14")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ilqyn58v9zvvr5xg2xr2hrim6bwdq12a62zcsfi6nna0czbm3qi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zap/v11"
      #:unpack-path "github.com/blevesearch/zap"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-couchbase-vellum
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zap")
    (synopsis "zap file format")
    (description
     "Advanced ZAP File Format Documentation is
@@url{https://github.com/blevesearch/zap/blob/v11.0.14/zap.md,here}.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zap-v12
  (package
    (name "go-github-com-blevesearch-zap-v12")
    (version "12.0.14")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "000b3jaw87i0wn9mxcv1f3ilfhzl7cxldxkwjyi1xfifv0n5dy81"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zap/v12"
      #:unpack-path "github.com/blevesearch/zap"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-couchbase-vellum
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zap")
    (synopsis "zap file format")
    (description
     "Advanced ZAP File Format Documentation is
@@url{https://github.com/blevesearch/zap/blob/v12.0.14/zap.md,here}.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zap-v13
  (package
    (name "go-github-com-blevesearch-zap-v13")
    (version "13.0.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ky0glsc9fybckn519ivzbrikigakxnx808gzqsf8bwqjwc1a5na"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zap/v13"
      #:unpack-path "github.com/blevesearch/zap"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-couchbase-vellum
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zap")
    (synopsis "zap file format")
    (description
     "Advanced ZAP File Format Documentation is
@@url{https://github.com/blevesearch/zap/blob/v13.0.6/zap.md,here}.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zap-v14
  (package
    (name "go-github-com-blevesearch-zap-v14")
    (version "14.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j0gn3b07yj0a466v1w7v0kcfh1b15ifk55dph13fvpl1h8ny45r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zap/v14"
      #:unpack-path "github.com/blevesearch/zap"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-couchbase-vellum
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zap")
    (synopsis "zap file format")
    (description
     "Advanced ZAP File Format Documentation is
@@url{https://github.com/blevesearch/zap/blob/v14.0.5/zap.md,here}.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zap-v15
  (package
    (name "go-github-com-blevesearch-zap-v15")
    (version "15.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0blpvkzkv3vh0kczk1k8gq8yirixnbyblnm05nyxy8x6hc71g4f6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zap/v15"
      #:unpack-path "github.com/blevesearch/zap"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-couchbase-vellum
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zap")
    (synopsis "zap file format")
    (description
     "Advanced ZAP File Format Documentation is
@@url{https://github.com/blevesearch/zap/blob/v15.0.3/zap.md,here}.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zapx-v11
  (package
    (name "go-github-com-blevesearch-zapx-v11")
    (version "11.3.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zapx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rz4c7wp1fkjqdnfy6mid9xjzvggsnbikj0l60pysnwr2gn1d2hr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zapx/v11"
      #:unpack-path "github.com/blevesearch/zapx"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-blevesearch-vellum
                             go-github-com-blevesearch-scorch-segment-api-v2
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve-index-api
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zapx")
    (synopsis "zapx file format")
    (description
     "The zapx module is fork of @@url{https://github.com/blevesearch/zap,zap} module
which maintains file format compatibility, but removes dependency on bleve, and
instead depends only on the indepenent interface modules:.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zapx-v12
  (package
    (name "go-github-com-blevesearch-zapx-v12")
    (version "12.3.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zapx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09mfsr0va9iykcx78ww4fkgi5i9v7ppk699n2v1dz29sih3xjlcz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zapx/v12"
      #:unpack-path "github.com/blevesearch/zapx"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-blevesearch-vellum
                             go-github-com-blevesearch-scorch-segment-api-v2
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve-index-api
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zapx")
    (synopsis "zapx file format")
    (description
     "The zapx module is fork of @@url{https://github.com/blevesearch/zap,zap} module
which maintains file format compatibility, but removes dependency on bleve, and
instead depends only on the indepenent interface modules:.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zapx-v13
  (package
    (name "go-github-com-blevesearch-zapx-v13")
    (version "13.3.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zapx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hyypx2xp9l33lidz3483im1vgr9cs832dwzzdfa3d3ip0jcqbsv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zapx/v13"
      #:unpack-path "github.com/blevesearch/zapx"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-blevesearch-vellum
                             go-github-com-blevesearch-scorch-segment-api-v2
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve-index-api
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zapx")
    (synopsis "zapx file format")
    (description
     "The zapx module is fork of @@url{https://github.com/blevesearch/zap,zap} module
which maintains file format compatibility, but removes dependency on bleve, and
instead depends only on the indepenent interface modules:.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zapx-v14
  (package
    (name "go-github-com-blevesearch-zapx-v14")
    (version "14.3.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zapx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yrlr11kdmcmx2b54rq56ippjk4w1igm93pcya12nvl3r5spk6d5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zapx/v14"
      #:unpack-path "github.com/blevesearch/zapx"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-blevesearch-vellum
                             go-github-com-blevesearch-scorch-segment-api-v2
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve-index-api
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zapx")
    (synopsis "zapx file format")
    (description
     "The zapx module is fork of @@url{https://github.com/blevesearch/zap,zap} module
which maintains file format compatibility, but removes dependency on bleve, and
instead depends only on the indepenent interface modules:.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zapx-v15
  (package
    (name "go-github-com-blevesearch-zapx-v15")
    (version "15.3.17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zapx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pfz0adg5zwnf0ahvayxbhjr2i54nz0jn1q2wnqdbid962wrk3s8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zapx/v15"
      #:unpack-path "github.com/blevesearch/zapx"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-blevesearch-vellum
                             go-github-com-blevesearch-scorch-segment-api-v2
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-bleve-index-api
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zapx")
    (synopsis "zapx file format")
    (description
     "The zapx module is fork of @@url{https://github.com/blevesearch/zap,zap} module
which maintains file format compatibility, but removes dependency on bleve, and
instead depends only on the indepenent interface modules:.")
    (license license:asl2.0)))

(define-public go-github-com-blevesearch-zapx-v16
  (package
    (name "go-github-com-blevesearch-zapx-v16")
    (version "16.1.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blevesearch/zapx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jap43gcayjclik23jwqfh6smwvqa8ydfr919ilj3a24mfw6b9gs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blevesearch/zapx/v16"
      #:unpack-path "github.com/blevesearch/zapx"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-golang-snappy
                             go-github-com-blevesearch-vellum
                             go-github-com-blevesearch-scorch-segment-api-v2
                             go-github-com-blevesearch-mmap-go
                             go-github-com-blevesearch-go-faiss
                             go-github-com-blevesearch-bleve-index-api
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/blevesearch/zapx")
    (synopsis "zapx file format")
    (description
     "The zapx module is fork of @@url{https://github.com/blevesearch/zap,zap} module
which maintains file format compatibility, but removes dependency on bleve, and
instead depends only on the indepenent interface modules:.")
    (license license:asl2.0)))

(define-public go-github-com-blizzy78-varnamelen
  (package
    (name "go-github-com-blizzy78-varnamelen")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/blizzy78/varnamelen")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06nbhc7dywax5fgky3jbb3yn51vifpinz9prl15h88nkny7w1q6k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/blizzy78/varnamelen"))
    (propagated-inputs (list go-golang-org-x-tools go-github-com-matryer-is))
    (home-page "https://github.com/blizzy78/varnamelen")
    (synopsis "varnamelen")
    (description
     "Package varnamelen implements an analyzer checking that the length of a
variable's name matches its usage scope.")
    (license license:expat)))

(define-public go-github-com-bmkessler-fastdiv
  (package
    (name "go-github-com-bmkessler-fastdiv")
    (version "0.0.0-20190227075523-41d5178f2044")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bmkessler/fastdiv")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12zd3gl2lrx5nd9g41sbw88g0560xc77qxazcfiyg6ak7sasqcs7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bmkessler/fastdiv"))
    (home-page "https://github.com/bmkessler/fastdiv")
    (synopsis "fastdiv")
    (description
     "Package fastdiv implements fast division, modulus and divisibility checks for
divisors known only at runtime via the method of:.")
    (license license:expat)))

(define-public go-github-com-bobg-gcsobj
  (package
    (name "go-github-com-bobg-gcsobj")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bobg/gcsobj")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sgm9ps5kszf8jibz42z9v97pf5bb5raizvbjyc9z11qcij88rif"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bobg/gcsobj"))
    (propagated-inputs (list go-cloud-google-com-go-storage))
    (home-page "https://github.com/bobg/gcsobj")
    (synopsis "Gcsobj - Seekable readers for Google Cloud Storage objects")
    (description
     "Package gcsobj supplies a seekable Reader type for Google Cloud Storage objects.")
    (license license:expat)))

(define-public go-github-com-bobuhiro11-gokvm
  (package
    (name "go-github-com-bobuhiro11-gokvm")
    (version "0.0.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bobuhiro11/gokvm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rg8zvi68lvyp3p943lzqjr9zqrwqbp2wjszwvc93gimhsky8x38"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bobuhiro11/gokvm"))
    (home-page "https://github.com/bobuhiro11/gokvm")
    (synopsis "gokvm")
    (description
     "gokvm is a hypervisor that uses KVM as an acceleration.  It is implemented
completely in the Go language and has no dependencies other than the standard
library.  With @@strong{only 1.5k lines of code}, it can @@strong{boot Linux
5.10}, the latest version at the time, without any modifications (see
@@url{https://github.com/bobuhiro11/gokvm/releases/tag/v0.0.1,v0.0.1}).  It
includes naive and simple device emulation for serial console, virtio-net, and
virtio-blk.  The execution environment is limited to the x86-64 Linux
environment.  This should be useful for those who are interested in how to use
KVM from userland.  The latest version supports the following features:.")
    (license license:expat)))

(define-public go-github-com-bobusumisu-aho-corasick
  (package
    (name "go-github-com-bobusumisu-aho-corasick")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/BobuSumisu/aho-corasick")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qzjzk6f04snhjw0150y0dvqp3hr21c7wijdff02yymyadkb6iw4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/BobuSumisu/aho-corasick"))
    (home-page "https://github.com/BobuSumisu/aho-corasick")
    (synopsis "Aho-Corasick")
    (description
     "Implementation of the Aho-Corasick string-search algorithm in Go.")
    (license license:expat)))

(define-public go-github-com-bodgit-ntlmssp
  (package
    (name "go-github-com-bodgit-ntlmssp")
    (version "0.0.0-20240506230425-31973bb52d9b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bodgit/ntlmssp")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nrqw6havs1dkblj9c6yz1ysnv6axc7nanvhxji5n0804blfq050"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bodgit/ntlmssp"))
    (propagated-inputs (list go-golang-org-x-text
                             go-golang-org-x-crypto
                             go-github-com-tidwall-transform
                             go-github-com-stretchr-testify
                             go-github-com-hashicorp-go-cleanhttp
                             go-github-com-go-logr-logr
                             go-github-com-bodgit-windows))
    (home-page "https://github.com/bodgit/ntlmssp")
    (synopsis "ntlmssp")
    (description "Feature comparison:.")
    (license license:bsd-3)))

(define-public go-github-com-bodgit-windows
  (package
    (name "go-github-com-bodgit-windows")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bodgit/windows")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1iklb2w7yj1icwfwyrimkbkj2dk43lqs9k00ww09x2r5p8cl0ahr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bodgit/windows"))
    (home-page "https://github.com/bodgit/windows")
    (synopsis "windows")
    (description
     "Package windows is a collection of types native to Windows platforms but are
useful on non-Windows platforms.")
    (license license:bsd-3)))

(define-public go-github-com-bombsimon-wsl-v4
  (package
    (name "go-github-com-bombsimon-wsl-v4")
    (version "4.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bombsimon/wsl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mcdc8ppyphgrfsdyxqxamzvnj9nnmq0fhj537llg41yhiyw6953"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/bombsimon/wsl/v4"
      #:unpack-path "github.com/bombsimon/wsl"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/bombsimon/wsl")
    (synopsis "wsl - Whitespace Linter")
    (description
     "@@code{wsl} is a linter that enforces a very @@strong{non scientific} vision of
how to make code more readable by enforcing empty lines at the right places.")
    (license license:expat)))

(define-public go-github-com-bradenaw-juniper
  (package
    (name "go-github-com-bradenaw-juniper")
    (version "0.15.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bradenaw/juniper")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dykj5fdxsml61hdibbsk7wnp9ckvrcdyzbmcq0z1di4lw8b8kzl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bradenaw/juniper"))
    (propagated-inputs (list go-golang-org-x-sync go-golang-org-x-exp))
    (home-page "https://github.com/bradenaw/juniper")
    (synopsis "Juniper")
    (description
     "Juniper is a library of extensions to the Go standard library using generics,
including containers, iterators, and streams.")
    (license license:expat)))

(define-public go-github-com-bradenhilton-cityhash
  (package
    (name "go-github-com-bradenhilton-cityhash")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bradenhilton/cityhash")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rfmbis47m42w05inqmph7jk6kza79miq9ifqlsdiax38b684yky"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bradenhilton/cityhash"))
    (home-page "https://github.com/bradenhilton/cityhash")
    (synopsis "CityHash")
    (description
     "This is essentially a fork of
@@url{https://github.com/zentures/cityhash,https://github.com/zentures/cityhash}
(previously
@@url{https://github.com/zhenjl/cityhash,https://github.com/zhenjl/cityhash}),
with changes to match the behaviour of version 1 of @code{CityHash}.")
    (license license:expat)))

(define-public go-github-com-bradenhilton-mozillainstallhash
  (package
    (name "go-github-com-bradenhilton-mozillainstallhash")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bradenhilton/mozillainstallhash")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j54ssnvk2vy77g23zrhi9acwblnamj63i7wmmdnb89fjg0xc9km"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bradenhilton/mozillainstallhash"))
    (propagated-inputs (list go-golang-org-x-text
                             go-github-com-bradenhilton-cityhash))
    (home-page "https://github.com/bradenhilton/mozillainstallhash")
    (synopsis "mozillainstallhash")
    (description
     "Gets the hash used to differentiate between installs of Mozilla software in
@@code{installs.ini} and @@code{profiles.ini}.")
    (license license:expat)))

(define-public go-github-com-bradfitz-iter
  (package
    (name "go-github-com-bradfitz-iter")
    (version "0.0.0-20191230175014-e8f45d346db8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bradfitz/iter")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qqy1fhmlrsfz6l1arsxmkpfj30s090j1a3ij0lap6h45pc1z509"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bradfitz/iter"))
    (home-page "https://github.com/bradfitz/iter")
    (synopsis #f)
    (description
     "Package iter provides a syntactically different way to iterate over integers.
That's it.")
    (license license:bsd-3)))

(define-public go-github-com-bradfitz-latlong
  (package
    (name "go-github-com-bradfitz-latlong")
    (version "0.0.0-20170410180902-f3db6d0dff40")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bradfitz/latlong")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z4bgh01aixay2q6pskpzylnbslg2flzjydhma40f1axbz7z5503"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bradfitz/latlong"))
    (home-page "https://github.com/bradfitz/latlong")
    (synopsis #f)
    (description
     "Package latlong maps from a latitude and longitude to a timezone.")
    (license license:asl2.0)))

(define-public go-github-com-bradleyjkemp-cupaloy-v2
  (package
    (name "go-github-com-bradleyjkemp-cupaloy-v2")
    (version "2.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bradleyjkemp/cupaloy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "078v23pc7gnfzdgmfh599gzc7qqk9fn6121kc9gmi4bgmqiy4yp9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bradleyjkemp/cupaloy/v2"
      #:unpack-path "github.com/bradleyjkemp/cupaloy"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-pmezard-go-difflib
                             go-github-com-davecgh-go-spew))
    (home-page "https://github.com/bradleyjkemp/cupaloy")
    (synopsis "Usage")
    (description
     "Package cupaloy provides a simple api for snapshot testing in golang: test that
your changes don't unexpectedly alter the results of your code.")
    (license license:expat)))

(define-public go-github-com-bramvdbogaerde-go-scp
  (package
    (name "go-github-com-bramvdbogaerde-go-scp")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bramvdbogaerde/go-scp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0s2kh29r52m4z05bq8xysk5kgf63mphjbq3fpnd2f387f4c1ba1j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bramvdbogaerde/go-scp"))
    (propagated-inputs (list go-golang-org-x-crypto))
    (home-page "https://github.com/bramvdbogaerde/go-scp")
    (synopsis "Copy files over SCP with Go")
    (description "Package scp.  Simple scp package to copy files over SSH.")
    (license license:mpl2.0)))

(define-public go-github-com-breml-bidichk
  (package
    (name "go-github-com-breml-bidichk")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/breml/bidichk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "183lwn62fckiwmv91f7bg2ppqsybcm66l84kyz08xg9p362mgj65"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/breml/bidichk"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/breml/bidichk")
    (synopsis "bidichk - checks for dangerous unicode character sequences")
    (description
     "bidichk finds dangerous unicode character sequences in Go source files.")
    (license license:expat)))

(define-public go-github-com-breml-errchkjson
  (package
    (name "go-github-com-breml-errchkjson")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/breml/errchkjson")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wa8j00xpmd7k40gzdw4sdmia55c2qcvmhcn7cxq81rgiyqbsmin"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/breml/errchkjson"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/breml/errchkjson")
    (synopsis "errchkjson")
    (description
     "Package errchkjson defines an Analyzer that finds places, where it is safe to
omit checking the error returned from json.Marshal.")
    (license license:expat)))

(define-public go-github-com-brunoscheufler-aws-ecs-metadata-go
  (package
    (name "go-github-com-brunoscheufler-aws-ecs-metadata-go")
    (version "0.0.0-20221221133751-67e37ae746cd")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/BrunoScheufler/aws-ecs-metadata-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x9kn49sl6793zqq4nrbsyfhqh7i3xr25syck2ybpcqkd3mmb8k6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/brunoscheufler/aws-ecs-metadata-go"))
    (home-page "https://github.com/brunoscheufler/aws-ecs-metadata-go")
    (synopsis "AWS ECS Metadata Go")
    (description
     "This package provides a minimal wrapper library to fetch Elastic Container
Service (ECS) Task metadata from any Go service running in container provisioned
by AWS Fargate.")
    (license license:expat)))

(define-public go-github-com-bshuster-repo-logrus-logstash-hook
  (package
    (name "go-github-com-bshuster-repo-logrus-logstash-hook")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bshuster-repo/logrus-logstash-hook")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18m1h29gq0bx1mygsl8pszpyqx9cn6lagr2q448k4giixahhlqs9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bshuster-repo/logrus-logstash-hook"))
    (propagated-inputs (list go-github-com-sirupsen-logrus

                             ))
    (home-page "https://github.com/bshuster-repo/logrus-logstash-hook")
    (synopsis "Logstash hook for logrus")
    (description "Use this hook to send the logs to
@@url{https://www.elastic.co/products/logstash,Logstash}.")
    (license license:expat)))

(define-public go-github-com-buengese-sgzip
  (package
    (name "go-github-com-buengese-sgzip")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buengese/sgzip")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01gh3d9nnb5aljjyk3svhdbihhz9x448qh6xkl2fps8w1h2knw58"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/buengese/sgzip"))
    (home-page "https://github.com/buengese/sgzip")
    (synopsis #f)
    (description
     "Package sgzip implements a seekable version of gzip format compressed files,
compliant with @@url{https://rfc-editor.org/rfc/rfc1952.html,RFC 1952}.")
    (license license:expat)))

(define-public go-github-com-bufbuild-buf
  (package
    (name "go-github-com-bufbuild-buf")
    (version "1.48.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/buf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gp8d4m43w1caaq3016pz177by6alzijvmz32naw56r3a22ncmhp"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/bufbuild/buf"))
    (propagated-inputs (list
                        go-buf-build-gen-go-bufbuild-bufplugin-protocolbuffers-go
                        go-buf-build-gen-go-bufbuild-protovalidate-protocolbuffers-go ; packaged

                        go-buf-build-gen-go-bufbuild-registry-connectrpc-go
                        go-buf-build-gen-go-bufbuild-registry-protocolbuffers-go
                        go-buf-build-go-bufplugin
                        go-buf-build-go-protoyaml
                        go-buf-build-go-spdx
                        go-connectrpc-com-connect
                        go-connectrpc-com-otelconnect
                        go-github-com-bufbuild-protocompile
                        go-github-com-bufbuild-protoplugin
                        go-github-com-bufbuild-protovalidate-go
                        go-github-com-docker-docker
                        go-github-com-go-chi-chi-v5 ; packaged
                        go-github-com-gofrs-flock
                        go-github-com-google-cel-go ; packaged
                        go-github-com-google-go-cmp ; packaged
                        go-github-com-google-go-containerregistry
                        go-github-com-google-uuid ; packaged
                        go-github-com-jdx-go-netrc
                        go-github-com-jhump-protoreflect-v2
                        go-github-com-klauspost-compress ; packaged
                        go-github-com-klauspost-pgzip
                        go-github-com-pkg-browser
                        go-github-com-pkg-profile ; packaged
                        go-github-com-quic-go-quic-go ; packaged
                        go-github-com-rs-cors
                        go-github-com-spf13-cobra
                        go-github-com-spf13-pflag
                        go-github-com-stretchr-testify
                        go-github-com-tetratelabs-wazero
                        go-go-lsp-dev-jsonrpc2
                        go-go-lsp-dev-protocol
                        go-go-uber-org-zap ; packaged
                        go-go-uber-org-zap-exp ; packaged
                        go-golang-org-x-crypto ; packaged
                        go-golang-org-x-exp ; packaged
                        go-golang-org-x-mod ; packaged
                        go-golang-org-x-net ; packaged
                        go-golang-org-x-sync ; packaged
                        go-golang-org-x-term ; packaged
                        go-golang-org-x-tools
                        go-google-golang-org-protobuf
                        go-gopkg-in-yaml-v3
                        go-pluginrpc-com-pluginrpc
                        ))
    (home-page "https://github.com/bufbuild/buf")
    (synopsis "Buf")
    (description
     "The @@url{https://buf.build,(code buf)} CLI is the best tool for working with
@@url{https://protobuf.dev,Protocol Buffers}.  It provides:.")
    (license license:asl2.0)))

(define-public go-github-com-bufbuild-protocompile
  (package
    (name "go-github-com-bufbuild-protocompile")
    (version "0.14.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/protocompile")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bcyfkixa7lsgw3nr5kp2lycq2apw7a4jdjmj2fjwrrslm4i9ivw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bufbuild/protocompile"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-golang-org-x-sync
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/bufbuild/protocompile")
    (synopsis "Protocompile")
    (description
     "Package protocompile provides the entry point for a high performance native Go
protobuf compiler. \"Compile\" in this case just means parsing and validating
source and generating fully-linked descriptors in the end.  Unlike the protoc
command-line tool, this package does not try to use the descriptors to perform
code generation.")
    (license license:asl2.0)))

(define-public go-github-com-bufbuild-protoplugin
  (package
    (name "go-github-com-bufbuild-protoplugin")
    (version "0.0.0-20240911180120-7bb73e41a54a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/protoplugin")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lfn9m2lmcz01ah1z0wdja5991rq95v4gln40hpjdmb3bnfp2igh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bufbuild/protoplugin"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-github-com-bufbuild-protocompile))
    (home-page "https://github.com/bufbuild/protoplugin")
    (synopsis "protoplugin")
    (description
     "Package protoplugin is a simple library to assist in writing protoc plugins.")
    (license license:asl2.0)))

(define-public go-github-com-bufbuild-protovalidate-go
  (package
    (name "go-github-com-bufbuild-protovalidate-go")
    (version "0.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bufbuild/protovalidate-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0d482xsf2jj5z2dfr2rr5ap7jmc8nb7a53719ayw3pbci7jpf0ka"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bufbuild/protovalidate-go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-github-com-stretchr-testify
                        go-github-com-google-cel-go ; packaged
                        go-github-com-envoyproxy-protoc-gen-validate
                        ;go-buf-build-gen-go-bufbuild-protovalidate-protocolbuffers-go ; packaged

                        ))
    (home-page "https://github.com/bufbuild/protovalidate-go")
    (synopsis "protovalidate-go")
    (description
     "@@code{protovalidate-go} is the Go language implementation of
@@url{https://github.com/bufbuild/protovalidate,(code protovalidate)} designed
to validate Protobuf messages at runtime based on user-defined validation
constraints.  Powered by Google's Common Expression Language
(@@url{https://github.com/google/cel-spec,CEL}), it provides a flexible and
efficient foundation for defining and evaluating custom validation rules.  The
primary goal of @@code{protovalidate} is to help developers ensure data
consistency and integrity across the network without requiring generated code.")
    (license license:asl2.0)))

(define-public go-github-com-buger-goterm
  (package
    (name "go-github-com-buger-goterm")
    (version "1.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buger/goterm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ahiv92cia8f3p3y7yindj2fsdfidr4xiyrmriywv5hssbq65a1l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/buger/goterm"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/buger/goterm")
    (synopsis "Description")
    (description
     "This package provides basic bulding blocks for advanced console UI.")
    (license license:expat)))

(define-public go-github-com-buger-jsonparser
  (package
    (name "go-github-com-buger-jsonparser")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buger/jsonparser")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qv2lsh2biwxn927941gqiv5pqg7n4v58j0i536pjp7pr17pq7dp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/buger/jsonparser"))
    (home-page "https://github.com/buger/jsonparser")
    (synopsis
     "Alternative JSON parser for Go (10x times faster standard library)")
    (description
     "It does not require you to know the structure of the payload (eg.  create
structs), and allows accessing fields by providing the path to them.  It is up
to @@strong{10 times faster} than standard @@code{encoding/json} package
(depending on payload size and usage), @@strong{allocates no memory}.  See
benchmarks below.")
    (license license:expat)))

(define-public go-github-com-bugsnag-bugsnag-go-v2
  (package
    (name "go-github-com-bugsnag-bugsnag-go-v2")
    (version "2.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bugsnag/bugsnag-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0h4cv7zw34kr5vd21nk28d6vcgmw2i3lvggbkyrsy017bfkn5n1m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bugsnag/bugsnag-go/v2"
      #:unpack-path "github.com/bugsnag/bugsnag-go"))
    (propagated-inputs (list go-github-com-pkg-errors
                             go-github-com-google-uuid
                             go-github-com-bugsnag-panicwrap
                             go-github-com-bitly-go-simplejson))
    (home-page "https://github.com/bugsnag/bugsnag-go")
    (synopsis #f)
    (description
     "Package bugsnag captures errors in real-time and reports them to @code{BugSnag}
(@@url{http://bugsnag.com,http://bugsnag.com}).")
    (license license:expat)))

(define-public go-github-com-bugsnag-bugsnag-go
  (package
    (name "go-github-com-bugsnag-bugsnag-go")
    (version "2.5.1+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bugsnag/bugsnag-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0h4cv7zw34kr5vd21nk28d6vcgmw2i3lvggbkyrsy017bfkn5n1m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bugsnag/bugsnag-go"))
    (home-page "https://github.com/bugsnag/bugsnag-go")
    (synopsis "Features")
    (description
     "Package bugsnag captures errors in real-time and reports them to @code{BugSnag}
(@@url{http://bugsnag.com,http://bugsnag.com}).")
    (license license:expat)))

(define-public go-github-com-bugsnag-panicwrap
  (package
    (name "go-github-com-bugsnag-panicwrap")
    (version "1.3.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bugsnag/panicwrap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1h0l1bk8znjm74cxsxxdija08b15ivd3p91d6zzp5gjw8b1jbksf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bugsnag/panicwrap"))
    (home-page "https://github.com/bugsnag/panicwrap")
    (synopsis "panicwrap")
    (description
     "The panicwrap package provides functions for capturing and handling panics in
your application.  It does this by re-executing the running application and
monitoring stderr for any panics.  At the same time, stdout/stderr/etc.  are set
to the same values so that data is shuttled through properly, making the
existence of panicwrap mostly transparent.")
    (license license:expat)))

(define-public go-github-com-buildkite-agent-v3
  (package
    (name "go-github-com-buildkite-agent-v3")
    (version "3.98.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buildkite/agent")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rjy6k85l0s6pwkw76lvghq85inh12z61lad8zg122n1xd8nzi8q"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/buildkite/agent/v3"
      #:unpack-path "github.com/buildkite/agent"))
    (propagated-inputs (list go-gotest-tools-v3
                        go-gopkg-in-yaml-v3
                        go-gopkg-in-datadog-dd-trace-go-v1
                        go-google-golang-org-api
                        go-golang-org-x-term
                        go-golang-org-x-sys
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-go-opentelemetry-io-otel-trace
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-propagators-ot ; packaged
                        go-go-opentelemetry-io-contrib-propagators-jaeger ; packaged
                        go-go-opentelemetry-io-contrib-propagators-b3 ; packaged
                        go-go-opentelemetry-io-contrib-propagators-aws ; packaged
                        go-github-com-urfave-cli
                        go-github-com-stretchr-testify
                        go-github-com-qri-io-jsonschema
                        go-github-com-puzpuzpuz-xsync-v2
                        go-github-com-pborman-uuid
                        go-github-com-opentracing-opentracing-go
                        go-github-com-oleiade-reflections
                        go-github-com-mattn-go-zglob
                        go-github-com-lestrrat-go-jwx-v2 ; packaged
                        go-github-com-gowebpki-jcs ; packaged
                        go-github-com-google-uuid
                        go-github-com-google-go-querystring
                        go-github-com-google-go-cmp
                        go-github-com-gofrs-flock
                        go-github-com-go-chi-chi-v5 ; packaged
                        go-github-com-gliderlabs-ssh
                        go-github-com-dustinkirkland-golang-petname ; packaged
                        go-github-com-dustin-go-humanize
                        go-github-com-denisbrodbeck-machineid
                        go-github-com-creack-pty
                        go-github-com-buildkite-shellwords
                        go-github-com-buildkite-roko
                        go-github-com-buildkite-interpolate
                        go-github-com-buildkite-go-pipeline
                        go-github-com-buildkite-bintest-v3
                        go-github-com-brunoscheufler-aws-ecs-metadata-go
                        go-github-com-aws-aws-sdk-go-v2-service-kms
                        go-github-com-aws-aws-sdk-go-v2-feature-ec2-imds
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-aws-aws-sdk-go
                        go-github-com-khan-genqlient
                        go-github-com-datadog-datadog-go-v5
                        go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-drjosh-dev-zzglob
                        go-cloud-google-com-go-compute-metadata))
    (home-page "https://github.com/buildkite/agent")
    (synopsis "Buildkite Agent")
    (description
     "Buildkite-agent is a small, reliable, cross-platform build runner that makes it
easy to run automated builds on your own infrastructure.")
    (license license:expat)))

(define-public go-github-com-buildkite-bintest-v3
  (package
    (name "go-github-com-buildkite-bintest-v3")
    (version "3.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buildkite/bintest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16inj41anxbk6nh48c93bf2c33ssb7v17ymhxxh8f1rlvbrcpan1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/buildkite/bintest/v3"
      #:unpack-path "github.com/buildkite/bintest"))
    (propagated-inputs (list go-github-com-fortytw2-leaktest))
    (home-page "https://github.com/buildkite/bintest")
    (synopsis "Bintest")
    (description
     "This package provides a set of tools for generating fake binaries that can be
used for testing.  A binary is compiled and then can be orchestrated from your
test suite and later checked for assertions.")
    (license license:expat)))

(define-public go-github-com-buildkite-go-pipeline
  (package
    (name "go-github-com-buildkite-go-pipeline")
    (version "0.13.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buildkite/go-pipeline")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bzzj2ypzwwwwaj08m70mspfc25q0r5kic4hxdbn0mili9g5rsx5"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/buildkite/go-pipeline"))
    (propagated-inputs (list go-gotest-tools-v3 ; packaged
                             go-gopkg-in-yaml-v3 ; packaged
                             go-github-com-oleiade-reflections
                             go-github-com-lestrrat-go-jwx-v2 ; packaged
                             go-github-com-gowebpki-jcs ; packaged
                             go-github-com-google-go-cmp ; packaged
                             go-github-com-buildkite-interpolate))
    (home-page "https://github.com/buildkite/go-pipeline")
    (synopsis "go-pipeline")
    (description
     "Package pipeline implements the pieces necessary for the agent to work with
pipelines (typically in YAML or JSON form).")
    (license license:expat)))

(define-public go-github-com-buildkite-interpolate
  (package
    (name "go-github-com-buildkite-interpolate")
    (version "0.1.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buildkite/interpolate")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z2bqa4d0h3xcrx7fx0vi6rkcy5s558ixwsnzlmf709x2sms4f0l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/buildkite/interpolate"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://github.com/buildkite/interpolate")
    (synopsis "Interpolate")
    (description
     "This package provides a golang library for parameter expansion (like
@@code{${BLAH}} or @@code{$BLAH}) in strings from environment variables.  An
implementation of
@@url{http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02,POSIX
Parameter Expansion}, plus some other basic operations that you'd expect in a
shell scripting environment
@@url{https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html,like
bash}.")
    (license license:expat)))

(define-public go-github-com-buildkite-roko
  (package
    (name "go-github-com-buildkite-roko")
    (version "1.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buildkite/roko")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1b1xwafczk2wv6lyb1clmkfxarcc49cs8j9lqprm54xpd8cbbgnk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/buildkite/roko"))
    (propagated-inputs (list go-gotest-tools-v3 go-github-com-google-go-cmp))
    (home-page "https://github.com/buildkite/roko")
    (synopsis "Roko")
    (description
     "This package provides a Lightweight, Configurable, Easy-to-use Retry Library for
Go.")
    (license license:expat)))

(define-public go-github-com-buildkite-terminal-to-html-v3
  (package
    (name "go-github-com-buildkite-terminal-to-html-v3")
    (version "3.16.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/buildkite/terminal-to-html")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yva2aflccxhq2184wy8jw9h0az3fmjfmfyfwiq1w9554gsdxh6d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/buildkite/terminal-to-html/v3"
      #:unpack-path "github.com/buildkite/terminal-to-html"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-urfave-cli-v2
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/buildkite/terminal-to-html")
    (synopsis "Usage")
    (description "Package terminal converts ANSI input to HTML output.")
    (license license:expat)))

(define-public go-github-com-burntsushi-locker
  (package
    (name "go-github-com-burntsushi-locker")
    (version "0.0.0-20171006230638-a6e239ea1c69")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/BurntSushi/locker")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xak4aync4klswq5217qvw191asgla51jr42y94vp109lirm5dzg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/BurntSushi/locker"))
    (home-page "https://github.com/BurntSushi/locker")
    (synopsis "Installation")
    (description
     "Package locker is a simple package to manage named @code{ReadWrite} mutexes.
These appear to be especially useful for synchronizing access to session based
information in web applications.")
    (license license:unlicense)))

(define-public go-github-com-butuzov-ireturn
  (package
    (name "go-github-com-butuzov-ireturn")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/butuzov/ireturn")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lnw0v4gvpmpkmvqdmx35dfdl3amf69mc9sn3clg8yr52cg4z6zd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/butuzov/ireturn"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/butuzov/ireturn")
    (synopsis "")
    (description "Accept Interfaces, Return Concrete Types.")
    (license license:expat)))

(define-public go-github-com-butuzov-mirror
  (package
    (name "go-github-com-butuzov-mirror")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/butuzov/mirror")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16dkw4s98vr1zg9l8alzfyvmpbfw995qrwmrpkx6vxykv673bngx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/butuzov/mirror"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/butuzov/mirror")
    (synopsis "")
    (description
     "@@code{mirror} suggests use of alternative functions/methods in order to gain
performance boosts by avoiding unnecessary @@code{[]byte/string} conversion
calls.  See
@@url{https://github.com/butuzov/mirror/blob/v1.3.0/MIRROR_FUNCS.md,MIRROR_FUNCS.md}
list of mirror functions you can use in go's stdlib.")
    (license license:expat)))

(define-public go-github-com-bwmarrin-discordgo
  (package
    (name "go-github-com-bwmarrin-discordgo")
    (version "0.28.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bwmarrin/discordgo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f3j31cbh1p916gbmygvjcql6d8pgldkkpc6n2nrnakp9wqhi11k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bwmarrin/discordgo"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-gorilla-websocket))
    (home-page "https://github.com/bwmarrin/discordgo")
    (synopsis "DiscordGo")
    (description "Package discordgo provides Discord binding for Go.")
    (license license:bsd-3)))

(define-public go-github-com-bytecodealliance-wasmtime-go-v3
  (package
    (name "go-github-com-bytecodealliance-wasmtime-go-v3")
    (version "3.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bytecodealliance/wasmtime-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rqgf8y8zbsfrh8rrrb60n6yrjrf3pqpfady9iam5mq8x9zy978r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/bytecodealliance/wasmtime-go/v3"
      #:unpack-path "github.com/bytecodealliance/wasmtime-go"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/bytecodealliance/wasmtime-go")
    (synopsis "Installation")
    (description
     "Package wasmtime is a @code{WebAssembly} runtime for Go powered by Wasmtime.")
    (license license:asl2.0)))

(define-public go-github-com-c2h5oh-datasize
  (package
    (name "go-github-com-c2h5oh-datasize")
    (version "0.0.0-20231215233829-aa82cc1e6500")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/c2h5oh/datasize")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0x0cfs7cf4779jvfwbk49qwgbcv84hydmwx9ip4af4xg23pqpjph"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/c2h5oh/datasize"))
    (home-page "https://github.com/c2h5oh/datasize")
    (synopsis "datasize")
    (description "Golang helpers for data sizes.")
    (license license:expat)))

(define-public go-github-com-caarlos0-go-version
  (package
    (name "go-github-com-caarlos0-go-version")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/caarlos0/go-version")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d9k876ab6ifmwyi2v2cvc2l72pp1cc2cvk1sdkpmfhvd8zs4663"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/caarlos0/go-version"))
    (home-page "https://github.com/caarlos0/go-version")
    (synopsis "go-version")
    (description "This package is extracted from
@@url{https://github.com/kubernetes-sigs/release-utils,(code
sigs.k8s.io/release-utils)}.")
    (license license:asl2.0)))

(define-public go-github-com-calebcase-tmpfile
  (package
    (name "go-github-com-calebcase-tmpfile")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/calebcase/tmpfile")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0q1bvxyrzlzlaz7rvba1h2pdkv1c9nb18zhns06sz73k2z6h53y8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/calebcase/tmpfile"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/calebcase/tmpfile")
    (synopsis "Cross Platform Temporary Files")
    (description
     "Package tmpfile provides a cross platform facility for creating temporary files
that are automatically cleaned up (even in the event of an unexpected process
exit).")
    (license license:expat)))

(define-public go-github-com-calmh-glob
  (package
    (name "go-github-com-calmh-glob")
    (version "0.0.0-20181002190808-e7a84e9525fe")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/calmh/glob")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1v6vjklq06wqddv46ihajahaj1slv0imgaivlxr8bsx59i90js5q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/calmh/glob"))
    (home-page "https://github.com/calmh/glob")
    (synopsis "glob.")
    (description
     "This library is created for compile-once patterns.  This means, that compilation
could take time, but strings matching is done faster, than in case when always
parsing template.")
    (license license:expat)))

(define-public go-github-com-calmh-incontainer
  (package
    (name "go-github-com-calmh-incontainer")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/calmh/incontainer")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0d5c2jh54lqgv9gbgd9n307kswx7m8sh26ni7qcvby1h3ajxbnac"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/calmh/incontainer"))
    (home-page "https://github.com/calmh/incontainer")
    (synopsis "incontainer")
    (description
     "Small package to try to determine if we're running inside a container or not.")
    (license license:expat)))

(define-public go-github-com-calmh-xdr
  (package
    (name "go-github-com-calmh-xdr")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/calmh/xdr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0l9byby8gwva4zm2drpm6g6kfsgvj0ra9z8rw3ly1xzb2yyyqvqj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/calmh/xdr"))
    (home-page "https://github.com/calmh/xdr")
    (synopsis "This project is not actively maintained")
    (description
     "Package xdr implements an XDR (@@url{https://rfc-editor.org/rfc/rfc4506.html,RFC
4506}) marshaller/unmarshaller.")
    (license license:expat)))

(define-public go-github-com-campoy-embedmd
  (package
    (name "go-github-com-campoy-embedmd")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/campoy/embedmd")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1a2z0jdyszxx4kj6a5ab9yv55j2j2zccjga4kpwfwig2vpchiww5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/campoy/embedmd"))
    (propagated-inputs (list go-github-com-pmezard-go-difflib))
    (home-page "https://github.com/campoy/embedmd")
    (synopsis "embedmd")
    (description "embedmd.")
    (license license:asl2.0)))

(define-public go-github-com-casbin-casbin-v2
  (package
    (name "go-github-com-casbin-casbin-v2")
    (version "2.103.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/casbin/casbin")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "015w8fxpgywvg9yjbd6b2am4j2f0gr0jfggkl3i2z7ibq2rivmk9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/casbin/casbin/v2"
      #:unpack-path "github.com/casbin/casbin"))
    (propagated-inputs (list go-github-com-golang-mock ; packaged
                             go-github-com-casbin-govaluate
                             go-github-com-bmatcuk-doublestar-v4))
    (home-page "https://github.com/casbin/casbin")
    (synopsis "Casbin")
    (description
     "@@strong{News}: still worry about how to write the correct Casbin policy?
@@code{Casbin online editor} is coming to help! Try it at:
@@url{https://casbin.org/editor/,https://casbin.org/editor/}.")
    (license license:asl2.0)))

(define-public go-github-com-casbin-govaluate
  (package
    (name "go-github-com-casbin-govaluate")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/casbin/govaluate")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wya9a2xj8f580igdbghvn84cr6wih32ck4fyl9p1iibznhg8vfr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/casbin/govaluate"))
    (home-page "https://github.com/casbin/govaluate")
    (synopsis "govaluate")
    (description
     "This package provides support for evaluating arbitrary C-like artithmetic/string
expressions.")
    (license license:expat)))

(define-public go-github-com-caspr-io-yamlpath
  (package
    (name "go-github-com-caspr-io-yamlpath")
    (version "0.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/caspr-io/yamlpath")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mp03b55q218zmq41ssdd5dxvz3zyy674qfbpfg63dkins428hyh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/caspr-io/yamlpath"))
    (propagated-inputs (list go-gotest-tools-v3 go-gopkg-in-yaml-v3))
    (home-page "https://github.com/caspr-io/yamlpath")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-catenacyber-perfsprint
  (package
    (name "go-github-com-catenacyber-perfsprint")
    (version "0.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/catenacyber/perfsprint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "028z6g869kw7vw9pl3zdsk401fjvzk04h7z62lb4zpjkw4qipxs9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/catenacyber/perfsprint"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/catenacyber/perfsprint")
    (synopsis "perfsprint")
    (description
     "Golang linter for performance, aiming at usages of @@code{fmt.Sprintf} which
have faster alternatives.")
    (license license:expat)))

(define-public go-github-com-catppuccin-go
  (package
    (name "go-github-com-catppuccin-go")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/catppuccin/go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ly53j9sgzlr9mn0i2f56mdmvxkijd8zg892l09wbahhi0h0f0b5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/catppuccin/go"))
    (home-page "https://github.com/catppuccin/go")
    (synopsis "")
    (description " .")
    (license license:expat)))

(define-public go-github-com-cavaliercoder-go-rpm
  (package
    (name "go-github-com-cavaliercoder-go-rpm")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cavaliergopher/rpm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mvaimy1h9rnhnh02j0k5llq7z7lqawwlbz1smx6cqf9sr56rzyn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cavaliercoder/go-rpm"))
    (propagated-inputs (list go-golang-org-x-crypto))
    (home-page "https://github.com/cavaliercoder/go-rpm")
    (synopsis "go-rpm")
    (description
     "Package rpm provides a native implementation of the RPM file specification.")
    (license license:bsd-3)))

(define-public go-github-com-cavaliergopher-cpio
  (package
    (name "go-github-com-cavaliergopher-cpio")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cavaliergopher/cpio")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0b1ix8z9kwfpwqi0q08ivcfcimlqk781jbzbfw7qbqavh702w3m2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cavaliergopher/cpio"))
    (home-page "https://github.com/cavaliergopher/cpio")
    (synopsis "cpio")
    (description
     "Package cpio providers readers and writers for CPIO archives.  Currently, only
the SVR4 (New ASCII) format is supported, both with and without checksums.")
    (license license:bsd-3)))

(define-public go-github-com-ccojocar-zxcvbn-go
  (package
    (name "go-github-com-ccojocar-zxcvbn-go")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ccojocar/zxcvbn-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gqi1yqx45nzpam4r34g8dkmlamwd4qp2sb22jm87y96dvdlgbs3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ccojocar/zxcvbn-go"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/ccojocar/zxcvbn-go")
    (synopsis "Use")
    (description
     "This is a @code{goLang} port of python-zxcvbn and
@@url{https://github.com/dropbox/zxcvbn,zxcvbn}, which are python and
@code{JavaScript} password strength generators.  zxcvbn attempts to give sound
password advice through pattern matching and conservative entropy calculations.
It finds 10k common passwords, common American names and surnames, common
English words, and common patterns like dates, repeats (aaa), sequences (abcd),
and QWERTY patterns.")
    (license license:expat)))

(define-public go-github-com-ccoveille-go-safecast
  (package
    (name "go-github-com-ccoveille-go-safecast")
    (version "1.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ccoVeille/go-safecast")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02z4ams6zqazm2d9qfmc7xh4ck1s80c3lmjqmkla6h7lmmbad54m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ccoveille/go-safecast"))
    (home-page "https://github.com/ccoveille/go-safecast")
    (synopsis "🪄 go-safecast: safe numbers conversion")
    (description "Package safecast solves the type conversion issues in Go.")
    (license license:expat)))

(define-public go-github-com-cenkalti-backoff
  (package
    (name "go-github-com-cenkalti-backoff")
    (version "2.2.1+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cenkalti/backoff")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mf4lsl3rbb8kk42x0mrhzzy4ikqy0jf6nxpzhkr02rdgwh6rjk8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cenkalti/backoff"))
    (home-page "https://github.com/cenkalti/backoff")
    (synopsis "Exponential Backoff")
    (description
     "Package backoff implements backoff algorithms for retrying operations.")
    (license license:expat)))

(define-public go-github-com-cenkalti-backoff-v5
  (package
    (name "go-github-com-cenkalti-backoff-v5")
    (version "5.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cenkalti/backoff")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hc4manlkqfy9acva1jb8ayh8jihjb0h76l3g1sqqp0vlaq5y6q3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/cenkalti/backoff/v5"
      #:unpack-path "github.com/cenkalti/backoff"))
    (home-page "https://github.com/cenkalti/backoff")
    (synopsis "Exponential Backoff")
    (description
     "Package backoff implements backoff algorithms for retrying operations.")
    (license license:expat)))

(define-public go-github-com-census-instrumentation-opencensus-proto
  (package
    (name "go-github-com-census-instrumentation-opencensus-proto")
    (version "0.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/census-instrumentation/opencensus-proto")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zda7v8fqbc2hamnwajdwr9742nznajxgcw636n570v8k5ahrymw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/census-instrumentation/opencensus-proto"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-github-com-grpc-ecosystem-grpc-gateway-v2))
    (home-page "https://github.com/census-instrumentation/opencensus-proto")
    (synopsis
     "OpenCensus Proto - Language Independent Interface Types For OpenCensus")
    (description
     "Census provides a framework to define and collect stats against metrics and to
break those stats down across user-defined dimensions.")
    (license license:asl2.0)))

(define-public go-github-com-ceph-go-ceph
  (package
    (name "go-github-com-ceph-go-ceph")
    (version "0.31.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ceph/go-ceph")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dsrhj5s7djpsjdikqr3qbhidzrdvpf2w90ss5kfa5i79z5c7d1f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ceph/go-ceph"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-stretchr-testify
                             go-github-com-gofrs-uuid-v5
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/ceph/go-ceph")
    (synopsis "go-ceph - Go bindings for Ceph APIs")
    (description
     "Package ceph is the root of a set of packages that wrap the Ceph APIs.")
    (license license:expat)))

(define-public go-github-com-cevatbarisyilmaz-ara
  (package
    (name "go-github-com-cevatbarisyilmaz-ara")
    (version "0.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cevatbarisyilmaz/ara")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11y66r2mq593n2j1c7vacw9q0ygj76s7ci9p0azihi94vwniw33s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cevatbarisyilmaz/ara"))
    (home-page "https://github.com/cevatbarisyilmaz/ara")
    (synopsis "ara")
    (description "Package ara provides a dialer with customizable resolver.")
    (license license:expat)))

(define-public go-github-com-chai2010-gettext-go
  (package
    (name "go-github-com-chai2010-gettext-go")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chai2010/gettext-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0drddzp1rv6zjpymq2y71h5061vnb08f4726ikvlslhgc82svp26"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/chai2010/gettext-go"))
    (home-page "https://github.com/chai2010/gettext-go")
    (synopsis "gettext-go: GNU gettext for Go (")
    (description "Package gettext implements a basic GNU's gettext library.")
    (license license:bsd-3)))

(define-public go-github-com-chainguard-dev-clog
  (package
    (name "go-github-com-chainguard-dev-clog")
    (version "1.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chainguard-dev/clog")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0d2a1nsy0dalpy1brqwl2qgd3ias5sfnn34i418rbvk10mf9a61d"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/chainguard-dev/clog"))
    (home-page "https://github.com/chainguard-dev/clog")
    (synopsis "👞 clog")
    (description
     "Context-aware @@url{https://pkg.go.dev/log/slog,(code slog)}.")
    (license license:asl2.0)))

(define-public go-github-com-charithe-durationcheck
  (package
    (name "go-github-com-charithe-durationcheck")
    (version "0.0.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/charithe/durationcheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12nrvsdfmp5nq31m2p1zsfp2yil9zg8dchkyfr3fmr1rlmgv6m5p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/charithe/durationcheck"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/charithe/durationcheck")
    (synopsis "Duration Check")
    (description
     "This package provides a Go linter to detect cases where two
@@code{time.Duration} values are being multiplied in possibly erroneous ways.")
    (license license:asl2.0)))

(define-public go-github-com-charmbracelet-huh
  (package
    (name "go-github-com-charmbracelet-huh")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/charmbracelet/huh")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f7nmwqncj4pq262ipkpagd394xim541md7yxissxxy97vnzh4pc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/charmbracelet/huh"))
    (propagated-inputs (list go-github-com-mitchellh-hashstructure-v2
                             go-github-com-charmbracelet-x-exp-strings
                             go-github-com-charmbracelet-x-ansi
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-bubbletea
                             go-github-com-charmbracelet-bubbles
                             go-github-com-catppuccin-go))
    (home-page "https://github.com/charmbracelet/huh")
    (synopsis "Huh?")
    (description
     "This package provides a simple, powerful library for building interactive forms
and prompts in the terminal.")
    (license license:expat)))

(define-public go-github-com-charmbracelet-x-exp-strings
  (package
    (name "go-github-com-charmbracelet-x-exp-strings")
    (version "0.0.0-20250131172436-6251e772efa1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/charmbracelet/x")
             (commit (go-version->git-ref version
                                          #:subdir "exp/strings"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dnkbmgmmpr2hd4z464mvyia260pvl0qfrdgjjjqab7kqqk78pch"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/charmbracelet/x/exp/strings"
      #:unpack-path "github.com/charmbracelet/x"))
    (home-page "https://github.com/charmbracelet/x")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-chavacava-garif
  (package
    (name "go-github-com-chavacava-garif")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chavacava/garif")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lkfl2bwsa2m50sdc5x8j3b15gfd0fh24jghclv8c5m2hvl131dd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/chavacava/garif"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/chavacava/garif")
    (synopsis "garif")
    (description
     "Package garif defines all the GO structures required to model a SARIF log file.
These structures were created using the JSON-schema sarif-schema-2.1.0.json of
SARIF logfiles available at
@@url{https://github.com/oasis-tcs/sarif-spec/tree/master/Schemata,https://github.com/oasis-tcs/sarif-spec/tree/master/Schemata}.")
    (license license:expat)))

(define-public go-github-com-checkpoint-restore-checkpointctl
  (package
    (name "go-github-com-checkpoint-restore-checkpointctl")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/checkpoint-restore/checkpointctl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zs54cdf29awvf2mpjs62g649kaxzfh61c9d2prm7bh62pr1qzr0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/checkpoint-restore/checkpointctl"))
    (propagated-inputs (list go-github-com-xlab-treeprint ; packaged
                             go-github-com-spf13-cobra
                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-olekukonko-tablewriter
                             go-github-com-containers-storage
                             go-github-com-checkpoint-restore-go-criu-v7 ; packaged
                             ))
    (home-page "https://github.com/checkpoint-restore/checkpointctl")
    (synopsis
     "checkpointctl - a tool for in-depth analysis of container checkpoints")
    (description
     "Container engines like and have the ability to checkpoint a container.  All data
related to a checkpoint is collected in a checkpoint archive.  With the help of
this tool, @@code{checkpointctl}, it is possible to display information about
these checkpoint archives.")
    (license license:asl2.0)))

(define-public go-github-com-chi-middleware-proxy
  (package
    (name "go-github-com-chi-middleware-proxy")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chi-middleware/proxy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pslb4x8jhblgg7sfahrsiv7r4ay5aizgrqkrpfpwzsnhw88fl6h"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/chi-middleware/proxy"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-go-chi-chi-v5 ; packaged
                             ))
    (home-page "https://github.com/chi-middleware/proxy")
    (synopsis "proxy middleware")
    (description
     "Forwarded headers middleware to use if application is run behind reverse proxy.")
    (license license:expat)))

(define-public go-github-com-chilts-sid
  (package
    (name "go-github-com-chilts-sid")
    (version "0.0.0-20190607042430-660e94789ec9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chilts/sid")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jf99pqqakpnh1j0qrqsi8pb1pdaziar8wnnvxbkgz16hspms195"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/chilts/sid"))
    (home-page "https://github.com/chilts/sid")
    (synopsis "sid : generate sortable identifiers")
    (description
     "Package sid provides the ability to generate Sortable Identifiers.  These are
also universally unique.")
    (license license:expat)))

(define-public go-github-com-chrismellard-docker-credential-acr-env
  (package
    (name "go-github-com-chrismellard-docker-credential-acr-env")
    (version "0.0.0-20230304212654-82a0ddb27589")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/chrismellard/docker-credential-acr-env")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1g6mdbxy3i387sl2kdi1blm5dkjjbjwcxka826fscp0z04hqzn4b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/chrismellard/docker-credential-acr-env"))
    (propagated-inputs (list go-github-com-spf13-viper
                        go-github-com-spf13-cobra
                        go-github-com-mitchellh-go-homedir
                        go-github-com-docker-docker-credential-helpers
                        go-github-com-azure-go-autorest-autorest-azure-auth
                        go-github-com-azure-go-autorest-autorest-adal
                        go-github-com-azure-go-autorest-autorest
                        go-github-com-azure-azure-sdk-for-go))
    (home-page "https://github.com/chrismellard/docker-credential-acr-env")
    (synopsis "ACR Docker Credential Helper")
    (description "Copyright © 2020 Chris Mellard chris.mellard@@icloud.com.")
    (license license:asl2.0)))

(define-public go-github-com-christrenkamp-goxpath
  (package
    (name "go-github-com-christrenkamp-goxpath")
    (version "0.0.0-20210404020558-97928f7e12b6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ChrisTrenkamp/goxpath")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vsq00xwknkjp71n4k2r8xl1jjxsxrhayip56yfzazvvfvgm6pfc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ChrisTrenkamp/goxpath"))
    (home-page "https://github.com/ChrisTrenkamp/goxpath")
    (synopsis "Deprecated.  Use")
    (description #f)
    (license license:expat)))

(define-public go-github-com-civo-civogo
  (package
    (name "go-github-com-civo-civogo")
    (version "0.3.89")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/civo/civogo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19h3asaha22ii0f3h85kld1hw5vdl5s70m6vbyfzcvwk16lrz8bz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/civo/civogo"))
    (propagated-inputs (list go-github-com-onsi-gomega go-golang-org-x-mod
                             go-k8s-io-apimachinery go-k8s-io-api
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/civo/civogo")
    (synopsis "Civogo - The Golang client library for Civo")
    (description
     "Civogo is a Go client library for accessing the Civo cloud API.")
    (license license:expat)))

(define-public go-github-com-ckaznocha-intrange
  (package
    (name "go-github-com-ckaznocha-intrange")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ckaznocha/intrange")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0c8db6cq51law2fw4i6xidfymh9sq7q93cqcxvmlf4p3gdaksv7z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/ckaznocha/intrange"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-testutil))
    (home-page "https://github.com/ckaznocha/intrange")
    (synopsis "intrange")
    (description
     "intrange is a program for checking for loops that could use the
@@url{https://go.dev/ref/spec#Go_1.22,Go 1.22} integer range feature.")
    (license license:expat)))

(define-public go-github-com-clbanning-mxj
  (package
    (name "go-github-com-clbanning-mxj")
    (version "1.8.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/clbanning/mxj")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13qlrycdp63q1v8sdpv6n720b6h6jpg58r38ldg4a70iv1wg7s9g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/clbanning/mxj"))
    (home-page "https://github.com/clbanning/mxj")
    (synopsis #f)
    (description
     "Marshal/Unmarshal XML to/from map[string]interface{} values (and JSON);
extract/modify values from maps by key or key-path, including wildcards.")
    (license license:expat))) ; check-license

(define-public go-github-com-clbanning-mxj-v2
  (package
    (name "go-github-com-clbanning-mxj-v2")
    (version "2.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/clbanning/mxj")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kdh9cdq0x9jk5vzn2k489w7k88rdwf1b87yzhr7jbkchh2nh608"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/clbanning/mxj/v2"
      #:unpack-path "github.com/clbanning/mxj"))
    (home-page "https://github.com/clbanning/mxj")
    (synopsis #f)
    (description
     "Marshal/Unmarshal XML to/from map[string]interface{} values (and JSON);
extract/modify values from maps by key or key-path, including wildcards.")
    (license license:expat)))

(define-public go-github-com-clickhouse-ch-go
  (package
    (name "go-github-com-clickhouse-ch-go")
    (version "0.63.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ClickHouse/ch-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08rhkph6101951iqm4jwh00ynazc14xnay0rcwpj8ni705l0pn89"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ClickHouse/ch-go"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-go-uber-org-zap
                             go-go-uber-org-multierr ; packaged
                             go-go-uber-org-atomic
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opentelemetry-io-otel-metric ; packaged
                             go-go-opentelemetry-io-otel
                             go-github-com-stretchr-testify
                             go-github-com-segmentio-asm
                             go-github-com-pierrec-lz4-v4
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-jackc-puddle-v2
                             go-github-com-hashicorp-go-version
                             go-github-com-google-uuid
                             go-github-com-go-faster-errors
                             go-github-com-go-faster-city
                             go-github-com-dustin-go-humanize ; packaged
                             go-github-com-dmarkham-enumer
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://github.com/ClickHouse/ch-go")
    (synopsis "ch")
    (description "Package ch implements @code{ClickHouse} client.")
    (license license:asl2.0)))

(define-public go-github-com-clickhouse-clickhouse-go
  (package
    (name "go-github-com-clickhouse-clickhouse-go")
    (version "1.5.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ClickHouse/clickhouse-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15yf96mx3fkjyyasb8gjw6ml476k9qacp54bdjrb14pafz3p3rgf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ClickHouse/clickhouse-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-pierrec-lz4
                             go-github-com-jmoiron-sqlx ; packaged
                             go-github-com-cloudflare-golz4
                             go-github-com-bkaradzic-go-lz4))
    (home-page "https://github.com/ClickHouse/clickhouse-go")
    (synopsis "ClickHouse")
    (description
     "Golang SQL database driver for @@url{https://clickhouse.yandex/,Yandex
@code{ClickHouse}}.")
    (license license:expat)))

(define-public go-github-com-clickhouse-clickhouse-go-v2
  (package
    (name "go-github-com-clickhouse-clickhouse-go-v2")
    (version "2.30.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ClickHouse/clickhouse-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0y33hlac29a15bxbw0srfmgll6m68jg3j6ihjlb59xdqmc1lzjr2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ClickHouse/clickhouse-go/v2"
      #:unpack-path "github.com/ClickHouse/clickhouse-go"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-net
                             go-go-opentelemetry-io-otel-trace
                             go-github-com-testcontainers-testcontainers-go
                             go-github-com-stretchr-testify
                             go-github-com-shopspring-decimal
                             go-github-com-pkg-errors
                             go-github-com-paulmach-orb
                             go-github-com-mkevac-debugcharts
                             go-github-com-google-uuid
                             go-github-com-docker-go-units
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-docker-docker
                             go-github-com-andybalholm-brotli
                             go-github-com-clickhouse-clickhouse-go
                             go-github-com-clickhouse-ch-go))
    (home-page "https://github.com/ClickHouse/clickhouse-go")
    (synopsis "ClickHouse")
    (description
     "Golang SQL database client for @@url{https://clickhouse.com/,@code{ClickHouse}}.")
    (license license:asl2.0)))

(define-public go-github-com-clipperhouse-uax29
  (package
    (name "go-github-com-clipperhouse-uax29")
    (version "1.14.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/clipperhouse/uax29")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "045vkcnd3s0rgni8ns83bbrj7ga1cyv4bhky1rib8m3m7731ra0q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/clipperhouse/uax29"))
    (propagated-inputs (list go-golang-org-x-text))
    (home-page "https://github.com/clipperhouse/uax29")
    (synopsis "Why tokenize?")
    (description
     "Package uax29 provides Unicode text segmentation (UAX #29) for words, sentences
and graphemes.")
    (license license:expat)))

(define-public go-github-com-cloudevents-sdk-go-v2
  (package
    (name "go-github-com-cloudevents-sdk-go-v2")
    (version "2.16.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cloudevents/sdk-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07csbdcnz8gbw7xdx3gljs6l4my0b97apmh39z0lfqmhgbi7p0bq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/cloudevents/sdk-go/v2"
      #:unpack-path "github.com/cloudevents/sdk-go"))
    (propagated-inputs (list go-golang-org-x-time
                             go-golang-org-x-sync
                             go-go-uber-org-zap
                             go-github-com-valyala-bytebufferpool
                             go-github-com-stretchr-testify
                             go-github-com-json-iterator-go
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/cloudevents/sdk-go")
    (synopsis #f)
    (description "Package v2 reexports a subset of the SDK v2 API.")
    (license license:asl2.0)))

(define-public go-github-com-cloudflare-backoff
  (package
    (name "go-github-com-cloudflare-backoff")
    (version "0.0.0-20240920015135-e46b80a3a7d0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cloudflare/backoff")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bzcvsgakjyxgw47r2j6xxbs8v67srwzvvw60biqcqvpsvncbw42"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cloudflare/backoff"))
    (home-page "https://github.com/cloudflare/backoff")
    (synopsis "backoff")
    (description
     "Package backoff contains an implementation of an intelligent backoff strategy.
It is based on the approach in the AWS architecture blog article titled
\"Exponential Backoff And Jitter\", which is found at
@@url{http://www.awsarchitectureblog.com/2015/03/backoff.html,http://www.awsarchitectureblog.com/2015/03/backoff.html}.")
    (license license:bsd-2)))

(define-public go-github-com-cloudflare-cfssl
  (package
    (name "go-github-com-cloudflare-cfssl")
    (version "1.6.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cloudflare/cfssl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rs1mn6ddylcv9kfjjvs9aghwz4r2i22f1ksfnv2q9jbmfzykk2x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cloudflare/cfssl"))
    (propagated-inputs (list
                             go-bitbucket-org-liamstask-goose
                             go-github-com-cloudflare-backoff
                             go-github-com-cloudflare-redoctober
                             go-github-com-go-sql-driver-mysql
                             go-github-com-google-certificate-transparency-go
                             go-github-com-jmhodges-clock
                             go-github-com-jmoiron-sqlx ; packaged
                             go-github-com-kisielk-sqlstruct ; packaged
                             go-github-com-lib-pq
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-zmap-zcrypto
                             go-github-com-zmap-zlint-v3
                             go-golang-org-x-crypto ; packaged
                             ))
    (home-page "https://github.com/cloudflare/cfssl")
    (synopsis "CFSSL")
    (description
     "CFSSL is @code{CloudFlare's} PKI/TLS swiss army knife.  It is both a command
line tool and an HTTP API server for signing, verifying, and bundling TLS
certificates.  It requires Go 1.16+ to build.")
    (license license:bsd-2)))

(define-public go-github-com-cloudflare-cloudflare-go
  (package
    (name "go-github-com-cloudflare-cloudflare-go")
    (version "0.112.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cloudflare/cloudflare-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08b0xl2lviddnpll11c981f49x5mdm8wlczxdig5s58fb4ddxmhx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cloudflare/cloudflare-go"))
    (propagated-inputs (list go-golang-org-x-time
                             go-golang-org-x-net
                             go-github-com-urfave-cli-v2
                             go-github-com-stretchr-testify
                             go-github-com-olekukonko-tablewriter
                             go-github-com-google-go-querystring
                             go-github-com-goccy-go-json))
    (home-page "https://github.com/cloudflare/cloudflare-go")
    (synopsis "cloudflare-go")
    (description "Package cloudflare implements the Cloudflare v4 API.")
    (license license:bsd-3)))

(define-public go-github-com-cloudflare-golz4
  (package
    (name "go-github-com-cloudflare-golz4")
    (version "0.0.0-20240916140612-caecf3c00c06")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cloudflare/golz4")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15nppvbav7kj3hh9qv9qbn15pd0c9lpljs5syl004cz6mif43as3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cloudflare/golz4"))
    (home-page "https://github.com/cloudflare/golz4")
    (synopsis "golz4")
    (description "Package lz4 implements compression using lz4.c and lz4hc.c.")
    (license license:bsd-3)))

(define-public go-github-com-cloudflare-redoctober
  (package
    (name "go-github-com-cloudflare-redoctober")
    (version "0.0.0-20241112165158-ce2ad370627b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cloudflare/redoctober")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mlmm68x0y4m6dzris6ggkhzfxpd99df4syj3zc6350q3fxi0kv9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cloudflare/redoctober"))
    (propagated-inputs (list go-github-com-getsentry-sentry-go ; packaged
                             go-golang-org-x-crypto
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-coreos-go-systemd))
    (home-page "https://github.com/cloudflare/redoctober")
    (synopsis "Red October")
    (description
     "This file is autogenerated; DO NOT EDIT DIRECTLY See generate.go for more info.")
    (license license:bsd-2)))

(define-public go-github-com-cloudfoundry-jibber-jabber
  (package
    (name "go-github-com-cloudfoundry-jibber-jabber")
    (version "0.0.0-20151120183258-bcc4c8345a21")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cloudfoundry-attic/jibber_jabber")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0q31q03sxfwrdgbv559bgm9gr5cmyzp1al0zli9nlkwa2v9hw5fi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cloudfoundry/jibber_jabber"))
    (home-page "https://github.com/cloudfoundry/jibber_jabber")
    (synopsis "Jibber Jabber")
    (description
     "Jibber Jabber is a @code{GoLang} Library that can be used to detect an operating
system's current language.")
    (license license:asl2.0)))

(define-public go-github-com-cloudinary-cloudinary-go-v2
  (package
    (name "go-github-com-cloudinary-cloudinary-go-v2")
    (version "2.9.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cloudinary/cloudinary-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lnkccdhp3rbcbah0padz366xm9znqym7y082zrb6is48c19jwnj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cloudinary/cloudinary-go/v2"
      #:unpack-path "github.com/cloudinary/cloudinary-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-heimdalr-dag
                             go-github-com-gorilla-schema
                             go-github-com-google-uuid
                             go-github-com-creasty-defaults))
    (home-page "https://github.com/cloudinary/cloudinary-go")
    (synopsis "Cloudinary Go SDK")
    (description
     "The Cloudinary Go SDK allows you to quickly and easily integrate your
application with Cloudinary.  Effortlessly optimize, transform, upload and
manage your cloud's assets.")
    (license license:expat)))

(define-public go-github-com-cloudsoda-go-smb2
  (package
    (name "go-github-com-cloudsoda-go-smb2")
    (version "0.0.0-20250206185559-eb0657583727")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/CloudSoda/go-smb2")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "175891lbgfdcsnnwrgx92ln3jfvrw0bmfz6p83rcbi8njfnnqlr8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/cloudsoda/go-smb2"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-jcmturner-gokrb5-v8
                             go-github-com-geoffgarside-ber
                             go-github-com-cloudsoda-sddl))
    (home-page "https://github.com/cloudsoda/go-smb2")
    (synopsis "smb2")
    (description "Package smb2 implements the SMB2/3 client in [MS-SMB2].")
    (license license:bsd-2)))

(define-public go-github-com-cloudsoda-sddl
  (package
    (name "go-github-com-cloudsoda-sddl")
    (version "0.0.0-20250203211958-38b2ba66781c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/CloudSoda/sddl")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09y7010dip8k1380bl5iy3cxxf4z8ay23ayal95sb5cwl3byz3mq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/cloudsoda/sddl"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/cloudsoda/sddl")
    (synopsis "sddl - Windows Security Descriptor Library and CLI Tool")
    (description
     "This package provides a cross-platform Go library and command-line tool for
working with Windows Security Descriptors, providing conversion between binary
and SDDL (Security Descriptor Definition Language) string formats.")
    (license license:lgpl3)))

(define-public go-github-com-cloudykit-fastprinter
  (package
    (name "go-github-com-cloudykit-fastprinter")
    (version "0.0.0-20200109182630-33d98a066a53")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/CloudyKit/fastprinter")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06kkykc9rblq64q1bzi2r53r9y7iddi6abx2lhgkas55ld5qsjr9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/CloudyKit/fastprinter"))
    (home-page "https://github.com/CloudyKit/fastprinter")
    (synopsis "fastprinter")
    (description
     "@code{FastPrinter} supports write values in io.Writer without allocation.")
    (license license:expat)))

(define-public go-github-com-cloudykit-jet-v6
  (package
    (name "go-github-com-cloudykit-jet-v6")
    (version "6.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/CloudyKit/jet")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1c3pycn11v6203xs4hd9r1lyh2jsrxx8c6s8kddkaskx0czd4qyv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/CloudyKit/jet/v6"
      #:unpack-path "github.com/CloudyKit/jet"))
    (propagated-inputs (list go-github-com-cloudykit-fastprinter))
    (home-page "https://github.com/CloudyKit/jet")
    (synopsis "Jet Template Engine for Go")
    (description
     "Jet is a template engine developed to be easy to use, powerful, dynamic, yet
secure and very fast.")
    (license license:asl2.0)))

(define-public go-github-com-cncf-xds-go
  (package
    (name "go-github-com-cncf-xds-go")
    (version "0.0.0-20241223141626-cff3c89139a3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cncf/xds")
             (commit (go-version->git-ref version
                                          #:subdir "go"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1114fiq6r7i55daxk91vyibyq2r3h4x4xzrm49g8m1wch8kmz1wh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cncf/xds/go"
      #:unpack-path "github.com/cncf/xds"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-github-com-envoyproxy-protoc-gen-validate ; packaged
                             go-cel-dev-expr ; packaged
                             ))
    (home-page "https://github.com/cncf/xds")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-cockroachdb-cockroach-go-v2
  (package
    (name "go-github-com-cockroachdb-cockroach-go-v2")
    (version "2.3.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cockroachdb/cockroach-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0627ryl13vj6zc73mj4ywplwv36hlbgxbb05xqmsrvx5z4rlk2ca"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cockroachdb/cockroach-go/v2"
      #:unpack-path "github.com/cockroachdb/cockroach-go"))
    (propagated-inputs (list go-gorm-io-gorm
                             go-gorm-io-driver-postgres
                             go-gopkg-in-yaml-v3
                             go-github-com-stretchr-testify
                             go-github-com-lib-pq
                             go-github-com-jmoiron-sqlx ; packaged
                             go-github-com-jackc-pgx-v5
                             go-github-com-jackc-pgx-v4
                             go-github-com-gofrs-flock))
    (home-page "https://github.com/cockroachdb/cockroach-go")
    (synopsis "CockroachDB Go Helpers")
    (description
     "This project contains helpers for @code{CockroachDB} users writing in Go:.")
    (license license:asl2.0)))

(define-public go-github-com-codahale-rfc6979
  (package
    (name "go-github-com-codahale-rfc6979")
    (version "0.0.0-20141003034818-6a90f24967eb")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/codahale/rfc6979")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07p51hmvvzvn84mg1c3kmp799j7jf7w15770qw8qz9q7j8frx03f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/codahale/rfc6979"))
    (home-page "https://github.com/codahale/rfc6979")
    (synopsis "rfc6979")
    (description
     "Package rfc6979 is an implementation of
@@url{https://rfc-editor.org/rfc/rfc6979.html,RFC 6979}'s deterministic DSA.")
    (license license:expat)))

(define-public go-github-com-code-hex-go-infinity-channel
  (package
    (name "go-github-com-code-hex-go-infinity-channel")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Code-Hex/go-infinity-channel")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hfdz9hb9g36dk7bxplkdd0frvibgf9wr5xjbwcai569rvhm12i2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Code-Hex/go-infinity-channel"))
    (home-page "https://github.com/Code-Hex/go-infinity-channel")
    (synopsis "go-infinity-channel")
    (description
     "Package infinity provides an unbounded buffered channel implementation.")
    (license license:expat)))

(define-public go-github-com-code-hex-gvisor-vmnet
  (package
    (name "go-github-com-code-hex-gvisor-vmnet")
    (version "0.0.0-20240122100406-1579d1a4ee55")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Code-Hex/gvisor-vmnet")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1l619afgxvy4nhqqqqnn2fbzfb4w85s4yryq4amax61smg2m6hvf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Code-Hex/gvisor-vmnet"))
    (native-inputs
     (list go-github-com-google-go-cmp))
    (propagated-inputs
     (list go-github-com-code-hex-go-generics-cache
           go-github-com-google-gopacket
           go-github-com-insomniacslk-dhcp ; packaged
           go-github-com-miekg-dns
           go-golang-org-x-net
           go-golang-org-x-sync
           go-gvisor-dev-gvisor))
    (home-page "https://github.com/Code-Hex/gvisor-vmnet")
    (synopsis "Vmnet based gVisor TCP/IP stack")
    (description
     "This package implements a several networking protocol stack based on
gVisor.")
    (license license:expat)))

(define-public go-github-com-code-hex-vz-v3
  (package
    (name "go-github-com-code-hex-vz-v3")
    (version "3.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Code-Hex/vz")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dabhjm1m4fxzwgcsc1ad67lsybpgdal0rdb9miz3f3ihf6ywdkq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Code-Hex/vz/v3"
      #:unpack-path "github.com/Code-Hex/vz"))
    (propagated-inputs (list go-golang-org-x-mod go-golang-org-x-crypto
                             go-github-com-code-hex-go-infinity-channel))
    (home-page "https://github.com/Code-Hex/vz")
    (synopsis "vz - Go binding with Apple")
    (description
     "vz provides the power of the Apple Virtualization.framework in Go.  Put here is
block quote of overreview which is written what is Virtualization.framework from
the document.")
    (license license:expat)))

(define-public go-github-com-codingame-h2go
  (package
    (name "go-github-com-codingame-h2go")
    (version "0.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/CodinGame/h2go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09ym7c0rk0ak1ba2sngn558g6dvih0qp3qgngn697ymqyk3d6275"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/CodinGame/h2go"))
    (propagated-inputs (list go-golang-org-x-text
                             go-github-com-sirupsen-logrus
                             go-github-com-pkg-errors))
    (home-page "https://github.com/CodinGame/h2go")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-cohere-ai-tokenizer
  (package
    (name "go-github-com-cohere-ai-tokenizer")
    (version "1.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cohere-ai/tokenizer")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0r9s2fg8fa0i088gjp7c57r5g7bg9b30553s7cp35xrw7qsr3j25"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cohere-ai/tokenizer"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-dlclark-regexp2))
    (home-page "https://github.com/cohere-ai/tokenizer")
    (synopsis "Tokenizers")
    (description
     "Cohere's @@code{tokenizers} library provides an interface to encode and decode
text given a computed vocabulary, and includes pre-computed tokenizers that are
used to train Cohere's models.")
    (license license:asl2.0)))

(define-public go-github-com-colinmarc-hdfs-v2
  (package
    (name "go-github-com-colinmarc-hdfs-v2")
    (version "2.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/colinmarc/hdfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01ywhbnxgl2k0dy2ngwa3pci8px0z5ffkn7ar5pajhd6l8vg07w6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/colinmarc/hdfs/v2"
      #:unpack-path "github.com/colinmarc/hdfs"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-stretchr-testify
                             go-github-com-pborman-getopt
                             go-github-com-jcmturner-gokrb5-v8))
    (home-page "https://github.com/colinmarc/hdfs")
    (synopsis "HDFS for Go")
    (description
     "Package hdfs provides a native, idiomatic interface to HDFS. Where possible, it
mimics the functionality and signatures of the standard `os` package.")
    (license license:expat)))

(define-public go-github-com-common-nighthawk-go-figure
  (package
    (name "go-github-com-common-nighthawk-go-figure")
    (version "0.0.0-20210622060536-734e95fb86be")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/common-nighthawk/go-figure")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zn1qlrbkg8sa50smh1nrxsfdjxcyaj8cjj8abpfw4yf7l1mi3xw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/common-nighthawk/go-figure"))
    (home-page "https://github.com/common-nighthawk/go-figure")
    (synopsis "Go Figure")
    (description
     "Go Figure prints beautiful ASCII art from text.  It supports
@@url{http://www.figlet.org/,FIGlet} files, and most of its features.")
    (license license:expat)))

(define-public go-github-com-compose-spec-compose-go-v2
  (package
    (name "go-github-com-compose-spec-compose-go-v2")
    (version "2.4.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/compose-spec/compose-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17b18n6gb2565y92zv7zlk1r1smrk7ihyl9vmgpgsj65s94l6qjq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/compose-spec/compose-go/v2"
      #:unpack-path "github.com/compose-spec/compose-go"))
    (propagated-inputs (list go-gotest-tools-v3 ; packaged
                             go-gopkg-in-yaml-v3
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-github-com-xeipuuv-gojsonschema
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-opencontainers-go-digest
                             go-github-com-mattn-go-shellwords
                             go-github-com-google-go-cmp
                             go-github-com-go-viper-mapstructure-v2
                             go-github-com-docker-go-units
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-distribution-reference))
    (home-page "https://github.com/compose-spec/compose-go")
    (synopsis "compose-go")
    (description
     "Go reference library for parsing and loading Compose files as specified by the
Compose specification
@@url{https://github.com/compose-spec/compose-spec,https://github.com/compose-spec/compose-spec}.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-aufs
  (package
    (name "go-github-com-containerd-aufs")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/aufs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jyyyf6sr910m602axmp4h4j1l2n680cpp60z09pvprz55zi4ba0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/aufs"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-pkg-errors
                             go-github-com-containerd-continuity ; packaged
                             go-github-com-containerd-containerd))
    (home-page "https://github.com/containerd/aufs")
    (synopsis "aufs snapshotter")
    (description
     "AUFS implementation of the snapshot interface for containerd.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-containerd
  (package
    (name "go-github-com-containerd-containerd")
    (version "1.7.24")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/containerd")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04h0vkh6ahygarfm558sr8av6n4zbwq6c9nj062kp7a0mnrwjyyk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/containerd"))
    (propagated-inputs
     (list go-dario-cat-mergo ; packaged
           go-github-com-adalogics-go-fuzz-headers ; packaged
           go-github-com-adamkorcz-go-118-fuzz-build
           go-github-com-containerd-aufs
           go-github-com-containerd-btrfs-v2
           go-github-com-containerd-cgroups-v3
           go-github-com-containerd-console ; packaged
           go-github-com-containerd-containerd-api
           go-github-com-containerd-continuity ; packaged
           go-github-com-containerd-errdefs ; packaged
           go-github-com-containerd-fifo
           go-github-com-containerd-go-cni
           go-github-com-containerd-go-runc
           go-github-com-containerd-imgcrypt
           go-github-com-containerd-log
           go-github-com-containerd-nri
           go-github-com-containerd-platforms ; packaged
           go-github-com-containerd-ttrpc
           go-github-com-containerd-typeurl-v2
           go-github-com-containerd-zfs
           go-github-com-containernetworking-cni
           go-github-com-containernetworking-plugins
           go-github-com-coreos-go-systemd-v22
           go-github-com-davecgh-go-spew
           go-github-com-distribution-reference
           go-github-com-docker-go-events
           go-github-com-docker-go-metrics
           go-github-com-docker-go-units
           go-github-com-emicklei-go-restful-v3
           go-github-com-fsnotify-fsnotify ; packaged
           go-github-com-google-go-cmp
           go-github-com-google-uuid
           go-github-com-grpc-ecosystem-go-grpc-middleware
           go-github-com-grpc-ecosystem-go-grpc-prometheus ; packaged
           go-github-com-hashicorp-go-multierror
           go-github-com-intel-goresctrl
           go-github-com-klauspost-compress ; packaged
           go-github-com-microsoft-go-winio
           go-github-com-microsoft-hcsshim
           go-github-com-minio-sha256-simd ; packaged
           go-github-com-moby-locker
           go-github-com-moby-sys-mountinfo
           go-github-com-moby-sys-sequential
           go-github-com-moby-sys-signal
           go-github-com-moby-sys-symlink
           go-github-com-moby-sys-user
           go-github-com-moby-sys-userns ; packaged
           go-github-com-opencontainers-go-digest
           go-github-com-opencontainers-image-spec ; packaged
           go-github-com-opencontainers-runtime-spec ; packaged
           go-github-com-opencontainers-runtime-tools
           go-github-com-opencontainers-selinux ; packaged
           go-github-com-pelletier-go-toml
           go-github-com-prometheus-client-golang ; packaged

           go-github-com-sirupsen-logrus
           go-github-com-stretchr-testify
           go-github-com-tchap-go-patricia-v2
           go-github-com-urfave-cli
           go-github-com-vishvananda-netlink
           go-go-etcd-io-bbolt
           go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
           go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
           go-go-opentelemetry-io-otel
           go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
           go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
           go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracehttp
           go-go-opentelemetry-io-otel-sdk
           go-go-opentelemetry-io-otel-trace
           go-golang-org-x-net
           go-golang-org-x-sync
           go-golang-org-x-sys
           go-google-golang-org-genproto
           go-google-golang-org-genproto-googleapis-rpc
           go-google-golang-org-grpc
           go-google-golang-org-protobuf
           go-k8s-io-api
           go-k8s-io-apimachinery
           go-k8s-io-apiserver
           go-k8s-io-client-go
           go-k8s-io-component-base
           go-k8s-io-cri-api ; packaged
           go-k8s-io-klog-v2
           go-k8s-io-utils
           go-tags-cncf-io-container-device-interface))
    (home-page "https://github.com/containerd/containerd")
    (synopsis "Announcements")
    (description
     "containerd is an industry-standard container runtime with an emphasis on
simplicity, robustness, and portability.  It is available as a daemon for Linux
and Windows, which can manage the complete container lifecycle of its host
system: image transfer and storage, container execution and supervision,
low-level storage and network attachments, etc.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-containerd-v2
  (package
    (name "go-github-com-containerd-containerd-v2")
    (version "2.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/containerd")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x7fq7m4nzbyhixmpjkmvmgsr88k6axckwhjmgyg8lz1ji2ifgc0"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/containerd/containerd/v2"
      #:unpack-path "github.com/containerd/containerd"))
    (propagated-inputs (list go-tags-cncf-io-container-device-interface
                        go-k8s-io-utils
                        go-k8s-io-kubelet
                        go-k8s-io-klog-v2
                        go-k8s-io-cri-api ; packaged
                        go-k8s-io-component-base
                        go-k8s-io-client-go
                        go-k8s-io-apimachinery
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto-googleapis-rpc
                        go-golang-org-x-sys
                        go-golang-org-x-sync
                        go-golang-org-x-mod
                        go-go-opentelemetry-io-otel-trace
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracehttp
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
                        go-go-etcd-io-bbolt
                        go-github-com-vishvananda-netlink
                        go-github-com-urfave-cli-v2
                        go-github-com-tchap-go-patricia-v2
                        go-github-com-stretchr-testify
                        go-github-com-sirupsen-logrus
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-pelletier-go-toml-v2
                        go-github-com-opencontainers-selinux ; packaged
                        go-github-com-opencontainers-runtime-tools
                        go-github-com-opencontainers-runtime-spec ; packaged
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-moby-sys-userns ; packaged
                        go-github-com-moby-sys-user
                        go-github-com-moby-sys-symlink
                        go-github-com-moby-sys-signal
                        go-github-com-moby-sys-sequential
                        go-github-com-moby-sys-mountinfo
                        go-github-com-moby-locker
                        go-github-com-mdlayher-vsock
                        go-github-com-klauspost-compress ; packaged
                        go-github-com-intel-goresctrl
                        go-github-com-grpc-ecosystem-go-grpc-middleware-providers-prometheus ; packaged
                        go-github-com-google-uuid
                        go-github-com-google-go-cmp
                        go-github-com-fsnotify-fsnotify ; packaged
                        go-github-com-docker-go-units
                        go-github-com-docker-go-metrics
                        go-github-com-docker-go-events
                        go-github-com-distribution-reference
                        go-github-com-davecgh-go-spew
                        go-github-com-coreos-go-systemd-v22
                        go-github-com-containernetworking-plugins
                        go-github-com-containernetworking-cni
                        go-github-com-containerd-zfs-v2
                        go-github-com-containerd-typeurl-v2
                        go-github-com-containerd-ttrpc
                        go-github-com-containerd-plugin
                        go-github-com-containerd-platforms ; packaged
                        go-github-com-containerd-otelttrpc
                        go-github-com-containerd-nri
                        go-github-com-containerd-log
                        go-github-com-containerd-imgcrypt-v2
                        go-github-com-containerd-go-runc
                        go-github-com-containerd-go-cni
                        go-github-com-containerd-fifo
                        go-github-com-containerd-errdefs-pkg ; packaged
                        go-github-com-containerd-errdefs
                        go-github-com-containerd-continuity ; packaged
                        go-github-com-containerd-containerd-api
                        go-github-com-containerd-console ; packaged
                        go-github-com-containerd-cgroups-v3
                        go-github-com-containerd-btrfs-v2
                        go-github-com-checkpoint-restore-go-criu-v7 ; packaged
                        go-github-com-checkpoint-restore-checkpointctl
                        go-github-com-microsoft-hcsshim
                        go-github-com-microsoft-go-winio
                        go-github-com-adamkorcz-go-118-fuzz-build
                        go-github-com-adalogics-go-fuzz-headers ; packaged
                        go-dario-cat-mergo))
    (home-page "https://github.com/containerd/containerd")
    (synopsis "Announcements")
    (description
     "containerd is an industry-standard container runtime with an emphasis on
simplicity, robustness, and portability.  It is available as a daemon for Linux
and Windows, which can manage the complete container lifecycle of its host
system: image transfer and storage, container execution and supervision,
low-level storage and network attachments, etc.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-containerd-api
  (package
    (name "go-github-com-containerd-containerd-api")
    (version "1.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/containerd")
             (commit (go-version->git-ref version
                                          #:subdir "api"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pmcgi5jdcf0cx6z6qlppzqqwf6fhglfxd4sdr00wgbhvhfzchm3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/containerd/api"
      #:unpack-path "github.com/containerd/containerd"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-containerd-typeurl-v2
                             go-github-com-containerd-ttrpc))
    (home-page "https://github.com/containerd/containerd")
    (synopsis #f)
    (description
     "This directory contains the GRPC API definitions for containerd.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-fuse-overlayfs-snapshotter
  (package
    (name "go-github-com-containerd-fuse-overlayfs-snapshotter")
    (version "1.0.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/fuse-overlayfs-snapshotter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q7bkbbw81c2mlciar51h7qp4ac6ig1p767klq8g0az7hfn2isfh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/fuse-overlayfs-snapshotter"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-github-com-coreos-go-systemd-v22
                             go-github-com-containerd-log
                             go-github-com-containerd-continuity ; packaged
                             go-github-com-containerd-containerd))
    (home-page "https://github.com/containerd/fuse-overlayfs-snapshotter")
    (synopsis "snapshotter plugin for")
    (description
     "Unlike @@code{overlayfs}, @@code{fuse-overlayfs} can be used as a non-root user
on almost all recent distros.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-go-cni
  (package
    (name "go-github-com-containerd-go-cni")
    (version "1.1.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/go-cni")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "151fwj5clrmh3k7za71h3fwxdazrrrq0996sj7sm9wv37dgr82vi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/go-cni"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-containernetworking-cni))
    (home-page "https://github.com/containerd/go-cni")
    (synopsis "go-cni")
    (description
     "This package provides a generic CNI library to provide APIs for CNI plugin
interactions.  The library provides APIs to:.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-go-runc
  (package
    (name "go-github-com-containerd-go-runc")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/go-runc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03f6a44j24g64x0zwx6daqbssbka0wcvj3fkjz4rvqx5dz3n7xhf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/go-runc"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-sirupsen-logrus
                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-containerd-console ; packaged
                             ))
    (home-page "https://github.com/containerd/go-runc")
    (synopsis "go-runc")
    (description
     "This is a package for consuming the
@@url{https://github.com/opencontainers/runc,runc} binary in your Go
applications.  It tries to expose all the settings and features of the runc CLI.
If there is something missing then add it, its opensource!")
    (license license:asl2.0)))

(define-public go-github-com-containerd-imgcrypt
  (package
    (name "go-github-com-containerd-imgcrypt")
    (version "1.1.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/imgcrypt")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vr82v8g45zjm2khkq66fffs4ykkwnc0cjv4ylc5xbgb3z4zm4y7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/imgcrypt"))
    (propagated-inputs (list go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest
                             go-github-com-gogo-protobuf
                             go-github-com-containers-ocicrypt
                             go-github-com-containerd-typeurl
                             go-github-com-containerd-containerd))
    (home-page "https://github.com/containerd/imgcrypt")
    (synopsis "imgcrypt image encryption library and command line tool")
    (description
     "Project @@code{imgcrypt} is a non-core subproject of containerd.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-imgcrypt-v2
  (package
    (name "go-github-com-containerd-imgcrypt-v2")
    (version "2.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/imgcrypt")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0grgihiqw6m6a67qwx8ajzykjn0ga01v3k9wn04sbsb54xvlsk0h"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/containerd/imgcrypt/v2"
      #:unpack-path "github.com/containerd/imgcrypt"))
    (propagated-inputs (list go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest
                             go-github-com-containers-ocicrypt
                             go-github-com-containerd-typeurl-v2
                             go-github-com-containerd-platforms ; packaged
                             go-github-com-containerd-errdefs
                             go-github-com-containerd-containerd-v2))
    (home-page "https://github.com/containerd/imgcrypt")
    (synopsis "imgcrypt image encryption library and command line tool")
    (description
     "Project @@code{imgcrypt} is a non-core subproject of containerd.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-nri
  (package
    (name "go-github-com-containerd-nri")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/nri")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kx35zsawxxbqnyyv3rik89misqcx1ar8d30xndgbbqf2glz73w8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/nri"))
    (propagated-inputs (list go-github-com-opencontainers-runtime-tools
                             go-sigs-k8s-io-yaml
                             go-k8s-io-cri-api ; packaged
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-sys
                             go-github-com-tetratelabs-wazero
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo-v2
                             go-github-com-moby-sys-mountinfo
                             go-github-com-knqyf263-go-plugin
                             go-github-com-containerd-ttrpc))
    (home-page "https://github.com/containerd/nri")
    (synopsis "Node Resource Interface, Revisited")
    (description
     "NRI allows plugging domain- or vendor-specific custom logic into OCI- compatible
runtimes.  This logic can make controlled changes to containers or perform extra
actions outside the scope of OCI at certain points in a containers lifecycle.
This can be used, for instance, for improved allocation and management of
devices and other container resources.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-nydus-snapshotter
  (package
    (name "go-github-com-containerd-nydus-snapshotter")
    (version "0.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/nydus-snapshotter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14b2441yh07wn4mdwc2azmz8za612y1p21jlcfhl619zfhkkmlya"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/containerd/nydus-snapshotter"))
    (propagated-inputs (list go-k8s-io-utils
                        go-k8s-io-cri-api ; packaged
                        go-k8s-io-client-go
                        go-k8s-io-apimachinery
                        go-k8s-io-api
                        go-gotest-tools
                        go-gopkg-in-natefinch-lumberjack-v2
                        go-google-golang-org-grpc
                        go-golang-org-x-sys
                        go-golang-org-x-sync
                        go-golang-org-x-net
                        go-golang-org-x-exp
                        go-go-etcd-io-bbolt
                        go-github-com-urfave-cli-v2
                        go-github-com-stretchr-testify
                        go-github-com-sirupsen-logrus
                        go-github-com-rs-xid ; packaged
                        go-github-com-prometheus-client-model ; packaged
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-pkg-errors
                        go-github-com-pelletier-go-toml
                        go-github-com-opencontainers-runtime-spec ; packaged
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-mohae-deepcopy
                        go-github-com-moby-locker
                        go-github-com-klauspost-compress ; packaged
                        go-github-com-hashicorp-go-retryablehttp
                        go-github-com-gorilla-mux
                        go-github-com-google-go-containerregistry
                        go-github-com-golang-groupcache ; packaged
                        go-github-com-freddierice-go-losetup
                        go-github-com-docker-cli
                        go-github-com-distribution-reference
                        go-github-com-containers-ocicrypt
                        go-github-com-containerd-stargz-snapshotter-estargz
                        go-github-com-containerd-stargz-snapshotter
                        go-github-com-containerd-plugin
                        go-github-com-containerd-platforms ; packaged
                        go-github-com-containerd-nri
                        go-github-com-containerd-log
                        go-github-com-containerd-fifo
                        go-github-com-containerd-errdefs
                        go-github-com-containerd-continuity ; packaged
                        go-github-com-containerd-containerd-v2
                        go-github-com-containerd-containerd-api
                        go-github-com-containerd-cgroups-v3
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-aws-aws-sdk-go-v2-feature-s3-manager
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-aliyun-aliyun-oss-go-sdk
                        go-github-com-karpeleslab-reflink ; packaged
                        go-github-com-adalogics-go-fuzz-headers ; packaged
                        go-dario-cat-mergo))
    (home-page "https://github.com/containerd/nydus-snapshotter")
    (synopsis "Nydus Snapshotter")
    (description
     "Nydus-snapshotter is a @@strong{non-core} sub-project of containerd.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-otelttrpc
  (package
    (name "go-github-com-containerd-otelttrpc")
    (version "0.0.0-20240305015340-ea5083fda723")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/otelttrpc")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gdj13n3kd3b32xwljk4kwyyp4q6whkfkrm4mi5dpzpnln93ri6x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/otelttrpc"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opentelemetry-io-otel-metric ; packaged
                             go-go-opentelemetry-io-otel
                             go-github-com-stretchr-testify
                             go-github-com-containerd-ttrpc))
    (home-page "https://github.com/containerd/otelttrpc")
    (synopsis "ttrpc OpenTelemetry Instrumentation")
    (description
     "package otelttrpc implements Opentelemetry instrumentation support for
@code{ttRPC}.  The package implements unary client and server interceptors for
opentelemetry tracing instrumentation.  The interceptors can be passed as
ttrpc.@code{ClientOpts} and ttrpc.@code{ServerOpt} to @code{ttRPC} during client
and server creation.  The interceptors then automatically handle generating
trace spans for all called and served unary method calls.  If the rest of the
code is properly set up to collect and export tracing data to opentelemetry,
these spans should show up as part of the collected traces.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-protobuild
  (package
    (name "go-github-com-containerd-protobuild")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/protobuild")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f44q37qlzh1fkqx4fvhw00fdy191j0253lpjzw5icakjxir3dkp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/protobuild"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc go-golang-org-x-tools
                             go-github-com-pelletier-go-toml
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/containerd/protobuild")
    (synopsis "protobuild")
    (description "Build protobufs in Go, easily.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-stargz-snapshotter
  (package
    (name "go-github-com-containerd-stargz-snapshotter")
    (version "0.16.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/stargz-snapshotter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05l361ib00zwwa262y0i970df27knm5dnr89briw97gm2cn0wk6d"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/containerd/stargz-snapshotter"))
    (propagated-inputs (list go-k8s-io-cri-api ; packaged
                             go-k8s-io-client-go
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-google-golang-org-grpc
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-github-com-rs-xid ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest
                             go-github-com-moby-sys-mountinfo
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-hashicorp-go-retryablehttp
                             go-github-com-hashicorp-go-multierror
                             go-github-com-hanwen-go-fuse-v2
                             go-github-com-golang-groupcache ; packaged
                             go-github-com-gogo-protobuf
                             go-github-com-docker-go-metrics
                             go-github-com-docker-cli
                             go-github-com-distribution-reference
                             go-github-com-containerd-plugin
                             go-github-com-containerd-platforms ; packaged
                             go-github-com-containerd-log
                             go-github-com-containerd-errdefs
                             go-github-com-containerd-continuity ; packaged
                             go-github-com-containerd-containerd-v2
                             go-github-com-containerd-console ; packaged
                             ))
    (home-page "https://github.com/containerd/stargz-snapshotter")
    (synopsis "Stargz Snapshotter")
    (description
     "Read also introductory blog:
@@url{https://medium.com/nttlabs/startup-containers-in-lightning-speed-with-lazy-image-distribution-on-containerd-243d94522361,Startup
Containers in Lightning Speed with Lazy Image Distribution on Containerd}.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-stargz-snapshotter-estargz
  (package
    (name "go-github-com-containerd-stargz-snapshotter-estargz")
    (version "0.16.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/stargz-snapshotter")
             (commit (go-version->git-ref version
                                          #:subdir "estargz"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05l361ib00zwwa262y0i970df27knm5dnr89briw97gm2cn0wk6d"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/containerd/stargz-snapshotter/estargz"
      #:unpack-path "github.com/containerd/stargz-snapshotter"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-github-com-vbatts-tar-split
                             go-github-com-opencontainers-go-digest
                             go-github-com-klauspost-compress ; packaged
))
    (home-page "https://github.com/containerd/stargz-snapshotter")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-containerd-ttrpc
  (package
    (name "go-github-com-containerd-ttrpc")
    (version "1.2.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/ttrpc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fcd9nqkj1iz95h16i8ygiiazvbzmgrawpnvqcpbfhjwkx3sc1m1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/ttrpc"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-golang-org-x-sys
                             go-github-com-prometheus-procfs
                             go-github-com-golang-protobuf
                             go-github-com-gogo-protobuf
                             go-github-com-containerd-log))
    (home-page "https://github.com/containerd/ttrpc")
    (synopsis "ttrpc")
    (description
     "package ttrpc defines and implements a low level simple transfer protocol
optimized for low latency and reliable connections between processes on the same
host.  The protocol uses simple framing for sending requests, responses, and
data using multiple streams.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-zfs
  (package
    (name "go-github-com-containerd-zfs")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/zfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1936pkjm71c4x40ww7p8pnwcdcg06j34m1v5zlxywwsl434avscm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containerd/zfs"))
    (propagated-inputs (list go-github-com-mistifyio-go-zfs-v3
                             go-github-com-containerd-log
                             go-github-com-containerd-continuity ; packaged
                             go-github-com-containerd-containerd))
    (home-page "https://github.com/containerd/zfs")
    (synopsis "ZFS snapshotter plugin")
    (description "ZFS snapshotter plugin for containerd.")
    (license license:asl2.0)))

(define-public go-github-com-containerd-zfs-v2
  (package
    (name "go-github-com-containerd-zfs-v2")
    (version "2.0.0-rc.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containerd/zfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0448z4k61kp3dv97fj8sf8ghgb2zrwfpikb22izh8qns2ixj9pzy"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/containerd/zfs/v2"
      #:unpack-path "github.com/containerd/zfs"))
    (propagated-inputs (list go-github-com-mistifyio-go-zfs-v3
                             go-github-com-containerd-plugin
                             go-github-com-containerd-platforms ; packaged
                             go-github-com-containerd-log
                             go-github-com-containerd-continuity ; packaged
                             go-github-com-containerd-containerd-v2))
    (home-page "https://github.com/containerd/zfs")
    (synopsis "ZFS snapshotter plugin")
    (description "ZFS snapshotter plugin for containerd.")
    (license license:asl2.0)))

(define-public go-github-com-containernetworking-cni
  (package
    (name "go-github-com-containernetworking-cni")
    (version "1.2.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containernetworking/cni")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10f04kznv641azyznxfc88xcwrm21kv3lm8m8wc1y12vz3arri51"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containernetworking/cni"))
    (propagated-inputs (list go-github-com-vishvananda-netns
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo-v2))
    (home-page "https://github.com/containernetworking/cni")
    (synopsis "CNI - the Container Network Interface")
    (description
     "CNI (), a @@url{https://cncf.io,Cloud Native Computing Foundation} project,
consists of a specification and libraries for writing plugins to configure
network interfaces in Linux containers, along with a number of supported
plugins.  CNI concerns itself only with network connectivity of containers and
removing allocated resources when the container is deleted.  Because of this
focus, CNI has a wide range of support and the specification is simple to
implement.")
    (license license:asl2.0)))

(define-public go-github-com-containernetworking-plugins
  (package
    (name "go-github-com-containernetworking-plugins")
    (version "1.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containernetworking/plugins")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "164savm1iic5ax2xi4zgy9lm7wk8kjy22n4is463lj9rkbp4s6xn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/containernetworking/plugins"))
    (propagated-inputs (list go-sigs-k8s-io-knftables
                             go-golang-org-x-sys
                             go-github-com-vishvananda-netlink
                             go-github-com-safchain-ethtool
                             go-github-com-opencontainers-selinux ; packaged
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo-v2
                             go-github-com-networkplumbing-go-nft
                             go-github-com-mattn-go-shellwords
                             go-github-com-insomniacslk-dhcp ; packaged
                             go-github-com-godbus-dbus-v5
                             go-github-com-coreos-go-systemd-v22
                             go-github-com-coreos-go-iptables
                             go-github-com-containernetworking-cni
                             go-github-com-buger-jsonparser
                             go-github-com-alexflint-go-filemutex
                             go-github-com-microsoft-hcsshim))
    (home-page "https://github.com/containernetworking/plugins")
    (synopsis "Plugins")
    (description
     "Some CNI network plugins, maintained by the containernetworking team.  For more
information, see the @@url{https://www.cni.dev,CNI website}.")
    (license license:asl2.0)))

(define-public go-github-com-containers-image-v5
  (package
    (name "go-github-com-containers-image-v5")
    (version "5.35.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containers/image")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12i8idcs76acik9y9j2i3xslbxc31r3jzq14b8c99f2sqdz5pp3c"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/containers/image/v5"
      #:unpack-path "github.com/containers/image"))
    (propagated-inputs (list go-gopkg-in-yaml-v3 ; packaged
                        go-golang-org-x-term ; packaged
                        go-golang-org-x-sync ; packaged
                        go-golang-org-x-oauth2 ; packaged
                        go-golang-org-x-crypto ; packaged
                        go-go-etcd-io-bbolt
                        go-github-com-vbauerster-mpb-v8
                        go-github-com-vbatts-tar-split
                        go-github-com-ulikunitz-xz
                        go-github-com-sylabs-sif-v2
                        go-github-com-stretchr-testify ; packaged
                        go-github-com-sirupsen-logrus
                        go-github-com-sigstore-sigstore
                        go-github-com-sigstore-rekor
                        go-github-com-sigstore-fulcio
                        go-github-com-secure-systems-lab-go-securesystemslib
                        go-github-com-santhosh-tekuri-jsonschema-v6
                        go-github-com-proglottis-gpgme
                        go-github-com-ostreedev-ostree-go ; packaged
                        go-github-com-opencontainers-selinux ; packaged
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-mattn-go-sqlite3 ; packaged
                        go-github-com-manifoldco-promptui
                        go-github-com-klauspost-pgzip
                        go-github-com-klauspost-compress
                        go-github-com-hashicorp-go-retryablehttp
                        go-github-com-go-openapi-strfmt
                        go-github-com-docker-go-connections ; packaged
                        go-github-com-docker-docker-credential-helpers
                        go-github-com-docker-docker
                        go-github-com-docker-distribution
                        go-github-com-docker-cli
                        go-github-com-distribution-reference
                        go-github-com-cyberphone-json-canonicalization
                        go-github-com-containers-storage
                        go-github-com-containers-ocicrypt
                        go-github-com-containers-libtrust
                        go-github-com-burntsushi-toml
                        go-dario-cat-mergo))
    (home-page "https://github.com/containers/image")
    (synopsis "")
    (description
     "The package image provides libraries and commands to interact with container
images.")
    (license license:asl2.0)))

(define-public go-github-com-containers-libtrust
  (package
    (name "go-github-com-containers-libtrust")
    (version "0.0.0-20230121012942-c1716e8a8d01")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containers/libtrust")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xlyiravmpryz4piaczjwg09q599nfxr3vlgnbv55x3jvy71j0yg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/containers/libtrust"))
    (home-page "https://github.com/containers/libtrust")
    (synopsis "libtrust")
    (description
     "Package libtrust provides an interface for managing authentication and
authorization using public key cryptography.  Authentication is handled using
the identity attached to the public key and verified through TLS x509
certificates, a key challenge, or signature.  Authorization and access control
is managed through a trust graph distributed between both remote trust servers
and locally cached and managed data.")
    (license license:asl2.0)))

(define-public go-github-com-containers-ocicrypt
  (package
    (name "go-github-com-containers-ocicrypt")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containers/ocicrypt")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hy08qfb68hggw343axaj2k262zv40a7gb464kvp5j0f4qi43p74"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/containers/ocicrypt"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-google-golang-org-grpc
                             go-golang-org-x-term
                             go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-stefanberger-go-pkcs11uri
                             go-github-com-smallstep-pkcs7
                             go-github-com-sirupsen-logrus
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest
                             go-github-com-miekg-pkcs11 ; packaged
                             go-github-com-golang-protobuf
                             go-github-com-go-jose-go-jose-v4 ; packaged
                             ))
    (home-page "https://github.com/containers/ocicrypt")
    (synopsis "OCIcrypt Library")
    (description
     "The @@code{ocicrypt} library is the OCI image spec implementation of container
image encryption.  More details of the spec can be seen in the
@@url{https://github.com/opencontainers/image-spec/pull/775,OCI repository}.
The purpose of this library is to encode spec structures and consts in code, as
well as provide a consistent implementation of image encryption across container
runtimes and build tools.")
    (license license:asl2.0)))

(define-public go-github-com-containers-storage
  (package
    (name "go-github-com-containers-storage")
    (version "1.56.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/containers/storage")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cwnih5ikkrr025a5xk3avpdgarwyr5lxv6pl7pjc3zck4zb13im"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/containers/storage"))
    (propagated-inputs (list go-gotest-tools
                        go-golang-org-x-sys
                        go-golang-org-x-exp
                        go-github-com-vbatts-tar-split
                        go-github-com-ulikunitz-xz
                        go-github-com-tchap-go-patricia-v2
                        go-github-com-stretchr-testify
                        go-github-com-sirupsen-logrus
                        go-github-com-opencontainers-selinux ; packaged
                        go-github-com-opencontainers-runtime-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-moby-sys-user
                        go-github-com-moby-sys-mountinfo
                        go-github-com-moby-sys-capability ; packaged
                        go-github-com-mistifyio-go-zfs-v3
                        go-github-com-mattn-go-shellwords
                        go-github-com-klauspost-pgzip
                        go-github-com-klauspost-compress ; packaged
                        go-github-com-json-iterator-go
                        go-github-com-hashicorp-go-multierror
                        go-github-com-google-go-intervals
                        go-github-com-docker-go-units
                        go-github-com-cyphar-filepath-securejoin
                        go-github-com-containerd-stargz-snapshotter-estargz
                        go-github-com-microsoft-hcsshim
                        go-github-com-microsoft-go-winio
                        go-github-com-burntsushi-toml))
    (home-page "https://github.com/containers/storage")
    (synopsis #f)
    (description
     "@@code{storage} is a Go library which aims to provide methods for storing
filesystem layers, container images, and containers.  A
@@code{containers-storage} CLI wrapper is also included for manual and scripting
use.")
    (license license:asl2.0)))

(define-public go-github-com-coredns-caddy
  (package
    (name "go-github-com-coredns-caddy")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/coredns/caddy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0n687hqj97nl2v3fzlk0lpxnz3a5n457w21vjz8ggqcj6frqmjnl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/coredns/caddy"))
    (propagated-inputs (list go-github-com-google-uuid
                             go-github-com-flynn-go-shlex))
    (home-page "https://github.com/coredns/caddy")
    (synopsis "Menu")
    (description "Package caddy implements the Caddy server manager.")
    (license license:asl2.0)))

(define-public go-github-com-coredns-coredns
  (package
    (name "go-github-com-coredns-coredns")
    (version "1.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/coredns/coredns")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0py5kasr0lkigfrxbrckcnx7sav4j8n4cmsgz92jnj7gnz5jzas6"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/coredns/coredns"))
    (propagated-inputs (list go-k8s-io-klog-v2
                        go-k8s-io-client-go
                        go-k8s-io-apimachinery
                        go-k8s-io-api
                        go-gopkg-in-datadog-dd-trace-go-v1
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-api
                        go-golang-org-x-sys
                        go-golang-org-x-crypto
                        go-go-uber-org-automaxprocs ; packaged
                        go-go-etcd-io-etcd-client-v3
                        go-go-etcd-io-etcd-api-v3
                        go-github-com-quic-go-quic-go ; packaged
                        go-github-com-prometheus-common
                        go-github-com-prometheus-client-model ; packaged
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-oschwald-geoip2-golang
                        go-github-com-openzipkin-zipkin-go ; packaged
                        go-github-com-openzipkin-contrib-zipkin-go-opentracing
                        go-github-com-opentracing-opentracing-go
                        go-github-com-miekg-dns
                        go-github-com-matttproud-golang-protobuf-extensions
                        go-github-com-infobloxopen-go-trees
                        go-github-com-grpc-ecosystem-grpc-opentracing
                        go-github-com-go-logr-logr
                        go-github-com-farsightsec-golang-framestream
                        go-github-com-expr-lang-expr
                        go-github-com-dnstap-golang-dnstap
                        go-github-com-coredns-caddy
                        go-github-com-aws-aws-sdk-go-v2-service-secretsmanager
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go
                        go-github-com-apparentlymart-go-cidr
                        go-github-com-azure-go-autorest-autorest-azure-auth
                        go-github-com-azure-go-autorest-autorest
                        go-github-com-azure-azure-sdk-for-go))
    (home-page "https://github.com/coredns/coredns")
    (synopsis "Compilation from Source")
    (description
     "@code{CoreDNS} is a DNS server/forwarder, written in Go, that chains
@@url{https://coredns.io/plugins,plugins}.  Each plugin performs a (DNS)
function.")
    (license license:asl2.0)))

(define-public go-github-com-coreos-go-iptables
  (package
    (name "go-github-com-coreos-go-iptables")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/coreos/go-iptables")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xxzqz9np93d8iig5dwjjpb78pqdj74zr91qb11r7g30nkcak5sw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/coreos/go-iptables"))
    (home-page "https://github.com/coreos/go-iptables")
    (synopsis "go-iptables")
    (description "Go bindings for iptables utility.")
    (license license:asl2.0)))

(define-public go-github-com-coreos-go-systemd
  (package
    (name "go-github-com-coreos-go-systemd")
    (version "0.0.0-20191104093116-d3cd4ed1dbcf")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/coreos/go-systemd")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "193mgqn7n4gbb8jb5kyn6ml4lbvh4xs55qpjnisaz7j945ik3kd8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/coreos/go-systemd"))
    (home-page "https://github.com/coreos/go-systemd")
    (synopsis "go-systemd")
    (description "Go bindings to systemd.  The project has several packages:.")
    (license license:asl2.0)))

(define-public go-github-com-couchbase-ghistogram
  (package
    (name "go-github-com-couchbase-ghistogram")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/couchbase/ghistogram")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05nhcp5i8l9ndcf18bn58qgm6vh10d59xnxz6qikk0sajyy4r2s1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/couchbase/ghistogram"))
    (home-page "https://github.com/couchbase/ghistogram")
    (synopsis "ghistogram")
    (description
     "Simple histogram for golang that avoids runtime memory allocations.")
    (license license:asl2.0)))

(define-public go-github-com-couchbase-go-couchbase
  (package
    (name "go-github-com-couchbase-go-couchbase")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/couchbase/go-couchbase")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dpy8148a1fz47yibn8mzl29savqg4jkfvyp8vvgsi0zp7jmwj89"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/couchbase/go-couchbase"))
    (home-page "https://github.com/couchbase/go-couchbase")
    (synopsis "A smart client for couchbase in go")
    (description "Package couchbase provides a smart client for go.")
    (license license:expat)))

(define-public go-github-com-couchbase-moss
  (package
    (name "go-github-com-couchbase-moss")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/couchbase/moss")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wxy8d6116w5a3rwsjbkc9p8x1r2q011gxwx2ciqr2if4g59i601"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/couchbase/moss"))
    (propagated-inputs (list go-github-com-mschoch-smat
                             go-github-com-couchbase-ghistogram
                             go-github-com-blevesearch-mmap-go))
    (home-page "https://github.com/couchbase/moss")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-couchbase-vellum
  (package
    (name "go-github-com-couchbase-vellum")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/couchbase/vellum")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1an304lm3q6y5f18c17rs8nv7kg9fd13mj6p7h2qf6ndjr7hzypg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/couchbase/vellum"))
    (propagated-inputs (list go-github-com-willf-bitset
                             go-github-com-spf13-cobra
                             go-github-com-blevesearch-mmap-go))
    (home-page "https://github.com/couchbase/vellum")
    (synopsis "vellum")
    (description
     "Package vellum is a library for building, serializing and executing an FST
(finite state transducer).")
    (license license:asl2.0)))

(define-public go-github-com-cpu-goacmedns
  (package
    (name "go-github-com-cpu-goacmedns")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cpu/goacmedns")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11md7yc1qccjs9x4dzjn136wkix3j54slisnnbgjsdq87awm9g7r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cpu/goacmedns"))
    (home-page "https://github.com/cpu/goacmedns")
    (synopsis "goacmedns")
    (description
     "This package provides a Go library to handle
@@url{https://github.com/joohoi/acme-dns,acme-dns} client communication and
persistent account storage.")
    (license license:expat)))

(define-public go-github-com-cpuguy83-dockercfg
  (package
    (name "go-github-com-cpuguy83-dockercfg")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cpuguy83/dockercfg")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "055gxyq0wvyr9lap6rd49ijyg846mcpd1kwx9w69qj0pszvh2v96"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cpuguy83/dockercfg"))
    (home-page "https://github.com/cpuguy83/dockercfg")
    (synopsis "github.com/cpuguy83/dockercfg")
    (description
     "Go library to load docker CLI configs, auths, etc.  with minimal deps.  So far
the only deps are on the stdlib.")
    (license license:expat)))

(define-public go-github-com-crackcomm-go-gitignore
  (package
    (name "go-github-com-crackcomm-go-gitignore")
    (version "0.0.0-20241020182519-7843d2ba8fdf")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/crackcomm/go-gitignore")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vabnacz1bk2lvln3bjg4i6wj1lsb6pxy55xzkjp8wdhd8gmk47b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/crackcomm/go-gitignore"))
    (home-page "https://github.com/crackcomm/go-gitignore")
    (synopsis "go-git-ignore")
    (description
     "ignore is a library which returns a new ignorer object which can test against
various paths.  This is particularly useful when trying to filter files based on
a .gitignore document.")
    (license license:expat)))

(define-public go-github-com-creack-pty-v2
  (package
    (name "go-github-com-creack-pty-v2")
    (version "2.0.0-20240228220112-08e77a045af8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/creack/pty")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03g863r7nxxkg0c7jbv5pgr53g2bvx4f7x3ngypzr0aa9rjmh7ic"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/creack/pty/v2"
      #:unpack-path "github.com/creack/pty"))
    (home-page "https://github.com/creack/pty")
    (synopsis "pty")
    (description
     "Package pty provides functions for working with Unix terminals.")
    (license license:expat)))

(define-public go-github-com-cristalhq-acmd
  (package
    (name "go-github-com-cristalhq-acmd")
    (version "0.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cristalhq/acmd")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0blbc49dyxhyzyqrxijbis8yp7da6hqpf82c6yy3lwf65dv364y8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cristalhq/acmd"))
    (home-page "https://github.com/cristalhq/acmd")
    (synopsis "acmd")
    (description
     "Package acmd is a simple, useful and opinionated CLI package in Go.")
    (license license:expat)))

(define-public go-github-com-crocmagnon-fatcontext
  (package
    (name "go-github-com-crocmagnon-fatcontext")
    (version "0.5.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Crocmagnon/fatcontext")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1il47zc6451ianjn16a069gvdmwy22z1a47yyyr54gk0g4vppyws"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/Crocmagnon/fatcontext"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/Crocmagnon/fatcontext")
    (synopsis "fatcontext")
    (description
     "@@code{fatcontext} is a Go linter which detects potential fat contexts in loops
or function literals.  They can lead to performance issues, as documented here:
@@url{https://gabnotes.org/fat-contexts/,https://gabnotes.org/fat-contexts/}.")
    (license license:expat)))

(define-public go-github-com-cronokirby-saferith
  (package
    (name "go-github-com-cronokirby-saferith")
    (version "0.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cronokirby/saferith")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0g510g9zcqp6rjjxlqdv72jsb0m7hmahcia3nvmw5gac1nml7q2q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cronokirby/saferith"))
    (home-page "https://github.com/cronokirby/saferith")
    (synopsis "saferith")
    (description
     "The purpose of this package is to provide a version of arbitrary sized
arithmetic, in a safer (i.e.  constant-time) way, for cryptography.")
    (license license:expat)))

(define-public go-github-com-curioswitch-go-reassign
  (package
    (name "go-github-com-curioswitch-go-reassign")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/curioswitch/go-reassign")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04kpa5wqnwcbn11k61629jdp7f3fp00abwi49i4cy02pgd2zj5sp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/curioswitch/go-reassign"))
    (propagated-inputs (list go-golang-org-x-tools go-github-com-magefile-mage))
    (home-page "https://github.com/curioswitch/go-reassign")
    (synopsis "reassign")
    (description
     "This package provides a linter that detects when reassigning a top-level
variable in another package.")
    (license license:expat)))

(define-public go-github-com-cyberphone-json-canonicalization
  (package
    (name "go-github-com-cyberphone-json-canonicalization")
    (version "0.0.0-20241213102144-19d51d7fe467")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cyberphone/json-canonicalization")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1g1q784rsj5jam7zs049dlb637dqsswkf79ncsjy7x8rl18gg8bs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cyberphone/json-canonicalization"))
    (home-page "https://github.com/cyberphone/json-canonicalization")
    (synopsis "JSON Canonicalization")
    (description
     "Cryptographic operations like hashing and signing depend on that the target data
does not change during serialization, transport, or parsing.  By applying the
rules defined by JCS (JSON Canonicalization Scheme), data provided in the JSON
[@@url{https://tools.ietf.org/html/rfc8259,RFC8259}] format can be exchanged \"as
is\", while still being subject to secure cryptographic operations.  JCS achieves
this by building on the serialization formats for JSON primitives as defined by
ECMAScript [@@url{https://ecma-international.org/ecma-262/,ES}], constraining
JSON data to the I-JSON [@@url{https://tools.ietf.org/html//rfc7493,RFC7493}]
subset, and through a platform independent property sorting scheme.")
    (license license:asl2.0)))

(define-public go-github-com-cznic-b
  (package
    (name "go-github-com-cznic-b")
    (version "0.0.0-20181122101859-a26611c4d92d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cznic/b")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0khydf76vmg4h5zj1yzvfyd6xm81zybhxalpwsw0lhk7w9rfpp49"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/cznic/b"))
    (home-page "https://github.com/cznic/b")
    (synopsis #f)
    (description "Package b implements the B+tree flavor of a BTree.")
    (license license:bsd-3)))

(define-public go-github-com-daixiang0-gci
  (package
    (name "go-github-com-daixiang0-gci")
    (version "0.13.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/daixiang0/gci")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fw97svj0wa2a8dp5qkd7kb6xwf89mg38dq6awzjml9895lyml4f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/daixiang0/gci"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-tools
                             go-golang-org-x-sync
                             go-golang-org-x-mod
                             go-go-uber-org-zap
                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-pmezard-go-difflib
                             go-github-com-hexops-gotextdiff
                             go-github-com-golangci-modinfo))
    (home-page "https://github.com/daixiang0/gci")
    (synopsis "GCI")
    (description
     "GCI, a tool that controls Go package import order and makes it always
deterministic.")
    (license license:bsd-3)))

(define-public go-github-com-danaugrs-go-tsne
  (package
    (name "go-github-com-danaugrs-go-tsne")
    (version "0.0.0-20220306155740-2250969e057f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/danaugrs/go-tsne")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yy86pv8j6w3x4v4g2n17if8d50d3izc28lm2f1c87dmw5nb51pp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/danaugrs/go-tsne"))
    (home-page "https://github.com/danaugrs/go-tsne")
    (synopsis "go-tsne")
    (description
     "This package provides a Go implementation of
@@url{https://lvdmaaten.github.io/tsne/,t-Distributed Stochastic Neighbor
Embedding (t-SNE)}, a prize-winning technique for dimensionality reduction
particularly well suited for visualizing high-dimensional datasets.")
    (license license:bsd-3)))

(define-public go-github-com-danieljoos-wincred
  (package
    (name "go-github-com-danieljoos-wincred")
    (version "1.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/danieljoos/wincred")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cgf74srid92gzkd094mwp0jvakgi0a22a8hpl7v9w28a9d61bf3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/danieljoos/wincred"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/danieljoos/wincred")
    (synopsis "wincred")
    (description
     "Package wincred provides primitives for accessing the Windows Credentials
Management API. This includes functions for retrieval, listing and storage of
credentials as well as Go structures for convenient access to the credential
data.")
    (license license:expat)))

(define-public go-github-com-dave-astrid
  (package
    (name "go-github-com-dave-astrid")
    (version "0.0.0-20170323122508-8c2895878b14")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dave/astrid")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fg6szwsh3cq32g1kzsdqhg6zgi5klsra9ncy5cl5qi1m6aahkfr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dave/astrid"))
    (home-page "https://github.com/dave/astrid")
    (synopsis "Astrid")
    (description "Package astrid is a collection of AST utilities.")
    (license license:expat)))

(define-public go-github-com-dave-brenda
  (package
    (name "go-github-com-dave-brenda")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dave/brenda")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bcc06ifb9hg0g4qqfrqai1m2r4n1gwix3jaydjzq38c7zwcyd1v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dave/brenda"))
    (home-page "https://github.com/dave/brenda")
    (synopsis "Brenda")
    (description "Package brenda is a boolean expression solver for Go AST.")
    (license license:expat)))

(define-public go-github-com-dave-courtney
  (package
    (name "go-github-com-dave-courtney")
    (version "0.4.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dave/courtney")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09mqmprs8ln5nv5lmpi5nlpglly7kk4npzj95835g5s5l6ck6jgc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dave/courtney"))
    (propagated-inputs (list go-golang-org-x-tools go-github-com-pkg-errors
                             go-github-com-dave-patsy
                             go-github-com-dave-brenda
                             go-github-com-dave-astrid))
    (home-page "https://github.com/dave/courtney")
    (synopsis "Courtney")
    (description
     "Courtney makes your code coverage more meaningful, by excluding some of the less
important parts.")
    (license license:expat)))

(define-public go-github-com-dave-patsy
  (package
    (name "go-github-com-dave-patsy")
    (version "0.0.0-20210517141501-957256f50cba")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dave/patsy")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f4xc95yr2bjrpnncj1ffiwghmxkx5bjd10082xai8npqiayy30w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dave/patsy"))
    (propagated-inputs (list go-github-com-pkg-errors))
    (home-page "https://github.com/dave/patsy")
    (synopsis "Patsy")
    (description
     "package patsy is a package helper utility.  It allows the conversion of go
package paths to filesystem directories and vice versa.")
    (license license:expat)))

(define-public go-github-com-davidmz-go-pageant
  (package
    (name "go-github-com-davidmz-go-pageant")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/davidmz/go-pageant")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0b333bnzi8wncakff7b890gg4md9pcbhs9fdv5bhh68r5pm2dz41"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/davidmz/go-pageant"))
    (propagated-inputs (list go-golang-org-x-crypto))
    (home-page "https://github.com/davidmz/go-pageant")
    (synopsis #f)
    (description
     "Package pageant provides an interface to @code{PyTTY} pageant.exe utility.  This
package is windows-only.")
    (license license:expat)))

(define-public go-github-com-dblohm7-wingoes
  (package
    (name "go-github-com-dblohm7-wingoes")
    (version "0.0.0-20240820181039-f2b84150679e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dblohm7/wingoes")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bnw0bgns93zh5wyj73nv1mjbql9ffrd986bg3cxq399ay2bzf3m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/dblohm7/wingoes"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-sys
                             go-golang-org-x-exp go-github-com-tc-hib-winres))
    (home-page "https://github.com/dblohm7/wingoes")
    (synopsis
     "wingoes, an opinionated library for writing Win32 programs in Go")
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-dchote-go-openal
  (package
    (name "go-github-com-dchote-go-openal")
    (version "0.0.0-20171116030048-f4a9a141d372")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dchote/go-openal")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vis9ya4m5wjmc3ggqag3l43mwbdwmdjgi7bg3azg955bqksg8r0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dchote/go-openal"))
    (home-page "https://github.com/dchote/go-openal")
    (synopsis #f)
    (description #f)
    (license license:bsd-2)))

(define-public go-github-com-denis-tingaikin-go-header
  (package
    (name "go-github-com-denis-tingaikin-go-header")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/denis-tingaikin/go-header")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zzg0kynxq4sd6xa987mk6liyin0y3pwrf49g3c5hwv976whc2ds"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/denis-tingaikin/go-header"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/denis-tingaikin/go-header")
    (synopsis "go-header")
    (description "Copyright (c) 2020-2022 Denis Tingaikin.")
    (license license:gpl3)))

(define-public go-github-com-denisbrodbeck-machineid
  (package
    (name "go-github-com-denisbrodbeck-machineid")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/denisbrodbeck/machineid")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "075rqb2f9hla9jwc6823jkkb3xcv6azz3phndbssssn2dps07cib"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/denisbrodbeck/machineid"))
    (home-page "https://github.com/denisbrodbeck/machineid")
    (synopsis
     "machineid provides support for reading the unique machine id of most host OS's (without admin privileges)")
    (description
     "Package machineid provides support for reading the unique machine id of most OSs
(without admin privileges).")
    (license license:expat)))

(define-public go-github-com-denisenkom-go-mssqldb
  (package
    (name "go-github-com-denisenkom-go-mssqldb")
    (version "0.12.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/denisenkom/go-mssqldb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12zd98r3p9nvjd1cnlzfzdifk4smkq8zffw7qidw1ni90zl26gy2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/denisenkom/go-mssqldb"))
    (propagated-inputs (list go-golang-org-x-crypto
                        go-github-com-golang-sql-sqlexp
                        go-github-com-golang-sql-civil
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/denisenkom/go-mssqldb")
    (synopsis "A pure Go MSSQL driver for Go's database/sql package")
    (description
     "package mssql implements the TDS protocol used to connect to MS SQL Server
(sqlserver) database servers.")
    (license license:bsd-3)))

(define-public go-github-com-depcheck-test-depcheck-test
  (package
    (name "go-github-com-depcheck-test-depcheck-test")
    (version "0.0.0-20220607135614-199033aaa936")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/depcheck-test/depcheck-test")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nnhdf7qldhlk8l7ica2j41flnw8qclbpbwghjakj3r884prfhjb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/depcheck-test/depcheck-test"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/depcheck-test/depcheck-test")
    (synopsis #f)
    (description
     "This Go package provides a method to ensure unwanted dependencies don't creep
into your code.")
    (license license:asl2.0)))

(define-public go-github-com-devigned-tab
  (package
    (name "go-github-com-devigned-tab")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/devigned/tab")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17r98k3bcyjkq5mz2k9i2sxbzgkq05h5pqg5mn7nyrvsf09x99g5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/devigned/tab"))
    (home-page "https://github.com/devigned/tab")
    (synopsis "Trace Abstraction (tab)")
    (description
     "@code{OpenTracing} and @code{OpenCensus} abstraction for tracing and logging.")
    (license license:expat)))

(define-public go-github-com-dgraph-io-badger-v3
  (package
    (name "go-github-com-dgraph-io-badger-v3")
    (version "3.2103.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dgraph-io/badger")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xzaxwykriygd60xqlmnfzad4r1ai4329ihc3d2s4q4snjkw8y0m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dgraph-io/badger/v3"
      #:unpack-path "github.com/dgraph-io/badger"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-golang-org-x-net
                             go-go-opencensus-io ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-pkg-errors
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-google-flatbuffers ; packaged
                             go-github-com-golang-snappy
                             go-github-com-golang-protobuf
                             go-github-com-gogo-protobuf
                             go-github-com-dustin-go-humanize ; packaged
                             go-github-com-dgraph-io-ristretto
                             go-github-com-cespare-xxhash))
    (home-page "https://github.com/dgraph-io/badger")
    (synopsis "BadgerDB")
    (description
     "Package badger implements an embeddable, simple and fast key-value database,
written in pure Go.  It is designed to be highly performant for both reads and
writes simultaneously.  Badger uses Multi-Version Concurrency Control (MVCC),
and supports transactions.  It runs transactions concurrently, with serializable
snapshot isolation guarantees.")
    (license license:asl2.0)))

(define-public go-github-com-dgraph-io-badger-v2
  (package
    (name "go-github-com-dgraph-io-badger-v2")
    (version "2.2007.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dgraph-io/badger")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17jnw7rr59gbjs68z9v4vw251qxiv19xwq0cfzqaflppy3w9yfih"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dgraph-io/badger/v2"
      #:unpack-path "github.com/dgraph-io/badger"))
    (propagated-inputs
     (list go-github-com-cespare-xxhash      ; packaged
           go-github-com-dgraph-io-ristretto ; packaged
           go-github-com-dgryski-go-farm     ; packaged
           go-github-com-dustin-go-humanize  ; packaged
           go-github-com-golang-protobuf     ; packaged
           go-github-com-golang-snappy       ; packaged
           go-github-com-klauspost-compress  ; packaged
           go-github-com-pkg-errors          ; packaged
           go-github-com-spf13-cobra         ; packaged
           go-github-com-stretchr-testify    ; packaged
           go-golang-org-x-net               ; packaged
           go-golang-org-x-sys               ; packaged
           ))
    (home-page "https://github.com/dgraph-io/badger")
    (synopsis "BadgerDB")
    (description
     "Package badger implements an embeddable, simple and fast key-value database,
written in pure Go.  It is designed to be highly performant for both reads and
writes simultaneously.  Badger uses Multi-Version Concurrency Control (MVCC),
and supports transactions.  It runs transactions concurrently, with serializable
snapshot isolation guarantees.")
    (license license:asl2.0)))

(define-public go-github-com-dgrijalva-jwt-go
  (package
    (name "go-github-com-dgrijalva-jwt-go")
    (version "3.2.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dgrijalva/jwt-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08m27vlms74pfy5z79w67f9lk9zkx6a9jd68k3c4msxy75ry36mp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dgrijalva/jwt-go"))
    (home-page "https://github.com/dgrijalva/jwt-go")
    (synopsis "jwt-go")
    (description
     "Package jwt is a Go implementation of JSON Web Tokens:
@@url{http://self-issued.info/docs/draft-jones-json-web-token.html,http://self-issued.info/docs/draft-jones-json-web-token.html}.")
    (license license:expat)))

(define-public go-github-com-dhui-dktest
  (package
    (name "go-github-com-dhui-dktest")
    (version "0.4.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dhui/dktest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1v6963vahmg0ykz3912xzpc98hyqjb1wfn4bclaxx2k362qzfm06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dhui/dktest"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-lib-pq
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-docker-docker))
    (home-page "https://github.com/dhui/dktest")
    (synopsis "dktest")
    (description
     "Package dktest provides an easy way to write integration tests using Docker.")
    (license license:asl2.0)))

(define-public go-github-com-die-net-lrucache
  (package
    (name "go-github-com-die-net-lrucache")
    (version "0.0.0-20240714232319-26322ba4bc23")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/die-net/lrucache")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p04ivili9w1nykxm13sk9y4lyv08pl8bmvm8bqvrlx8fw5ac18d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/die-net/lrucache"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-gregjones-httpcache))
    (home-page "https://github.com/die-net/lrucache")
    (synopsis "LruCache")
    (description
     "Package lrucache provides a byte-size-limited implementation of httpcache.Cache
that stores data in memory.")
    (license license:asl2.0)))

(define-public go-github-com-digitalocean-doctl
  (package
    (name "go-github-com-digitalocean-doctl")
    (version "1.120.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/digitalocean/doctl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mz8lxqvygac5941x14lf3bidlw1zp4pmgf7c59b1z9r056032np"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/digitalocean/doctl"))
    (propagated-inputs
     (list go-github-com-apache-openwhisk-client-go
           go-github-com-armon-circbuf
           go-github-com-blang-semver ; packaged
           go-github-com-charmbracelet-bubbles
           go-github-com-charmbracelet-bubbletea
           go-github-com-charmbracelet-lipgloss
           go-github-com-creack-pty
           go-github-com-digitalocean-godo ; packaged
           go-github-com-docker-cli
           go-github-com-docker-docker
           go-github-com-dustin-go-humanize ; packaged
           go-github-com-erikgeiser-promptkit
           go-github-com-fatih-color
           go-github-com-gobwas-glob
           go-github-com-google-uuid
           go-github-com-gorilla-websocket
           go-github-com-hashicorp-go-multierror
           go-github-com-joho-godotenv ; packaged
           go-github-com-kballard-go-shellquote ; packaged
           go-github-com-makenowjust-heredoc
           go-github-com-mattn-go-isatty
           go-github-com-mitchellh-copystructure
           go-github-com-muesli-reflow
           go-github-com-muesli-termenv
           go-github-com-natefinch-pie
           go-github-com-opencontainers-image-spec ; packaged
           go-github-com-pkg-browser
           go-github-com-pkg-errors
           go-github-com-sclevine-spec
           go-github-com-shiena-ansicolor
           go-github-com-spf13-cobra
           go-github-com-spf13-viper
           go-github-com-stretchr-testify
           go-go-uber-org-mock
           go-golang-org-x-crypto ; packaged
           go-golang-org-x-oauth2 ; packaged
           go-golang-org-x-sync ; packaged
           go-golang-org-x-sys ; packaged
           go-golang-org-x-term ; packaged
           go-gopkg-in-yaml-v2 ; packaged
           go-gopkg-in-yaml-v3 ; packaged
           go-k8s-io-api
           go-k8s-io-apimachinery
           go-k8s-io-client-go
           go-sigs-k8s-io-yaml ; packaged
           ))
    (home-page "https://github.com/digitalocean/doctl")
    (synopsis "Installing")
    (description
     "See the @@url{https://www.digitalocean.com/docs/apis-clis/doctl/reference/,full
reference documentation} for information about each available command.")
    (license license:asl2.0)))

(define-public go-github-com-digitalocean-go-libvirt
  (package
    (name "go-github-com-digitalocean-go-libvirt")
    (version "0.0.0-20241216201552-9fbdb61a21af")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/digitalocean/go-libvirt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16q5d9slp4d7s4rxvglh6k5hk6rw2kcll7zmmqag7icslfgbpxz0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/digitalocean/go-libvirt"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-crypto
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/digitalocean/go-libvirt")
    (synopsis "libvirt")
    (description "Package libvirt is a pure Go interface to libvirt.")
    (license license:asl2.0)))

(define-public go-github-com-digitalocean-go-qemu
  (package
    (name "go-github-com-digitalocean-go-qemu")
    (version "0.0.0-20230711162256-2e3d0186973e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/digitalocean/go-qemu")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vazyj3m6204grywla33clzkj5qa2xrzfa4l58bbysh2gch8la0i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/digitalocean/go-qemu"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-fatih-camelcase
                             go-github-com-digitalocean-go-libvirt
                             go-github-com-alecthomas-repr))
    (home-page "https://github.com/digitalocean/go-qemu")
    (synopsis "go-qemu")
    (description
     "@@code{go-qemu} is a collection of Go packages for interacting with running QEMU
instances.  Apache 2.0 Licensed.")
    (license license:asl2.0)))

(define-public go-github-com-digitorus-pkcs7
  (package
    (name "go-github-com-digitorus-pkcs7")
    (version "0.0.0-20230818184609-3a137a874352")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/digitorus/pkcs7")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kfs0bdxbs0hpgp8yqjfabpnpj6879195dr2hq7gknhjx4phn66f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/digitorus/pkcs7"))
    (home-page "https://github.com/digitorus/pkcs7")
    (synopsis "pkcs7")
    (description
     "Package pkcs7 implements parsing and generation of some PKCS#7 structures.")
    (license license:expat)))

(define-public go-github-com-digitorus-timestamp
  (package
    (name "go-github-com-digitorus-timestamp")
    (version "0.0.0-20250524132541-c45532741eea")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/digitorus/timestamp")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bmnyhmymxhpvmygkcvvm9r2c2909hfrnafd3n19d0rxgl21lvhk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/digitorus/timestamp"))
    (propagated-inputs (list go-github-com-digitorus-pkcs7))
    (home-page "https://github.com/digitorus/timestamp")
    (synopsis "RFC3161 Time-Stamp Protocol (TSP) package for Go")
    (description
     "Package timestamp implements the Time-Stamp Protocol (TSP) as specified in
RFC3161 (Internet X.509 Public Key Infrastructure Time-Stamp Protocol (TSP)).")
    (license license:bsd-2)))

(define-public go-github-com-dimfeld-httppath
  (package
    (name "go-github-com-dimfeld-httppath")
    (version "0.0.0-20170720192232-ee938bf73598")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dimfeld/httppath")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1c1kic8g3r78g6h4xl8n2ac1waxsb9fqz40k20ypi08k24mv3ha9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dimfeld/httppath"))
    (home-page "https://github.com/dimfeld/httppath")
    (synopsis "HttpPath")
    (description "Utilities for HTTP Path manipulation.")
    (license license:bsd-3)))

(define-public go-github-com-dimiro1-reply
  (package
    (name "go-github-com-dimiro1-reply")
    (version "0.0.0-20200315094148-d0136a4c9e21")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dimiro1/reply")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1b0g7zlsv3f59x19w0fvrp476fd36a4w4gpvafrmj04rwsb592jr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dimiro1/reply"))
    (propagated-inputs (list go-github-com-dlclark-regexp2))
    (home-page "https://github.com/dimiro1/reply")
    (synopsis "reply")
    (description
     "Package reply package is essentially a source code conversion of the ruby
library
@@url{https://github.com/discourse/email_reply_trimmer,https://github.com/discourse/email_reply_trimmer}.
 The core logic is a almost line by line conversion.")
    (license license:expat)))

(define-public go-github-com-disintegration-gift
  (package
    (name "go-github-com-disintegration-gift")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/disintegration/gift")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zdki6ydqgxl7lg23f4885w8ij34sdg8xv7b7yp6c7ffi2ikk07f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/disintegration/gift"))
    (home-page "https://github.com/disintegration/gift")
    (synopsis "GO IMAGE FILTERING TOOLKIT (GIFT)")
    (description
     "Package gift provides a set of useful image processing filters.")
    (license license:expat)))

(define-public go-github-com-diskfs-go-diskfs
  (package
    (name "go-github-com-diskfs-go-diskfs")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/diskfs/go-diskfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jmg6lp621ccvfqlh7b7yn0qqv5xhqymq0d6y4ksbib46h82j83d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/diskfs/go-diskfs"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-ulikunitz-xz
                             go-github-com-sirupsen-logrus
                             go-github-com-pkg-xattr
                             go-github-com-pierrec-lz4-v4
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-github-com-go-test-deep
                             go-github-com-elliotwutingfeng-asciiset
                             go-github-com-djherbis-times))
    (home-page "https://github.com/diskfs/go-diskfs")
    (synopsis "go-diskfs")
    (description
     "Package diskfs implements methods for creating and manipulating disks and
filesystems.")
    (license license:expat)))

(define-public go-github-com-distribution-distribution-v3
  (package
    (name "go-github-com-distribution-distribution-v3")
    (version "3.0.0-rc.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/distribution/distribution")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "144f8hd23whi89dcbkazminyf8iva6lih3d5sbwmyhm7lzrad31q"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/distribution/distribution/v3"
      #:unpack-path "github.com/distribution/distribution"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                        go-google-golang-org-api
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-go-opentelemetry-io-otel-trace
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-stdout-stdouttrace
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-go-opentelemetry-io-contrib-exporters-autoexport
                        go-github-com-stretchr-testify
                        go-github-com-spf13-cobra
                        go-github-com-sirupsen-logrus
                        go-github-com-redis-go-redis-v9 ; packaged

                        go-github-com-redis-go-redis-extra-redisotel-v9
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-mitchellh-mapstructure
                        go-github-com-klauspost-compress ; packaged
                        go-github-com-hashicorp-golang-lru-arc-v2
                        go-github-com-gorilla-mux
                        go-github-com-gorilla-handlers
                        go-github-com-google-uuid
                        go-github-com-go-jose-go-jose-v4 ; packaged
                        go-github-com-docker-go-metrics
                        go-github-com-docker-go-events
                        go-github-com-docker-docker-credential-helpers
                        go-github-com-distribution-reference
                        go-github-com-coreos-go-systemd-v22
                        go-github-com-bshuster-repo-logrus-logstash-hook
                        go-github-com-aws-aws-sdk-go
                        go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore
                        go-github-com-adalogics-go-fuzz-headers ; packaged
                        go-cloud-google-com-go-storage))
    (home-page "https://github.com/distribution/distribution")
    (synopsis
     "How does this integrate with Docker, containerd, and other OCI client?")
    (description
     "Package distribution will define the interfaces for the components of docker
distribution.  The goal is to allow users to reliably package, ship and store
content related to container images.")
    (license license:asl2.0)))

(define-public go-github-com-distribution-reference
  (package
    (name "go-github-com-distribution-reference")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/distribution/reference")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zj2lmmznlrxdrrfmdsx7fgrmi64bj1jqz6r0ar35qmkx8pjvgl2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/distribution/reference"))
    (propagated-inputs (list go-github-com-opencontainers-go-digest))
    (home-page "https://github.com/distribution/reference")
    (synopsis "Distribution reference")
    (description
     "Package reference provides a general type to represent any way of referencing
images within the registry.  Its main purpose is to abstract tags and digests
(content-addressable hash).")
    (license license:asl2.0)))

(define-public go-github-com-djarvur-go-err113
  (package
    (name "go-github-com-djarvur-go-err113")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Djarvur/go-err113")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1igl5nf8v1l7kf1xsrsasnsskzblc5nj4nyp43kkazi0dcq7fvl6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Djarvur/go-err113"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/Djarvur/go-err113")
    (synopsis #f)
    (description
     "Package err113 is a Golang linter to check the errors handling expressions.")
    (license license:expat)))

(define-public go-github-com-djherbis-buffer
  (package
    (name "go-github-com-djherbis-buffer")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/djherbis/buffer")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17m6la583p9yskcj3bmhnazj8j4v8bmfjjp0kkv8i0zhqmcm0wmq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/djherbis/buffer"))
    (home-page "https://github.com/djherbis/buffer")
    (synopsis "Buffer")
    (description
     "Package buffer implements a series of Buffers which can be composed to implement
complicated buffering strategies.")
    (license license:expat)))

(define-public go-github-com-djherbis-nio-v3
  (package
    (name "go-github-com-djherbis-nio-v3")
    (version "3.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/djherbis/nio")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06zd92m0p4hd6mkrp3ya043p4f9f1hhqwvcl69hxmdr1an39b699"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/djherbis/nio/v3"
      #:unpack-path "github.com/djherbis/nio"))
    (propagated-inputs (list go-github-com-djherbis-buffer))
    (home-page "https://github.com/djherbis/nio")
    (synopsis "nio")
    (description "Package nio provides a few buffered io primitives.")
    (license license:expat)))

(define-public go-github-com-dmarkham-enumer
  (package
    (name "go-github-com-dmarkham-enumer")
    (version "1.5.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dmarkham/enumer")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1k3m3n9fxxfdl1150d2ffhsmabyrd36zakad3lwnv05bs1x3bmgf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dmarkham/enumer"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-pascaldekloe-name))
    (home-page "https://github.com/dmarkham/enumer")
    (synopsis "Enumer")
    (description
     "Enumer is a tool to generate Go code that adds useful methods to Go enums
(constants with a specific type).  It started as a fork of Rob Pike’s Stringer
tool.")
    (license #f))) ; check

(define-public go-github-com-dnaeon-go-vcr
  (package
    (name "go-github-com-dnaeon-go-vcr")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dnaeon/go-vcr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1aw8s3aljhw9vpzcf8m64r5yv5g0j09dky30shzxvpjwpl5yxhir"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dnaeon/go-vcr"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-github-com-modocache-gover))
    (home-page "https://github.com/dnaeon/go-vcr")
    (synopsis "go-vcr")
    (description
     "@@code{go-vcr} simplifies testing by recording your HTTP interactions and
replaying them in future runs in order to provide fast, deterministic and
accurate testing of your code.")
    (license license:bsd-2)))

(define-public go-github-com-dnsimple-dnsimple-go
  (package
    (name "go-github-com-dnsimple-dnsimple-go")
    (version "1.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dnsimple/dnsimple-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "012xfsnj68303kiqsldg1jm5iklxj573mrch3dw17gxnlnc4fjdc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dnsimple/dnsimple-go"))
    (propagated-inputs (list go-golang-org-x-oauth2
                             go-github-com-stretchr-testify
                             go-github-com-shopspring-decimal
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/dnsimple/dnsimple-go")
    (synopsis "DNSimple Go Client")
    (description "This package provides a Go client for the
@@url{https://developer.dnsimple.com/v2/,DNSimple API v2}.")
    (license license:expat)))

(define-public go-github-com-dnstap-golang-dnstap
  (package
    (name "go-github-com-dnstap-golang-dnstap")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dnstap/golang-dnstap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zlypx3a45i48rhxwss59mhfdvr5mb9a2pjk207pgq0hl0khfv0s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dnstap/golang-dnstap"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-miekg-dns
                             go-github-com-farsightsec-golang-framestream))
    (home-page "https://github.com/dnstap/golang-dnstap")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-docker-buildx
  (package
    (name "go-github-com-docker-buildx")
    (version "0.19.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/buildx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "083kzq4p8bvgc0yl8p38jnp7h5hyg1sk680mpd3745sr4zsbpcnh"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/docker/buildx"))
    (propagated-inputs (list go-k8s-io-client-go
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-gopkg-in-yaml-v3
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc-cmd-protoc-gen-go-grpc
                             go-google-golang-org-grpc
                             go-golang-org-x-text
                             go-golang-org-x-term
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-mod
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opentelemetry-io-otel-metric ; packaged
                             go-go-opentelemetry-io-otel
                             go-github-com-zclconf-go-cty
                             go-github-com-tonistiigi-go-csvvalue
                             go-github-com-tonistiigi-fsutil
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-sirupsen-logrus
                             go-github-com-serialx-hashring
                             go-github-com-planetscale-vtprotobuf
                             go-github-com-pkg-errors
                             go-github-com-pelletier-go-toml
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest
                             go-github-com-morikuni-aec
                             go-github-com-moby-sys-signal
                             go-github-com-moby-sys-mountinfo
                             go-github-com-moby-buildkit
                             go-github-com-mitchellh-hashstructure-v2
                             go-github-com-in-toto-in-toto-golang
                             go-github-com-hashicorp-hcl-v2
                             go-github-com-hashicorp-go-cty-funcs
                             go-github-com-google-uuid
                             go-github-com-google-shlex
                             go-github-com-gofrs-flock
                             go-github-com-docker-go-units
                             go-github-com-docker-docker
                             go-github-com-docker-cli-docs-tool
                             go-github-com-docker-cli
                             go-github-com-distribution-reference
                             go-github-com-creack-pty
                             go-github-com-containerd-typeurl-v2
                             go-github-com-containerd-platforms ; packaged
                             go-github-com-containerd-log
                             go-github-com-containerd-errdefs
                             go-github-com-containerd-continuity ; packaged
                             go-github-com-containerd-containerd
                             go-github-com-containerd-console ; packaged
                             go-github-com-compose-spec-compose-go-v2
                             go-github-com-aws-aws-sdk-go-v2-config
                             go-github-com-microsoft-go-winio
                             go-github-com-masterminds-semver-v3))
    (home-page "https://github.com/docker/buildx")
    (synopsis "buildx")
    (description
     "@@code{buildx} is a Docker CLI plugin for extended build capabilities with
@@url{https://github.com/moby/buildkit,@code{BuildKit}}.")
    (license license:asl2.0)))

(define-public go-github-com-docker-cli
  (package
    (name "go-github-com-docker-cli")
    (version "27.4.1+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/cli")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w8nqw5rra4gwg52gwf2hkfk8i4s59smxagp302qzd1bc3gjjlpy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/cli"))
    (home-page "https://github.com/docker/cli")
    (synopsis "Docker CLI")
    (description "This repository is the home of the Docker CLI.")
    (license license:asl2.0)))

(define-public go-github-com-docker-cli-docs-tool
  (package
    (name "go-github-com-docker-cli-docs-tool")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/cli-docs-tool")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cjvl39f47damgfn03i89161dbvpk1792w745zn9yiq19dylm8vl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/cli-docs-tool"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra))
    (home-page "https://github.com/docker/cli-docs-tool")
    (synopsis "About")
    (description
     "This is a library containing utilities to generate (reference) documentation for
the on @@url{https://docs.docker.com/reference/,docs.docker.com}.")
    (license license:asl2.0)))

(define-public go-github-com-docker-compose
  (package
    (name "go-github-com-docker-compose")
    (version "2.32.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/compose")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ngxr1dym24p2538fcyxj9ncgqns6vw146kbag76nrxpg0axmqbg"))))
    (build-system go-build-system)
    (arguments
     (list
                                                                            ;; check-go-version
      #:import-path "github.com/docker/compose/v2"
      #:unpack-path "github.com/docker/compose"))
    (propagated-inputs
     (list go-github-com-acarl005-stripansi
           go-github-com-alecaivazis-survey-v2
           go-github-com-buger-goterm
           go-github-com-compose-spec-compose-go-v2
           go-github-com-containerd-containerd
           go-github-com-containerd-platforms                               ; packaged
           go-github-com-davecgh-go-spew                                    ; packaged
           go-github-com-distribution-reference
           go-github-com-docker-buildx
           go-github-com-docker-cli
           go-github-com-docker-cli-docs-tool
           go-github-com-docker-docker
           go-github-com-docker-go-connections ; packaged
           go-github-com-docker-go-units
           go-github-com-eiannone-keyboard
           go-github-com-fsnotify-fsevents
           go-github-com-google-go-cmp                                      ; packaged
           go-github-com-hashicorp-go-multierror ; packaged
           go-github-com-hashicorp-go-version ; packaged
           go-github-com-jonboulle-clockwork
           go-github-com-mattn-go-shellwords
           go-github-com-microsoft-go-winio
           go-github-com-mitchellh-go-ps ; packaged
           go-github-com-mitchellh-mapstructure
           go-github-com-moby-buildkit
           go-github-com-moby-patternmatcher
           go-github-com-moby-term ; packaged
           go-github-com-morikuni-aec
           go-github-com-opencontainers-go-digest
           go-github-com-opencontainers-image-spec ; packaged
           go-github-com-otiai10-copy
           go-github-com-r3labs-sse
           go-github-com-sirupsen-logrus
           go-github-com-skratchdot-open-golang
           go-github-com-spf13-cobra ; packaged
           go-github-com-spf13-pflag ; packaged
           go-github-com-stretchr-testify ; packaged
           go-github-com-theupdateframework-notary
           go-github-com-tilt-dev-fsnotify
           go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
           go-go-opentelemetry-io-otel
           go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
           go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
           go-go-opentelemetry-io-otel-metric ; packaged
           go-go-opentelemetry-io-otel-sdk
           go-go-opentelemetry-io-otel-trace
           go-go-uber-org-goleak                                            ; packaged
           go-go-uber-org-mock                                              ; packaged
           go-golang-org-x-exp                                              ; packaged
           go-golang-org-x-sync                                             ; packaged
           go-golang-org-x-sys                                              ; packaged
           go-google-golang-org-grpc                                        ; packaged
           go-gopkg-in-yaml-v3                                              ; packaged
           go-gotest-tools-v3                                               ; packaged
           go-tags-cncf-io-container-device-interface))
    (home-page "https://github.com/docker/compose")
    (synopsis "Table of Contents")
    (description
     "Docker Compose is a tool for running multi-container applications on Docker
defined using the @@url{https://compose-spec.io,Compose file format}.  A Compose
file is used to define how one or more containers that make up your application
are configured.  Once you have a Compose file, you can create and start your
application with a single command: @@code{docker compose up}.")
    (license license:asl2.0)))

(define-public go-github-com-docker-docker
  (package
    (name "go-github-com-docker-docker")
    (version "27.4.1+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/moby")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0912xdqjv9ykbdhpxkrrg8bbsfkxkdjlbs9za413nlhvbzq0ha9r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/docker"))
    (home-page "https://github.com/docker/docker")
    (synopsis "The Moby Project")
    (description
     "Moby is an open-source project created by Docker to enable and accelerate
software containerization.")
    (license license:asl2.0)))

(define-public go-github-com-docker-docker-credential-helpers
  (package
    (name "go-github-com-docker-docker-credential-helpers")
    (version "0.8.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/docker-credential-helpers")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0714hg2bbiiw312afq8iy1wql3zwp7zj2rwm96f5d7h9pryx4m9c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/docker-credential-helpers"))
    (propagated-inputs (list go-github-com-danieljoos-wincred))
    (home-page "https://github.com/docker/docker-credential-helpers")
    (synopsis "Introduction")
    (description
     "docker-credential-helpers is a suite of programs to use native stores to keep
Docker credentials safe.")
    (license license:expat)))

(define-public go-github-com-docker-go
  (package
    (name "go-github-com-docker-go")
    (version "1.5.1-1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1b5xcxbbijp5qgk8hq5kga7qb74nbvjmh1jiyizky5k9hny4r5qa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/go"))
    (home-page "https://github.com/docker/go")
    (synopsis #f)
    (description
     "This is a repository used for building go packages based off upstream with small
patches.")
    (license license:bsd-3)))

(define-public go-github-com-docker-go-events
  (package
    (name "go-github-com-docker-go-events")
    (version "0.0.0-20241114183025-9940093291f5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/go-events")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cza5jkd7la6klp8xnrd9zly7ka4bd2528cqg4fi3gm3jc9kqgaq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/go-events"))
    (home-page "https://github.com/docker/go-events")
    (synopsis "Docker Events Package")
    (description
     "The Docker @@code{events} package implements a composable event distribution
package for Go.")
    (license license:asl2.0)))

(define-public go-github-com-docker-go-metrics
  (package
    (name "go-github-com-docker-go-metrics")
    (version "0.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/go-metrics")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1b6f1889chmwlsgrqxylnks2jic16j2dqhsdd1dvaklk48ky95ga"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/go-metrics"))
    (propagated-inputs (list go-github-com-prometheus-client-golang ; packaged
))
    (home-page "https://github.com/docker/go-metrics")
    (synopsis "go-metrics")
    (description
     "This package is small wrapper around the prometheus go client to help enforce
convention and best practices for metrics collection in Docker projects.")
    (license (list license:asl2.0 license:cc-by-sa4.0))))

(define-public go-github-com-docker-libtrust
  (package
    (name "go-github-com-docker-libtrust")
    (version "0.0.0-20160708172513-aabc10ec26b7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/libtrust")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lwslbggzc2b0c4wxl5pn6i2nfgz5jz8f7s7vnid9mrlsk59h7s1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/libtrust"))
    (home-page "https://github.com/docker/libtrust")
    (synopsis "libtrust")
    (description
     "Package libtrust provides an interface for managing authentication and
authorization using public key cryptography.  Authentication is handled using
the identity attached to the public key and verified through TLS x509
certificates, a key challenge, or signature.  Authorization and access control
is managed through a trust graph distributed between both remote trust servers
and locally cached and managed data.")
    (license license:asl2.0)))

(define-public go-github-com-docker-machine
  (package
    (name "go-github-com-docker-machine")
    (version "0.16.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/docker/machine")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hzipk1dzs2ww6j8q1wa97pc45yw8zjfny6j12hrxpm6jwd8x39j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/docker/machine"))
    (home-page "https://github.com/docker/machine")
    (synopsis "Docker Machine")
    (description
     "Package machine defines interfaces to manage a variety of docker instances
deployed on different backends (VMs, baremetal).  The goal is to allow users get
from zero to docker as fast as possible.")
    (license license:asl2.0)))

(define-public go-github-com-dop251-base64dec
  (package
    (name "go-github-com-dop251-base64dec")
    (version "0.0.0-20231022112746-c6c9f9a96217")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dop251/base64dec")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d1dc276r14118iznarg07bmsnawv2517vpjkrwzf2yszbmcvc1x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dop251/base64dec"))
    (home-page "https://github.com/dop251/base64dec")
    (synopsis "Universal Lenient Base64 Decoder")
    (description
     "Package base64dec contains a universal base64 decoder that works on both the
standard and url-safe variants, padded and raw.  The code is based on the
standard encoding/base64 package.")
    (license license:bsd-3)))

(define-public go-github-com-dop251-goja
  (package
    (name "go-github-com-dop251-goja")
    (version "0.0.0-20241024094426-79f3a7efcdbd")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dop251/goja")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hk5g04qch2wx61icvxmqrwd0pgv3c2yqp2xdknipb1fpgvxbpw8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dop251/goja"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-golang-org-x-text
                             go-github-com-google-pprof
                             go-github-com-go-sourcemap-sourcemap
                             go-github-com-dop251-goja-nodejs
                             go-github-com-dlclark-regexp2
                             go-github-com-masterminds-semver-v3))
    (home-page "https://github.com/dop251/goja")
    (synopsis "goja")
    (description "ECMAScript 5.1(+) implementation in Go.")
    (license license:expat)))

(define-public go-github-com-dop251-goja-nodejs
  (package
    (name "go-github-com-dop251-goja-nodejs")
    (version "0.0.0-20240728170619-29b559befffc")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dop251/goja_nodejs")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17df5129hhyjdqwvzs0bdqsg5vffbizm89bdabcjkkcv8lgkrdgl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dop251/goja_nodejs"))
    (propagated-inputs (list go-golang-org-x-text go-golang-org-x-net
                             go-go-uber-org-goleak go-github-com-dop251-goja
                             go-github-com-dop251-base64dec))
    (home-page "https://github.com/dop251/goja_nodejs")
    (synopsis "Nodejs compatibility library for Goja")
    (description
     "This is a collection of Goja modules that provide nodejs compatibility.")
    (license license:expat)))

(define-public go-github-com-dop251-scsu
  (package
    (name "go-github-com-dop251-scsu")
    (version "0.0.0-20220106150536-84ac88021d00")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dop251/scsu")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vm7yfbdaz5z1m7yih5r2awahdr1lyrdfjr8qvx3z0gqi5q3klnh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dop251/scsu"))
    (home-page "https://github.com/dop251/scsu")
    (synopsis "SCSU")
    (description
     "This package provides a Standard Compression Scheme for Unicode implementation
in Go.")
    (license license:expat)))

(define-public go-github-com-doridian-gopacket
  (package
    (name "go-github-com-doridian-gopacket")
    (version "1.3.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Doridian/gopacket")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xhm6n8ywd8fwwq3agalgjd2bqxgf4kfa45pd90gzf9j2zy3nikd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Doridian/gopacket"))
    (propagated-inputs (list go-golang-org-x-sys go-golang-org-x-net
                             go-github-com-vishvananda-netns
                             go-github-com-vishvananda-netlink))
    (home-page "https://github.com/Doridian/gopacket")
    (synopsis "GoPacket")
    (description
     "Package gopacket provides packet decoding for the Go language.")
    (license license:bsd-3)))

(define-public go-github-com-doridian-water
  (package
    (name "go-github-com-doridian-water")
    (version "1.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Doridian/water")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yb5skb4xlcndprhxmpfn3pmcbhd74bjp0irq607c2arwlsclnb0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Doridian/water"))
    (propagated-inputs (list go-golang-zx2c4-com-wireguard go-golang-org-x-sys
                             go-github-com-doridian-gopacket))
    (home-page "https://github.com/Doridian/water")
    (synopsis "water")
    (description
     "Package water is a simple TUN/TAP interface library that efficiently works with
standard packages like io, bufio, etc..  Use waterutil with it to work with
TUN/TAP packets/frames.")
    (license license:bsd-3)))

(define-public go-github-com-dropbox-dropbox-sdk-go-unofficial-v6
  (package
    (name "go-github-com-dropbox-dropbox-sdk-go-unofficial-v6")
    (version "6.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dropbox/dropbox-sdk-go-unofficial")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09hjqglxr51qhg522r2m7k9hbv0sghcjync089f6by5mrl0ks4f4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dropbox/dropbox-sdk-go-unofficial/v6"
      #:unpack-path "github.com/dropbox/dropbox-sdk-go-unofficial"))
    (propagated-inputs (list go-golang-org-x-oauth2))
    (home-page "https://github.com/dropbox/dropbox-sdk-go-unofficial")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-dsnet-try
  (package
    (name "go-github-com-dsnet-try")
    (version "0.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dsnet/try")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0c6n27sfh37ngl6rh3y0l0f1yc169v97va3msbsnza723f6f7rdb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dsnet/try"))
    (home-page "https://github.com/dsnet/try")
    (synopsis "Try: Simplified Error Handling in Go")
    (description
     "Package try emulates aspects of the ill-fated \"try\" proposal using generics.
See @@url{https://golang.org/issue/32437,https://golang.org/issue/32437} for
inspiration.")
    (license license:bsd-3)))

(define-public go-github-com-dustin-gojson
  (package
    (name "go-github-com-dustin-gojson")
    (version "0.0.0-20160307161227-2e71ec9dd5ad")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dustin/gojson")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vrmmyn7l568l1k71mxd54iqf3d54pn86cf278i374j86jn0bdxf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dustin/gojson"))
    (home-page "https://github.com/dustin/gojson")
    (synopsis #f)
    (description
     "Package json implements encoding and decoding of JSON objects as defined in
@@url{https://rfc-editor.org/rfc/rfc4627.html,RFC 4627}.  The mapping between
JSON objects and Go values is described in the documentation for the Marshal and
Unmarshal functions.")
    (license license:bsd-3)))

(define-public go-github-com-dyatlov-go-opengraph
  (package
    (name "go-github-com-dyatlov-go-opengraph")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dyatlov/go-opengraph")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03jfvvy91j03gg0wgzvmssi3i7164fp3761yqj9pa4psb30qgvi5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dyatlov/go-opengraph"))
    (home-page "https://github.com/dyatlov/go-opengraph")
    (synopsis "Go OpenGraph")
    (description
     "Parses given html data into Facebook @code{OpenGraph} structure.")
    (license license:expat)))

(define-public go-github-com-dyatlov-go-opengraph-opengraph
  (package
    (name "go-github-com-dyatlov-go-opengraph-opengraph")
    (version "0.0.0-20220524092352-606d7b1e5f8a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dyatlov/go-opengraph")
             (commit (go-version->git-ref version
                                          #:subdir "opengraph"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03jfvvy91j03gg0wgzvmssi3i7164fp3761yqj9pa4psb30qgvi5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dyatlov/go-opengraph/opengraph"
      #:unpack-path "github.com/dyatlov/go-opengraph"))
    (propagated-inputs (list go-golang-org-x-net))
    (home-page "https://github.com/dyatlov/go-opengraph")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-dylibso-observe-sdk-go
  (package
    (name "go-github-com-dylibso-observe-sdk-go")
    (version "0.0.0-20240828172851-9145d8ad07e1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/dylibso/observe-sdk")
             (commit (go-version->git-ref version
                                          #:subdir "go"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cx0zdfp6jqw9ih4h0m5556jnz9i0yvz4p1crvmbm7vbyfgklmmv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/dylibso/observe-sdk/go"
      #:unpack-path "github.com/dylibso/observe-sdk"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-go-opentelemetry-io-proto-otlp ; packaged
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracehttp
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
                        go-github-com-tetratelabs-wazero
                        go-github-com-tetratelabs-wabin
                        go-github-com-ianlancetaylor-demangle))
    (home-page "https://github.com/dylibso/observe-sdk")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-eapache-go-resiliency
  (package
    (name "go-github-com-eapache-go-resiliency")
    (version "1.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/eapache/go-resiliency")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07a1r3c2spd37k3riy4fxz8v8ibxiprf8a3vw788whz4mlp6gm40"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/eapache/go-resiliency"))
    (home-page "https://github.com/eapache/go-resiliency")
    (synopsis "go-resiliency")
    (description "Resiliency patterns for golang.  Based in part on
@@url{https://github.com/Netflix/Hystrix,Hystrix},
@@url{https://github.com/Shopify/semian,Semian}, and others.")
    (license license:expat)))

(define-public go-github-com-eapache-go-xerial-snappy
  (package
    (name "go-github-com-eapache-go-xerial-snappy")
    (version "0.0.0-20230731223053-c322873962e3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/eapache/go-xerial-snappy")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07ls4rvvf9az7a9ild932n8fbckqf6v5xz6dpn5xmbxix981xfx1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/eapache/go-xerial-snappy"))
    (propagated-inputs (list go-github-com-golang-snappy))
    (home-page "https://github.com/eapache/go-xerial-snappy")
    (synopsis "go-xerial-snappy")
    (description "Xerial-compatible Snappy framing support for golang.")
    (license license:expat)))

(define-public go-github-com-editorconfig-editorconfig-core-go-v2
  (package
    (name "go-github-com-editorconfig-editorconfig-core-go-v2")
    (version "2.6.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/editorconfig/editorconfig-core-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1593lk2f6v0bv2mfnkiyx4i429711r811hf9whpi3ipvqdzvkxxz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/editorconfig/editorconfig-core-go/v2"
      #:unpack-path "github.com/editorconfig/editorconfig-core-go"))
    (propagated-inputs (list go-gopkg-in-ini-v1 go-golang-org-x-mod
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/editorconfig/editorconfig-core-go")
    (synopsis "Editorconfig Core Go")
    (description
     "This package provides a @@url{https://editorconfig.org/,Editorconfig} file
parser and manipulator for Go.")
    (license license:expat)))

(define-public go-github-com-eggsampler-acme-v3
  (package
    (name "go-github-com-eggsampler-acme-v3")
    (version "3.6.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/eggsampler/acme")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02hxgh1s26v0l2z22k89vwd0sgzb3qby3zvli62k9ldx6dk60pjj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/eggsampler/acme/v3"
      #:unpack-path "github.com/eggsampler/acme"))
    (home-page "https://github.com/eggsampler/acme")
    (synopsis "eggsampler/acme")
    (description
     "@@code{eggsampler/acme} is a Go client library implementation for
@@url{https://tools.ietf.org/html/rfc8555,RFC8555} (previously ACME v2).  This
library can be used with the @@url{https://letsencrypt.org/,Let's Encrypt}
Certificate Authority (CA), but also other ACME compliant CA's such as
@@url{https://zerossl.com/,@code{ZeroSSL}}.")
    (license license:expat)))

(define-public go-github-com-eiannone-keyboard
  (package
    (name "go-github-com-eiannone-keyboard")
    (version "0.0.0-20220611211555-0d226195f203")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/eiannone/keyboard")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xarpiflv5a7r9i62d21av47wf69ncadyjfr2hivmqsq43l5ling"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/eiannone/keyboard"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/eiannone/keyboard")
    (synopsis "Keyboard")
    (description "Simple library to listen for keystrokes from the keyboard.")
    (license license:expat)))

(define-public go-github-com-elastic-crd-ref-docs
  (package
    (name "go-github-com-elastic-crd-ref-docs")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/elastic/crd-ref-docs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14hsm1vx0s649z7f27851fi2xrcbzcnb6nkciwnyp3w57snhg7jn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/elastic/crd-ref-docs"))
    (propagated-inputs (list go-sigs-k8s-io-controller-tools
                             go-k8s-io-apimachinery
                             go-golang-org-x-tools
                             go-go-uber-org-zap
                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-goccy-go-yaml
                             go-github-com-masterminds-sprig))
    (home-page "https://github.com/elastic/crd-ref-docs")
    (synopsis "CRD Reference Documentation Generator")
    (description
     "Licensed to Elasticsearch B.V. under one or more contributor license agreements.
 See the NOTICE file distributed with this work for additional information
regarding copyright ownership.  Elasticsearch B.V. licenses this file to you
under the Apache License, Version 2.0 (the \"License\"); you may not use this file
except in compliance with the License.  You may obtain a copy of the License at.")
    (license license:asl2.0)))

(define-public go-github-com-elastic-go-sysinfo
  (package
    (name "go-github-com-elastic-go-sysinfo")
    (version "1.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/elastic/go-sysinfo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1r002bjwznwaxbhpkbi1qn48cbxa7s64yqkpyknnyw2ndkk4gr2m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/elastic/go-sysinfo"))
    (propagated-inputs (list go-howett-net-plist go-golang-org-x-sys
                             go-github-com-stretchr-testify
                             go-github-com-prometheus-procfs
                             go-github-com-elastic-go-windows))
    (home-page "https://github.com/elastic/go-sysinfo")
    (synopsis "go-sysinfo")
    (description
     "go-sysinfo is a library for collecting system information.  This includes
information about the host machine and processes running on the host.")
    (license license:asl2.0)))

(define-public go-github-com-elastic-go-windows
  (package
    (name "go-github-com-elastic-go-windows")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/elastic/go-windows")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gamvz23pikfqq2yim5kwmnz1i4jw6hc6cfvrl7jd06n116xzf98"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/elastic/go-windows"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/elastic/go-windows")
    (synopsis "go-windows")
    (description "Package windows contains various Windows system calls.")
    (license license:asl2.0)))

(define-public go-github-com-elek-bubbles
  (package
    (name "go-github-com-elek-bubbles")
    (version "0.0.0-20230923192006-860c0efc50ae")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/elek/bubbles")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ckb03xc0pnqpri5l6xps4wbnpxmz3j57bswaipbl9ygspw1ssif"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/elek/bubbles"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-bubbletea
                             go-github-com-charmbracelet-bubbles))
    (home-page "https://github.com/elek/bubbles")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-elliotwutingfeng-asciiset
  (package
    (name "go-github-com-elliotwutingfeng-asciiset")
    (version "0.0.0-20240214025120-24af97c84155")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/elliotwutingfeng/asciiset")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bfdlly8xdiy5c939nd3mm7983qyg19n7c4djx9ahfnavjyz6g93"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/elliotwutingfeng/asciiset"))
    (home-page "https://github.com/elliotwutingfeng/asciiset")
    (synopsis "asciiset")
    (description "Package asciiset is an ASCII character bitset.")
    (license license:bsd-3)))

(define-public go-github-com-emersion-go-imap-uidplus
  (package
    (name "go-github-com-emersion-go-imap-uidplus")
    (version "0.0.0-20200503180755-e75854c361e9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/emersion/go-imap-uidplus")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0iqazibiy38zfa1wzhdbxx1aq46k70wrhjxnp9sgl7xg6s7n6blb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/emersion/go-imap-uidplus"))
    (home-page "https://github.com/emersion/go-imap-uidplus")
    (synopsis "go-imap-uidplus")
    (description
     "This package implements the IMAP UIDPLUS extension, as defined in
@@url{https://rfc-editor.org/rfc/rfc4315.html,RFC 4315}.")
    (license license:expat)))

(define-public go-github-com-emicklei-proto
  (package
    (name "go-github-com-emicklei-proto")
    (version "1.14.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/emicklei/proto")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13r6g2shidqgp813av1clzy2vrd4qsm9pvwjb65l8q718zsw355h"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/emicklei/proto"))
    (home-page "https://github.com/emicklei/proto")
    (synopsis "proto")
    (description
     "Package in Go for parsing Google Protocol Buffers
@@url{https://developers.google.com/protocol-buffers/docs/reference/proto3-spec,.proto
files version 2 + 3, editions}.")
    (license license:expat)))

(define-public go-github-com-envoyproxy-go-control-plane
  (package
    (name "go-github-com-envoyproxy-go-control-plane")
    (version "0.13.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/envoyproxy/go-control-plane")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kkiqa1r8l95v49hsc5imal67jqfpf3617gncwddk1lq7vvbr0zz"))
       (modules '((guix build utils)))
       (snippet
        #~(begin
            ;; Submodules with their own go.mod files and packaged separately:
            ;;
            ;; - github.com/envoyproxy/go-control-plane/contrib
            ;; - github.com/envoyproxy/go-control-plane/envoy
            ;; - github.com/envoyproxy/go-control-plane/examples/dyplomat
            ;; - github.com/envoyproxy/go-control-plane/internal/tools
            ;; - github.com/envoyproxy/go-control-plane/ratelimit
            ;; - github.com/envoyproxy/go-control-plane/xdsmatcher
            (for-each delete-file-recursively
                      (list "contrib"
                            "envoy"
                            "examples/dyplomat"
                            "internal/tools"
                            "ratelimit"
                            "xdsmatcher"))))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:skip-build? #t
      #:import-path "github.com/envoyproxy/go-control-plane"
      #:phases
      #~(modify-phases %standard-phases
          (add-after 'unpack 'remove-examples
            (lambda* (#:key import-path #:allow-other-keys)
              (with-directory-excursion (string-append "src/" import-path)
                (for-each delete-file-recursively
                          (list "examples"
                                "internal/example"))))))))
    (native-inputs
     (list go-github-com-google-go-cmp
           go-github-com-stretchr-testify
           go-go-uber-org-goleak))
    (propagated-inputs
     (list go-google-golang-org-genproto-googleapis-rpc
           ;; go-github-com-envoyproxy-go-control-plane-envoy
           go-google-golang-org-protobuf))
    (home-page "https://github.com/envoyproxy/go-control-plane")
    (synopsis "control-plane")
    (description
     "This repository contains a Go-based implementation of an API server that
implements the discovery service APIs defined in
@@url{https://github.com/envoyproxy/data-plane-api,data-plane-api}.")
    (license license:asl2.0)))

(define-public go-github-com-ergochat-readline
  (package
    (name "go-github-com-ergochat-readline")
    (version "0.1.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ergochat/readline")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16zyk1dzwix5l9iph61img6qn5kryq3kb03dk2lwmrwyr1xdsip3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ergochat/readline"))
    (propagated-inputs (list go-golang-org-x-text go-golang-org-x-sys))
    (home-page "https://github.com/ergochat/readline")
    (synopsis "readline")
    (description
     "This is a pure Go implementation of functionality comparable to
@@url{https://en.wikipedia.org/wiki/GNU_Readline,GNU Readline}, i.e.  line
editing and command history for simple TUI programs.")
    (license license:expat)))

(define-public go-github-com-erikgeiser-promptkit
  (package
    (name "go-github-com-erikgeiser-promptkit")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/erikgeiser/promptkit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ngqwz343bpsfpvgagq6xgrflxmzs5ky88ixi59dbybqafk2zq61"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/erikgeiser/promptkit"))
    (propagated-inputs (list go-golang-org-x-term
                             go-github-com-muesli-termenv
                             go-github-com-muesli-reflow
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-bubbletea
                             go-github-com-charmbracelet-bubbles))
    (home-page "https://github.com/erikgeiser/promptkit")
    (synopsis "Selection")
    (description
     "Package promptkit is a collection of common command line prompts for interactive
programs.  Each prompts comes with sensible defaults, re-mappable key bindings
and many opportunities for heavy customization.")
    (license license:expat)))

(define-public go-github-com-erikstmartin-go-testdb
  (package
    (name "go-github-com-erikstmartin-go-testdb")
    (version "0.0.0-20160219214506-8d10e4a1bae5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/erikstmartin/go-testdb")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fhrqcpv8x74qwxx9gpnhgqbz5wkp2bnsq92w418l1fnrgh4ppmq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/erikstmartin/go-testdb"))
    (home-page "https://github.com/erikstmartin/go-testdb")
    (synopsis "go-testdb")
    (description
     "Framework for stubbing responses from go's driver.Driver interface.")
    (license license:bsd-2)))

(define-public go-github-com-errata-ai-vale
  (package
    (name "go-github-com-errata-ai-vale")
    (version "1.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/errata-ai/vale")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qi3brjppiymk6as0xic2n3bhq8g8qw1z8d9a24w60x9gp52yq5m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/errata-ai/vale"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-gopkg-in-ini-v1
                             go-golang-org-x-net
                             go-github-com-xrash-smetrics
                             go-github-com-urfave-cli
                             go-github-com-stretchr-testify
                             go-github-com-spf13-afero
                             go-github-com-russross-blackfriday
                             go-github-com-remeh-sizedwaitgroup
                             go-github-com-olekukonko-tablewriter
                             go-github-com-mmcdole-gofeed
                             go-github-com-mitchellh-mapstructure
                             go-github-com-mitchellh-go-homedir
                             go-github-com-mholt-archiver
                             go-github-com-levigross-grequests
                             go-github-com-jdkato-regexp
                             go-github-com-jdkato-prose
                             go-github-com-gobwas-glob
                             go-github-com-fatih-color
                             #;go-github-com-valelint-gospell))
    (home-page "https://github.com/errata-ai/vale")
    (synopsis "Vale: Your style, our editor")
    (description
     "Vale is a natural language linter that supports plain text, markup (Markdown,
@code{reStructuredText}, @code{AsciiDoc}, and HTML), and source code comments.
Vale doesn't attempt to offer a one-size-fits-all collection of rules—instead,
it strives to make customization as easy as possible.")
    (license license:expat)))

(define-public go-github-com-esiqveland-notify
  (package
    (name "go-github-com-esiqveland-notify")
    (version "0.13.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/esiqveland/notify")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03d27a8rl55j6dqclg3233dj3j7v0i0p9cda06f9c4a21djamrfb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/esiqveland/notify"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-godbus-dbus-v5))
    (home-page "https://github.com/esiqveland/notify")
    (synopsis "notify")
    (description
     "Package notify is a wrapper around godbus for dbus notification interface See:
@@url{https://developer.gnome.org/notification-spec/,https://developer.gnome.org/notification-spec/}
and @@url{https://github.com/godbus/dbus,https://github.com/godbus/dbus}.")
    (license license:bsd-3)))

(define-public go-github-com-ethantkoenig-rupture
  (package
    (name "go-github-com-ethantkoenig-rupture")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ethantkoenig/rupture")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qc2rv4i1292f1fw3mfvf6zn9wy4nvbj6dla4lycdxdqvv066pd8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ethantkoenig/rupture"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-blevesearch-bleve-index-api
                             go-github-com-blevesearch-bleve-v2))
    (home-page "https://github.com/ethantkoenig/rupture")
    (synopsis "rupture")
    (description
     "An explosive companion to the
@@url{https://www.github.com/blevesearch/bleve,bleve indexing library}.")
    (license license:expat)))

(define-public go-github-com-euank-go-kmsg-parser
  (package
    (name "go-github-com-euank-go-kmsg-parser")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/euank/go-kmsg-parser")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09zyn2paq11p16f18b6iabrr6rkzyl1vidqjq9p7b0xwgn8xm00r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/euank/go-kmsg-parser"))
    (home-page "https://github.com/euank/go-kmsg-parser")
    (synopsis "go-kmsg-parser")
    (description
     "This repository contains a library to allow parsing the @@code{/dev/kmsg} device
in Linux.  This device provides a read-write interface to the Linux Kernel's
ring buffer.")
    (license license:asl2.0)))

(define-public go-github-com-evanphx-json-patch-v5
  (package
    (name "go-github-com-evanphx-json-patch-v5")
    (version "5.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/evanphx/json-patch")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1p3vz6aid11xrf4zd6hxhwy8ysnxnhvf4gl0jcmsvf472xk7057f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/evanphx/json-patch/v5"
      #:unpack-path "github.com/evanphx/json-patch"))
    (propagated-inputs (list go-github-com-pkg-errors
                             go-github-com-jessevdk-go-flags))
    (home-page "https://github.com/evanphx/json-patch")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-evanw-esbuild
  (package
    (name "go-github-com-evanw-esbuild")
    (version "0.24.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/evanw/esbuild")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hx8amlkrazk0pxkca216qq1wgssjrc6ja3q31lpilr5ycf4smjx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/evanw/esbuild"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/evanw/esbuild")
    (synopsis "Why?")
    (description
     "@@url{https://esbuild.github.io/,Website} |
@@url{https://esbuild.github.io/getting-started/,Getting started} |
@@url{https://esbuild.github.io/api/,Documentation} |
@@url{https://esbuild.github.io/plugins/,Plugins} |
@@url{https://esbuild.github.io/faq/,FAQ}.")
    (license license:expat)))

(define-public go-github-com-exoscale-egoscale-v3
  (package
    (name "go-github-com-exoscale-egoscale-v3")
    (version "3.1.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/exoscale/egoscale")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04144xa5d4dvv3rx4xsvlbvw2hjz4r0rrxbb0d0wi4kj18p371wg"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/exoscale/egoscale/v3"
      #:unpack-path "github.com/exoscale/egoscale"))
    (propagated-inputs (list go-github-com-spf13-viper
                             go-github-com-google-uuid
                             go-github-com-go-playground-validator-v10
                             go-github-com-diskfs-go-diskfs))
    (home-page "https://github.com/exoscale/egoscale")
    (synopsis "Egoscale v3")
    (description
     "Package v3 provides primitives to interact with the openapi HTTP API.")
    (license license:asl2.0)))

(define-public go-github-com-exponent-io-jsonpath
  (package
    (name "go-github-com-exponent-io-jsonpath")
    (version "0.0.0-20210407135951-1de76d718b3f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/exponent-io/jsonpath")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rr1c6cjhahfpz50qwq4i9s3q42cbas9i5476avam4bgd8ihj26v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/exponent-io/jsonpath"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/exponent-io/jsonpath")
    (synopsis "jsonpath")
    (description
     "Extends the Go runtime's json.Decoder enabling navigation of a stream of json
tokens.")
    (license license:expat)))

(define-public go-github-com-extism-go-sdk
  (package
    (name "go-github-com-extism-go-sdk")
    (version "1.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/extism/go-sdk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gdraq0pza9jjla9gkf0r7yz3kabhd76jwjbkn6ysm6lkkk2y16p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/extism/go-sdk"))
    (propagated-inputs (list go-github-com-tetratelabs-wazero
                             go-github-com-stretchr-testify
                             go-github-com-gobwas-glob
                             go-github-com-dylibso-observe-sdk-go))
    (home-page "https://github.com/extism/go-sdk")
    (synopsis "Extism Go SDK")
    (description
     "This repo houses the Go SDK for integrating with the
@@url{https://extism.org/,Extism} runtime.  Install this library into your host
Go applications to run Extism plugins.")
    (license license:bsd-3)))

(define-public go-github-com-farsightsec-golang-framestream
  (package
    (name "go-github-com-farsightsec-golang-framestream")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/farsightsec/golang-framestream")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10qpw9fk99dnqbgm1srkgjjzw0zbxnvd48r7lslksxjs2d9hmahf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/farsightsec/golang-framestream"))
    (home-page "https://github.com/farsightsec/golang-framestream")
    (synopsis "Frame Streams implementation in Go")
    (description
     "Frame Streams is a lightweight, binary-clean protocol that allows for the
transport of arbitrarily encoded data payload sequences with minimal framing
overhead.")
    (license license:asl2.0)))

(define-public go-github-com-fatih-camelcase
  (package
    (name "go-github-com-fatih-camelcase")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fatih/camelcase")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z7rw6f5j97dkzqya257dqlxf3cm8zl508081gmnr4bsjhkwpz2l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fatih/camelcase"))
    (home-page "https://github.com/fatih/camelcase")
    (synopsis "CamelCase")
    (description
     "Package camelcase is a micro package to split the words of a camelcase type
string into a slice of words.")
    (license license:expat)))

(define-public go-github-com-fatih-semgroup
  (package
    (name "go-github-com-fatih-semgroup")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fatih/semgroup")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z3404gcb2yxgh9cvgsfaf1j6glz3xdwm8y0fwjyhi3nws4dl4x2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fatih/semgroup"))
    (propagated-inputs (list go-golang-org-x-sync))
    (home-page "https://github.com/fatih/semgroup")
    (synopsis "semgroup")
    (description
     "Package semgroup provides synchronization and error propagation, for groups of
goroutines working on subtasks of a common task.  It uses a weighted semaphore
implementation to make sure that only a number of maximum tasks can be run at
any time.")
    (license license:bsd-3)))

(define-public go-github-com-fatih-set
  (package
    (name "go-github-com-fatih-set")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fatih/set")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vif67ijhsm3p2613jl51fshlrn4d5pncrly73jvfyc8nsss8i9x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fatih/set"))
    (home-page "https://github.com/fatih/set")
    (synopsis "Archived project. No maintenance.")
    (description
     "Package set provides both threadsafe and non-threadsafe implementations of a
generic set data structure.  In the threadsafe set, safety encompasses all
operations on one set.  Operations on multiple sets are consistent in that the
elements of each set used was valid at exactly one point in time between the
start and the end of the operation.")
    (license license:expat)))

(define-public go-github-com-fatih-structtag
  (package
    (name "go-github-com-fatih-structtag")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fatih/structtag")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09a9pycvkf384v5f47ff4q33bjbzpx6kbkn23za1gcwc96466sk3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fatih/structtag"))
    (home-page "https://github.com/fatih/structtag")
    (synopsis "structtag")
    (description
     "structtag provides an easy way of parsing and manipulating struct tag fields.
Please vendor the library as it might change in future versions.")
    (license license:bsd-3)))

(define-public go-github-com-fcjr-aia-transport-go
  (package
    (name "go-github-com-fcjr-aia-transport-go")
    (version "1.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fcjr/aia-transport-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1shp8ndkifga8pxv1sp84y661iqa65l0nrrnifc29d63x99jxq5q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fcjr/aia-transport-go"))
    (home-page "https://github.com/fcjr/aia-transport-go")
    (synopsis "AIA (Authority Information Access) Transport Go")
    (description
     "Package aia provides an http.Transport which uses the AIA (Authority Information
Access) X.509 extension to resolve incomplete certificate chains during the tls
handshake.  See
@@url{https://tools.ietf.org/html/rfc3280#section-4.2.2.1,https://tools.ietf.org/html/rfc3280#section-4.2.2.1}
for more details.")
    (license license:expat)))

(define-public go-github-com-files-com-files-sdk-go-v3
  (package
    (name "go-github-com-files-com-files-sdk-go-v3")
    (version "3.2.122")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Files-com/files-sdk-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lv8jmp4q89fpdjkixpx664hvkxkz478pmhvz2nlzq8armbjg0zi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Files-com/files-sdk-go/v3"
      #:unpack-path "github.com/Files-com/files-sdk-go"))
    (propagated-inputs (list go-moul-io-http2curl-v2 ; packaged
                             go-golang-org-x-text
                             go-golang-org-x-exp
                             go-github-com-stretchr-testify
                             go-github-com-snabb-httpreaderat
                             go-github-com-samber-lo ; packaged
                             go-github-com-sabhiram-go-gitignore
                             go-github-com-panjf2000-ants-v2
                             go-github-com-lpar-date
                             go-github-com-hashicorp-go-retryablehttp
                             go-github-com-gin-gonic-gin
                             go-github-com-dnaeon-go-vcr
                             go-github-com-chilts-sid
                             go-github-com-bradfitz-iter
                             go-github-com-appscode-go-querystring))
    (home-page "https://github.com/Files-com/files-sdk-go")
    (synopsis "Files.com Go Client")
    (description
     "The content included here should be enough to get started, but please visit our
@@url{https://developers.files.com/go/,Developer Documentation Website} for the
complete documentation.")
    (license license:expat)))

(define-public go-github-com-firefart-nonamedreturns
  (package
    (name "go-github-com-firefart-nonamedreturns")
    (version "1.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/firefart/nonamedreturns")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gz91qkhpna26iqzgn6gp6yci4amf9y0dgq25yfzy1lkaz1k7f8w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/firefart/nonamedreturns"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/firefart/nonamedreturns")
    (synopsis "nonamedreturns")
    (description
     "I hate named returns in golang because they are error prone.  That's why I wrote
this linter.  That's all.")
    (license license:gpl3)))

(define-public go-github-com-flynn-go-docopt
  (package
    (name "go-github-com-flynn-go-docopt")
    (version "0.0.0-20140912013429-f6dd2ebbb31e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/flynn/go-docopt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07s8fvnab40mcfmlsgrrddgvrirgm1krb7kaqgipcikjcmj8j6ql"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/flynn/go-docopt"))
    (home-page "https://github.com/flynn/go-docopt")
    (synopsis "docopt-go")
    (description
     "Package docopt parses command-line arguments based on a help message.")
    (license license:expat)))

(define-public go-github-com-flynn-go-shlex
  (package
    (name "go-github-com-flynn-go-shlex")
    (version "0.0.0-20150515145356-3f9db97f8568")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/flynn-archive/go-shlex")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j743lysygkpa2s2gii2xr32j7bxgc15zv4113b0q9jhn676ysia"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/flynn/go-shlex"))
    (home-page "https://github.com/flynn/go-shlex")
    (synopsis #f)
    (description
     "go-shlex is a simple lexer for go that supports shell-style quoting, commenting,
and escaping.")
    (license license:asl2.0)))

(define-public go-github-com-fortytw2-leaktest
  (package
    (name "go-github-com-fortytw2-leaktest")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fortytw2/leaktest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0487zghyxqzk6zdbhd2j074pcc2l15l4sfg5clrjqwfbql7519wx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fortytw2/leaktest"))
    (home-page "https://github.com/fortytw2/leaktest")
    (synopsis "Leaktest")
    (description
     "Package leaktest provides tools to detect leaked goroutines in tests.  To use
it, call \"defer @code{leaktest.Check(t)()}\" at the beginning of each test that
may use goroutines.  copied out of the cockroachdb source tree with slight
modifications to be more re-useable.")
    (license license:bsd-3)))

(define-public go-github-com-foxcpp-go-mockdns
  (package
    (name "go-github-com-foxcpp-go-mockdns")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/foxcpp/go-mockdns")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1b88ra4y1yn3wzlwn2ajg11vg44pz6h741ac7gai7gmq12lmk18m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/foxcpp/go-mockdns"))
    (propagated-inputs (list go-github-com-miekg-dns))
    (home-page "https://github.com/foxcpp/go-mockdns")
    (synopsis "go-mockdns")
    (description
     "Boilerplate for testing of code involving DNS lookups, including hacks to
redirect @@code{net.Lookup*} calls.")
    (license license:expat)))

(define-public go-github-com-franela-goreq
  (package
    (name "go-github-com-franela-goreq")
    (version "0.0.0-20171204163338-bcd34c9993f8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/franela/goreq")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "055a20nc5f1blk2swiwpwqpxd3z495ms1qr6a7cbbss1w3a7a7sb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/franela/goreq"))
    (home-page "https://github.com/franela/goreq")
    (synopsis "GoReq")
    (description "Simple and sane HTTP request library for Go language.")
    (license license:expat)))

(define-public go-github-com-freddierice-go-losetup
  (package
    (name "go-github-com-freddierice-go-losetup")
    (version "0.0.0-20220711213114-2a14873012db")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/freddierice/go-losetup")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11jhkg07gsv73bc9ya8b5m62hzvhfkjjpvzsvhaj0z5as4y45cr6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/freddierice/go-losetup"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/freddierice/go-losetup")
    (synopsis "go-losetup")
    (description "This package provides a losetup implementation for go-lang.")
    (license license:expat)))

(define-public go-github-com-fsnotify-fsevents
  (package
    (name "go-github-com-fsnotify-fsevents")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fsnotify/fsevents")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0wmy32dvk6f3y0gq1fmm5hls6w92rxyi182bayq1x5dkn2nbmjfp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fsnotify/fsevents"))
    (home-page "https://github.com/fsnotify/fsevents")
    (synopsis "Caveats")
    (description
     "Package fsevents provides file system notifications on @code{macOS}.")
    (license license:bsd-3)))

(define-public go-github-com-fsouza-fake-gcs-server
  (package
    (name "go-github-com-fsouza-fake-gcs-server")
    (version "1.50.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fsouza/fake-gcs-server")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07gfdj7svhacm06a8swba4amidz5rlr9qjwzfsn7ibn82cvfnrn8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/fsouza/fake-gcs-server"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto
                             go-github-com-google-renameio-v2
                             go-google-golang-org-api
                             go-golang-org-x-oauth2
                             go-github-com-stretchr-testify
                             go-github-com-pkg-xattr
                             go-github-com-minio-minio-go-v7 ; packaged
                             go-github-com-gorilla-mux
                             go-github-com-gorilla-handlers
                             go-github-com-google-go-cmp
                             go-github-com-fsouza-slognil
                             go-cloud-google-com-go-storage
                             go-cloud-google-com-go-pubsub))
    (home-page "https://github.com/fsouza/fake-gcs-server")
    (synopsis "fake-gcs-server")
    (description
     "fake-gcs-server provides an emulator for Google Cloud Storage API. It can be
used as a library in Go projects and/or as a standalone binary/Docker image.")
    (license license:bsd-2)))

(define-public go-github-com-fsouza-slognil
  (package
    (name "go-github-com-fsouza-slognil")
    (version "0.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fsouza/slognil")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06bkb3pa6hllrqx5p1icf1dn9g7lh0pl032qpbpv930gnwk7332x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/fsouza/slognil"))
    (home-page "https://github.com/fsouza/slognil")
    (synopsis "slognil")
    (description
     "Discard handler for slog.  Want do discard all logs? Use this handler, without
bothering with levels (useful for tests):.")
    (license license:isc)))

(define-public go-github-com-fullsailor-pkcs7
  (package
    (name "go-github-com-fullsailor-pkcs7")
    (version "0.0.0-20190404230743-d7302db945fa")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fullsailor/pkcs7")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13d7dpj85j36pxwg1kn7b23rm54va5p9v3vdcx27pma2jjlsxsm1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fullsailor/pkcs7"))
    (home-page "https://github.com/fullsailor/pkcs7")
    (synopsis "pkcs7")
    (description
     "Package pkcs7 implements parsing and generation of some PKCS#7 structures.")
    (license license:expat)))

(define-public go-github-com-fullstorydev-grpcurl
  (package
    (name "go-github-com-fullstorydev-grpcurl")
    (version "1.9.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fullstorydev/grpcurl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z5gach2zc093sd807ysy2x9m5l2wij6l2z0zc8qz3mx8z2d02fh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fullstorydev/grpcurl"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-github-com-jhump-protoreflect
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/fullstorydev/grpcurl")
    (synopsis "gRPCurl")
    (description
     "Package grpcurl provides the core functionality exposed by the grpcurl command,
for dynamically connecting to a server, using the reflection service to inspect
the server, and invoking RPCs.  The grpcurl command-line tool constructs a
@code{DescriptorSource}, based on the command-line parameters, and supplies an
@code{InvocationEventHandler} to supply request data (which can come from
command-line args or the process's stdin) and to log the events (to the
process's stdout).")
    (license license:expat)))

(define-public go-github-com-fzipp-gocyclo
  (package
    (name "go-github-com-fzipp-gocyclo")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/fzipp/gocyclo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1w2h8qlifrskn8g8zcwb6banr9si0vck9y8irg1r51mc98cjv36l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/fzipp/gocyclo"))
    (home-page "https://github.com/fzipp/gocyclo")
    (synopsis "gocyclo")
    (description
     "Package gocyclo calculates the cyclomatic complexities of functions and methods
in Go source code.")
    (license license:bsd-3)))

(define-public go-github-com-gage-technologies-mistral-go
  (package
    (name "go-github-com-gage-technologies-mistral-go")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Gage-Technologies/mistral-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kczi8635s3hv712sns2pskyn3d528s2nnrbwa5r5450iiv3h3wz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gage-technologies/mistral-go"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/gage-technologies/mistral-go")
    (synopsis "Mistral Go Client")
    (description
     "The Mistral Go Client is a comprehensive Golang library designed to interface
with the Mistral AI API, providing developers with a robust set of tools to
integrate advanced AI-powered features into their applications.  This client
supports a variety of functionalities, including Chat Completions, Chat
Completions Streaming, and Embeddings, allowing for seamless interaction with
Mistral's powerful language models.")
    (license license:expat)))

(define-public go-github-com-gaijinentertainment-go-exhaustruct-v3
  (package
    (name "go-github-com-gaijinentertainment-go-exhaustruct-v3")
    (version "3.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/GaijinEntertainment/go-exhaustruct")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0v81hbdwmsllyxzpw255xjll05z5yh2rzim8na4c1iqx4b5xl6wb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/GaijinEntertainment/go-exhaustruct/v3"
      #:unpack-path "github.com/GaijinEntertainment/go-exhaustruct"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/GaijinEntertainment/go-exhaustruct")
    (synopsis "exhaustruct")
    (description
     "@@code{exhaustruct} is a golang analyzer that finds structures with
uninitialized fields.")
    (license license:expat)))

(define-public go-github-com-garyburd-go-oauth
  (package
    (name "go-github-com-garyburd-go-oauth")
    (version "0.0.0-20180319155456-bca2e7f09a17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/garyburd/go-oauth")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0s1fgr17ss7krh6r3s6lp18w02kl3ds4r096ym3qrd29h63s8s8y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/garyburd/go-oauth"))
    (home-page "https://github.com/garyburd/go-oauth")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-gen2brain-beeep
  (package
    (name "go-github-com-gen2brain-beeep")
    (version "0.0.0-20240516210008-9c006672e7f4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gen2brain/beeep")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1izdc8227b9irpdzv7kcyahcgna0qf82nzva0c6043lnfzaf03l2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gen2brain/beeep"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-tadvi-systray
                             go-github-com-godbus-dbus-v5
                             go-github-com-go-toast-toast))
    (home-page "https://github.com/gen2brain/beeep")
    (synopsis "beeep")
    (description
     "Package beeep provides a cross-platform library for sending desktop
notifications and beeps.")
    (license license:bsd-2)))

(define-public go-github-com-gen2brain-shm
  (package
    (name "go-github-com-gen2brain-shm")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gen2brain/shm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jg244x7jm8gnng2fvw4x95xr4v8c578j2ralf5j1d3q4hfmindz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gen2brain/shm"))
    (home-page "https://github.com/gen2brain/shm")
    (synopsis "shm")
    (description
     "Package shm implements System V shared memory functions (shmctl, shmget, shmat,
shmdt).")
    (license license:bsd-3)))

(define-public go-github-com-geoffgarside-ber
  (package
    (name "go-github-com-geoffgarside-ber")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/geoffgarside/ber")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06fql601iilsk7j7xc84lv4yxkid9gsn1np82vd7qwqazgkdwk2n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/geoffgarside/ber"))
    (home-page "https://github.com/geoffgarside/ber")
    (synopsis "BER Package")
    (description
     "Package asn1 implements parsing of DER-encoded ASN.1 data structures, as defined
in ITU-T Rec X.690.")
    (license license:bsd-3)))

(define-public go-github-com-getzep-zep-go
  (package
    (name "go-github-com-getzep-zep-go")
    (version "1.0.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/getzep/zep-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00rzgp06qsw5gxms8y9vm34psxw85anw66jn22bdvm8hdbgg2333"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/getzep/zep-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-uuid))
    (home-page "https://github.com/getzep/zep-go")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-ghostiam-protogetter
  (package
    (name "go-github-com-ghostiam-protogetter")
    (version "0.3.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ghostiam/protogetter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ga5qvijjzfz5iz7m4m2dxvlhf56kryh34ff4aar8md2sx0d33sm"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/ghostiam/protogetter"))
    (propagated-inputs (list go-golang-org-x-tools go-github-com-gobwas-glob))
    (home-page "https://github.com/ghostiam/protogetter")
    (synopsis "Protogetter")
    (description "Welcome to the Protogetter project!")
    (license license:expat)))

(define-public go-github-com-gigawattio-window
  (package
    (name "go-github-com-gigawattio-window")
    (version "0.0.0-20180317192513-0f5467e35573")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gigawattio/window")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03m3ff59xllzxgisl6jicdh3p3j7rakk7rkwb119v0blmqjk4ib8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gigawattio/window"))
    (home-page "https://github.com/gigawattio/window")
    (synopsis "window")
    (description
     "Window is a golang package for generating a rolling window of size N for a
sequence of string tokens.")
    (license license:expat)))

(define-public go-github-com-github-fakeca
  (package
    (name "go-github-com-github-fakeca")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/github/fakeca")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1v35lrgcc23rd2f5baa7sini11ap1cb1n07kasvicsg5qb58ypbq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/github/fakeca"))
    (home-page "https://github.com/github/fakeca")
    (synopsis "fakeca")
    (description
     "This is a package for creating fake certificate authorities for test fixtures.")
    (license license:expat)))

(define-public go-github-com-gitleaks-go-gitdiff
  (package
    (name "go-github-com-gitleaks-go-gitdiff")
    (version "0.9.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gitleaks/go-gitdiff")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fi4swcs2cis0rfdhlgzqcgx2l7xm9m1ablk28c0ziva8n2v9p7v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gitleaks/go-gitdiff"))
    (home-page "https://github.com/gitleaks/go-gitdiff")
    (synopsis "go-gitdiff")
    (description
     "This package provides a Go library for parsing and applying patches generated by
@@code{git diff}, @@code{git show}, and @@code{git format-patch}.  It can also
parse and apply unified diffs generated by the standard @@code{diff} tool.")
    (license license:expat)))

(define-public go-github-com-glebarez-go-sqlite
  (package
    (name "go-github-com-glebarez-go-sqlite")
    (version "1.22.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/glebarez/go-sqlite")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11bnglrk8iwjlsgmw0cy4sy1k408qq6hwnsyl0gslwsdi9jvrngi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/glebarez/go-sqlite"))
    (propagated-inputs (list go-modernc-org-sqlite go-modernc-org-mathutil
                             go-modernc-org-libc go-golang-org-x-sys
                             go-github-com-google-pprof))
    (home-page "https://github.com/glebarez/go-sqlite")
    (synopsis "go-sqlite")
    (description
     "This is a pure-Go SQLite driver for Golang's native
@@url{https://pkg.go.dev/database/sql,database/sql} package.  The driver has
@@url{https://gitlab.com/cznic/sqlite,Go-based implementation of SQLite}
embedded in itself (so, you don't need to install SQLite separately).")
    (license license:bsd-3)))

(define-public go-github-com-glendc-gopher-json
  (package
    (name "go-github-com-glendc-gopher-json")
    (version "0.0.0-20170414221815-dc4743023d0c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/GlenDC/gopher-json")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hvam978ls0768smwfywwfg2dy816bfifch4hdwwbsx2d59zpphs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/glendc/gopher-json"))
    (home-page "https://github.com/glendc/gopher-json")
    (synopsis "gopher-json")
    (description
     "Package json is a simple JSON encoder/decoder for gopher-lua.")
    (license license:unlicense)))

(define-public go-github-com-go-acme-lego-v4
  (package
    (name "go-github-com-go-acme-lego-v4")
    (version "4.21.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-acme/lego")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ms95x5fkka0v3pg0np0in4zhnx68s6by9sxnw0iydh1z50szm6x"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/go-acme/lego/v4"
      #:unpack-path "github.com/go-acme/lego"))
    (propagated-inputs (list go-software-sslmate-com-src-go-pkcs12
                        go-gopkg-in-yaml-v2
                        go-gopkg-in-ns1-ns1-go-v2
                        go-google-golang-org-api
                        go-golang-org-x-time
                        go-golang-org-x-text
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-github-com-yandex-cloud-go-sdk
                        go-github-com-yandex-cloud-go-genproto
                        go-github-com-vultr-govultr-v3
                        go-github-com-volcengine-volc-sdk-golang
                        go-github-com-vinyldns-go-vinyldns
                        go-github-com-urfave-cli-v2
                        go-github-com-ultradns-ultradns-go-sdk
                        go-github-com-transip-gotransip-v6
                        go-github-com-tencentcloud-tencentcloud-sdk-go-tencentcloud-dnspod
                        go-github-com-tencentcloud-tencentcloud-sdk-go-tencentcloud-common
                        go-github-com-stretchr-testify
                        go-github-com-softlayer-softlayer-go
                        go-github-com-selectel-go-selvpcclient-v3
                        go-github-com-selectel-domains-go
                        go-github-com-scaleway-scaleway-sdk-go
                        go-github-com-sacloud-iaas-api-go
                        go-github-com-sacloud-api-client-go
                        go-github-com-regfish-regfish-dnsapi-go
                        go-github-com-rainycape-memcache
                        go-github-com-pquerna-otp
                        go-github-com-ovh-go-ovh
                        go-github-com-oracle-oci-go-sdk-v65
                        go-github-com-nzdjb-go-metaname
                        go-github-com-nrdcg-porkbun
                        go-github-com-nrdcg-nodion
                        go-github-com-nrdcg-namesilo
                        go-github-com-nrdcg-mailinabox
                        go-github-com-nrdcg-goinwx
                        go-github-com-nrdcg-freemyip
                        go-github-com-nrdcg-dnspod-go
                        go-github-com-nrdcg-desec
                        go-github-com-nrdcg-bunny-go
                        go-github-com-nrdcg-auroradns
                        go-github-com-namedotcom-go
                        go-github-com-mimuret-golang-iij-dpf
                        go-github-com-miekg-dns
                        go-github-com-mattn-go-isatty
                        go-github-com-liquidweb-liquidweb-go
                        go-github-com-linode-linodego
                        go-github-com-labbsr0x-bindman-dns-webhook
                        go-github-com-infobloxopen-infoblox-go-client
                        go-github-com-iij-doapi
                        go-github-com-huaweicloud-huaweicloud-sdk-go-v3
                        go-github-com-hashicorp-go-version
                        go-github-com-hashicorp-go-retryablehttp
                        go-github-com-gophercloud-utils
                        go-github-com-gophercloud-gophercloud
                        go-github-com-google-go-querystring
                        go-github-com-go-viper-mapstructure-v2
                        go-github-com-go-jose-go-jose-v4 ; packaged
                        go-github-com-exoscale-egoscale-v3
                        go-github-com-dnsimple-dnsimple-go
                        go-github-com-cpu-goacmedns
                        go-github-com-cloudflare-cloudflare-go
                        go-github-com-civo-civogo
                        go-github-com-cenkalti-backoff-v4 ;packaged

                        go-github-com-aws-aws-sdk-go-v2-service-sts
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-aws-aws-sdk-go-v2-service-route53
                        go-github-com-aws-aws-sdk-go-v2-service-lightsail
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-aliyun-alibaba-cloud-sdk-go
                        go-github-com-akamai-akamaiopen-edgegrid-golang
                        go-github-com-opendns-vegadns2client
                        go-github-com-burntsushi-toml
                        go-github-com-azure-go-autorest-autorest-to
                        go-github-com-azure-go-autorest-autorest-azure-auth
                        go-github-com-azure-go-autorest-autorest
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-resourcegraph-armresourcegraph
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-privatedns-armprivatedns
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-dns-armdns
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore
                        go-github-com-azure-azure-sdk-for-go
                        go-cloud-google-com-go-compute-metadata))
    (home-page "https://github.com/go-acme/lego")
    (synopsis "Lego")
    (description "Let's Encrypt client and ACME library written in Go.")
    (license license:expat)))

(define-public go-github-com-go-ap-activitypub
  (package
    (name "go-github-com-go-ap-activitypub")
    (version "0.0.0-20241228090954-75890bd9cfda")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-ap/activitypub")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00rvvjx73vx23hh2qcaan80hnj46lv1xzzkz8gakj5alllffw652"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-ap/activitypub"))
    (propagated-inputs (list go-github-com-valyala-fastjson
                             go-github-com-go-ap-jsonld
                             go-github-com-go-ap-errors
                             go-git-sr-ht--mariusor-go-xsd-duration))
    (home-page "https://github.com/go-ap/activitypub")
    (synopsis "About GoActivityPub: Vocabulary")
    (description
     "This project is part of the @@url{https://github.com/go-ap,@code{GoActivityPub}}
library which helps with creating @code{ActivityPub} applications using the Go
programming language.")
    (license license:expat)))

(define-public go-github-com-go-ap-errors
  (package
    (name "go-github-com-go-ap-errors")
    (version "0.0.0-20241212155021-5a598b6bf467")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-ap/errors")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ldi0wrkdch7way0f5cnn04b7v06357aq13c400pl6pzllalhy43"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-ap/errors"))
    (propagated-inputs (list go-github-com-valyala-fastjson
                             go-github-com-go-ap-jsonld))
    (home-page "https://github.com/go-ap/errors")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-go-ap-jsonld
  (package
    (name "go-github-com-go-ap-jsonld")
    (version "0.0.0-20221030091449-f2a191312c73")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-ap/jsonld")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "033zghspl9fp52qc5impdcczzkxi64vjz9xibmvxjh1g0ky20s3m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-ap/jsonld"))
    (home-page "https://github.com/go-ap/jsonld")
    (synopsis "JSON-ld for Go")
    (description
     "Package jsonld implements encoding and decoding of JSON as defined in
@@url{https://rfc-editor.org/rfc/rfc4627.html,RFC 4627}.  The mapping between
JSON and Go values is described in the documentation for the Marshal and
Unmarshal functions.")
    (license license:expat)))

(define-public go-github-com-go-check-check
  (package
    (name "go-github-com-go-check-check")
    (version "0.0.0-20201130134442-10cb98267c6c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-check/check")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jwxndf8rsyx0fgrp47d99rp55yzssmryb92jfj3yf7zd8rjjljn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-check/check"))
    (propagated-inputs (list go-github-com-kr-pretty ; packaged
                             ))
    (home-page "https://github.com/go-check/check")
    (synopsis "Instructions")
    (description
     "Package check is a rich testing extension for Go's testing package.")
    (license license:bsd-2)))

(define-public go-github-com-go-chi-chi
  (package
    (name "go-github-com-go-chi-chi")
    (version "1.5.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-chi/chi")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vw2g4lysg5b6b29v7nh7ryr3h7kshx60cal6w672fg5m1p8vddh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-chi/chi"))
    (home-page "https://github.com/go-chi/chi")
    (synopsis #f)
    (description
     "Package chi is a small, idiomatic and composable router for building HTTP
services.")
    (license license:expat)))

(define-public go-github-com-go-chi-cors
  (package
    (name "go-github-com-go-chi-cors")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-chi/cors")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13ya3h4lsd18hs58ark5q31dr2dpszgbjr371rph3yphfp2ddzlg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-chi/cors"))
    (home-page "https://github.com/go-chi/cors")
    (synopsis "CORS net/http middleware")
    (description
     "cors package is net/http handler to handle CORS related requests as defined by
@@url{http://www.w3.org/TR/cors/,http://www.w3.org/TR/cors/}.")
    (license license:expat)))

(define-public go-github-com-go-co-op-gocron
  (package
    (name "go-github-com-go-co-op-gocron")
    (version "1.37.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-co-op/gocron")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dj5qw91k4gm7nrvgvacnvap8xg44862ybr7y3y07kf6ry0iqh7w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-co-op/gocron"))
    (propagated-inputs (list go-github-com-google-uuid go-go-uber-org-atomic
                             go-github-com-stretchr-testify
                             go-github-com-robfig-cron-v3))
    (home-page "https://github.com/go-co-op/gocron")
    (synopsis "gocron: A Golang Job Scheduling Package.")
    (description "Package gocron : A Golang Job Scheduling Package.")
    (license license:expat)))

(define-public go-github-com-go-critic-go-critic
  (package
    (name "go-github-com-go-critic-go-critic")
    (version "0.11.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-critic/go-critic")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vhcf33x3wwisz4w530p7xbgcvqra04n3gjljyfpmvqx0dmy6zi8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-critic/go-critic"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-quasilyte-regex-syntax
                             go-github-com-quasilyte-go-ruleguard-dsl
                             go-github-com-quasilyte-go-ruleguard
                             go-github-com-google-go-cmp
                             go-github-com-go-toolsmith-typep
                             go-github-com-go-toolsmith-strparse
                             go-github-com-go-toolsmith-pkgload
                             go-github-com-go-toolsmith-astp
                             go-github-com-go-toolsmith-astfmt
                             go-github-com-go-toolsmith-astequal
                             go-github-com-go-toolsmith-astcopy
                             go-github-com-go-toolsmith-astcast
                             go-github-com-cristalhq-acmd))
    (home-page "https://github.com/go-critic/go-critic")
    (synopsis "go-critic")
    (description "nolint // it's not a Go code file.")
    (license license:expat)))

(define-public go-github-com-go-darwin-apfs
  (package
    (name "go-github-com-go-darwin-apfs")
    (version "0.0.0-20211011131704-f84b94dbf348")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-darwin/apfs")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jkdak6xb74h0pvqjx8fxghq6raqdh0k9mhp2waxm8yglp4zb1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-darwin/apfs"))
    (home-page "https://github.com/go-darwin/apfs")
    (synopsis "apfs")
    (description
     "Package apfs implements an Apple File System(APFS) bindings for Go.")
    (license license:bsd-3)))

(define-public go-github-com-go-ego-gse
  (package
    (name "go-github-com-go-ego-gse")
    (version "0.80.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-ego/gse")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gvajph0xybqn2zd3k74jjkckg473h8msryypwbly74c1196svl1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-ego/gse"))
    (propagated-inputs (list go-github-com-vcaesar-tt
                             go-github-com-vcaesar-cedar))
    (home-page "https://github.com/go-ego/gse")
    (synopsis "gse")
    (description
     "Package gse Go efficient multilingual NLP and text segmentation.")
    (license license:asl2.0)))

(define-public go-github-com-go-enry-go-enry-v2
  (package
    (name "go-github-com-go-enry-go-enry-v2")
    (version "2.9.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-enry/go-enry")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04wdyyhp4afbgsxqlip9idlhb8dmmvwidx9v13yqkgwhjcwhr9qv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-enry/go-enry/v2"
      #:unpack-path "github.com/go-enry/go-enry"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-github-com-stretchr-testify
                             go-github-com-go-enry-go-oniguruma))
    (home-page "https://github.com/go-enry/go-enry")
    (synopsis "go-enry")
    (description "Package enry identifies programming languages.")
    (license license:asl2.0)))

(define-public go-github-com-go-enry-go-oniguruma
  (package
    (name "go-github-com-go-enry-go-oniguruma")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-enry/go-oniguruma")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wlgs5qms988f4q1h30c08f3w7jlnz76dlkp2shf02prgv4qv00f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-enry/go-oniguruma"))
    (home-page "https://github.com/go-enry/go-oniguruma")
    (synopsis "go-oniguruma")
    (description
     "This repository is a fork of
@@url{https://github.com/moovweb/rubex/tree/go1,moovweb/rubex} - a simple
regular expression library (based on
@@url{https://github.com/kkos/oniguruma,oniguruma}) that supports Ruby's regex
syntax.")
    (license license:expat)))

(define-public go-github-com-go-faker-faker-v4
  (package
    (name "go-github-com-go-faker-faker-v4")
    (version "4.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-faker/faker")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0szz3672w48bb6q3q15z65a8vvdg010ylr7xq7gbnh4j3jd3vs7d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-faker/faker/v4"
      #:unpack-path "github.com/go-faker/faker"))
    (propagated-inputs (list go-golang-org-x-text))
    (home-page "https://github.com/go-faker/faker")
    (synopsis "Docs")
    (description "Struct Data Fake Generator.")
    (license license:expat)))

(define-public go-github-com-go-faster-city
  (package
    (name "go-github-com-go-faster-city")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-faster/city")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nssg8ynnsk4isrh88h4v8srzq46z8lqb867gr0dbpkasmq3d8dx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-faster/city"))
    (home-page "https://github.com/go-faster/city")
    (synopsis "city")
    (description "Package city implements @code{CityHash} in go.")
    (license license:expat)))

(define-public go-github-com-go-faster-errors
  (package
    (name "go-github-com-go-faster-errors")
    (version "0.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-faster/errors")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0s17dmrgrh20fkv1vj3p04pj48h8fs13ah648dpxy4zp6rkwwzwc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-faster/errors"))
    (home-page "https://github.com/go-faster/errors")
    (synopsis "errors")
    (description "Package errors implements functions to manipulate errors.")
    (license license:bsd-3)))

(define-public go-github-com-go-fonts-dejavu
  (package
    (name "go-github-com-go-fonts-dejavu")
    (version "0.3.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-fonts/dejavu")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02kgyyraifli3sqfjms0bcfvr6z4hfjs07dynl2s1ri0bwn9cfn9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-fonts/dejavu"))
    (propagated-inputs (list go-golang-org-x-image))
    (home-page "https://github.com/go-fonts/dejavu")
    (synopsis "dejavu")
    (description "Package dejavu holds TTF data of the @code{DejaVu} fonts.")
    (license license:bsd-3)))

(define-public go-github-com-go-fonts-latin-modern
  (package
    (name "go-github-com-go-fonts-latin-modern")
    (version "0.3.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-fonts/latin-modern")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q1ypaw54m9qzzzwchxwmb52v0m6gr1zl92ncyynasb0xmbn3lsd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-fonts/latin-modern"))
    (propagated-inputs (list go-golang-org-x-image))
    (home-page "https://github.com/go-fonts/latin-modern")
    (synopsis "latin-modern")
    (description "Package lm holds TTF data of the Latin Modern fonts.")
    (license license:bsd-3)))

(define-public go-github-com-go-fonts-liberation
  (package
    (name "go-github-com-go-fonts-liberation")
    (version "0.3.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-fonts/liberation")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03zwfvakan4ki69jp8yz01wvb9yrdn8y5839zwbjdkhm3s41p8ky"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-fonts/liberation"))
    (propagated-inputs (list go-golang-org-x-image))
    (home-page "https://github.com/go-fonts/liberation")
    (synopsis "liberation")
    (description "Package liberation holds TTF data of the Liberation fonts.")
    (license license:bsd-3)))

(define-public go-github-com-go-fonts-stix
  (package
    (name "go-github-com-go-fonts-stix")
    (version "0.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-fonts/stix")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vmrxpm0dc7c7j0bsxy4xzl464n8rsb18hkbv9kvpjl1qya3bghl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-fonts/stix"))
    (propagated-inputs (list go-golang-org-x-image))
    (home-page "https://github.com/go-fonts/stix")
    (synopsis "stix")
    (description "Package stix holds TTF data of the STIX2 fonts.")
    (license license:bsd-3)))

(define-public go-github-com-go-gl-glfw-v3-3-glfw
  (package
    (name "go-github-com-go-gl-glfw-v3-3-glfw")
    (version "0.0.0-20240506104042-037f3cc74f2a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-gl/glfw")
             (commit (go-version->git-ref version
                                          #:subdir "v3.3/glfw"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15247k8h5zpbnfklfvvyzbprjb7vhn6ihji0kslnwa886bmjxcnh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-gl/glfw/v3.3/glfw"
      #:unpack-path "github.com/go-gl/glfw"))
    (home-page "https://github.com/go-gl/glfw")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-go-gorp-gorp
  (package
    (name "go-github-com-go-gorp-gorp")
    (version "2.2.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-gorp/gorp")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hanl3kzhx3piqqlclwfrzaghjblihh0ili35ma3q1y3lz6f9i5q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-gorp/gorp"))
    (home-page "https://github.com/go-gorp/gorp")
    (synopsis "Go Relational Persistence")
    (description
     "Package gorp provides a simple way to marshal Go structs to and from SQL
databases.  It uses the database/sql package, and should work with any compliant
database/sql driver.")
    (license license:expat)))

(define-public go-github-com-go-gorp-gorp-v3
  (package
    (name "go-github-com-go-gorp-gorp-v3")
    (version "3.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-gorp/gorp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "066g12bkn7aw14wj2cd0q4q0f9m8sm9wpq2wvdp0rvzrmggix6pw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-gorp/gorp/v3"
      #:unpack-path "github.com/go-gorp/gorp"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-poy-onpar
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-lib-pq
                             go-github-com-go-sql-driver-mysql))
    (home-page "https://github.com/go-gorp/gorp")
    (synopsis "Go Relational Persistence")
    (description
     "Package gorp provides a simple way to marshal Go structs to and from SQL
databases.  It uses the database/sql package, and should work with any compliant
database/sql driver.")
    (license license:expat)))

(define-public go-github-com-go-json-experiment-json
  (package
    (name "go-github-com-go-json-experiment-json")
    (version "0.0.0-20241230234304-6c5a3c3d280b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-json-experiment/json")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10825608w3jrm93yv7rcf3nbjd4af1r08scpkl0ay26gzskg9x0q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/go-json-experiment/json"))
    (home-page "https://github.com/go-json-experiment/json")
    (synopsis "JSON Serialization (v2)")
    (description
     "Package json implements semantic processing of JSON as specified in
@@url{https://rfc-editor.org/rfc/rfc8259.html,RFC 8259}.  JSON is a simple data
interchange format that can represent primitive data types such as booleans,
strings, and numbers, in addition to structured data types such as objects and
arrays.")
    (license license:bsd-3)))

(define-public go-github-com-go-kit-kit
  (package
    (name "go-github-com-go-kit-kit")
    (version "0.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-kit/kit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0c9vra93whqd0mf9g8krw8drlv9cv8v0b9abslvyms4qyy56j171"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-kit/kit"))
    (propagated-inputs (list
                        go-github-com-afex-hystrix-go
                        go-github-com-aws-aws-sdk-go
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-aws-aws-sdk-go-v2-service-cloudwatch
                        go-github-com-casbin-casbin-v2
                        go-github-com-go-kit-log ;; packaged
                        go-github-com-go-zookeeper-zk
                        go-github-com-golang-jwt-jwt-v4
                        go-github-com-hashicorp-consul-api
                        go-github-com-hudl-fargo
                        go-github-com-influxdata-influxdb1-client
                        go-github-com-nats-io-nats-go
                        go-github-com-nats-io-nats-server-v2
                        go-github-com-opentracing-opentracing-go
                        go-github-com-openzipkin-zipkin-go ; packaged
                        go-github-com-performancecopilot-speed-v4 ; packaged
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-rabbitmq-amqp091-go
                        go-github-com-sirupsen-logrus
                        go-github-com-sony-gobreaker
                        go-github-com-streadway-handy
                        go-github-com-vividcortex-gohistogram
                        go-go-etcd-io-etcd-client-pkg-v3
                        go-go-etcd-io-etcd-client-v2
                        go-go-etcd-io-etcd-client-v3
                        go-go-opencensus-io ; packaged
                        go-go-uber-org-zap
                        go-golang-org-x-sync
                        go-golang-org-x-time
                        go-google-golang-org-grpc
                        go-google-golang-org-protobuf
                        ))
    (home-page "https://github.com/go-kit/kit")
    (synopsis "Go kit")
    (description
     "@@strong{Go kit} is a @@strong{programming toolkit} for building microservices
(or elegant monoliths) in Go.  We solve common problems in distributed systems
and application architecture so you can focus on delivering business value.")
    (license license:expat)))

(define-public go-github-com-go-latex-latex
  (package
    (name "go-github-com-go-latex-latex")
    (version "0.0.0-20240709081214-31cef3c7570e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-latex/latex")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lqjb4s5s5zprhdnm2jzzpx4sh25sr1y7vw6k1f7h7znkwq1f8y1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-latex/latex"))
    (propagated-inputs (list go-golang-org-x-image
                             go-github-com-go-pdf-fpdf
                             go-github-com-go-fonts-stix
                             go-github-com-go-fonts-liberation
                             go-github-com-go-fonts-latin-modern
                             go-github-com-go-fonts-dejavu
                             go-git-sr-ht--sbinet-gg
                             go-gioui-org))
    (home-page "https://github.com/go-latex/latex")
    (synopsis "latex")
    (description
     "Package latex provides types and functions to work with @code{LaTeX}.")
    (license license:bsd-3)))

(define-public go-github-com-go-log-log
  (package
    (name "go-github-com-go-log-log")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-log/log")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1idnqv4yvkmdh3wcsgvhcpak9z6ix8dsifdjq5kfbbnskdq5rmvg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-log/log"))
    (home-page "https://github.com/go-log/log")
    (synopsis "Log")
    (description "Package log provides a log interface.")
    (license license:expat)))

(define-public go-github-com-go-logr-zapr
  (package
    (name "go-github-com-go-logr-zapr")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-logr/zapr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07kg9h853jijfc86zm07856sisac6jwvn06gbk694fg00mj1806f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-logr/zapr"))
    (propagated-inputs (list go-go-uber-org-zap go-github-com-stretchr-testify
                             go-github-com-go-logr-logr))
    (home-page "https://github.com/go-logr/zapr")
    (synopsis "Zapr ⚡")
    (description
     "Package zapr defines an implementation of the github.com/go-logr/logr interfaces
built on top of Zap (go.uber.org/zap).")
    (license license:asl2.0)))

(define-public go-github-com-go-logr-zerologr
  (package
    (name "go-github-com-go-logr-zerologr")
    (version "1.2.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-logr/zerologr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15dhxn4w5ixcr5y7xi1krfgmf9nqgsq0jpjl2bc289kkx6l6l87j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-logr/zerologr"))
    (propagated-inputs (list go-github-com-rs-zerolog ; packaged
                             go-github-com-go-logr-logr))
    (home-page "https://github.com/go-logr/zerologr")
    (synopsis "Zerologr")
    (description
     "Package zerologr defines an implementation of the github.com/go-logr/logr
interfaces built on top of Zerolog
(@@url{https://github.com/rs/zerolog,https://github.com/rs/zerolog}).")
    (license license:asl2.0)))

(define-public go-github-com-go-ole-go-ole
  (package
    (name "go-github-com-go-ole-go-ole")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-ole/go-ole")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vr62wwjp206sxah2l79l007s7n187fjzkrnwb85ivqmazfjspxl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-ole/go-ole"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/go-ole/go-ole")
    (synopsis "Go OLE")
    (description
     "Go bindings for Windows COM using shared libraries instead of cgo.")
    (license license:expat)))

(define-public go-github-com-go-pdf-fpdf
  (package
    (name "go-github-com-go-pdf-fpdf")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-pdf/fpdf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00cqsmgppa2pgcjx9cas825wgr19bgs9dk7wip6f1j2rms31va8z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-pdf/fpdf"))
    (propagated-inputs (list go-golang-org-x-image
                             go-github-com-ruudk-golang-pdf417
                             go-github-com-phpdave11-gofpdi ; packaged
                             go-github-com-boombuler-barcode ; packaged
                             ))
    (home-page "https://github.com/go-pdf/fpdf")
    (synopsis "GoFPDF document generator")
    (description
     "Package fpdf implements a PDF document generator with high level support for
text, drawing and images.")
    (license license:expat)))

(define-public go-github-com-go-pg-pg-v10
  (package
    (name "go-github-com-go-pg-pg-v10")
    (version "10.14.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-pg/pg")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19p9nylayfhv7qrh41nvr9ds1v109givl5z67065wcxjn47qchw3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-pg/pg/v10"
      #:unpack-path "github.com/go-pg/pg"))
    (propagated-inputs (list go-mellium-im-sasl
                             go-gopkg-in-check-v1
                             go-github-com-vmihailenco-tagparser
                             go-github-com-vmihailenco-msgpack-v5
                             go-github-com-vmihailenco-bufpool
                             go-github-com-tmthrgd-go-hex
                             go-github-com-stretchr-testify
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo
                             go-github-com-jinzhu-inflection
                             go-github-com-go-pg-zerochecker))
    (home-page "https://github.com/go-pg/pg")
    (synopsis "PostgreSQL client and ORM for Golang")
    (description "pg provides @code{PostgreSQL} client.")
    (license license:bsd-2)))

(define-public go-github-com-go-pg-zerochecker
  (package
    (name "go-github-com-go-pg-zerochecker")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-pg/zerochecker")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12kz3w6xd7pdrkqy4703fslf6f2qrsc1g1694ki6lxnswjhvsvwx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-pg/zerochecker"))
    (home-page "https://github.com/go-pg/zerochecker")
    (synopsis #f)
    (description #f)
    (license license:bsd-2)))

(define-public go-github-com-go-piv-piv-go-v2
  (package
    (name "go-github-com-go-piv-piv-go-v2")
    (version "2.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-piv/piv-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1358x14k107076m0l7vbkn588dmfrdhc1crjh71s94n8xs7z1v52"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-piv/piv-go/v2"
      #:unpack-path "github.com/go-piv/piv-go"))
    (home-page "https://github.com/go-piv/piv-go")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-go-redis-redis
  (package
    (name "go-github-com-go-redis-redis")
    (version "6.15.9+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/redis/go-redis")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1y13zhv4isf28bq249pz9dp08rb8amyfp2gdbfah09zcmlhjsaki"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-redis/redis"))
    (home-page "https://github.com/go-redis/redis")
    (synopsis "Redis client for Golang")
    (description "Package redis implements a Redis client.")
    (license license:bsd-2)))

(define-public go-github-com-go-redis-redis-v8
  (package
    (name "go-github-com-go-redis-redis-v8")
    (version "8.11.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/redis/go-redis")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0a126m4k8mjavxxyqwmhkyvh54sn113l85mx5zmjph6hlnwzn9cm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-redis/redis/v8"
      #:unpack-path "github.com/go-redis/redis"))
    (propagated-inputs (list go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo
                             go-github-com-dgryski-go-rendezvous
                             go-github-com-cespare-xxhash-v2)) ; packaged
    (home-page "https://github.com/go-redis/redis")
    (synopsis "Redis client for Go")
    (description "Package redis implements a Redis client.")
    (license license:bsd-2)))

(define-public go-github-com-go-redis-redismock-v9
  (package
    (name "go-github-com-go-redis-redismock-v9")
    (version "9.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-redis/redismock")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12c5d2bbqmjslv9jspc1ws01wv2nxip73h52jlk03bwz7kax2y01"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-redis/redismock/v9"
      #:unpack-path "github.com/go-redis/redismock"))
    (propagated-inputs (list go-github-com-redis-go-redis-v9 ; packaged

                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo))
    (home-page "https://github.com/go-redis/redismock")
    (synopsis "Redis client Mock")
    (description
     "Provide mock test for redis query, Compatible with github.com/redis/go-redis/v9.")
    (license license:bsd-2)))

(define-public go-github-com-go-resty-resty-v2
  (package
    (name "go-github-com-go-resty-resty-v2")
    (version "2.16.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-resty/resty")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01irybxvdcwyx1sjv0774mindmpa1zsqk1sdbp6a61q1gswz8j83"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-resty/resty/v2"
      #:unpack-path "github.com/go-resty/resty"))
    (propagated-inputs (list go-golang-org-x-time go-golang-org-x-net))
    (home-page "https://github.com/go-resty/resty")
    (synopsis "News")
    (description
     "Package resty provides Simple HTTP and REST client library for Go.")
    (license license:expat)))

(define-public go-github-com-go-rod-rod
  (package
    (name "go-github-com-go-rod-rod")
    (version "0.116.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-rod/rod")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1szq6j9ascf1qpq8d6vzq8ka7gsr297g8ywpz1p3sk8wrpf35ycb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-rod/rod"))
    (propagated-inputs (list go-github-com-ysmood-leakless
                             go-github-com-ysmood-gson
                             go-github-com-ysmood-gotrace
                             go-github-com-ysmood-got
                             go-github-com-ysmood-goob
                             go-github-com-ysmood-fetchup))
    (home-page "https://github.com/go-rod/rod")
    (synopsis "Overview")
    (description
     "Package rod is a high-level driver directly based on @code{DevTools} Protocol.")
    (license license:expat)))

(define-public go-github-com-go-sourcemap-sourcemap
  (package
    (name "go-github-com-go-sourcemap-sourcemap")
    (version "2.1.4+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-sourcemap/sourcemap")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11scr3yyhdinlx43k5lzyv215181d477ki74q9k9lnnff3w0jq40"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-sourcemap/sourcemap"))
    (home-page "https://github.com/go-sourcemap/sourcemap")
    (synopsis "Source maps consumer for Golang")
    (description "Install:.")
    (license license:bsd-2)))

(define-public go-github-com-go-spatial-cobra
  (package
    (name "go-github-com-go-spatial-cobra")
    (version "0.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-spatial/cobra")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q1nsx05svyv9fv3fy6xv6gs9ffimkyzsfm49flvl3wnvf1ncrkd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-spatial/cobra"))
    (home-page "https://github.com/go-spatial/cobra")
    (synopsis "Table of Contents")
    (description
     "Package cobra is a commander providing a simple interface to create powerful
modern CLI interfaces.  In addition to providing an interface, Cobra
simultaneously provides a controller to organize your application code.")
    (license license:asl2.0)))

(define-public go-github-com-go-spatial-geom
  (package
    (name "go-github-com-go-spatial-geom")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-spatial/geom")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09sh76ajybrjpzkcx9am17h1xlakcd7w1xswbx43nj2gidmf6h9l"))
       (snippet
        #~(begin (use-modules (guix build utils))
                 (delete-file-recursively "vendor")))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-spatial/geom"
      #:test-flags
      ;; Tests failing with errors: assignment mismatch: 2 variables but
      ;; slippy.NewGrid returns 1 value, not enough arguments in call to
      ;; slippy.NewGrid;
      ;;
      ;; undefined: slippy.NewTile, invalid operation: operator ! not defined
      ;; on ok (variable of type error)
      #~(list "-skip" (string-join
                       (list "TestRecorder"
                             "TestIntersect/0"
                             "TestIntersect/1")
                       "|"))))
    (propagated-inputs
     (list go-github-com-arolek-p
           go-github-com-gdey-errors ; packaged
           go-github-com-go-spatial-proj ; packaged
           go-github-com-golang-protobuf
           go-github-com-mattn-go-sqlite3 ; packaged
           go-github-com-mattn-goveralls
           go-github-com-pborman-uuid
           go-golang-org-x-tools))
    (home-page "https://github.com/go-spatial/geom")
    (synopsis "Geometry interfaces for Golang")
    (description
     "This package provides geometry interfaces focusing on 2D geometries.")
    (license license:expat)))


(define-public go-github-com-go-spatial-tegola
  (package
    (name "go-github-com-go-spatial-tegola")
    (version "0.21.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-spatial/tegola")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vv8y46sgij07spjrkhyiqpbxfqvm9im22p2hvzviyvnkgxs2w0i"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/go-spatial/tegola"))
    (propagated-inputs
     (list go-cloud-google-com-go-storage
           go-github-com-ajstarks-svgo
           go-github-com-akrylysov-algnhsa        ; packaged
           go-github-com-aws-aws-sdk-go           ; packaged
           go-github-com-azure-azure-storage-blob-go
           go-github-com-burntsushi-toml          ; packaged
           go-github-com-dimfeld-httptreemux      ; packaged
           go-github-com-gdey-tbltest             ; packaged
           go-github-com-go-spatial-cobra ; why?
           go-github-com-go-spatial-geom
           go-github-com-go-spatial-proj          ; packaged
           go-github-com-go-test-deep             ; packaged
           go-github-com-golang-protobuf          ; packaged
           go-github-com-jackc-pgproto3-v2        ; packaged
           go-github-com-jackc-pgtype             ; packaged
           go-github-com-jackc-pgx-v4             ; packaged
           go-github-com-mattn-go-sqlite3 ; packaged         ; packaged
           go-github-com-mattn-goveralls          ; packaged
           go-github-com-pborman-uuid             ; packaged
           go-github-com-prometheus-client-golang ; packaged
 ; packaged
           go-github-com-redis-go-redis-v9 ; packaged

           go-github-com-sap-go-hdb               ; packaged
           go-github-com-theckman-goconstraint ; why?
           go-go-uber-org-zap                     ; packaged
           go-gopkg-in-go-playground-colors-v1))
    (home-page "https://github.com/go-spatial/tegola")
    (synopsis "Tegola")
    (description
     "Package tegola describes the basic geometries that can be used to convert to and
from.")
    (license license:expat)))

(define-public go-github-com-go-swagger-go-swagger
  (package
    (name "go-github-com-go-swagger-go-swagger")
    (version "0.30.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-swagger/go-swagger")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12hba8y4dv1ix8nfr57yy9h274nccbrlqi979wqjsmlhz6zjvinz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-swagger/go-swagger"))
    (propagated-inputs (list
                             go-github-com-coreos-go-oidc
                             go-github-com-davecgh-go-spew
                             go-github-com-go-openapi-analysis ; packaged
                             go-github-com-go-openapi-errors ; packaged
                             go-github-com-go-openapi-inflect ; packaged
                             go-github-com-go-openapi-loads
                             go-github-com-go-openapi-runtime ; packaged
                             go-github-com-go-openapi-spec
                             go-github-com-go-openapi-strfmt ; packaged
                             go-github-com-go-openapi-swag ; packaged
                             go-github-com-go-openapi-validate ; packaged
                             go-github-com-go-swagger-scan-repo-boundary
                             go-github-com-golang-jwt-jwt
                             go-github-com-gorilla-handlers
                             go-github-com-jessevdk-go-flags
                             go-github-com-kr-pretty
                             go-github-com-masterminds-sprig-v3
                             go-github-com-mitchellh-go-homedir
                             go-github-com-mitchellh-mapstructure
                             go-github-com-pkg-errors
                             go-github-com-spf13-cobra
                             go-github-com-spf13-pflag
                             go-github-com-spf13-viper
                             go-github-com-stretchr-testify
                             go-github-com-toqueteos-webbrowser
                             go-golang-org-x-net
                             go-golang-org-x-oauth2
                             go-golang-org-x-tools
                             go-gopkg-in-yaml-v2
                             go-gopkg-in-yaml-v3
                             ))
    (home-page "https://github.com/go-swagger/go-swagger")
    (synopsis "Swagger 2.0")
    (description
     "Package swagger (2.0) provides a powerful interface to your API.")
    (license license:asl2.0)))

(define-public go-github-com-go-swagger-scan-repo-boundary
  (package
    (name "go-github-com-go-swagger-scan-repo-boundary")
    (version "0.0.0-20180623220736-973b3573c013")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-swagger/scan-repo-boundary")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ipqv53s9piq5v5nsjmg8v7pzz4zinv2xkif7h0na84i9pnsccyn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-swagger/scan-repo-boundary"))
    (home-page "https://github.com/go-swagger/scan-repo-boundary")
    (synopsis "TestRepo")
    (description
     "This is a repo that is used in the tests of the go-swagger project.  It's is
only here to test finding files across repository boundaries.")
    (license license:asl2.0)))

(define-public go-github-com-go-telegram-bot-api-telegram-bot-api-v5
  (package
    (name "go-github-com-go-telegram-bot-api-telegram-bot-api-v5")
    (version "5.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-telegram-bot-api/telegram-bot-api")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18bar3gkl714fr3ziwyncgmdygwhci01rzg41i010j6q119cph69"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-telegram-bot-api/telegram-bot-api/v5"
      #:unpack-path "github.com/go-telegram-bot-api/telegram-bot-api"))
    (home-page "https://github.com/go-telegram-bot-api/telegram-bot-api")
    (synopsis "Golang bindings for the Telegram Bot API")
    (description
     "Package tgbotapi has functions and types used for interacting with the Telegram
Bot API.")
    (license license:expat)))

(define-public go-github-com-go-testfixtures-testfixtures-v3
  (package
    (name "go-github-com-go-testfixtures-testfixtures-v3")
    (version "3.14.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-testfixtures/testfixtures")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12c0wwr8gr131mh8x1k3pp3mn3g42arbg15n8cnrdg6hyr6xkahw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-testfixtures/testfixtures/v3"
      #:unpack-path "github.com/go-testfixtures/testfixtures"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-sync
                             go-github-com-spf13-pflag
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-lib-pq
                             go-github-com-joho-godotenv ; packaged
                             go-github-com-jackc-pgx-v4
                             go-github-com-googleapis-go-sql-spanner
                             go-github-com-go-sql-driver-mysql
                             go-github-com-denisenkom-go-mssqldb
                             go-github-com-clickhouse-clickhouse-go-v2
                             go-cloud-google-com-go-spanner))
    (home-page "https://github.com/go-testfixtures/testfixtures")
    (synopsis "testfixtures")
    (description
     "Writing tests is hard, even more when you have to deal with an SQL database.
This package aims to make writing functional tests for web apps written in Go
easier.")
    (license license:expat)))

(define-public go-github-com-go-text-typesetting
  (package
    (name "go-github-com-go-text-typesetting")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-text/typesetting")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00mkzgrikgza8vqps1hbb8c1cw7908cvv5pl3d02ijc45wc6kcmw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-text/typesetting"))
    (propagated-inputs (list go-golang-org-x-text go-golang-org-x-image
                             go-github-com-go-text-typesetting-utils))
    (home-page "https://github.com/go-text/typesetting")
    (synopsis "typesetting")
    (description
     "This library provides typesetting capabilities in pure Go.  It is appropriate
for use in GUI applications, and is shared by multiple Go UI toolkits including
@@url{https://fyne.io,Fyne}, @@url{https://gioui.org,Gio}, and
@@url{https://ebitengine.org,Ebitengine}.")
    (license license:expat))) ; check-license

(define-public go-github-com-go-text-typesetting-utils
  (package
    (name "go-github-com-go-text-typesetting-utils")
    (version "0.0.0-20241227163312-038e5f9c24e7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-text/typesetting-utils")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xa3hzdqsp08cxw78mzmq91n0jk2v1wm20ry548is8m4lvfva8zq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-text/typesetting-utils"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-text
                             go-golang-org-x-net))
    (home-page "https://github.com/go-text/typesetting-utils")
    (synopsis "Developpement resources for go-text/typesetting")
    (description
     "This module provides resources used when developping
@@url{https://github.com/go-text/typesetting,go-text/typesetting}, such as :.")
    (license license:expat))) ; check-license

(define-public go-github-com-go-toast-toast
  (package
    (name "go-github-com-go-toast-toast")
    (version "0.0.0-20190211030409-01e6764cf0a4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toast/toast")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z16b01j6fym4y98srpwl77qvqkvsph5rq7hpbrxrr51fjvl65ng"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toast/toast"))
    (home-page "https://github.com/go-toast/toast")
    (synopsis "Toast")
    (description
     "This package provides a go package for Windows 10 toast notifications.")
    (license license:expat)))

(define-public go-github-com-go-toolsmith-astcast
  (package
    (name "go-github-com-go-toolsmith-astcast")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toolsmith/astcast")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z6dqgzcn2bavrd588cpmmsc81arffb0g4b9365cf91djc0fvza6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toolsmith/astcast"))
    (propagated-inputs (list go-github-com-go-toolsmith-strparse))
    (home-page "https://github.com/go-toolsmith/astcast")
    (synopsis "astcast")
    (description
     "Package astcast wraps type assertion operations in such way that you don't have
to worry about nil pointer results anymore.")
    (license license:expat)))

(define-public go-github-com-go-toolsmith-astcopy
  (package
    (name "go-github-com-go-toolsmith-astcopy")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toolsmith/astcopy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19dir68jfli1c6s5ggvy3i7qz5xykbwsgxdqj59jrq691h2dnm6n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toolsmith/astcopy"))
    (propagated-inputs (list go-golang-org-x-exp-typeparams
                             go-github-com-go-toolsmith-strparse
                             go-github-com-go-toolsmith-astequal))
    (home-page "https://github.com/go-toolsmith/astcopy")
    (synopsis "astcopy")
    (description
     "Package astcopy implements Go AST reflection-free deep copy operations.")
    (license license:expat)))

(define-public go-github-com-go-toolsmith-astequal
  (package
    (name "go-github-com-go-toolsmith-astequal")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toolsmith/astequal")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1am5lfiw05jyzibm6hm6im2daphdznnxw97vry0sj7lpk5pxvq29"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toolsmith/astequal"))
    (propagated-inputs (list go-github-com-google-go-cmp
                             go-github-com-go-toolsmith-strparse))
    (home-page "https://github.com/go-toolsmith/astequal")
    (synopsis "astequal")
    (description
     "Package astequal provides AST (deep) equallity check operations.")
    (license license:expat)))

(define-public go-github-com-go-toolsmith-astfmt
  (package
    (name "go-github-com-go-toolsmith-astfmt")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toolsmith/astfmt")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0abimzwk06v5lg5gswbkidbm6kfzcwd1kicdi93xf7a8rs8yfs52"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toolsmith/astfmt"))
    (propagated-inputs (list go-github-com-go-toolsmith-strparse))
    (home-page "https://github.com/go-toolsmith/astfmt")
    (synopsis "astfmt")
    (description
     "Package astfmt implements `ast.Node` formatting with fmt-like API.")
    (license license:expat)))

(define-public go-github-com-go-toolsmith-astp
  (package
    (name "go-github-com-go-toolsmith-astp")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toolsmith/astp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pacqy3whmfp2z4xn17k24wbxc2vlyaqjd68dgn3m5mfmjzwpzhj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toolsmith/astp"))
    (propagated-inputs (list go-github-com-go-toolsmith-strparse))
    (home-page "https://github.com/go-toolsmith/astp")
    (synopsis "astp")
    (description "Package @@code{astp} provides AST predicates.")
    (license license:expat)))

(define-public go-github-com-go-toolsmith-pkgload
  (package
    (name "go-github-com-go-toolsmith-pkgload")
    (version "1.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toolsmith/pkgload")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dbgza1yzavmyzi7gi0i4nycglcjikm0zw5vk3iikm6kfb7smgz2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toolsmith/pkgload"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/go-toolsmith/pkgload")
    (synopsis "pkgload")
    (description
     "Package pkgload is a set of utilities for `go/packages` load-related operations.")
    (license license:expat)))

(define-public go-github-com-go-toolsmith-strparse
  (package
    (name "go-github-com-go-toolsmith-strparse")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toolsmith/strparse")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vfr4djsi3k0zckisl3x0yg163gq3fkwkmr6dj8n2mijlvfac9cn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toolsmith/strparse"))
    (propagated-inputs (list go-github-com-go-toolsmith-astequal))
    (home-page "https://github.com/go-toolsmith/strparse")
    (synopsis "strparse")
    (description
     "Package strparse provides convenience wrappers around `go/parser` for simple
expression, statement and declaration parsing from string.")
    (license license:expat)))

(define-public go-github-com-go-toolsmith-typep
  (package
    (name "go-github-com-go-toolsmith-typep")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-toolsmith/typep")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "084qh4d7fbk9f73kmbx6kgfmyhx1cm6gckvd494gn6460s9xy7y3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-toolsmith/typep"))
    (home-page "https://github.com/go-toolsmith/typep")
    (synopsis "typep")
    (description "Package typep provides type predicates.")
    (license license:expat)))

(define-public go-github-com-go-viper-mapstructure-v2
  (package
    (name "go-github-com-go-viper-mapstructure-v2")
    (version "2.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-viper/mapstructure")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x13x2s0vkikmn5wcarxskhr6c90s64nkbsgjsh7g9sh4v31n5yw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-viper/mapstructure/v2"
      #:unpack-path "github.com/go-viper/mapstructure"))
    (home-page "https://github.com/go-viper/mapstructure")
    (synopsis "mapstructure")
    (description
     "Package mapstructure exposes functionality to convert one arbitrary Go type into
another, typically to convert a map[string]interface{} into a native Go
structure.")
    (license license:expat)))

(define-public go-github-com-go-xmlfmt-xmlfmt
  (package
    (name "go-github-com-go-xmlfmt-xmlfmt")
    (version "1.1.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-xmlfmt/xmlfmt")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cglrwmpg0lb7cnyvdz8js52h07rcvka7y9abksk9p5ajxj5rp1s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-xmlfmt/xmlfmt"))
    (home-page "https://github.com/go-xmlfmt/xmlfmt")
    (synopsis "Go XML Formatter")
    (description
     "The Go XML Formatter, xmlfmt, will format the XML string in a readable way.")
    (license license:expat)))

(define-public go-github-com-go-zookeeper-zk
  (package
    (name "go-github-com-go-zookeeper-zk")
    (version "1.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-zookeeper/zk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1znpz4xl7bpp855sajabmqm98zv7ma0bj9s8icpvjw9s16fqfdg9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/go-zookeeper/zk"))
    (home-page "https://github.com/go-zookeeper/zk")
    (synopsis "Native Go Zookeeper Client Library")
    (description
     "Package zk is a native Go client library for the @code{ZooKeeper} orchestration
service.")
    (license license:bsd-3)))

(define-public go-github-com-gobs-pretty
  (package
    (name "go-github-com-gobs-pretty")
    (version "0.0.0-20180724170744-09732c25a95b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gobs/pretty")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0h5s7kq5xhsbkliwv6rmb855sa48206kf7cx2sli40z79fh2iqya"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gobs/pretty"))
    (home-page "https://github.com/gobs/pretty")
    (synopsis "pretty")
    (description "Pretty-print Go data structures.")
    (license license:expat)))

(define-public go-github-com-gobuffalo-flect
  (package
    (name "go-github-com-gobuffalo-flect")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gobuffalo/flect")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lyb1876byv9q52y6dlq17aahwl108mhp67cmxykckjpxxykb442"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gobuffalo/flect"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/gobuffalo/flect")
    (synopsis "Flect")
    (description
     "Package flect is a new inflection engine to replace
[@@url{https://github.com/markbates/inflect,https://github.com/markbates/inflect}](@@url{https://github.com/markbates/inflect,https://github.com/markbates/inflect})
designed to be more modular, more readable, and easier to fix issues on than the
original.")
    (license license:expat)))

(define-public go-github-com-gobuffalo-here
  (package
    (name "go-github-com-gobuffalo-here")
    (version "0.6.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gobuffalo/here")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05ksf61av5ngnvdf7hkpssg0mr5lyc8mw8shjry2jafpdlsh212l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gobuffalo/here"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/gobuffalo/here")
    (synopsis "Here")
    (description
     "Here will get you @@strong{accurate} Go information about the directory of
package requested.")
    (license license:expat)))

(define-public go-github-com-gocolly-colly
  (package
    (name "go-github-com-gocolly-colly")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gocolly/colly")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1a6brjy0a4pwq2ml3fvz6p7wjmg37rh006i00zxgv9v4vmv7b84d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gocolly/colly"))
    (home-page "https://github.com/gocolly/colly")
    (synopsis "Colly")
    (description "Package colly implements a HTTP scraping framework.")
    (license license:asl2.0)))

(define-public go-github-com-gocql-gocql
  (package
    (name "go-github-com-gocql-gocql")
    (version "1.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/apache/cassandra-gocql-driver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17pb9b4v5n3fzdakd4grjn71gwz64pj06h34gd04v4dij5lyzd0d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gocql/gocql"))
    (home-page "https://github.com/gocql/gocql")
    (synopsis "Apache Cassandra GoCQL Driver")
    (description
     "Package gocql implements a fast and robust Cassandra driver for the Go
programming language.")
    (license license:asl2.0)))

(define-public go-github-com-godror-godror
  (package
    (name "go-github-com-godror-godror")
    (version "0.46.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/godror/godror")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wmgpxh8dmq33jlhxxl250n1yp8mf4i7xam9zkhw52wzw2spmk1d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/godror/godror"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-github-com-oklog-ulid-v2
                             go-github-com-google-go-cmp
                             go-github-com-godror-knownpb
                             go-github-com-go-logfmt-logfmt
                             go-github-com-uno-soft-zlog))
    (home-page "https://github.com/godror/godror")
    (synopsis "Go DRiver for ORacle")
    (description "Package godror is a database/sql/driver for Oracle DB.")
    (license license:expat))) ; check-license

(define-public go-github-com-godror-knownpb
  (package
    (name "go-github-com-godror-knownpb")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/godror/knownpb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ba0fvgwi6skp3h7sv3bxz3c4fi9iy0ympn6rjkzif451m6d0bn5"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/godror/knownpb"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-planetscale-vtprotobuf
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/godror/knownpb")
    (synopsis "knownpb")
    (description
     "Protocol Buffer (protobuf) known types
@@url{https://github.com/godror/knownpb/blob/v0.2.0/timestamppb,./timestamppb}
with JSON and XML marshaling.")
    (license license:asl2.0)))

(define-public go-github-com-gogs-go-gogs-client
  (package
    (name "go-github-com-gogs-go-gogs-client")
    (version "0.0.0-20210131175652-1d7215cd8d85")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gogs/go-gogs-client")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11b8mwdly960z7jdx297jywxzljs0l0sl3i1qvii1fjzis7k608l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gogs/go-gogs-client"))
    (home-page "https://github.com/gogs/go-gogs-client")
    (synopsis "Gogs API client in Go")
    (description
     "This package is still in experiment, see
@@url{https://github.com/gogits/go-gogs-client/wiki,Wiki} for documentation.")
    (license license:expat)))

(define-public go-github-com-gohugoio-go-i18n-v2
  (package
    (name "go-github-com-gohugoio-go-i18n-v2")
    (version "2.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/go-i18n")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xdkzs76n9lhhdjbl2anq6g7scdnwffchz93j4f7kxj0gphhg598"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gohugoio/go-i18n/v2"
      #:unpack-path "github.com/gohugoio/go-i18n"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-golang-org-x-text
                             go-github-com-burntsushi-toml))
    (home-page "https://github.com/gohugoio/go-i18n")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-gohugoio-hashstructure
  (package
    (name "go-github-com-gohugoio-hashstructure")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/hashstructure")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0llkyishd7fia22g5g3s1pxc69r5zpjzkf93mm7ylpgqbrmahzm2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gohugoio/hashstructure"))
    (home-page "https://github.com/gohugoio/hashstructure")
    (synopsis "hashstructure")
    (description
     "hashstructure is a Go library for creating a unique hash value for arbitrary
values in Go.")
    (license license:expat)))

(define-public go-github-com-gohugoio-httpcache
  (package
    (name "go-github-com-gohugoio-httpcache")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/httpcache")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00b654lm8iv7n2c6nag757mc952f2cgppd3v9d0q6blvcx68in80"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gohugoio/httpcache"))
    (propagated-inputs (list go-github-com-frankban-quicktest))
    (home-page "https://github.com/gohugoio/httpcache")
    (synopsis "License")
    (description
     "Package httpcache provides a http.@code{RoundTripper} implementation that works
as a mostly RFC-compliant cache for http responses.")
    (license license:expat)))

(define-public go-github-com-gohugoio-hugo
  (package
    (name "go-github-com-gohugoio-hugo")
    (version "0.140.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/hugo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ls032mbfa7pxfg2ifb2mgi1lnzwj2jd4wqy46mn1cnmj58f4vz1"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check
      #:import-path "github.com/gohugoio/hugo"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                        go-google-golang-org-api
                        go-golang-org-x-tools
                        go-golang-org-x-text
                        go-golang-org-x-sync
                        go-golang-org-x-net
                        go-golang-org-x-mod
                        go-golang-org-x-image
                        go-golang-org-x-exp
                        go-gocloud-dev
                        go-go-uber-org-automaxprocs ; packaged
                        go-github-com-yuin-goldmark-emoji
                        go-github-com-yuin-goldmark
                        go-github-com-tetratelabs-wazero
                        go-github-com-tdewolff-parse-v2
                        go-github-com-tdewolff-minify-v2
                        go-github-com-spf13-pflag
                        go-github-com-spf13-fsync
                        go-github-com-spf13-cobra
                        go-github-com-spf13-cast
                        go-github-com-spf13-afero
                        go-github-com-sanity-io-litter
                        go-github-com-rogpeppe-go-internal
                        go-github-com-pkg-browser
                        go-github-com-pelletier-go-toml-v2
                        go-github-com-pbnjay-memory ; packaged
                        go-github-com-olekukonko-tablewriter
                        go-github-com-niklasfasching-go-org
                        go-github-com-muesli-smartcrop
                        go-github-com-mitchellh-mapstructure
                        go-github-com-mattn-go-isatty
                        go-github-com-marekm4-color-extractor
                        go-github-com-makeworld-the-better-one-dither-v2
                        go-github-com-magefile-mage
                        go-github-com-kyokomi-emoji-v2
                        go-github-com-kylelemons-godebug
                        go-github-com-jdkato-prose
                        go-github-com-hairyhenderson-go-codeowners
                        go-github-com-gorilla-websocket
                        go-github-com-google-go-cmp
                        go-github-com-gohugoio-testmodbuilder-mods
                        go-github-com-gohugoio-localescompressed
                        go-github-com-gohugoio-locales
                        go-github-com-gohugoio-hugo-goldmark-extensions-passthrough
                        go-github-com-gohugoio-hugo-goldmark-extensions-extras
                        go-github-com-gohugoio-httpcache
                        go-github-com-gohugoio-hashstructure
                        go-github-com-gohugoio-go-i18n-v2
                        go-github-com-gobwas-glob
                        go-github-com-gobuffalo-flect
                        go-github-com-ghodss-yaml ; packaged
                        go-github-com-getkin-kin-openapi
                        go-github-com-fsnotify-fsnotify ; packaged
                        go-github-com-frankban-quicktest
                        go-github-com-fortytw2-leaktest
                        go-github-com-fatih-color
                        go-github-com-evanw-esbuild
                        go-github-com-dustin-go-humanize ; packaged
                        go-github-com-disintegration-gift
                        go-github-com-cli-safeexec
                        go-github-com-clbanning-mxj-v2
                        go-github-com-cespare-xxhash-v2 ; packaged
                        go-github-com-bep-tmc
                        go-github-com-bep-simplecobra
                        go-github-com-bep-overlayfs
                        go-github-com-bep-mclib
                        go-github-com-bep-logg
                        go-github-com-bep-lazycache
                        go-github-com-bep-imagemeta
                        go-github-com-bep-helpers
                        go-github-com-bep-gowebp
                        go-github-com-bep-golibsass
                        go-github-com-bep-godartsass-v2
                        go-github-com-bep-goat
                        go-github-com-bep-gitmap
                        go-github-com-bep-debounce
                        go-github-com-bep-clocks
                        go-github-com-aws-aws-sdk-go-v2-service-cloudfront
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-armon-go-radix
                        go-github-com-alecthomas-chroma-v2
                        go-github-com-burntsushi-locker))
    (home-page "https://github.com/gohugoio/hugo")
    (synopsis "Overview")
    (description
     "This package provides a fast and flexible static site generator built with love
by @@url{https://github.com/bep,bep}, @@url{https://github.com/spf13,spf13}, and
@@url{https://github.com/gohugoio/hugo/graphs/contributors,friends} in
@@url{https://go.dev/,Go}.")
    (license license:asl2.0)))

(define-public go-github-com-gohugoio-hugo-goldmark-extensions-extras
  (package
    (name "go-github-com-gohugoio-hugo-goldmark-extensions-extras")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/hugo-goldmark-extensions")
             (commit (go-version->git-ref version
                                          #:subdir "extras"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f5xag7lz8j984yarhffvh183d2rs7yd8sixs9qamjd2746wa5gk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gohugoio/hugo-goldmark-extensions/extras"
      #:unpack-path "github.com/gohugoio/hugo-goldmark-extensions"))
    (propagated-inputs (list go-github-com-yuin-goldmark))
    (home-page "https://github.com/gohugoio/hugo-goldmark-extensions")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-gohugoio-hugo-goldmark-extensions-passthrough
  (package
    (name "go-github-com-gohugoio-hugo-goldmark-extensions-passthrough")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/hugo-goldmark-extensions")
             (commit (go-version->git-ref version
                                          #:subdir "passthrough"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rw13alwk168v5121i1plvmi0678q4ivxiczn41kbz4mzvpw1m60"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gohugoio/hugo-goldmark-extensions/passthrough"
      #:unpack-path "github.com/gohugoio/hugo-goldmark-extensions"))
    (propagated-inputs (list go-github-com-yuin-goldmark
                             go-github-com-frankban-quicktest))
    (home-page "https://github.com/gohugoio/hugo-goldmark-extensions")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-gohugoio-locales
  (package
    (name "go-github-com-gohugoio-locales")
    (version "0.14.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/locales")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1h2yg7mlay1k4am6xfjlgn1p21ppsgk0a7qd73q1mxwa9gm8a9ia"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gohugoio/locales"))
    (propagated-inputs (list go-golang-org-x-text))
    (home-page "https://github.com/gohugoio/locales")
    (synopsis "locales")
    (description
     "Locales is a set of locales generated from the
@@url{http://cldr.unicode.org/,Unicode CLDR Project} which can be used
independently or within an i18n package; these were built for use with, but not
exclusive to,
@@url{https://github.com/go-playground/universal-translator,Universal
Translator}.")
    (license license:expat)))

(define-public go-github-com-gohugoio-localescompressed
  (package
    (name "go-github-com-gohugoio-localescompressed")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/localescompressed")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1za9lyrshfizampaghpdyi2dmiim58f9sj2hqcwhqypq92357zbd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gohugoio/localescompressed"))
    (home-page "https://github.com/gohugoio/localescompressed")
    (synopsis #f)
    (description "This file is autogenerated.")
    (license license:expat)))

(define-public go-github-com-gohugoio-testmodbuilder-mods
  (package
    (name "go-github-com-gohugoio-testmodbuilder-mods")
    (version "0.0.0-20201018083854-72e1e0c33291")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gohugoio/testmodBuilder")
             (commit (go-version->git-ref version
                                          #:subdir "mods"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1spj8rmbnhsg0901n5w36cafla60a1ir4j5ljpgi8if2c07zigxb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gohugoio/testmodBuilder/mods"
      #:unpack-path "github.com/gohugoio/testmodBuilder"))
    (home-page "https://github.com/gohugoio/testmodBuilder")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-goji-httpauth
  (package
    (name "go-github-com-goji-httpauth")
    (version "0.0.0-20160601135302-2da839ab0f4d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/goji/httpauth")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rcz1qxdbc2gw0gaj81kag94k98izs9vmhcp5mzs7979s7q4kym1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/goji/httpauth"))
    (home-page "https://github.com/goji/httpauth")
    (synopsis "goji/httpauth")
    (description
     "@@code{httpauth} currently provides
@@url{http://tools.ietf.org/html/rfc2617,HTTP Basic Authentication middleware}
for Go.  It is compatible with Go's own @@code{net/http},
@@url{https://goji.io,goji}, Gin & anything that speaks the @@code{http.Handler}
interface.")
    (license license:expat)))

(define-public go-github-com-gojuno-minimock-v3
  (package
    (name "go-github-com-gojuno-minimock-v3")
    (version "3.4.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gojuno/minimock")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0a8nzxw602c4pznskfc3b4nxfxw3f1rgfsfaclgmwplw9bngpdib"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/gojuno/minimock/v3"
      #:unpack-path "github.com/gojuno/minimock"))
    (propagated-inputs (list go-github-com-gofrs-uuid-v5
                             go-google-golang-org-protobuf
                             go-golang-org-x-tools
                             go-github-com-stretchr-testify
                             go-github-com-pmezard-go-difflib
                             go-github-com-pkg-errors
                             go-github-com-hexdigest-gowrap
                             go-github-com-davecgh-go-spew))
    (home-page "https://github.com/gojuno/minimock")
    (synopsis "Summary")
    (description
     "Package minimock is a command line tool that parses the input Go source file
that contains an interface declaration and generates implementation of this
interface that can be used as a mock.")
    (license license:expat)))

(define-public go-github-com-gokyle-twofactor
  (package
    (name "go-github-com-gokyle-twofactor")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gokyle/twofactor")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fhbw6cyq054w4frfvbgmffijg0bd1shvawm3ddl4cf1l12x1qxh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gokyle/twofactor"))
    (home-page "https://github.com/gokyle/twofactor")
    (synopsis #f)
    (description "twofactor implements two-factor authentication.")
    (license license:expat)))

(define-public go-github-com-golang-cz-devslog
  (package
    (name "go-github-com-golang-cz-devslog")
    (version "0.0.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golang-cz/devslog")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w0c4wvha7rmbcjyhxvm4jj9z6abkqw3pqdwzfh3zks2x11vp8pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golang-cz/devslog"))
    (home-page "https://github.com/golang-cz/devslog")
    (synopsis "🧻 devslog - Go")
    (description
     "@@code{devslog} is a zero dependency structured logging handler for Go's
@@url{https://pkg.go.dev/log/slog,(code log/slog)} package with pretty and
colorful output for developers.")
    (license license:expat)))

(define-public go-github-com-golang-geo
  (package
    (name "go-github-com-golang-geo")
    (version "0.0.0-20230421003525-6adc56603217")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golang/geo")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dcai5cbx7h9zz17j06xvd4p6ajjsj6cgifp6c8j5733jdv0b0cg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golang/geo"))
    (home-page "https://github.com/golang/geo")
    (synopsis "Overview")
    (description
     "S2 is a library for spherical geometry that aims to have the same robustness,
flexibility, and performance as the best planar geometry libraries.")
    (license license:asl2.0)))

(define-public go-github-com-golang-migrate-migrate-v4
  (package
    (name "go-github-com-golang-migrate-migrate-v4")
    (version "4.18.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golang-migrate/migrate")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rx42sry2zx8bzpcs07x6ds9rp6gdy390wxy5gmycw05gapax5v5"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/golang-migrate/migrate/v4"
      #:unpack-path "github.com/golang-migrate/migrate"))
    (propagated-inputs (list go-github-com-rqlite-gorqlite
                             go-github-com-pkg-errors
                             go-modernc-org-sqlite
                             go-modernc-org-ql
                             go-google-golang-org-api
                             go-golang-org-x-tools
                             go-golang-org-x-oauth2
                             go-go-uber-org-atomic
                             go-go-mongodb-org-mongo-driver
                             go-github-com-xanzy-go-gitlab
                             go-github-com-stretchr-testify
                             go-github-com-snowflakedb-gosnowflake
                             go-github-com-neo4j-neo4j-go-driver
                             go-github-com-nakagami-firebirdsql
                             go-github-com-mutecomm-go-sqlcipher-v4
                             go-github-com-microsoft-go-mssqldb
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-markbates-pkger
                             go-github-com-lib-pq
                             go-github-com-ktrysmt-go-bitbucket
                             go-github-com-jackc-pgx-v5
                             go-github-com-jackc-pgx-v4
                             go-github-com-jackc-pgerrcode
                             go-github-com-jackc-pgconn
                             go-github-com-hashicorp-go-multierror
                             go-github-com-google-go-github-v39
                             go-github-com-gocql-gocql
                             go-github-com-gobuffalo-here
                             go-github-com-go-sql-driver-mysql
                             go-github-com-fsouza-fake-gcs-server
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-docker-docker
                             go-github-com-dhui-dktest
                             go-github-com-cockroachdb-cockroach-go-v2
                             go-github-com-cenkalti-backoff-v4 ;packaged

                             go-github-com-aws-aws-sdk-go
                             go-github-com-clickhouse-clickhouse-go
                             go-github-com-azure-go-autorest-autorest-adal
                             go-cloud-google-com-go-storage
                             go-cloud-google-com-go-spanner))
    (home-page "https://github.com/golang-migrate/migrate")
    (synopsis "migrate")
    (description
     "Package migrate reads migrations from sources and runs them against databases.
Sources are defined by the `source.Driver` and databases by the
`database.Driver` interface.  The driver interfaces are kept \"dumb\", all
migration logic is kept in this package.")
    (license license:expat)))

(define-public go-github-com-golang-sql-civil
  (package
    (name "go-github-com-golang-sql-civil")
    (version "0.0.0-20220223132316-b832511892a9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golang-sql/civil")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "152smf33psdad1222jrabpkl7yvkzw8k66hyypn5gj07943gsk10"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golang-sql/civil"))
    (home-page "https://github.com/golang-sql/civil")
    (synopsis "Civil Date and Time")
    (description
     "Package civil implements types for civil time, a time-zone-independent
representation of time that follows the rules of the proleptic Gregorian
calendar with exactly 24-hour days, 60-minute hours, and 60-second minutes.")
    (license license:asl2.0)))

(define-public go-github-com-golang-sql-sqlexp
  (package
    (name "go-github-com-golang-sql-sqlexp")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golang-sql/sqlexp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0g7apf8mfzrzh1dzkhskbiabb8xc6ghbnxnc4bdk9hzgvrv9c4hn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golang-sql/sqlexp"))
    (home-page "https://github.com/golang-sql/sqlexp")
    (synopsis "golang-sql exp")
    (description
     "Package sqlexp provides interfaces and functions that may be adopted into the
database/sql package in the future.  All features may change or be removed in
the future.")
    (license license:bsd-3)))

(define-public go-github-com-golangci-dupl
  (package
    (name "go-github-com-golangci-dupl")
    (version "0.0.0-20180902072040-3e9179ac440a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/dupl")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1p5cfj5iykn17q0qq9115szm7kr96zx13kj74mdycxgzjgysxr7l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golangci/dupl"))
    (home-page "https://github.com/golangci/dupl")
    (synopsis "dupl")
    (description
     "@@strong{dupl} is a tool written in Go for finding code clones.  So far it can
find clones only in the Go source files.  The method uses suffix tree for
serialized ASTs.  It ignores values of AST nodes.  It just operates with their
types (e.g. @@code{if a == 13 {}} and @@code{if x == 100 {}} are considered the
same provided it exceeds the minimal token sequence size).")
    (license license:expat)))

(define-public go-github-com-golangci-go-printf-func-name
  (package
    (name "go-github-com-golangci-go-printf-func-name")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/go-printf-func-name")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ak5zp0whx2nppzsr87rg1kdrrz1x89aq945r36r78dby9z0h37s"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/golangci/go-printf-func-name"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/golangci/go-printf-func-name")
    (synopsis "go-printf-func-name")
    (description
     "The Go linter @@code{go-printf-func-name} checks that printf-like functions are
named with @@code{f} at the end.")
    (license license:expat)))

(define-public go-github-com-golangci-gofmt
  (package
    (name "go-github-com-golangci-gofmt")
    (version "0.0.0-20241223200906-057b0627d9b9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/gofmt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xbx23xk4wdmgl94q6gz8gvv5a9d67wzkb1i7qd7n7v3iwc45vd6"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/golangci/gofmt"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-sync))
    (home-page "https://github.com/golangci/gofmt")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-golangci-golangci-lint
  (package
    (name "go-github-com-golangci-golangci-lint")
    (version "1.62.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/golangci-lint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zagppacwhz47hryi1d1zb5s00x1i43a23v7h1day9daspi6m2zh"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/golangci/golangci-lint"))
    (propagated-inputs (list go-mvdan-cc-unparam
                        go-mvdan-cc-gofumpt
                        go-honnef-co-go-tools
                        go-gopkg-in-yaml-v3
                        go-golang-org-x-tools
                        go-golang-org-x-sys
                        go-golang-org-x-exp
                        go-go-uber-org-automaxprocs ; packaged
                        go-go-simpler-org-sloglint
                        go-go-simpler-org-musttag
                        go-gitlab-com-bosi-decorder
                        go-github-com-ykadowak-zerologlint
                        go-github-com-yeya24-promlinter
                        go-github-com-yagipy-maintidx
                        go-github-com-xen0n-gosmopolitan
                        go-github-com-valyala-quicktemplate
                        go-github-com-uudashr-iface
                        go-github-com-uudashr-gocognit
                        go-github-com-ultraware-whitespace
                        go-github-com-ultraware-funlen
                        go-github-com-tommy-muehle-go-mnd-v2
                        go-github-com-tomarrell-wrapcheck-v2
                        go-github-com-timonwong-loggercheck
                        go-github-com-timakin-bodyclose
                        go-github-com-tetafro-godot
                        go-github-com-tdakkota-asciicheck
                        go-github-com-stretchr-testify
                        go-github-com-stbenjam-no-sprintf-host-port
                        go-github-com-ssgreg-nlreturn-v2
                        go-github-com-spf13-viper
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-sourcegraph-go-diff
                        go-github-com-sonatard-noctx
                        go-github-com-sivchari-tenv
                        go-github-com-sivchari-containedctx
                        go-github-com-sirupsen-logrus
                        go-github-com-shirou-gopsutil-v3 ; packaged
                        go-github-com-shazow-go-diff
                        go-github-com-securego-gosec-v2
                        go-github-com-sashamelentyev-usestdlibvars
                        go-github-com-sashamelentyev-interfacebloat
                        go-github-com-santhosh-tekuri-jsonschema-v5 ; packaged
                        go-github-com-sanposhiho-wastedassign-v2
                        go-github-com-ryanrolds-sqlclosecheck
                        go-github-com-ryancurrah-gomodguard
                        go-github-com-rogpeppe-go-internal
                        go-github-com-raeperd-recvcheck
                        go-github-com-quasilyte-go-ruleguard-dsl
                        go-github-com-polyfloyd-go-errorlint
                        go-github-com-pelletier-go-toml-v2
                        go-github-com-nunnatsa-ginkgolinter
                        go-github-com-nishanths-predeclared
                        go-github-com-nishanths-exhaustive
                        go-github-com-nakabonne-nestif
                        go-github-com-moricho-tparallel
                        go-github-com-mitchellh-go-ps ; packaged
                        go-github-com-mitchellh-go-homedir
                        go-github-com-mgechev-revive
                        go-github-com-mattn-go-colorable
                        go-github-com-matoous-godox
                        go-github-com-maratori-testpackage
                        go-github-com-maratori-testableexamples
                        go-github-com-macabu-inamedparam
                        go-github-com-leonklingele-grouper
                        go-github-com-ldez-tagliatelle
                        go-github-com-ldez-gomoddirectives
                        go-github-com-lasiar-canonicalheader
                        go-github-com-kyoh86-exportloopref
                        go-github-com-kunwardeep-paralleltest
                        go-github-com-kulti-thelper
                        go-github-com-kkhaike-contextcheck
                        go-github-com-kisielk-errcheck
                        go-github-com-karamaru-alpha-copyloopvar
                        go-github-com-julz-importas
                        go-github-com-jjti-go-spancheck
                        go-github-com-jingyugao-rowserrcheck
                        go-github-com-jgautheron-goconst
                        go-github-com-hexops-gotextdiff
                        go-github-com-hashicorp-go-version
                        go-github-com-gostaticanalysis-nilerr
                        go-github-com-gostaticanalysis-forcetypeassert
                        go-github-com-gordonklaus-ineffassign
                        go-github-com-golangci-unconvert
                        go-github-com-golangci-revgrep
                        go-github-com-golangci-plugin-module-register
                        go-github-com-golangci-modinfo
                        go-github-com-golangci-misspell
                        go-github-com-golangci-gofmt
                        go-github-com-golangci-go-printf-func-name
                        go-github-com-golangci-dupl
                        go-github-com-gofrs-flock
                        go-github-com-go-xmlfmt-xmlfmt
                        go-github-com-go-viper-mapstructure-v2
                        go-github-com-go-critic-go-critic
                        go-github-com-ghostiam-protogetter
                        go-github-com-fzipp-gocyclo
                        go-github-com-firefart-nonamedreturns
                        go-github-com-fatih-color
                        go-github-com-denis-tingaikin-go-header
                        go-github-com-daixiang0-gci
                        go-github-com-curioswitch-go-reassign
                        go-github-com-ckaznocha-intrange
                        go-github-com-charithe-durationcheck
                        go-github-com-catenacyber-perfsprint
                        go-github-com-butuzov-mirror
                        go-github-com-butuzov-ireturn
                        go-github-com-breml-errchkjson
                        go-github-com-breml-bidichk
                        go-github-com-bombsimon-wsl-v4
                        go-github-com-blizzy78-varnamelen
                        go-github-com-bkielbasa-cyclop
                        go-github-com-ashanbrown-makezero
                        go-github-com-ashanbrown-forbidigo
                        go-github-com-alingse-asasalint
                        go-github-com-alexkohler-prealloc
                        go-github-com-alexkohler-nakedret-v2
                        go-github-com-alecthomas-go-check-sumtype
                        go-github-com-openpeedeep-depguard-v2
                        go-github-com-gaijinentertainment-go-exhaustruct-v3
                        go-github-com-djarvur-go-err113
                        go-github-com-crocmagnon-fatcontext
                        go-github-com-burntsushi-toml
                        go-github-com-antonboom-testifylint
                        go-github-com-antonboom-nilnil
                        go-github-com-antonboom-errname
                        go-github-com-abirdcfly-dupword
                        go-github-com-4meepo-tagalign
                        go-4d63-com-gochecknoglobals
                        go-4d63-com-gocheckcompilerdirectives))
    (home-page "https://github.com/golangci/golangci-lint")
    (synopsis "golangci-lint")
    (description "Fast linters runner for Go.")
    (license license:gpl3)))

(define-public go-github-com-golangci-misspell
  (package
    (name "go-github-com-golangci-misspell")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/misspell")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0b15zw9zf38vw1ll8m4gfrrjh6k83qlar4v1spfi57w1qnssqp7g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golangci/misspell"))
    (propagated-inputs (list go-github-com-gobwas-glob))
    (home-page "https://github.com/golangci/misspell")
    (synopsis "Install")
    (description
     "Package misspell corrects commonly misspelled English words in source files.")
    (license license:expat)))

(define-public go-github-com-golangci-modinfo
  (package
    (name "go-github-com-golangci-modinfo")
    (version "0.3.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/modinfo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "150walfylffci96m6nqd15ylhiyjas0v5hqr11fjrs73al1vg5l5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golangci/modinfo"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-mod
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/golangci/modinfo")
    (synopsis "modinfo")
    (description "This module contains:.")
    (license license:gpl3)))

(define-public go-github-com-golangci-plugin-module-register
  (package
    (name "go-github-com-golangci-plugin-module-register")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/plugin-module-register")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08xpx521cyax9xkw5zvrhl9mrh310xjlkpk303ymw0scif3gl5g7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golangci/plugin-module-register"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/golangci/plugin-module-register")
    (synopsis #f)
    (description #f)
    (license license:gpl3)))

(define-public go-github-com-golangci-revgrep
  (package
    (name "go-github-com-golangci-revgrep")
    (version "0.5.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/revgrep")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13j8fvlrh0rzqyadmspj7b15pr3sbijy01zrgzw53dp9i4s8msn8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golangci/revgrep"))
    (home-page "https://github.com/golangci/revgrep")
    (synopsis "Overview")
    (description
     "Package revgrep filter static analysis tools to only lines changed based on a
commit reference.")
    (license license:asl2.0)))

(define-public go-github-com-golangci-unconvert
  (package
    (name "go-github-com-golangci-unconvert")
    (version "0.0.0-20240309020433-c5143eacb3ed")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/golangci/unconvert")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lbblarkblxh0fvcjjj4vddc0pkggs4cbi9x0xpjjl3bbc8a72y1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/golangci/unconvert"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-text))
    (home-page "https://github.com/golangci/unconvert")
    (synopsis #f)
    (description
     "Package unconvert Unconvert removes redundant type conversions from Go packages.")
    (license license:bsd-3)))

(define-public go-github-com-google-cadvisor
  (package
    (name "go-github-com-google-cadvisor")
    (version "0.51.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/cadvisor")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16zx94divv097inymfahms4fybn648zdnsjcyydryp35y4v42l7p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/cadvisor"))
    (propagated-inputs (list go-k8s-io-utils
                             go-k8s-io-klog-v2
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-sys
                             go-golang-org-x-net
                             go-github-com-stretchr-testify
                             go-github-com-prometheus-common
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-pkg-errors
                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-opencontainers-runc ; packaged
                             go-github-com-moby-sys-mountinfo
                             go-github-com-mistifyio-go-zfs
                             go-github-com-karrick-godirwalk
                             go-github-com-euank-go-kmsg-parser
                             go-github-com-docker-go-units
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-docker-docker
                             go-github-com-containerd-typeurl-v2
                             go-github-com-containerd-ttrpc
                             go-github-com-containerd-errdefs
                             go-github-com-containerd-containerd-api
                             go-github-com-blang-semver-v4
                             go-github-com-aws-aws-sdk-go-v2-feature-ec2-imds
                             go-github-com-aws-aws-sdk-go-v2-config
                             go-github-com-microsoft-go-winio
                             go-cloud-google-com-go-compute-metadata))
    (home-page "https://github.com/google/cadvisor")
    (synopsis "Quick Start: Running cAdvisor in a Docker Container")
    (description
     "@code{cAdvisor} (Container Advisor) provides container users an understanding of
the resource usage and performance characteristics of their running containers.
It is a running daemon that collects, aggregates, processes, and exports
information about running containers.  Specifically, for each container it keeps
resource isolation parameters, historical resource usage, histograms of complete
historical resource usage and network statistics.  This data is exported by
container and machine-wide.")
    (license license:asl2.0)))

(define-public go-github-com-google-certificate-transparency-go
  (package
    (name "go-github-com-google-certificate-transparency-go")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/certificate-transparency-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0y2a02bpyk1iavzjggc5hnybawwcdq4yivanphcznw084j0h5qk2"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/google/certificate-transparency-go"))
    (propagated-inputs (list go-k8s-io-klog-v2
                             go-gopkg-in-yaml-v3
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-time
                             go-golang-org-x-net
                             go-golang-org-x-crypto
                             go-go-etcd-io-etcd-v3
                             go-go-etcd-io-etcd-etcdctl-v3
                             go-go-etcd-io-etcd-client-v3
                             go-github-com-transparency-dev-merkle
                             go-github-com-tomasen-realip
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-sergi-go-diff ; packaged
                             go-github-com-rs-cors
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-kylelemons-godebug
                             go-github-com-jackc-pgx-v5
                             go-github-com-jackc-pgerrcode
                             go-github-com-hashicorp-golang-lru-v2 ; packaged
                             go-github-com-gorilla-mux
                             go-github-com-google-trillian
                             go-github-com-google-go-cmp
                             go-github-com-golang-mock ; packaged
                             go-github-com-go-sql-driver-mysql
                             go-github-com-fullstorydev-grpcurl
                             go-github-com-data-dog-go-sqlmock ; packaged
                             ))
    (home-page "https://github.com/google/certificate-transparency-go")
    (synopsis "Certificate Transparency: Go Code")
    (description
     "Package ct holds core types and utilities for Certificate Transparency.")
    (license license:asl2.0)))

(define-public go-github-com-google-gce-tcb-verifier
  (package
    (name "go-github-com-google-gce-tcb-verifier")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/gce-tcb-verifier")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17z8ygzdyms37bdzv8fca17mwzkckzdilnhr9n4hyxgpq0d2q3d2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/gce-tcb-verifier"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-text
                             go-golang-org-x-exp
                             go-go-uber-org-multierr
                             go-github-com-spf13-cobra
                             go-github-com-pkg-errors
                             go-github-com-google-uuid
                             go-github-com-google-logger
                             go-github-com-google-go-tpm-tools
                             go-github-com-google-go-tdx-guest
                             go-github-com-google-go-sev-guest
                             go-github-com-google-go-configfs-tsm
                             go-github-com-google-go-cmp
                             go-github-com-cyphar-filepath-securejoin
                             go-cloud-google-com-go-kms
                             go-cloud-google-com-go-iam))
    (home-page "https://github.com/google/gce-tcb-verifier")
    (synopsis "gce-tcb-verifier")
    (description
     "This project provides tools for creating and verifying launch endorsements for
binaries included in Google Compute Engine Confidential Virtual Machines at
launch.")
    (license license:asl2.0)))

(define-public go-github-com-google-generative-ai-go
  (package
    (name "go-github-com-google-generative-ai-go")
    (version "0.19.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/generative-ai-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z5lr6piamvsv5p9r1iwr1f1wdy5bvsyjr10kbwlgbling2j78qg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/generative-ai-go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-ai))
    (home-page "https://github.com/google/generative-ai-go")
    (synopsis "Go SDK for Google Generative AI")
    (description
     "This SDK enables developers to use Google's state-of-the-art generative AI
models (like Gemini) to build AI-powered features and applications.  It supports
use cases like:.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-attestation
  (package
    (name "go-github-com-google-go-attestation")
    (version "0.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-attestation")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kh5fv34h7n4mfrb541742fx264sviymg52ba6h896f6wiq5igan"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-attestation"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-google-go-tspi
                             go-github-com-google-go-tpm-tools
                             go-github-com-google-go-tpm
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-attestation")
    (synopsis "Go-Attestation")
    (description
     "Go-Attestation abstracts remote attestation operations across a variety of
platforms and TPMs, enabling remote validation of machine identity and state.
This project attempts to provide high level primitives for both client and
server logic.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-configfs-tsm
  (package
    (name "go-github-com-google-go-configfs-tsm")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-configfs-tsm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "077lpxci5rbajjjc1knw2i775vs9siyw9ak7dz7sq4gqmxq461v0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-configfs-tsm"))
    (propagated-inputs (list go-go-uber-org-multierr))
    (home-page "https://github.com/google/go-configfs-tsm")
    (synopsis "go-configfs-tsm")
    (description
     "This library wraps the configfs/tsm Linux subsystem for Trusted Security Module
operations.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-containerregistry
  (package
    (name "go-github-com-google-go-containerregistry")
    (version "0.20.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-containerregistry")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gmbvpcbp6n9hx8dpggbxl7540b6vq3p0rm5a6lsjj2gw62p7zp5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-containerregistry"))
    (propagated-inputs (list go-golang-org-x-tools
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-github-com-spf13-cobra
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-mitchellh-go-homedir
                        go-github-com-klauspost-compress ; packaged
                        go-github-com-google-go-cmp
                        go-github-com-docker-docker
                        go-github-com-docker-distribution
                        go-github-com-docker-cli
                        go-github-com-containerd-stargz-snapshotter-estargz))
    (home-page "https://github.com/google/go-containerregistry")
    (synopsis "go-containerregistry")
    (description
     "This is a golang library for working with container registries.  It's largely
based on the @@url{https://github.com/google/containerregistry,Python library of
the same name}.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-eventlog
  (package
    (name "go-github-com-google-go-eventlog")
    (version "0.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-eventlog")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vmhyqfzqr3si8hnpa51sgs4dvnfj98acmd9rmpkbvf1mb51l99p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-eventlog"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-google-go-tpm
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-eventlog")
    (synopsis "Go Event Log")
    (description
     "Go Event Log is a library for handling various event logs for use in Measured
Boot protocols.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-github-v55
  (package
    (name "go-github-com-google-go-github-v55")
    (version "55.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-github")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0159wy8ya9dwrljwcrpfz4ww1n0551sdy9db7f7xw6jcy9mdq8b6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-github/v55"
      #:unpack-path "github.com/google/go-github"))
    (propagated-inputs (list go-github-com-google-go-querystring
                             go-github-com-google-go-cmp
                             go-github-com-protonmail-go-crypto))
    (home-page "https://github.com/google/go-github")
    (synopsis "go-github")
    (description "go-github is a Go client library for accessing the
@@url{https://docs.github.com/en/rest,@code{GitHub} API v3}.")
    (license license:bsd-3)))

(define-public go-github-com-google-go-github-v32
  (package
    (name "go-github-com-google-go-github-v32")
    (version "32.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-github")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qaxcm2p655r1jd59rv1hd58driadw5hxlfy7h53c7pzcsmf2546"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-github/v32"
      #:unpack-path "github.com/google/go-github"))
    (propagated-inputs (list go-google-golang-org-appengine
                             go-golang-org-x-oauth2 go-golang-org-x-crypto
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/google/go-github")
    (synopsis "go-github")
    (description
     "go-github is a Go client library for accessing the
@@url{https://developer.github.com/v3/,@code{GitHub} API v3}.")
    (license license:bsd-3)))

(define-public go-github-com-google-go-github-v39
  (package
    (name "go-github-com-google-go-github-v39")
    (version "39.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-github")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bnvb7a5qqs3f6w36jd5gjviphk21rqdlixczkzwr0g0yzy3cnd9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-github/v39"
      #:unpack-path "github.com/google/go-github"))
    (propagated-inputs (list go-google-golang-org-appengine
                             go-golang-org-x-oauth2 go-golang-org-x-crypto
                             go-github-com-google-go-querystring
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-github")
    (synopsis "go-github")
    (description "go-github is a Go client library for accessing the
@@url{https://docs.github.com/en/rest,@code{GitHub} API v3}.")
    (license license:bsd-3)))

(define-public go-github-com-google-go-github-v50
  (package
    (name "go-github-com-google-go-github-v50")
    (version "50.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-github")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11qzikm988zfzs6g70lbdjfhw7kdndagahg0q2bkn2ibq2c47xxp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-github/v50"
      #:unpack-path "github.com/google/go-github"))
    (propagated-inputs (list go-golang-org-x-oauth2
                             go-github-com-google-go-querystring
                             go-github-com-google-go-cmp
                             go-github-com-protonmail-go-crypto))
    (home-page "https://github.com/google/go-github")
    (synopsis "go-github")
    (description "go-github is a Go client library for accessing the
@@url{https://docs.github.com/en/rest,@code{GitHub} API v3}.")
    (license license:bsd-3)))

(define-public go-github-com-google-go-github-v57
  (package
    (name "go-github-com-google-go-github-v57")
    (version "57.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-github")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0wqmqrmc0j17smxpby6fisaxgz0fy27h63kpz93nqmw5h04ia8m6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-github/v57"
      #:unpack-path "github.com/google/go-github"))
    (propagated-inputs (list go-github-com-google-go-querystring
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-github")
    (synopsis "go-github")
    (description "go-github is a Go client library for accessing the
@@url{https://docs.github.com/en/rest,@code{GitHub} API v3}.")
    (license license:bsd-3)))

(define-public go-github-com-google-go-github-v61
  (package
    (name "go-github-com-google-go-github-v61")
    (version "61.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-github")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kivw55z2xckymg7xx6hkvmki5mwrphhcjlgrpfv35glnd5p5zmy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-github/v61"
      #:unpack-path "github.com/google/go-github"))
    (propagated-inputs (list go-github-com-google-go-querystring
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-github")
    (synopsis "go-github")
    (description "go-github is a Go client library for accessing the
@@url{https://docs.github.com/en/rest,@code{GitHub} API v3}.")
    (license license:bsd-3)))

(define-public go-github-com-google-go-github-v68
  (package
    (name "go-github-com-google-go-github-v68")
    (version "68.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-github")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mwc4b6cagwccfdjyna1gwf2ghadn9n2vzkyx0aa5cpilfh0h011"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-github/v68"
      #:unpack-path "github.com/google/go-github"))
    (propagated-inputs (list go-github-com-google-go-querystring
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-github")
    (synopsis "go-github")
    (description "go-github is a Go client library for accessing the
@@url{https://docs.github.com/en/rest,@code{GitHub} API v3}.")
    (license license:bsd-3)))


(define-public go-github-com-google-go-github-v69
  (package
    (name "go-github-com-google-go-github-v69")
    (version "69.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-github")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bx05jk3rza3pnpscv3v2jjc28h70fz728pv414jk9yf0malq5jf"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "github.com/google/go-github/v69"
      #:unpack-path "github.com/google/go-github"))
    (propagated-inputs (list go-github-com-google-go-querystring
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-github")
    (synopsis "go-github")
    (description "go-github is a Go client library for accessing the
@@url{https://docs.github.com/en/rest,@code{GitHub} API v3}.")
    (license license:bsd-3)))

(define-public go-github-com-google-go-intervals
  (package
    (name "go-github-com-google-go-intervals")
    (version "0.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-intervals")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0v9i46g1vdbyinagj94jvaibw4bpgh2l9f9p5268wg6msf761jm9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-intervals"))
    (home-page "https://github.com/google/go-intervals")
    (synopsis "go-intervals")
    (description
     "go-intervals is a library for performing set operations on 1-dimensional
intervals, such as time ranges.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-licenses-v2
  (package
    (name "go-github-com-google-go-licenses-v2")
    (version "2.0.0-alpha.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-licenses")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ckzvn0wyxivzqvmfmf1d3v8yzgs8bpa6kbf4id6sd5d7kxvg8cb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-licenses/v2"
      #:unpack-path "github.com/google/go-licenses"))
    (propagated-inputs (list go-k8s-io-klog-v2
                             go-golang-org-x-tools
                             go-golang-org-x-text
                             go-golang-org-x-sync
                             go-golang-org-x-net
                             go-golang-org-x-mod
                             go-go-opencensus-io ; packaged

                             go-github-com-spf13-cobra
                             go-github-com-otiai10-copy
                             go-github-com-google-licenseclassifier-v2
                             go-github-com-google-go-replayers-httpreplay
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-licenses")
    (synopsis "Licenses tool")
    (description
     "@@code{go-licenses} analyzes the dependency tree of a Go package/binary.  It can
output a report on the libraries used and under what license they can be used.
It can also collect all of the license documents, copyright notices and source
code into a directory in order to comply with license terms on redistribution.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-pkcs11
  (package
    (name "go-github-com-google-go-pkcs11")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-pkcs11")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0d93v3c0gsrymwagjfp9nzf70yxvczc6kvrqz10w2a07ag5ym02g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-pkcs11"))
    (home-page "https://github.com/google/go-pkcs11")
    (synopsis "Go PKCS #11")
    (description
     "This package provides a Go package for loading PKCS #11 modules.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-replayers-grpcreplay
  (package
    (name "go-github-com-google-go-replayers-grpcreplay")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-replayers")
             (commit (go-version->git-ref version
                                          #:subdir "grpcreplay"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rbl3kaa656322fzlgj9g0wrw7433zykncyrfbdhqgba1lq94q9n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-replayers/grpcreplay"
      #:unpack-path "github.com/google/go-replayers"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-replayers")
    (synopsis #f)
    (description
     "Package grpcreplay supports the capture and replay of @code{gRPC} calls.  Its
main goal is to improve testing.  Once you capture the calls of a test that runs
against a real service, you have an \"automatic mock\" that can be replayed
against the same test, yielding a unit test that is fast and flake-free.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-replayers-httpreplay
  (package
    (name "go-github-com-google-go-replayers-httpreplay")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-replayers")
             (commit (go-version->git-ref version
                                          #:subdir "httpreplay"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m5584fq74c19nk7vslzr9cxys9vi8imgmfdimjpdqfk4dncjqr3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-replayers/httpreplay"
      #:unpack-path "github.com/google/go-replayers"))
    (propagated-inputs (list go-google-golang-org-api go-golang-org-x-oauth2
                             go-github-com-google-martian-v3
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-storage))
    (home-page "https://github.com/google/go-replayers")
    (synopsis #f)
    (description
     "Package httpreplay provides an API for recording and replaying traffic from
HTTP-based clients.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-sev-guest
  (package
    (name "go-github-com-google-go-sev-guest")
    (version "0.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-sev-guest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0g27g5m68ihbzmb2ywj5f69qvb96p12ifv35grnmn98qz4jigsdz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-sev-guest"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-golang-org-x-sys
                             go-golang-org-x-crypto
                             go-go-uber-org-multierr
                             go-github-com-google-uuid
                             go-github-com-google-logger
                             go-github-com-google-go-configfs-tsm
                             go-github-com-google-go-cmp
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/google/go-sev-guest")
    (synopsis "SEV Guest")
    (description
     "This project offers libraries for a simple wrapper around the
@@code{/dev/sev-guest} device in Linux, as well as a library for attestation
verification of fundamental components of an attestation report.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-tdx-guest
  (package
    (name "go-github-com-google-go-tdx-guest")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-tdx-guest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03618kgaw1kria933prza8a0hvkjf25py7z466rd6xv70alyjjxv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-tdx-guest"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-golang-org-x-sys
                             go-golang-org-x-crypto
                             go-go-uber-org-multierr
                             go-github-com-google-logger
                             go-github-com-google-go-sev-guest
                             go-github-com-google-go-configfs-tsm
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/google/go-tdx-guest")
    (synopsis "TDX Guest")
    (description
     "This project offers libraries for a simple wrapper around quote providing tools
such as the @@code{go-configfs-tsm} library, or the @@code{/dev/tdx_guest}
device in Linux, as well as a library for attestation verification of
fundamental components of an attestation quote.")
    (license license:asl2.0)))

(define-public go-github-com-google-go-tpm-tools
  (package
    (name "go-github-com-google-go-tpm-tools")
    (version "0.4.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-tpm-tools")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17hq2xh44sc8lm41q89vbp72941rhzwqi0icnxmzam4prar8mz6h"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-tpm-tools"))
    (propagated-inputs (list go-github-com-google-go-eventlog
                             go-google-golang-org-protobuf
                             go-github-com-google-logger
                             go-github-com-google-go-tpm
                             go-github-com-google-go-tdx-guest
                             go-github-com-google-go-sev-guest
                             go-github-com-google-go-configfs-tsm
                             go-github-com-google-go-cmp
                             go-github-com-google-go-attestation
                             go-github-com-google-gce-tcb-verifier))
    (home-page "https://github.com/google/go-tpm-tools")
    (synopsis "Go-TPM tools")
    (description
     "The @@code{go-tpm-tools} module is a
@@url{https://trustedcomputinggroup.org/resource/trusted-platform-module-2-0-a-brief-introduction/,TPM
2.0} support library designed to complement
@@url{https://github.com/google/go-tpm,Go-TPM}.")
    (license #f)))

(define-public go-github-com-google-go-tspi
  (package
    (name "go-github-com-google-go-tspi")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-tspi")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ql299zpkjrh7nffvasspf940b9gdi42acfzkwbkf0bsdciqs07r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/go-tspi"))
    (propagated-inputs (list go-github-com-google-certificate-transparency-go))
    (home-page "https://github.com/google/go-tspi")
    (synopsis
     "go-tspi - Go bindings and support code for libtspi and tpm communication")
    (description
     "This is a library providing a set of bindings for communication between code
written in Go and libtspi, the library responsible for providing a TPM control
interface.  It consists of the following components:.")
    (license license:asl2.0)))

(define-public go-github-com-google-licenseclassifier-v2
  (package
    (name "go-github-com-google-licenseclassifier-v2")
    (version "2.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/licenseclassifier")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sn2r0hd1j2pid96wy4jrxzzqx4wrsrvn9nlschksm5lqmgj3vwg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/licenseclassifier/v2"
      #:unpack-path "github.com/google/licenseclassifier"))
    (propagated-inputs (list go-github-com-sergi-go-diff ; packaged
                             go-github-com-google-go-cmp
                             go-github-com-davecgh-go-spew))
    (home-page "https://github.com/google/licenseclassifier")
    (synopsis "License Classifier v2")
    (description
     "Package classifier provides the implementation of the v2 license classifier.")
    (license license:asl2.0)))

(define-public go-github-com-google-logger
  (package
    (name "go-github-com-google-logger")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/logger")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x2dmpvykfnbr6bbs0zhzp8c2338n4alx76v5nhwccsw40p04qgp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/logger"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/google/logger")
    (synopsis "logger")
    (description
     "Package logger offers simple cross platform logging for Windows and Linux.
Available logging endpoints are event log (Windows), syslog (Linux), and an
io.Writer.")
    (license license:asl2.0)))

(define-public go-github-com-google-martian
  (package
    (name "go-github-com-google-martian")
    (version "2.1.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/martian")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "197hil6vrjk50b9wvwyzf61csid83whsjj6ik8mc9r2lryxlyyrp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/martian"))
    (home-page "https://github.com/google/martian")
    (synopsis "Martian Proxy")
    (description
     "Package martian provides an HTTP/1.1 proxy with an API for configurable request
and response modifiers.")
    (license license:asl2.0)))

(define-public go-github-com-google-martian-v3
  (package
    (name "go-github-com-google-martian-v3")
    (version "3.3.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/martian")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0js95rw72mklxx8dilqdc86a50yhvykyczck4ci3xx6090p3fj2q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/martian/v3"
      #:unpack-path "github.com/google/martian"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc go-golang-org-x-net
                             go-github-com-golang-snappy))
    (home-page "https://github.com/google/martian")
    (synopsis "Martian Proxy")
    (description
     "Package martian provides an HTTP/1.1 proxy with an API for configurable request
and response modifiers.")
    (license license:asl2.0)))

(define-public go-github-com-google-nftables
  (package
    (name "go-github-com-google-nftables")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/nftables")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04w08c619aqkh6rkfxxhi4z23nyq0p4bswfhnka9hcsy4r6rk4fm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/nftables"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-vishvananda-netns
                             go-github-com-mdlayher-netlink))
    (home-page "https://github.com/google/nftables")
    (synopsis "Breaking changes")
    (description
     "Package nftables manipulates Linux nftables (the iptables successor).")
    (license license:asl2.0)))

(define-public go-github-com-google-rpmpack
  (package
    (name "go-github-com-google-rpmpack")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/rpmpack")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01xi0szfha3yf6mvzb82g1dh65nglb0ypd4y1jkn3xmrak5i3511"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/rpmpack"))
    (propagated-inputs (list go-github-com-ulikunitz-xz
                             go-github-com-klauspost-pgzip
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-google-go-cmp
                             go-github-com-cavaliergopher-cpio))
    (home-page "https://github.com/google/rpmpack")
    (synopsis "rpmpack (tar2rpm) - package rpms the easy way")
    (description
     "Package rpmpack packs files to rpm files.  It is designed to be simple to use
and deploy, not requiring any filesystem access to create rpm files.")
    (license license:asl2.0)))

(define-public go-github-com-google-s2a-go
  (package
    (name "go-github-com-google-s2a-go")
    (version "0.1.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/s2a-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j6i7a3irfs2xlysjs8grhq8rr5la4zfkwndgzvhbvkfzcw2d962"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/s2a-go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-appengine
                             go-google-golang-org-api
                             go-golang-org-x-sync
                             go-golang-org-x-crypto
                             go-github-com-google-go-cmp
                             go-cloud-google-com-go-translate))
    (home-page "https://github.com/google/s2a-go")
    (synopsis "Secure Session Agent Client Libraries")
    (description
     "Package s2a provides the S2A transport credentials used by a @code{gRPC}
application.")
    (license license:asl2.0)))

(define-public go-github-com-google-trillian
  (package
    (name "go-github-com-google-trillian")
    (version "1.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/trillian")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1pmfvzbfpisnwmkgigb35y6v7ar9zkdn2yn0447xpszfkbf3k00k"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/google/trillian"))
    (propagated-inputs (list go-k8s-io-klog-v2
                             go-gopkg-in-yaml-v2
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc-cmd-protoc-gen-go-grpc
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-golang-org-x-tools
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-crypto
                             go-go-opencensus-io ; packaged

                             go-go-etcd-io-etcd-v3
                             go-go-etcd-io-etcd-server-v3
                             go-go-etcd-io-etcd-etcdctl-v3
                             go-go-etcd-io-etcd-client-v3
                             go-github-com-transparency-dev-merkle
                             go-github-com-pseudomuto-protoc-gen-doc
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-lib-pq
                             go-github-com-letsencrypt-pkcs11key-v4
                             go-github-com-jackc-pgx-v5
                             go-github-com-jackc-pgerrcode
                             go-github-com-grpc-ecosystem-go-grpc-middleware
                             go-github-com-google-go-licenses-v2
                             go-github-com-google-go-cmp
                             go-github-com-google-btree
                             go-github-com-golang-mock ; packaged
                             go-github-com-go-sql-driver-mysql
                             go-github-com-go-redis-redis
                             go-github-com-fullstorydev-grpcurl
                             go-github-com-cockroachdb-cockroach-go-v2
                             go-github-com-apache-beam-sdks-v2
                             go-contrib-go-opencensus-io-exporter-stackdriver
                             go-cloud-google-com-go-spanner
                             go-bitbucket-org-creachadair-shell))
    (home-page "https://github.com/google/trillian")
    (synopsis "Trillian: General Transparency")
    (description
     "Package trillian contains the generated protobuf code for the Trillian API.")
    (license license:asl2.0)))

(define-public go-github-com-google-wire
  (package
    (name "go-github-com-google-wire")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/wire")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jmavdhb8w24n5i5926bq9cqdgy6dcdbvrmivy2k29zvkrpxnpvd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/google/wire"))
    (propagated-inputs (list go-golang-org-x-tools ; packaged
                             go-github-com-pmezard-go-difflib
                             go-github-com-google-subcommands ; packaged
                             go-github-com-google-go-cmp ; packaged
                             ))
    (home-page "https://github.com/google/wire")
    (synopsis "Wire: Automated Initialization in Go")
    (description
     "Package wire contains directives for Wire code generation.  For an overview of
working with Wire, see the user guide at
@@url{https://github.com/google/wire/blob/master/docs/guide.md,https://github.com/google/wire/blob/master/docs/guide.md}.")
    (license license:asl2.0)))

(define-public go-github-com-googleapis-cloud-bigtable-clients-test
  (package
    (name "go-github-com-googleapis-cloud-bigtable-clients-test")
    (version "0.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/cloud-bigtable-clients-test")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05nvmwmhj94na0a7nzmjh7703qji5pf9a0sjf219hwcl794hi26q"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/googleapis/cloud-bigtable-clients-test"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc ; packaged
                             go-google-golang-org-genproto-googleapis-rpc ; packaged
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-stretchr-testify ; packaged
                             go-github-com-google-go-cmp ; packaged
                             go-github-com-golang-protobuf ; packaged
                             go-cloud-google-com-go-bigtable
                             ))
    (home-page "https://github.com/googleapis/cloud-bigtable-clients-test")
    (synopsis "Test Framework for Cloud Bigtable Client Libraries")
    (description
     "This repository contains the test framework to validate the correctness of Cloud
Bigtable @@url{https://cloud.google.com/bigtable/docs/reference/libraries,client
libraries}.  Specifically, all of the client libraries should exhibit correct
and consistent behaviors when interacting with the server (e.g. retry on
transient error) However, writing test cases in every language would present
maintainability and scalability challenges.")
    (license license:asl2.0)))

(define-public go-github-com-googleapis-enterprise-certificate-proxy
  (package
    (name "go-github-com-googleapis-enterprise-certificate-proxy")
    (version "0.3.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/enterprise-certificate-proxy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ly4ry8i997i0mydx1fx4dac294p32rc3ni70iw2bk8g6gvkx4lf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/googleapis/enterprise-certificate-proxy"))
    (propagated-inputs (list go-golang-org-x-sys go-golang-org-x-crypto
                             go-github-com-google-go-pkcs11))
    (home-page "https://github.com/googleapis/enterprise-certificate-proxy")
    (synopsis "Google Proxies for Enterprise Certificates (GA)")
    (description
     "If you use
@@url{https://cloud.google.com/beyondcorp-enterprise/docs/securing-resources-with-certificate-based-access,certificate-based
access} to protect your Google Cloud resources, the end user
@@url{https://en.wikipedia.org/wiki/Client_certificate,device certificate} is
one of the credentials that is verified before access to a resource is granted.
You can configure Google Cloud to use the device certificates in your operating
system key store when verifying access to a resource from the gcloud CLI or
Terraform by using the enterprise certificates feature.")
    (license license:asl2.0)))

(define-public go-github-com-googleapis-gax-go-v2
  (package
    (name "go-github-com-googleapis-gax-go-v2")
    (version "2.14.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/gax-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19qn50z4g64yvwka5d8v6waz24g7l26qrs61by6znmzjwmq7jhnw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/googleapis/gax-go/v2"
      #:unpack-path "github.com/googleapis/gax-go"))
    (propagated-inputs (list
                        go-github-com-google-go-cmp ; packaged
                        go-google-golang-org-api
                        go-google-golang-org-genproto-googleapis-api ; packaged
                        go-google-golang-org-genproto-googleapis-rpc ; packaged
                        go-google-golang-org-grpc ; packaged
                        go-google-golang-org-protobuf ; packaged
                        ))
    (home-page "https://github.com/googleapis/gax-go")
    (synopsis #f)
    (description
     "Package gax contains a set of modules which aid the development of APIs for
clients and servers based on @code{gRPC} and Google API conventions.")
    (license license:bsd-3)))

(define-public go-github-com-googleapis-go-sql-spanner
  (package
    (name "go-github-com-googleapis-go-sql-spanner")
    (version "1.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/go-sql-spanner")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08xq44zm5chgv39nhh58dbcfx80kfczri5hkszdxnbzckm8gz3fp"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check
      #:import-path "github.com/googleapis/go-sql-spanner"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-api
                             go-github-com-googleapis-gax-go-v2
                             go-github-com-google-go-cmp
                             go-github-com-golang-protobuf
                             go-cloud-google-com-go-spanner
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go))
    (home-page "https://github.com/googleapis/go-sql-spanner")
    (synopsis "go-sql-spanner")
    (description
     "@@url{https://cloud.google.com/spanner,Google Cloud Spanner} driver for Go's
@@url{https://golang.org/pkg/database/sql/,database/sql} package.")
    (license license:asl2.0)))

(define-public go-github-com-googleapis-google-cloud-go-testing
  (package
    (name "go-github-com-googleapis-google-cloud-go-testing")
    (version "0.0.0-20210719221736-1c9a4c676720")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-cloud-go-testing")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1aa53sbicx9wcgs1hr6pwwazijn8k7sij661gy0f9pqm42c7ggi5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/googleapis/google-cloud-go-testing"))
    (propagated-inputs (list go-honnef-co-go-tools
                             go-google-golang-org-api
                             go-golang-org-x-tools
                             go-golang-org-x-lint
                             go-cloud-google-com-go-datastore
                             go-cloud-google-com-go-bigquery
                             go-cloud-google-com-go))
    (home-page "https://github.com/googleapis/google-cloud-go-testing")
    (synopsis "Testing Support for the Google Cloud Client Libraries for Go")
    (description
     "These packages contain code that can help you test against the GCP Client
Libraries for Go
(@@url{https://github.com/@code{GoogleCloudPlatform/google-cloud-go,https://github.com/GoogleCloudPlatform/google-cloud-go}}).")
    (license license:asl2.0)))

(define-public go-github-com-googlecloudplatform-cloudsql-proxy
  (package
    (name "go-github-com-googlecloudplatform-cloudsql-proxy")
    (version "1.37.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/GoogleCloudPlatform/cloud-sql-proxy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19b2bwy16yqny5s94hmv4imrs59l8g2rkjcfv67mzy5dr4lnkykk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/GoogleCloudPlatform/cloudsql-proxy"))
    (propagated-inputs (list go-google-golang-org-api
                             go-golang-org-x-time
                             go-golang-org-x-sys
                             go-golang-org-x-oauth2
                             go-golang-org-x-net
                             go-go-uber-org-zap
                             go-github-com-microsoft-go-mssqldb
                             go-github-com-lib-pq
                             go-github-com-jackc-pgx-v4
                             go-github-com-hanwen-go-fuse-v2
                             go-github-com-go-sql-driver-mysql
                             go-github-com-coreos-go-systemd-v22
                             go-cloud-google-com-go-compute-metadata))
    (home-page "https://github.com/GoogleCloudPlatform/cloudsql-proxy")
    (synopsis "Cloud SQL Auth proxy")
    (description
     "The @@url{https://cloud.google.com/sql/docs/mysql/sql-proxy,Cloud SQL Auth
proxy} is a binary that provides IAM-based authorization and encryption when
connecting to a Cloud SQL instance.")
    (license license:asl2.0)))

(define-public go-github-com-googlecloudplatform-grpc-gcp-go-grpcgcp
  (package
    (name "go-github-com-googlecloudplatform-grpc-gcp-go-grpcgcp")
    (version "1.5.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/GoogleCloudPlatform/grpc-gcp-go")
             (commit (go-version->git-ref version
                                          #:subdir "grpcgcp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mbx4l449mb0wd0bca6r8bm7pdwaj6d4ivsgg4nsrjs3wm0l999c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/GoogleCloudPlatform/grpc-gcp-go/grpcgcp"
      #:unpack-path "github.com/GoogleCloudPlatform/grpc-gcp-go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-github-com-google-go-cmp
                             go-github-com-golang-mock ; packaged
                             ))
    (home-page "https://github.com/GoogleCloudPlatform/grpc-gcp-go")
    (synopsis "How to test Spanner integration")
    (description
     "Package grpcgcp provides grpc supports for Google Cloud APIs.  For now it
provides connection management with affinity support.")
    (license license:asl2.0)))

(define-public go-github-com-googlecloudplatform-opentelemetry-operations-go-detectors-gcp
  (package
    (name
     "go-github-com-googlecloudplatform-opentelemetry-operations-go-detectors-gcp")
    (version "1.25.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/GoogleCloudPlatform/opentelemetry-operations-go")
             (commit (go-version->git-ref version
                                          #:subdir "detectors/gcp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j026l2whpr9fz5y89wnqhik2p8dkbkhymp7f7bnrjw2syga3bh9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp"
      #:unpack-path
      "github.com/GoogleCloudPlatform/opentelemetry-operations-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-cloud-google-com-go-compute-metadata))
    (home-page
     "https://github.com/GoogleCloudPlatform/opentelemetry-operations-go")
    (synopsis "GCP Resource detection library")
    (description
     "This is a library intended to be used by Upstream @code{OpenTelemetry} resource
detectors.  It exists within this repository to allow for integration testing of
the detection functions in real GCP environments.")
    (license license:asl2.0)))

(define-public go-github-com-googlecloudplatform-opentelemetry-operations-go-exporter-metric
  (package
    (name
     "go-github-com-googlecloudplatform-opentelemetry-operations-go-exporter-metric")
    (version "0.49.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/GoogleCloudPlatform/opentelemetry-operations-go")
             (commit (go-version->git-ref version
                                          #:subdir "exporter/metric"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j026l2whpr9fz5y89wnqhik2p8dkbkhymp7f7bnrjw2syga3bh9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric"
      #:unpack-path
      "github.com/GoogleCloudPlatform/opentelemetry-operations-go"))
    (propagated-inputs (list go-google-golang-org-genproto-googleapis-api ; packaged
                             go-go-opentelemetry-io-otel-trace
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-api
                             go-golang-org-x-oauth2
                             go-go-opentelemetry-io-otel-sdk-metric
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opentelemetry-io-otel-metric ; packaged
                             go-go-opentelemetry-io-otel
                             go-github-com-stretchr-testify
                             go-github-com-googleapis-gax-go-v2
                             go-cloud-google-com-go-monitoring))
    (home-page
     "https://github.com/GoogleCloudPlatform/opentelemetry-operations-go")
    (synopsis "OpenTelemetry Google Cloud Monitoring Exporter")
    (description
     "@code{OpenTelemetry} Google Cloud Monitoring Exporter allows the user to send
collected metrics to Google Cloud.")
    (license license:asl2.0)))

(define-public go-github-com-gopasspw-gopass
  (package
    (name "go-github-com-gopasspw-gopass")
    (version "1.15.15")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gopasspw/gopass")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jkpzdmh3h7alf6xb57qf8gl6jrbwa4616xvr4fzgxkknfg2zg8q"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "github.com/gopasspw/gopass"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-term
                             go-golang-org-x-sys
                             go-golang-org-x-oauth2
                             go-golang-org-x-net
                             go-golang-org-x-exp
                             go-golang-org-x-crypto
                             go-github-com-zeebo-blake3
                             go-github-com-zalando-go-keyring
                             go-github-com-xhit-go-str2duration-v2
                             go-github-com-urfave-cli-v2
                             go-github-com-twpayne-go-pinentry
                             go-github-com-stretchr-testify
                             go-github-com-skip2-go-qrcode
                             go-github-com-schollz-closestmatch
                             go-github-com-pquerna-otp
                             go-github-com-noborus-ov
                             go-github-com-nbutton23-zxcvbn-go
                             go-github-com-muesli-crunchy
                             go-github-com-mitchellh-go-ps ; packaged
                             go-github-com-mattn-go-tty
                             go-github-com-mattn-go-isatty
                             go-github-com-mattn-go-colorable
                             go-github-com-martinhoefling-goxkcdpwgen
                             go-github-com-makiuchi-d-gozxing
                             go-github-com-kbinani-screenshot
                             go-github-com-kballard-go-shellquote
                             go-github-com-jsimonetti-pwscheme
                             go-github-com-hashicorp-golang-lru-v2
                             go-github-com-gopasspw-gopass-hibp
                             go-github-com-google-go-github-v61
                             go-github-com-google-go-cmp
                             go-github-com-gokyle-twofactor
                             go-github-com-godbus-dbus-v5
                             go-github-com-fatih-color
                             go-github-com-ergochat-readline
                             go-github-com-dustin-go-humanize
                             go-github-com-cenkalti-backoff-v4 ;packaged

                             go-github-com-caspr-io-yamlpath
                             go-github-com-blang-semver-v4
                             go-github-com-atotto-clipboard
                             go-github-com-protonmail-go-crypto
                             go-filippo-io-age))
    (home-page "https://github.com/gopasspw/gopass")
    (synopsis "Overview")
    (description "Gopass implements the gopass command line tool.")
    (license license:expat)))

(define-public go-github-com-gopasspw-gopass-hibp
  (package
    (name "go-github-com-gopasspw-gopass-hibp")
    (version "1.15.15")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gopasspw/gopass-hibp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zwylbw24nwyla8cjn07072magr615nfydfh3s48b2v41rd39rka"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "github.com/gopasspw/gopass-hibp"))
    (propagated-inputs (list go-github-com-urfave-cli-v2
                             go-github-com-stretchr-testify
                             go-github-com-kjk-lzmadec
                             go-github-com-gopasspw-gopass
                             go-github-com-fatih-color
                             go-github-com-cenkalti-backoff-v4 ;packaged

                             go-github-com-blang-semver-v4))
    (home-page "https://github.com/gopasspw/gopass-hibp")
    (synopsis "gopass-hibp")
    (description "Gopass haveibeenpwnd.com integration.")
    (license license:expat)))

(define-public go-github-com-goph-emperror
  (package
    (name "go-github-com-goph-emperror")
    (version "0.17.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/goph/emperror")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0a06qv3nfkwjs9k647x6vbfx7287j0pxfhcfprvlbykqj62gbyfl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/goph/emperror"))
    (propagated-inputs (list go-github-com-sirupsen-logrus
                             go-github-com-rollbar-rollbar-go
                             go-github-com-pkg-errors
                             ;; go-github-com-getsentry-raven-go ; deprecated
                             go-github-com-bugsnag-bugsnag-go
                             go-github-com-airbrake-gobrake))
    (home-page "https://github.com/goph/emperror")
    (synopsis "Features")
    (description
     "Package emperror provides error handling solutions and tools for libraries and
applications.")
    (license license:expat)))

(define-public go-github-com-gophercloud-gophercloud
  (package
    (name "go-github-com-gophercloud-gophercloud")
    (version "1.14.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gophercloud/gophercloud")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lwag9b2x898rw075bm3mzcfq0bwfz0gqkbqix79nnaqp0cqj1zf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gophercloud/gophercloud"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-golang-org-x-crypto))
    (home-page "https://github.com/gophercloud/gophercloud")
    (synopsis "Gophercloud: an OpenStack SDK for Go")
    (description
     "Package gophercloud provides a multi-vendor interface to
@code{OpenStack-compatible} clouds.  The library has a three-level hierarchy:
providers, services, and resources.")
    (license license:asl2.0)))

(define-public go-github-com-gophercloud-utils
  (package
    (name "go-github-com-gophercloud-utils")
    (version "0.0.0-20231010081019-80377eca5d56")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gophercloud/utils")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12v12w7knf1q9v9za539g4crk7h78bwkq657wg1rgxcblv1vsj3m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gophercloud/utils"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-golang-org-x-text
                             go-golang-org-x-sys
                             go-github-com-mitchellh-go-homedir
                             go-github-com-hashicorp-go-uuid
                             go-github-com-gophercloud-gophercloud))
    (home-page "https://github.com/gophercloud/utils")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-gopherjs-gopherjs
  (package
    (name "go-github-com-gopherjs-gopherjs")
    (version "1.17.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gopherjs/gopherjs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dg22b3pw0g3g0a84fmzl0fl76540yjvlcvscw2876gdy5db98n3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gopherjs/gopherjs"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-crypto
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-shurcool-httpfs
                             go-github-com-shurcool-go
                             go-github-com-neelance-sourcemap
                             go-github-com-neelance-astrewrite
                             go-github-com-google-go-cmp
                             go-github-com-fsnotify-fsnotify ; packaged
                             ))
    (home-page "https://github.com/gopherjs/gopherjs")
    (synopsis "GopherJS - A compiler from Go to JavaScript")
    (description
     "@code{GopherJS} compiles Go code (@@url{https://golang.org/,golang.org}) to pure
@code{JavaScript} code.  Its main purpose is to give you the opportunity to
write front-end code in Go which will still run in all browsers.")
    (license license:bsd-2)))

(define-public go-github-com-gopherjs-jquery
  (package
    (name "go-github-com-gopherjs-jquery")
    (version "0.0.0-20191017083323-73f4c7416038")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gopherjs/jquery")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xhl0k52v3djalnd02a0ph572f85i1szj2x4q3lglkq40j7racd2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gopherjs/jquery"))
    (home-page "https://github.com/gopherjs/jquery")
    (synopsis "jQuery Bindings for")
    (description "welcome.html file:.")
    (license license:bsd-3)))

(define-public go-github-com-gordonklaus-ineffassign
  (package
    (name "go-github-com-gordonklaus-ineffassign")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gordonklaus/ineffassign")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dck33y02pgrbvqa7m2q911lz0pldpqrrh6z1ppsabsir8ic0ni5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gordonklaus/ineffassign"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/gordonklaus/ineffassign")
    (synopsis "ineffassign")
    (description
     "Detect ineffectual assignments in Go code.  An assignment is ineffectual if the
variable assigned is not thereafter used.")
    (license license:expat)))

(define-public go-github-com-goreleaser-chglog
  (package
    (name "go-github-com-goreleaser-chglog")
    (version "0.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/goreleaser/chglog")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0687gl4yjjx3d32lprra10b9d46dicz8l3z0z53xa1q73mcks947"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/goreleaser/chglog"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-gitlab-com-digitalxero-go-conventional-commit
                             go-github-com-spf13-viper
                             go-github-com-spf13-cobra
                             go-github-com-smartystreets-goconvey
                             go-github-com-google-go-cmp
                             go-github-com-go-git-go-git-v5
                             go-github-com-go-git-go-billy-v5
                             go-github-com-masterminds-sprig-v3
                             go-github-com-masterminds-semver-v3))
    (home-page "https://github.com/goreleaser/chglog")
    (synopsis "chglog")
    (description
     "Package chglog contains the public API for working with a changlog.yml file.")
    (license license:expat)))

(define-public go-github-com-goreleaser-nfpm-v2
  (package
    (name "go-github-com-goreleaser-nfpm-v2")
    (version "2.41.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/goreleaser/nfpm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04r6q8n5js2scaargnsbgfvpj9pw2g7k4aq5sw848rwsqflbcrzy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/goreleaser/nfpm/v2"
      #:unpack-path "github.com/goreleaser/nfpm"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-exp
                             go-github-com-xi2-xz
                             go-github-com-ulikunitz-xz
                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-sassoftware-go-rpmutils
                             go-github-com-muesli-roff
                             go-github-com-muesli-mango-cobra
                             go-github-com-klauspost-pgzip
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-invopop-jsonschema
                             go-github-com-goreleaser-fileglob
                             go-github-com-goreleaser-chglog
                             go-github-com-google-rpmpack
                             go-github-com-caarlos0-go-version
                             go-github-com-blakesmith-ar
                             go-github-com-protonmail-gopenpgp-v2
                             go-github-com-protonmail-go-crypto
                             go-github-com-masterminds-semver-v3
                             go-github-com-aleksi-pointer
                             go-dario-cat-mergo))
    (home-page "https://github.com/goreleaser/nfpm")
    (synopsis "Why")
    (description
     "Package nfpm provides ways to package programs in some linux packaging formats.")
    (license license:expat)))

(define-public go-github-com-gorilla-feeds
  (package
    (name "go-github-com-gorilla-feeds")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gorilla/feeds")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0285iq589q7i6mr2wl3qzr282yc82sg1raxfna0xxvin7a5k7mx6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gorilla/feeds"))
    (propagated-inputs (list go-github-com-kr-pretty))
    (home-page "https://github.com/gorilla/feeds")
    (synopsis "gorilla/feeds")
    (description "Syndication (feed) generator library for golang.")
    (license license:bsd-3)))

(define-public go-github-com-gosimple-slug
  (package
    (name "go-github-com-gosimple-slug")
    (version "1.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gosimple/slug")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rbrp501iiw4grf7pcinsin6yv2x6f87p6bifac9mgiiapamgba5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gosimple/slug"))
    (propagated-inputs (list go-github-com-gosimple-unidecode))
    (home-page "https://github.com/gosimple/slug")
    (synopsis "slug")
    (description
     "Package slug generate slug from unicode string, URL-friendly slugify with
multiple languages support.")
    (license license:mpl2.0)))

(define-public go-github-com-gosimple-unidecode
  (package
    (name "go-github-com-gosimple-unidecode")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gosimple/unidecode")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dxdddn744l0s1lr006s2a4k02w6qx8j3k31c7sfflh7wvwzcdzx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gosimple/unidecode"))
    (home-page "https://github.com/gosimple/unidecode")
    (synopsis "unidecode")
    (description
     "Package unidecode implements a unicode transliterator which replaces non-ASCII
characters with their ASCII approximations.")
    (license license:asl2.0)))

(define-public go-github-com-gostaticanalysis-analysisutil
  (package
    (name "go-github-com-gostaticanalysis-analysisutil")
    (version "0.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gostaticanalysis/analysisutil")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sysaa03zh6glmy1rkym3n3zg78i9s39jgw0mgla30mzc05x8fj8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gostaticanalysis/analysisutil"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-comment))
    (home-page "https://github.com/gostaticanalysis/analysisutil")
    (synopsis "analysisutil")
    (description "Utilities for x/tools/go/analysis package.")
    (license license:expat)))

(define-public go-github-com-gostaticanalysis-comment
  (package
    (name "go-github-com-gostaticanalysis-comment")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gostaticanalysis/comment")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01ffgmqkya8hkgjvj2isyd6i9gbvhihfdn87hkxd4g866x8q9al5"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/gostaticanalysis/comment"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-testutil
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/gostaticanalysis/comment")
    (synopsis "gostaticanalysis/comment")
    (description
     "@@code{comment} provides utilities for
@@url{https://golang.org/pkg/go/ast/#@code{CommentMap,ast.CommentMap}}.")
    (license license:expat)))

(define-public go-github-com-gostaticanalysis-forcetypeassert
  (package
    (name "go-github-com-gostaticanalysis-forcetypeassert")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gostaticanalysis/forcetypeassert")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i9jkdlzksa3q35w3simjsg7l921ijjim028qcrllksm855l0dag"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gostaticanalysis/forcetypeassert"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/gostaticanalysis/forcetypeassert")
    (synopsis "forcetypeassert")
    (description
     "@@code{forcetypeassert} finds type assertions which did forcely such as below.")
    (license license:expat)))

(define-public go-github-com-gostaticanalysis-nilerr
  (package
    (name "go-github-com-gostaticanalysis-nilerr")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gostaticanalysis/nilerr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dz1k7l6jcdamy3i0q976n13lydxx9dpc0sv3zl1j7sm6sysv76x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gostaticanalysis/nilerr"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-comment))
    (home-page "https://github.com/gostaticanalysis/nilerr")
    (synopsis "nilerr")
    (description
     "@@code{nilerr} finds code which returns nil even though it checks that error is
not nil.")
    (license license:expat)))

(define-public go-github-com-gostaticanalysis-testutil
  (package
    (name "go-github-com-gostaticanalysis-testutil")
    (version "0.5.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gostaticanalysis/testutil")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zxhgcy8vghns3dg6wv431lsmin3lknhdq1sykghrcf2d6rmkk2f"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/gostaticanalysis/testutil"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-golang-org-x-text
                             go-golang-org-x-mod
                             go-github-com-tenntenn-text-transform
                             go-github-com-tenntenn-modver
                             go-github-com-otiai10-copy
                             go-github-com-josharian-txtarfs
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/gostaticanalysis/testutil")
    (synopsis "testutil")
    (description "Utilities for test of static analysis tools.")
    (license license:expat)))

(define-public go-github-com-gostor-gotgt
  (package
    (name "go-github-com-gostor-gotgt")
    (version "0.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gostor/gotgt")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qr8aj6pq33f5xgr64dlrbvqgll9b3nyzk71w9hvw8d4z7sm3ap7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/gostor/gotgt"))
    (propagated-inputs (list go-golang-org-x-net
                             go-github-com-spf13-cobra
                             go-github-com-sirupsen-logrus
                             go-github-com-satori-go-uuid
                             go-github-com-gorilla-mux
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-coreos-go-systemd
                             go-github-com-ceph-go-ceph))
    (home-page "https://github.com/gostor/gotgt")
    (synopsis "gotgt")
    (description "SCSI target command line.")
    (license license:asl2.0)))

(define-public go-github-com-grafana-regexp
  (package
    (name "go-github-com-grafana-regexp")
    (version "0.0.0-20240518133315-a468a5bfb3bc")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grafana/regexp")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vhncrr5n8f150rg0q01i7yc58b0jpcci2h7zgiwv9wr5k0yaqs2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/grafana/regexp"))
    (home-page "https://github.com/grafana/regexp")
    (synopsis "Grafana Go regexp package")
    (description "Package regexp implements regular expression search.")
    (license license:bsd-3)))

(define-public go-github-com-graph-gophers-dataloader-v6
  (package
    (name "go-github-com-graph-gophers-dataloader-v6")
    (version "6.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/graph-gophers/dataloader")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f1xpln1s3mgki61adb8yqlxhnmb5vcavpa7v03w4csf0xk6xxbv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/graph-gophers/dataloader/v6"
      #:unpack-path "github.com/graph-gophers/dataloader"))
    (propagated-inputs (list go-github-com-patrickmn-go-cache
                             go-github-com-opentracing-opentracing-go
                             go-github-com-hashicorp-golang-lru))
    (home-page "https://github.com/graph-gophers/dataloader")
    (synopsis "DataLoader")
    (description
     "Package dataloader is an implimentation of facebook's dataloader in go.  See
@@url{https://github.com/facebook/dataloader,https://github.com/facebook/dataloader}
for more information.")
    (license license:expat)))

(define-public go-github-com-graph-gophers-graphql-go
  (package
    (name "go-github-com-graph-gophers-graphql-go")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/graph-gophers/graphql-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0adinm3plnmw65k5jnzwnc7g9809lj4a3w53si90a3iywi127qr0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/graph-gophers/graphql-go"))
    (propagated-inputs (list go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel
                             go-github-com-opentracing-opentracing-go))
    (home-page "https://github.com/graph-gophers/graphql-go")
    (synopsis "graphql-go")
    (description
     "The goal of this project is to provide full support of the
@@url{https://facebook.github.io/graphql/draft,@code{GraphQL} draft
specification} with a set of idiomatic, easy to use Go packages.")
    (license license:bsd-2)))

(define-public go-github-com-greatroar-blobloom
  (package
    (name "go-github-com-greatroar-blobloom")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/greatroar/blobloom")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gninynlrg4sh1rbsbpm7n0l1bxd1x24y3p109grzcgnmgc5ivzx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/greatroar/blobloom"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/greatroar/blobloom")
    (synopsis "Blobloom")
    (description "Package blobloom implements blocked Bloom filters.")
    (license license:asl2.0)))

(define-public go-github-com-grpc-ecosystem-go-grpc-middleware
  (package
    (name "go-github-com-grpc-ecosystem-go-grpc-middleware")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc-ecosystem/go-grpc-middleware")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04g3yw8ywfjcgg6rli0vij2z6b9dd5vpsh39l33ysnr6zdrb76np"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/grpc-ecosystem/go-grpc-middleware"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-golang-org-x-oauth2
                             go-golang-org-x-net
                             go-go-uber-org-zap
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-opentracing-opentracing-go
                             go-github-com-golang-protobuf
                             go-github-com-gogo-protobuf
                             go-github-com-go-kit-log ;; packaged
                             ))
    (home-page "https://github.com/grpc-ecosystem/go-grpc-middleware")
    (synopsis "Go gRPC Middleware")
    (description
     "`grpc_middleware` is a collection of @code{gRPC} middleware packages:
interceptors, helpers and tools.")
    (license license:asl2.0)))

(define-public go-github-com-grpc-ecosystem-grpc-gateway
  (package
    (name "go-github-com-grpc-ecosystem-grpc-gateway")
    (version "1.16.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc-ecosystem/grpc-gateway")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dzq1qbgzz2c6vnh8anx0j3py34sd72p35x6s2wrl001q68am5cc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/grpc-ecosystem/grpc-gateway"))
    (propagated-inputs (list go-google-golang-org-grpc       ; packaged
                             go-google-golang-org-genproto
                             go-golang-org-x-oauth2          ; packaged
                             go-github-com-rogpeppe-fastuuid ; packaged
                             go-github-com-golang-protobuf   ; packaged
                             go-github-com-golang-glog       ; packaged
                             go-github-com-ghodss-yaml       ; packaged
                             go-github-com-antihax-optional  ; packaged
                             ))
    (home-page "https://github.com/grpc-ecosystem/grpc-gateway")
    (synopsis "grpc-gateway")
    (description
     "The grpc-gateway is a plugin of the Google protocol buffers compiler
@@url{https://github.com/protocolbuffers/protobuf,protoc}.  It reads protobuf
service definitions and generates a reverse-proxy server which translates a
RESTful HTTP API into @code{gRPC}.  This server is generated according to the
@@url{https://github.com/googleapis/googleapis/raw/master/google/api/http.proto#L46,(code
google.api.http)} annotations in your service definitions.")
    (license license:bsd-3)))

(define-public go-github-com-grpc-ecosystem-grpc-gateway-v2
  (package
    (name "go-github-com-grpc-ecosystem-grpc-gateway-v2")
    (version "2.25.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc-ecosystem/grpc-gateway")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07f73qy801pg2c6j9lck3xgb8bzn10shwqwvic202jy16x7micym"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/grpc-ecosystem/grpc-gateway/v2"
      #:unpack-path "github.com/grpc-ecosystem/grpc-gateway"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-golang-org-x-text
                             go-golang-org-x-oauth2
                             go-github-com-rogpeppe-fastuuid ; packaged
                             go-github-com-google-go-cmp
                             go-github-com-antihax-optional))
    (home-page "https://github.com/grpc-ecosystem/grpc-gateway")
    (synopsis "About")
    (description
     "The @code{gRPC-Gateway} is a plugin of the Google protocol buffers compiler
@@url{https://github.com/protocolbuffers/protobuf,protoc}.  It reads protobuf
service definitions and generates a reverse-proxy server which translates a
RESTful HTTP API into @code{gRPC}.  This server is generated according to the
@@url{https://github.com/googleapis/googleapis/raw/master/google/api/http.proto#L46,(code
google.api.http)} annotations in your service definitions.")
    (license license:bsd-3)))

(define-public go-github-com-grpc-ecosystem-grpc-opentracing
  (package
    (name "go-github-com-grpc-ecosystem-grpc-opentracing")
    (version "0.0.0-20180507213350-8e809c8a8645")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc-ecosystem/grpc-opentracing")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yz3gxhdipmi63n32y5srwx7p254k3fm8y64cimkb1gz7sw99nxw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/grpc-ecosystem/grpc-opentracing"))
    (home-page "https://github.com/grpc-ecosystem/grpc-opentracing")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-h2non-go-is-svg
  (package
    (name "go-github-com-h2non-go-is-svg")
    (version "0.0.0-20160927212452-35e8c4b0612c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/h2non/go-is-svg")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fdg0v7v214345hwws2rs5bqxfw9a36bcsjp1z3wnr2j9w3d1h45"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/h2non/go-is-svg"))
    (home-page "https://github.com/h2non/go-is-svg")
    (synopsis "go-is-svg")
    (description
     "Tiny package to verify if a given file buffer is an SVG image in Go (golang).")
    (license license:expat)))

(define-public go-github-com-h2non-parth
  (package
    (name "go-github-com-h2non-parth")
    (version "0.0.0-20190131123155-b4df798d6542")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/h2non/parth")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1aj37m7z6wbi397g38jni54n3c7yy8nljc40ksy8am213lil5aqc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/h2non/parth"))
    (home-page "https://github.com/h2non/parth")
    (synopsis "parth")
    (description
     "Package parth provides path parsing for segment unmarshaling and slicing.  In
other words, parth provides simple and flexible access to (URL) path parameters.")
    (license license:expat)))

(define-public go-github-com-hack-pad-go-indexeddb
  (package
    (name "go-github-com-hack-pad-go-indexeddb")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hack-pad/go-indexeddb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fqzf4m6a4i1xaivxjn2d82l1nbcb4nrpqrx4mc5kski2jskdijn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hack-pad/go-indexeddb"))
    (propagated-inputs (list go-github-com-hack-pad-safejs))
    (home-page "https://github.com/hack-pad/go-indexeddb")
    (synopsis "go-indexeddb")
    (description
     "An @code{IndexedDB} driver with bindings for Go code compiled to
@code{WebAssembly}.")
    (license license:asl2.0)))

(define-public go-github-com-hack-pad-hackpadfs
  (package
    (name "go-github-com-hack-pad-hackpadfs")
    (version "0.2.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hack-pad/hackpadfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cff9q2mnjm0gns2c7w4ybdc867dzwcmvciym7nbdbi5x69fg4mn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hack-pad/hackpadfs"))
    (propagated-inputs (list go-github-com-hack-pad-safejs
                             go-github-com-hack-pad-go-indexeddb))
    (home-page "https://github.com/hack-pad/hackpadfs")
    (synopsis "hackpadfs")
    (description
     "Package hackpadfs defines many essential file and file system interfaces as well
as helpers for use with the standard library's io/fs package.")
    (license license:asl2.0)))

(define-public go-github-com-hack-pad-safejs
  (package
    (name "go-github-com-hack-pad-safejs")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hack-pad/safejs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0r18hnp5lfgidqar0ph1f0p7zradz0g75dgsk5aqb3x2vqb8jj7c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hack-pad/safejs"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/hack-pad/safejs")
    (synopsis "SafeJS")
    (description
     "Package safejs provides guardrails around the @@url{/syscall/js,syscall/js}
package, like turning thrown exceptions into errors.")
    (license license:asl2.0)))

(define-public go-github-com-hairyhenderson-go-codeowners
  (package
    (name "go-github-com-hairyhenderson-go-codeowners")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hairyhenderson/go-codeowners")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kzfdrv9w9j0qxks63yijfh5c208xhvfx1msg3hl0nfyjd1nifca"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check
      #:import-path "github.com/hairyhenderson/go-codeowners"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/hairyhenderson/go-codeowners")
    (synopsis "go-codeowners")
    (description
     "This package provides a package that finds and parses
@@url{https://help.github.com/articles/about-codeowners/,(code CODEOWNERS)}
files.")
    (license license:expat)))

(define-public go-github-com-hako-durafmt
  (package
    (name "go-github-com-hako-durafmt")
    (version "0.0.0-20210608085754-5c1018a4e16b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hako/durafmt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0clj20nr3j83brvdd0yxbnpk6zyhjy9a58gjdxi7nqq1vjchp0pw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hako/durafmt"))
    (home-page "https://github.com/hako/durafmt")
    (synopsis "durafmt")
    (description
     "Package durafmt formats time.Duration into a human readable format.")
    (license license:expat)))

(define-public go-github-com-hamba-avro-v2
  (package
    (name "go-github-com-hamba-avro-v2")
    (version "2.27.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hamba/avro")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1y2b46imcpjnwr25yg2120qjhziqbdn086q2ldcxcc9m9mwcdcmy"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/hamba/avro/v2"
      #:unpack-path "github.com/hamba/avro"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-stretchr-testify
                             go-github-com-modern-go-reflect2
                             go-github-com-mitchellh-mapstructure
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-json-iterator-go
                             go-github-com-golang-snappy
                             go-github-com-ettle-strcase))
    (home-page "https://github.com/hamba/avro")
    (synopsis "Overview")
    (description
     "Package avro implements encoding and decoding of Avro as defined by the Avro
specification.")
    (license license:expat)))

(define-public go-github-com-harmony-development-shibshib
  (package
    (name "go-github-com-harmony-development-shibshib")
    (version "0.0.0-20220101224523-c98059d09cfa")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/harmony-development/shibshib")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1scj9pylrazv0gkjl28mzsj7djz0hpcq4c7w4bixrgh1ki11jpvb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/harmony-development/shibshib"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-gorilla-websocket
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/harmony-development/shibshib")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-hashicorp-cli
  (package
    (name "go-github-com-hashicorp-cli")
    (version "1.1.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/cli")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14dki6z2nipv94bisdyi0nx1wnc4pf0l7h5h1hq9d97jfp727dzy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/cli"))
    (propagated-inputs (list go-github-com-posener-complete
                             go-github-com-mattn-go-isatty
                             go-github-com-fatih-color
                             go-github-com-bgentry-speakeasy
                             go-github-com-armon-go-radix
                             go-github-com-masterminds-sprig-v3))
    (home-page "https://github.com/hashicorp/cli")
    (synopsis "Go CLI Library")
    (description
     "cli is a library for implementing command-line interfaces in Go.  cli is the
library that powers the CLI for
@@url{https://github.com/hashicorp/packer,Packer},
@@url{https://github.com/hashicorp/consul,Consul},
@@url{https://github.com/hashicorp/vault,Vault},
@@url{https://github.com/hashicorp/terraform,Terraform},
@@url{https://github.com/hashicorp/nomad,Nomad}, and more.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-consul-api
  (package
    (name "go-github-com-hashicorp-consul-api")
    (version "1.31.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/consul")
             (commit (go-version->git-ref version
                                          #:subdir "api"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vc5wzg9h9r1hw4wb6vdqs6hm0j3wgbkmf5igjakwzmaq74dzj5m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/consul/api"
      #:unpack-path "github.com/hashicorp/consul"))
    (propagated-inputs (list go-golang-org-x-exp
                             go-github-com-stretchr-testify
                             go-github-com-mitchellh-mapstructure
                             go-github-com-hashicorp-serf
                             go-github-com-hashicorp-go-uuid
                             go-github-com-hashicorp-go-rootcerts
                             go-github-com-hashicorp-go-multierror
                             go-github-com-hashicorp-go-hclog
                             go-github-com-hashicorp-go-cleanhttp
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/hashicorp/consul")
    (synopsis "Consul API Client")
    (description
     "This package provides the @@code{api} package which provides programmatic access
to the full Consul API.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-cronexpr
  (package
    (name "go-github-com-hashicorp-cronexpr")
    (version "1.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/cronexpr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1isyxy5rh6g0v84mzs6aplq3nykh4l4jnfg5s5qp4vv3h7lccyap"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/cronexpr"))
    (home-page "https://github.com/hashicorp/cronexpr")
    (synopsis "Golang Cron expression parser")
    (description "Package cronexpr parses cron time expressions.")
    (license license:asl2.0)))

(define-public go-github-com-hashicorp-go-checkpoint
  (package
    (name "go-github-com-hashicorp-go-checkpoint")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-checkpoint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1g20nkcypl31hvhz3khznqp5xzdg8z4rcin00wvq6kqn5acvm5s1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-checkpoint"))
    (propagated-inputs (list go-github-com-hashicorp-go-uuid
                             go-github-com-hashicorp-go-cleanhttp))
    (home-page "https://github.com/hashicorp/go-checkpoint")
    (synopsis "Go Checkpoint Client")
    (description
     "@@url{http://checkpoint.hashicorp.com,Checkpoint} is an internal service at
Hashicorp that we use to check version information, broadcast security
bulletins, etc.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-go-cty-funcs
  (package
    (name "go-github-com-hashicorp-go-cty-funcs")
    (version "0.0.0-20241120183456-c51673e0b3dd")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-cty-funcs")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j6649drsa0mkxca21k9nbp5iz7ahm01knca55drp2rqm82z051y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-cty-funcs"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-zclconf-go-cty
                             go-github-com-mitchellh-go-homedir
                             go-github-com-google-uuid
                             go-github-com-bmatcuk-doublestar
                             go-github-com-apparentlymart-go-cidr))
    (home-page "https://github.com/hashicorp/go-cty-funcs")
    (synopsis #f)
    (description #f)
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-go-msgpack
  (package
    (name "go-github-com-hashicorp-go-msgpack")
    (version "0.5.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-msgpack")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fqmfx3dxnvb0d23cpn2xpd067pibwlchdc58ln8w6lznzrbzaan"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-msgpack"))
    (home-page "https://github.com/hashicorp/go-msgpack")
    (synopsis "go")
    (description "Collection of Open-Source Go libraries and tools.")
    (license license:bsd-3)))

(define-public go-github-com-hashicorp-go-msgpack-v2
  (package
    (name "go-github-com-hashicorp-go-msgpack-v2")
    (version "2.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-msgpack")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rg2nhd8wmq6djbk3glrcl54rb02qzx92jz5mj06r4q5p6c3rmhk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-msgpack/v2"
      #:unpack-path "github.com/hashicorp/go-msgpack"))
    (propagated-inputs (list go-gopkg-in-vmihailenco-msgpack-v2
                             go-gopkg-in-mgo-v2
                             go-golang-org-x-tools
                             go-github-com-tinylib-msgp
                             go-github-com-pquerna-ffjson
                             go-github-com-mailru-easyjson
                             go-github-com-json-iterator-go
                             go-github-com-davecgh-go-xdr
                             go-github-com-sereal-sereal-go-sereal))
    (home-page "https://github.com/hashicorp/go-msgpack")
    (synopsis "go-msgpack")
    (description "This repository contains the @@code{go-msgpack} library.")
    (license license:expat)))

(define-public go-github-com-hashicorp-go-plugin
  (package
    (name "go-github-com-hashicorp-go-plugin")
    (version "1.6.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-plugin")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ja6wvqpnm6wz78mmc1kahjv9kwdrvnx1b7sisaq3bvfb64b7wgi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-plugin"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-github-com-oklog-run
                             go-github-com-jhump-protoreflect
                             go-github-com-hashicorp-yamux
                             go-github-com-hashicorp-go-hclog
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/hashicorp/go-plugin")
    (synopsis "Go Plugin System over RPC")
    (description
     "The plugin package exposes functions and helpers for communicating to plugins
which are implemented as standalone binary applications.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-go-rootcerts
  (package
    (name "go-github-com-hashicorp-go-rootcerts")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-rootcerts")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06z1bxcnr0rma02b6r52m6y0q7niikqjs090vm1i8xi3scyaw1qa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-rootcerts"))
    (propagated-inputs (list go-github-com-mitchellh-go-homedir))
    (home-page "https://github.com/hashicorp/go-rootcerts")
    (synopsis "rootcerts")
    (description
     "Package rootcerts contains functions to aid in loading CA certificates for TLS
connections.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-go-secure-stdlib-parseutil
  (package
    (name "go-github-com-hashicorp-go-secure-stdlib-parseutil")
    (version "0.1.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-secure-stdlib")
             (commit (go-version->git-ref version
                                          #:subdir "parseutil"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00kj45axr9rz914z4kgmnnzdrpzh10w4vh7f6im7nmsz8y8kkig0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-secure-stdlib/parseutil"
      #:unpack-path "github.com/hashicorp/go-secure-stdlib"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-mitchellh-mapstructure
                             go-github-com-hashicorp-go-sockaddr
                             go-github-com-hashicorp-go-secure-stdlib-strutil))
    (home-page "https://github.com/hashicorp/go-secure-stdlib")
    (synopsis #f)
    (description #f)
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-go-secure-stdlib-strutil
  (package
    (name "go-github-com-hashicorp-go-secure-stdlib-strutil")
    (version "0.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/go-secure-stdlib")
             (commit (go-version->git-ref version
                                          #:subdir "strutil"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19jgdmw5snwfq4z8ifsqr917aj535x6fjkv7ma08qmibv1rrxs6s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/go-secure-stdlib/strutil"
      #:unpack-path "github.com/hashicorp/go-secure-stdlib"))
    (propagated-inputs (list go-github-com-ryanuber-go-glob))
    (home-page "https://github.com/hashicorp/go-secure-stdlib")
    (synopsis #f)
    (description #f)
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-hc-install
  (package
    (name "go-github-com-hashicorp-hc-install")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/hc-install")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xc41x8nhilbr35ara53ndzsni0vfs8hmmpimxxi64q3vpf44blg"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/hashicorp/hc-install"))
    (propagated-inputs (list go-golang-org-x-mod
                             go-github-com-hashicorp-logutils
                             go-github-com-hashicorp-go-version
                             go-github-com-hashicorp-go-retryablehttp
                             go-github-com-hashicorp-go-multierror
                             go-github-com-hashicorp-go-checkpoint
                             go-github-com-hashicorp-cli
                             go-github-com-google-go-cmp
                             go-github-com-go-git-go-git-v5
                             go-github-com-protonmail-go-crypto))
    (home-page "https://github.com/hashicorp/hc-install")
    (synopsis "hc-install")
    (description
     "An @@strong{experimental} Go module for downloading or locating @code{HashiCorp}
binaries, verifying signatures and checksums, and asserting version constraints.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-logutils
  (package
    (name "go-github-com-hashicorp-logutils")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/logutils")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "076wf4sh5p3f953ndqk1cc0x7jhmlqrxak9953rz79rcdw77rjvv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/logutils"))
    (home-page "https://github.com/hashicorp/logutils")
    (synopsis "logutils")
    (description
     "Package logutils augments the standard log package with levels.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-mdns
  (package
    (name "go-github-com-hashicorp-mdns")
    (version "1.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/mdns")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0i8ly6ixbfjy5gf8irdlda1p3314b2yzn9fxzkajm2bw348mfbfi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/mdns"))
    (propagated-inputs (list go-golang-org-x-net go-github-com-miekg-dns))
    (home-page "https://github.com/hashicorp/mdns")
    (synopsis "mdns")
    (description
     "Simple @code{mDNS} client/server library in Golang. @code{mDNS} or Multicast DNS
can be used to discover services on the local network without the use of an
authoritative DNS server.  This enables peer-to-peer discovery.  It is important
to note that many networks restrict the use of multicasting, which prevents
@code{mDNS} from functioning.  Notably, multicast cannot be used in any sort of
cloud, or shared infrastructure environment.  However it works well in most
office, home, or private infrastructure environments.")
    (license license:expat)))

(define-public go-github-com-hashicorp-memberlist
  (package
    (name "go-github-com-hashicorp-memberlist")
    (version "0.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/memberlist")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lvy3jazns9ga97xz86v5z0470mfvx51cmmx4cxiv55ykm5fbxjg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/memberlist"))
    (propagated-inputs (list go-github-com-stretchr-testify ; packaged
                             go-github-com-sean--seed ; packaged
                             go-github-com-miekg-dns ; packaged
                             go-github-com-hashicorp-go-sockaddr ; packaged
                             go-github-com-hashicorp-go-multierror ; packaged
                             go-github-com-hashicorp-go-msgpack-v2
                             go-github-com-google-btree ; packaged
                             go-github-com-armon-go-metrics
                             ))
    (home-page "https://github.com/hashicorp/memberlist")
    (synopsis "memberlist")
    (description
     "memberlist is a library that manages cluster membership and member failure
detection using a gossip based protocol.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-nomad-api
  (package
    (name "go-github-com-hashicorp-nomad-api")
    (version "0.0.0-20241230142110-06c8244c0db9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/nomad")
             (commit (go-version->git-ref version
                                          #:subdir "api"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s2salxy9h60bznc81b765wmzh5k1375yihqhq4ikcccsfrprhdk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/nomad/api"
      #:unpack-path "github.com/hashicorp/nomad"))
    (propagated-inputs (list go-github-com-shoenig-test
                             go-github-com-mitchellh-mapstructure
                             go-github-com-mitchellh-go-testing-interface
                             go-github-com-hashicorp-go-rootcerts
                             go-github-com-hashicorp-go-multierror
                             go-github-com-hashicorp-go-cleanhttp
                             go-github-com-hashicorp-cronexpr
                             go-github-com-gorilla-websocket
                             go-github-com-felixge-httpsnoop ; packaged
                             go-github-com-docker-go-units))
    (home-page "https://github.com/hashicorp/nomad")
    (synopsis #f)
    (description #f)
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-raft
  (package
    (name "go-github-com-hashicorp-raft")
    (version "1.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/raft")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "190370344qhimkzmczdxcx7wg1h124r9qx0lr8978rf2x59ac2kk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/raft"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-hashicorp-go-msgpack-v2
                             go-github-com-hashicorp-go-hclog
                             go-github-com-armon-go-metrics))
    (home-page "https://github.com/hashicorp/raft")
    (synopsis "raft")
    (description
     "raft is a @@url{http://www.golang.org,Go} library that manages a replicated log
and can be used with an FSM to manage replicated state machines.  It is a
library for providing
@@url{http://en.wikipedia.org/wiki/Consensus_(computer_science),consensus}.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-raft-boltdb
  (package
    (name "go-github-com-hashicorp-raft-boltdb")
    (version "0.0.0-20241202213821-f9dd2ba30efd")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/raft-boltdb")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lnym9w9yf1hg77a61bfd7xffq188hzakrhfl6sgw7dbqnly6l5v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/raft-boltdb"))
    (propagated-inputs (list go-github-com-hashicorp-raft
                             go-github-com-hashicorp-go-msgpack
                             go-github-com-boltdb-bolt
                             go-github-com-armon-go-metrics))
    (home-page "https://github.com/hashicorp/raft-boltdb")
    (synopsis "raft-boltdb")
    (description
     "This repository provides the @@code{raftboltdb} package.  The package exports
the @@code{@code{BoltStore}} which is an implementation of both a
@@code{@code{LogStore}} and @@code{@code{StableStore}}.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-raft-boltdb-v2
  (package
    (name "go-github-com-hashicorp-raft-boltdb-v2")
    (version "2.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/raft-boltdb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vaprsr4ha9w64r582cghgh3y85bmd4lm93fki9i3ygzdkvjvsbx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/raft-boltdb/v2"
      #:unpack-path "github.com/hashicorp/raft-boltdb"))
    (propagated-inputs (list go-go-etcd-io-bbolt
                             go-github-com-hashicorp-raft-boltdb
                             go-github-com-hashicorp-go-msgpack-v2
                             go-github-com-boltdb-bolt
                             go-github-com-armon-go-metrics))
    (home-page "https://github.com/hashicorp/raft-boltdb")
    (synopsis "raft-boltdb/v2")
    (description
     "This implementation uses the maintained version of @code{BoltDB},
@@url{https://github.com/etcd-io/bbolt,BBolt}.  This is the primary version of
@@code{raft-boltdb} and should be used whenever possible.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-serf
  (package
    (name "go-github-com-hashicorp-serf")
    (version "0.10.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/serf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08f81izz00bphkh6zfl1y4hy0dh3g05da01q6wirayz02xcr5igi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/serf"))
    (propagated-inputs (list go-github-com-ryanuber-columnize
                             go-github-com-mitchellh-mapstructure
                             go-github-com-mitchellh-cli
                             go-github-com-hashicorp-memberlist
                             go-github-com-hashicorp-mdns
                             go-github-com-hashicorp-logutils
                             go-github-com-hashicorp-go-syslog
                             go-github-com-hashicorp-go-msgpack
                             go-github-com-armon-go-metrics
                             go-github-com-armon-circbuf))
    (home-page "https://github.com/hashicorp/serf")
    (synopsis "Serf")
    (description
     "Serf is a decentralized solution for service discovery and orchestration that is
lightweight, highly available, and fault tolerant.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-terraform-exec
  (package
    (name "go-github-com-hashicorp-terraform-exec")
    (version "0.21.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/terraform-exec")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bi4zygg5lvnd9g4nwh2v6239019zlciyg5irwa09xzdjwpad8pj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/terraform-exec"))
    (propagated-inputs (list go-github-com-zclconf-go-cty-debug
                             go-github-com-zclconf-go-cty
                             go-github-com-hashicorp-terraform-json
                             go-github-com-hashicorp-hc-install
                             go-github-com-hashicorp-go-version
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/hashicorp/terraform-exec")
    (synopsis "terraform-exec")
    (description
     "This package provides a Go module for constructing and running
@@url{https://terraform.io,Terraform} CLI commands.  Structured return values
use the data types defined in
@@url{https://github.com/hashicorp/terraform-json,terraform-json}.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-terraform-json
  (package
    (name "go-github-com-hashicorp-terraform-json")
    (version "0.24.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/terraform-json")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "129krvb771a1fz5z3i53rrsahs34xrax79mzfq4q7pxjz3w6r4a8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/terraform-json"))
    (propagated-inputs (list go-github-com-zclconf-go-cty-debug
                             go-github-com-zclconf-go-cty
                             go-github-com-sebdah-goldie
                             go-github-com-mitchellh-copystructure
                             go-github-com-hashicorp-go-version
                             go-github-com-google-go-cmp
                             go-github-com-davecgh-go-spew))
    (home-page "https://github.com/hashicorp/terraform-json")
    (synopsis "terraform-json")
    (description
     "Package tfjson is a de-coupled helper library containing types for the plan
format output by \"terraform show -json\" command.  This command is designed for
the export of Terraform plan data in a format that can be easily processed by
tools unrelated to Terraform.")
    (license license:mpl2.0)))

(define-public go-github-com-hashicorp-vault-api
  (package
    (name "go-github-com-hashicorp-vault-api")
    (version "1.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hashicorp/vault")
             (commit (go-version->git-ref version
                                          #:subdir "api"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06jlqxynhh42adkr9hazhahrx6vmz4r6j776m1dlpi86h0sd0srl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hashicorp/vault/api"
      #:unpack-path "github.com/hashicorp/vault"))
    (propagated-inputs (list go-golang-org-x-time
                        go-golang-org-x-net
                        go-github-com-stretchr-testify
                        go-github-com-natefinch-atomic ; packaged
                        go-github-com-mitchellh-mapstructure
                        go-github-com-mitchellh-go-homedir
                        go-github-com-hashicorp-hcl
                        go-github-com-hashicorp-go-secure-stdlib-strutil
                        go-github-com-hashicorp-go-secure-stdlib-parseutil
                        go-github-com-hashicorp-go-rootcerts
                        go-github-com-hashicorp-go-retryablehttp
                        go-github-com-hashicorp-go-multierror
                        go-github-com-hashicorp-go-hclog
                        go-github-com-hashicorp-go-cleanhttp
                        go-github-com-hashicorp-errwrap
                        go-github-com-go-test-deep
                        go-github-com-go-jose-go-jose-v4 ; packaged
                        go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://github.com/hashicorp/vault")
    (synopsis "Vault API")
    (description
     "This provides the @@code{github.com/hashicorp/vault/api} package which contains
code useful for interacting with a Vault server.")
    (license license:mpl2.0)))

(define-public go-github-com-hdevalence-ed25519consensus
  (package
    (name "go-github-com-hdevalence-ed25519consensus")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hdevalence/ed25519consensus")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dmkl3hnv0h0r4apvs34jf1cz4wcj34cksiiij4p1z4kqcldwdi9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hdevalence/ed25519consensus"))
    (propagated-inputs (list go-filippo-io-edwards25519))
    (home-page "https://github.com/hdevalence/ed25519consensus")
    (synopsis "Ed25519 for consensus-critical contexts")
    (description
     "Package ed25519consensus implements Ed25519 verification according to ZIP215.")
    (license license:bsd-3)))

(define-public go-github-com-heimdalr-dag
  (package
    (name "go-github-com-heimdalr-dag")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/heimdalr/dag")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13hvdhld450bylhhfhnr8bjwbhjgdf3v6n64yxdic0lzi0b93ajb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/heimdalr/dag"))
    (propagated-inputs (list go-github-com-google-uuid
                             go-github-com-go-test-deep
                             go-github-com-emirpasic-gods))
    (home-page "https://github.com/heimdalr/dag")
    (synopsis "dag")
    (description "Package dag implements directed acyclic graphs (DAGs).")
    (license license:bsd-3)))

(define-public go-github-com-henrybear327-go-proton-api
  (package
    (name "go-github-com-henrybear327-go-proton-api")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/henrybear327/go-proton-api")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0065mhbnhc973avqmd646gg2p3hdsj9q2gzrl0z6f9k18b4pf00j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/henrybear327/go-proton-api"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-text
                             go-golang-org-x-net
                             go-golang-org-x-exp
                             go-go-uber-org-goleak
                             go-github-com-urfave-cli-v2
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-google-uuid
                             go-github-com-go-resty-resty-v2
                             go-github-com-gin-gonic-gin
                             go-github-com-emersion-go-vcard
                             go-github-com-emersion-go-message
                             go-github-com-bradenaw-juniper
                             go-github-com-puerkitobio-goquery
                             go-github-com-protonmail-gopenpgp-v2
                             go-github-com-protonmail-go-srp
                             go-github-com-protonmail-go-crypto
                             go-github-com-protonmail-gluon
                             go-github-com-masterminds-semver-v3))
    (home-page "https://github.com/henrybear327/go-proton-api")
    (synopsis "Go Proton API")
    (description
     "Package proton implements types for accessing the Proton API.")
    (license license:expat)))

(define-public go-github-com-henrybear327-proton-api-bridge
  (package
    (name "go-github-com-henrybear327-proton-api-bridge")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/henrybear327/Proton-API-Bridge")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0721g2wdgm13vlg6sl4v0a7mp6sfl6fpaqv4zc3nq0y7a6yp0976"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/henrybear327/Proton-API-Bridge"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-github-com-relvacode-iso8601
                             go-github-com-henrybear327-go-proton-api
                             go-github-com-protonmail-gopenpgp-v2
                             go-github-com-protonmail-gluon))
    (home-page "https://github.com/henrybear327/Proton-API-Bridge")
    (synopsis "Proton API Bridge")
    (description
     "Thanks to Proton open sourcing
@@url{https://github.com/@code{ProtonMail/go-proton-api,proton-go-api}} and the
web, @code{iOS}, and Android client codebases, we don't need to completely
reverse engineer the APIs by observing the web client traffic!")
    (license license:expat)))

(define-public go-github-com-hexdigest-gowrap
  (package
    (name "go-github-com-hexdigest-gowrap")
    (version "1.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hexdigest/gowrap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nnvg6x5qx48fsrx0v3fi1g78xhj5i13nv2fd4qz379ps7zjgjrq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/hexdigest/gowrap"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-golang-org-x-text
                             go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-gojuno-minimock-v3
                             go-github-com-masterminds-sprig-v3))
    (home-page "https://github.com/hexdigest/gowrap")
    (synopsis "GoWrap")
    (description
     "@code{GoWrap} is a command line tool that generates decorators for Go interface
types using simple templates.  With @code{GoWrap} you can easily add metrics,
tracing, fallbacks, pools, and many other features into your existing code in a
few seconds.")
    (license license:expat)))

(define-public go-github-com-hinshun-vt10x
  (package
    (name "go-github-com-hinshun-vt10x")
    (version "0.0.0-20220301184237-5011da428d02")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hinshun/vt10x")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pzdwwbzxrsqjb8xfzmfpkyb1gbcszrrimr70cz75jjk2535r26b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hinshun/vt10x"))
    (home-page "https://github.com/hinshun/vt10x")
    (synopsis "vt10x")
    (description
     "Package terminal is a vt10x terminal emulation backend, influenced largely by
st, rxvt, xterm, and @code{iTerm} as reference.  Use it for terminal muxing, a
terminal emulation frontend, or wherever else you need terminal emulation.")
    (license license:expat)))

(define-public go-github-com-hjfreyer-taglib-go
  (package
    (name "go-github-com-hjfreyer-taglib-go")
    (version "0.0.0-20230511211649-38a11b8e3726")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hjfreyer/taglib-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18z93wjd7c5ghpbb6jklkxzf371a2xlvl6bapjmpzq3smqnxqjmr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hjfreyer/taglib-go"))
    (home-page "https://github.com/hjfreyer/taglib-go")
    (synopsis "taglib-go")
    (description
     "Apache-licensed audio tag decoding library written in pure go.  Designed to
mirror the structure of @@url{http://taglib.github.io/,taglib} without being a
direct port.")
    (license license:asl2.0)))

(define-public go-github-com-hokaccha-go-prettyjson
  (package
    (name "go-github-com-hokaccha-go-prettyjson")
    (version "0.0.0-20211117102719-0474bc63780f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hokaccha/go-prettyjson")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1njd6d4j8fqwl9k6910288a7gd54xshp8wya7qlrdwyn2kn6ig2c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hokaccha/go-prettyjson"))
    (home-page "https://github.com/hokaccha/go-prettyjson")
    (synopsis "prettyjson")
    (description "Package prettyjson provides JSON pretty print.")
    (license license:expat)))

(define-public go-github-com-howeyc-gopass
  (package
    (name "go-github-com-howeyc-gopass")
    (version "0.0.0-20210920133722-c8aef6fb66ef")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/howeyc/gopass")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03rv6xim9pgv26zcyvh35q3nrshm4xdrx62npa6s6d28wybalmnd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/howeyc/gopass"))
    (home-page "https://github.com/howeyc/gopass")
    (synopsis "getpasswd in Go")
    (description "No longer maintained.  You should just use
@@url{https://golang.org/x/crypto/ssh/terminal,terminal}.")
    (license license:isc)))

(define-public go-github-com-huaweicloud-huaweicloud-sdk-go-v3
  (package
    (name "go-github-com-huaweicloud-huaweicloud-sdk-go-v3")
    (version "0.1.129")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/huaweicloud/huaweicloud-sdk-go-v3")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mczacgqxhjdc5kkd9dbfah2c9690maj1qymwfjbb4rg53vhd9cn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/huaweicloud/huaweicloud-sdk-go-v3"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-gopkg-in-ini-v1
                             go-golang-org-x-crypto
                             go-go-mongodb-org-mongo-driver
                             go-github-com-tjfoc-gmsm
                             go-github-com-stretchr-testify
                             go-github-com-json-iterator-go))
    (home-page "https://github.com/huaweicloud/huaweicloud-sdk-go-v3")
    (synopsis "Requirements")
    (description "Package sdk_doc created for dependence ensure.")
    (license license:expat))) ; check-license

(define-public go-github-com-hudl-fargo
  (package
    (name "go-github-com-hudl-fargo")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hudl/fargo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18pk1b5yybkghrjxskgssz8gzpv37k8w7gk0cldhcnffx85rqi0m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hudl/fargo"))
    (propagated-inputs (list go-gopkg-in-gcfg-v1
                             go-github-com-smartystreets-goconvey
                             go-github-com-op-go-logging
                             go-github-com-miekg-dns
                             go-github-com-franela-goreq
                             go-github-com-clbanning-mxj
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://github.com/hudl/fargo")
    (synopsis "fargo")
    (description
     "Netflix Eureka client in golang.  Named for the show Eureka.")
    (license license:expat)))

(define-public go-github-com-hugelgupf-go-shlex
  (package
    (name "go-github-com-hugelgupf-go-shlex")
    (version "0.0.0-20200702092117-c80c9d0918fa")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hugelgupf/go-shlex")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02yx22myaz6w05m5xxfivbzxmljj1wzcj6hnni52jm44xc79hqp7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hugelgupf/go-shlex"))
    (home-page "https://github.com/hugelgupf/go-shlex")
    (synopsis "go-shlex")
    (description
     "Package shlex is a Unicode-supporting POSIX command-line argument parser.")
    (license license:bsd-3)))

(define-public go-github-com-hugelgupf-p9
  (package
    (name "go-github-com-hugelgupf-p9")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hugelgupf/p9")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ylbqh4in95xbj1pmdnxk3rhz0956gqg1m8sbivl30lyr6cmzphb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hugelgupf/p9"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-golang-org-x-sys ; packaged
                             go-golang-org-x-exp ; packaged
                             go-github-com-u-root-uio ; packaed
                             go-github-com-u-root-u-root
                             go-github-com-hugelgupf-vmtest
                             go-github-com-hugelgupf-socketpair ; packaged
                             ))
    (home-page "https://github.com/hugelgupf/p9")
    (synopsis "p9")
    (description
     "p9 is a Golang 9P2000.L client and server originally written for @code{gVisor}.
p9 supports Windows, BSD, and Linux on most Go-available architectures.")
    (license license:asl2.0)))

(define-public go-github-com-hugelgupf-vmtest
  (package
    (name "go-github-com-hugelgupf-vmtest")
    (version "0.0.0-20240307030256-5d9f3d34a58d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/hugelgupf/vmtest")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dd2pjyylbzs3n3388vyik6gsazpar3c7sx554mjvm71s38knfxq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/hugelgupf/vmtest"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-github-com-u-root-uio ; packaed
                             go-github-com-u-root-u-root
                             go-github-com-u-root-mkuimage
                             go-github-com-u-root-gobusybox-src
                             go-github-com-creack-pty
                             go-github-com-netflix-go-expect))
    (home-page "https://github.com/hugelgupf/vmtest")
    (synopsis "vmtest")
    (description "vmtest is a Go API for launching QEMU VMs.")
    (license license:bsd-3)))

(define-public go-github-com-huin-goutil
  (package
    (name "go-github-com-huin-goutil")
    (version "0.0.0-20170803182201-1ca381bf3150")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/huin/goutil")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0alhyacsfqic2wxyqn4gvk9wzjl4pkmy8rhvqjk84xsghgx5xf12"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/huin/goutil"))
    (home-page "https://github.com/huin/goutil")
    (synopsis #f)
    (description
     "goutil is a collection of misc Go utility code that is potentially useful across
multiple projects, and has therefore been factored out.")
    (license license:bsd-2)))

(define-public go-github-com-humanlogio-api-go
  (package
    (name "go-github-com-humanlogio-api-go")
    (version "0.0.0-20250127064259-48177538af31")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/humanlogio/api")
             (commit (go-version->git-ref version
                                          #:subdir "go"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "055028x1rfnsnqvrx3561hr3y0kmw1aknggznbrz073aaafrnrpp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/humanlogio/api/go"
      #:unpack-path "github.com/humanlogio/api"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-github-com-blang-semver
                             go-connectrpc-com-connect))
    (home-page "https://github.com/humanlogio/api")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-ibm-sarama
  (package
    (name "go-github-com-ibm-sarama")
    (version "1.44.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/IBM/sarama")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1llssjb1fyk33y7g2brgk100fjcmizn7vyczh6gvi985ry0x663b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/IBM/sarama"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-golang-org-x-net
                             go-github-com-stretchr-testify
                             go-github-com-rcrowley-go-metrics
                             go-github-com-pierrec-lz4-v4
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-jcmturner-gokrb5-v8
                             go-github-com-jcmturner-gofork
                             go-github-com-hashicorp-go-multierror
                             go-github-com-fortytw2-leaktest
                             go-github-com-eapache-queue ; packaged
                             go-github-com-eapache-go-xerial-snappy
                             go-github-com-eapache-go-resiliency
                             go-github-com-davecgh-go-spew))
    (home-page "https://github.com/IBM/sarama")
    (synopsis "sarama")
    (description
     "Package sarama is a pure Go client library for dealing with Apache Kafka
(versions 0.8 and later).  It includes a high-level API for easily producing and
consuming messages, and a low-level API for controlling bytes on the wire when
the high-level API is insufficient.  Usage examples for the high-level APIs are
provided inline with their full documentation.")
    (license license:expat)))

(define-public go-github-com-ibm-watsonx-go
  (package
    (name "go-github-com-ibm-watsonx-go")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/IBM/watsonx-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jyhrbsm3kyk8lb0sasn1qi03rka19msvc3s25zf4n84zilwj0gl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/IBM/watsonx-go"))
    (home-page "https://github.com/IBM/watsonx-go")
    (synopsis "watsonx-go")
    (description
     "@@code{watsonx-go} is a @@url{https://www.ibm.com/watsonx,watsonx} Client for
Go.")
    (license license:asl2.0)))

(define-public go-github-com-igungor-gofakes3
  (package
    (name "go-github-com-igungor-gofakes3")
    (version "0.0.18")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/igungor/gofakes3")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "136wvgz8d1982ns3vqqlvk3r7cbns7b0givwcrala562sd87yqka"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/igungor/gofakes3"))
    (propagated-inputs (list go-gopkg-in-mgo-v2
                             go-golang-org-x-tools
                             go-go-etcd-io-bbolt
                             go-github-com-spf13-afero
                             go-github-com-shabbyrobe-gocovmerge
                             go-github-com-ryszard-goskiplist
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/igungor/gofakes3")
    (synopsis "AWS (GOFAKE)S3")
    (description
     "AWS S3 fake server and testing library for extensive S3 test integrations.
Either by running a test-server, e.g. for testing of AWS Lambda functions
accessing S3.  Or, to have a simple and convencience S3 mock- and test-server.")
    (license license:expat)))

(define-public go-github-com-iij-doapi
  (package
    (name "go-github-com-iij-doapi")
    (version "0.0.0-20190504054126-0bbf12d6d7df")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/iij/doapi")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s47pyh68yaj6ccsd0xhr5hqqx03irjippxivhz84lflcgzwaa5m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/iij/doapi"))
    (home-page "https://github.com/iij/doapi")
    (synopsis "Golang binding for DO API")
    (description "Package doapi : DO APIクライアントモジュール.")
    (license license:asl2.0)))

(define-public go-github-com-ikawaha-kagome-v2
  (package
    (name "go-github-com-ikawaha-kagome-v2")
    (version "2.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ikawaha/kagome")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1n9ly8by5qcn9gm9c5njfqm2k2779wy6clb8mkb0q75y4f3kq5z3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ikawaha/kagome/v2"
      #:unpack-path "github.com/ikawaha/kagome"))
    (propagated-inputs (list go-github-com-ikawaha-kagome-dict-uni
                             go-github-com-ikawaha-kagome-dict-ipa
                             go-github-com-ikawaha-kagome-dict))
    (home-page "https://github.com/ikawaha/kagome")
    (synopsis "Kagome v2")
    (description
     "Kagome is an open source Japanese morphological analyzer written in pure golang.")
    (license license:expat)))

(define-public go-github-com-ikawaha-kagome-dict
  (package
    (name "go-github-com-ikawaha-kagome-dict")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ikawaha/kagome-dict")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j8ym7r2yhxk37pn3mdl7bhg2gzj2vddzhnjx3xvsvkbps31cdhm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ikawaha/kagome-dict"))
    (propagated-inputs (list go-golang-org-x-text))
    (home-page "https://github.com/ikawaha/kagome-dict")
    (synopsis "Dictionary Library for Kagome v2")
    (description
     "This repository contains a dictionary library and dictionary data for
@@url{https://github.com/ikawaha/kagome,kagome v2}.  Each dictionary data is
maintained as a separate module.")
    (license license:expat)))

(define-public go-github-com-ikawaha-kagome-dict-ipa
  (package
    (name "go-github-com-ikawaha-kagome-dict-ipa")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ikawaha/kagome-dict")
             (commit (go-version->git-ref version
                                          #:subdir "ipa"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j8ym7r2yhxk37pn3mdl7bhg2gzj2vddzhnjx3xvsvkbps31cdhm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ikawaha/kagome-dict/ipa"
      #:unpack-path "github.com/ikawaha/kagome-dict"))
    (propagated-inputs (list go-github-com-ikawaha-kagome-dict))
    (home-page "https://github.com/ikawaha/kagome-dict")
    (synopsis "A Dictionary of Kagome v2")
    (description
     "This package provides a dictionary package of
@@url{http://github.com/ikawaha/kagome/tree/v2,kagome v2}.  This software
includes a binary and/or source version of data from.")
    (license license:expat)))

(define-public go-github-com-ikawaha-kagome-dict-ko
  (package
    (name "go-github-com-ikawaha-kagome-dict-ko")
    (version "0.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ikawaha/kagome-dict-ko")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0djynz2xw5ny1wbjm81xpgdgy3xlb7xafnqj173p9wh74343p462"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ikawaha/kagome-dict-ko"))
    (propagated-inputs (list go-github-com-ikawaha-kagome-dict))
    (home-page "https://github.com/ikawaha/kagome-dict-ko")
    (synopsis "A Dictionary of Kagome Japanese Morphological Analyzer v2")
    (description
     "This package provides a dictionary package of
@@url{http://github.com/ikawaha/kagome/tree/v2,kagome v2}.  This software
includes a binary and/or source version of data from.")
    (license license:expat)))

(define-public go-github-com-ikawaha-kagome-dict-uni
  (package
    (name "go-github-com-ikawaha-kagome-dict-uni")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ikawaha/kagome-dict")
             (commit (go-version->git-ref version
                                          #:subdir "uni"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j8ym7r2yhxk37pn3mdl7bhg2gzj2vddzhnjx3xvsvkbps31cdhm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ikawaha/kagome-dict/uni"
      #:unpack-path "github.com/ikawaha/kagome-dict"))
    (propagated-inputs (list go-github-com-ikawaha-kagome-dict))
    (home-page "https://github.com/ikawaha/kagome-dict")
    (synopsis "A Dictionary of Kagome v2")
    (description
     "This package provides a dictionary package of
@@url{http://github.com/ikawaha/kagome/tree/v2,kagome v2}.  This software
includes a binary and/or source version of data from.")
    (license license:expat)))

(define-public go-github-com-ikawaha-kagome-ipadic
  (package
    (name "go-github-com-ikawaha-kagome-ipadic")
    (version "1.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ikawaha/kagome.ipadic")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18b4lw477i0g4pg41wxx5hwprhk6vpqrjysr7f137l665wv0cf2h"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ikawaha/kagome.ipadic"))
    (home-page "https://github.com/ikawaha/kagome.ipadic")
    (synopsis "Kagome Japanese Morphological Analyzer (IPADic only)")
    (description
     "kagome.ipadic is a small version of
@@url{https://github.com/ikawaha/kagome,kagome}.  This package supports the
IPADic only.")
    (license license:asl2.0)))

(define-public go-github-com-illarion-gonotify-v2
  (package
    (name "go-github-com-illarion-gonotify-v2")
    (version "2.0.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/illarion/gonotify")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17gdj71gif3zj48m97qf7aycnypxhca8d71fk43pj4zddgx4lh07"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/illarion/gonotify/v2"
      #:unpack-path "github.com/illarion/gonotify"))
    (home-page "https://github.com/illarion/gonotify")
    (synopsis "Gonotify")
    (description "Simple Golang inotify wrapper.")
    (license license:expat)))

;; XXX Redirects to https://github.com/darccio/mergo
(define-public go-github-com-imdario-mergo
  (package
    (name "go-github-com-imdario-mergo")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/darccio/mergo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0v12vc9bmqq89k4y60a8ykmv85hpa7nh73sn9b7ars143pxvmhf1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/imdario/mergo"))
    (propagated-inputs (list go-gopkg-in-yaml-v3))
    (home-page "https://github.com/imdario/mergo")
    (synopsis "Mergo")
    (description
     "This package provides a helper to merge structs and maps in Golang.  Useful for
configuration default values, avoiding messy if-statements.")
    (license license:bsd-3)))

(define-public go-github-com-imkira-go-interpol
  (package
    (name "go-github-com-imkira-go-interpol")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/imkira/go-interpol")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "180h3pf2p0pch6hmqf45wk7wd87md83d3p122f8ll43x5nja5mph"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/imkira/go-interpol"))
    (home-page "https://github.com/imkira/go-interpol")
    (synopsis "interpol")
    (description
     "Package interpol provides utility functions for doing format-string like string
interpolation using named parameters.  Currently, a template only accepts
variable placeholders delimited by brace characters (eg. \"Hello {foo} {bar}\").")
    (license license:expat)))

(define-public go-github-com-in-toto-attestation
  (package
    (name "go-github-com-in-toto-attestation")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/in-toto/attestation")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "058sx3fksvls693gv11l4k3g7h93ils4y4gl128fna2a6y5r6jw9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/in-toto/attestation"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/in-toto/attestation")
    (synopsis "in-toto Attestation Framework")
    (description
     "The in-toto Attestation Framework provides a specification for generating
verifiable claims about any aspect of how a piece of software is produced.
Consumers or users of software can then validate the origins of the software,
and establish trust in its supply chain, using in-toto attestations.")
    (license license:asl2.0)))

(define-public go-github-com-in-toto-in-toto-golang
  (package
    (name "go-github-com-in-toto-in-toto-golang")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/in-toto/in-toto-golang")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ravkfalyzwd57x7hyc243x8dc7g2cb9xjka1hprpnfz2m33qpy0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/in-toto/in-toto-golang"))
    (propagated-inputs (list go-google-golang-org-grpc
                        go-golang-org-x-sys
                        go-github-com-stretchr-testify
                        go-github-com-spiffe-go-spiffe-v2
                        go-github-com-spf13-cobra
                        go-github-com-shibumi-go-pathspec
                        go-github-com-secure-systems-lab-go-securesystemslib
                        go-github-com-google-go-cmp))
    (home-page "https://github.com/in-toto/in-toto-golang")
    (synopsis "Go implementation of in-toto")
    (description
     "Go implementation of the
@@url{https://github.com/in-toto/docs/blob/master/in-toto-spec.md,in-toto
specification}.")
    (license license:asl2.0)))

(define-public go-github-com-influxdata-influxdb1-client
  (package
    (name "go-github-com-influxdata-influxdb1-client")
    (version "0.0.0-20220302092344-a9ab5670611c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/influxdata/influxdb1-client")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0chyjhbqp7wqx3ynfsy8a9zf1c7a03ywzgm0p3yalz9gsll7cnv8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/influxdata/influxdb1-client"))
    (home-page "https://github.com/influxdata/influxdb1-client")
    (synopsis "influxdb1-clientv2")
    (description
     "Package client implements a now-deprecated client for @code{InfluxDB}; use
github.com/influxdata/influxdb1-client/v2 instead.")
    (license license:expat)))

(define-public go-github-com-infobloxopen-go-trees
  (package
    (name "go-github-com-infobloxopen-go-trees")
    (version "0.0.0-20221216143356-66ceba885ebc")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/infobloxopen/go-trees")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14p5fhkdjm1b1wkjf7qrdwy1mgavvajxbzkrga3hrzy9s56wh34r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/infobloxopen/go-trees"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-github-com-pmezard-go-difflib))
    (home-page "https://github.com/infobloxopen/go-trees")
    (synopsis "go-trees")
    (description "go packages for radix and other trees.")
    (license license:asl2.0)))

(define-public go-github-com-infobloxopen-infoblox-go-client
  (package
    (name "go-github-com-infobloxopen-infoblox-go-client")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/infobloxopen/infoblox-go-client")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07v4w536n39y86rmibiwm09dm5kqamz0vy4x9idbamqj7a5q4wg5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/infobloxopen/infoblox-go-client"))
    (home-page "https://github.com/infobloxopen/infoblox-go-client")
    (synopsis "Infoblox Go Client")
    (description
     "An Infoblox NIOS WAPI client library in Golang.  The library enables us to do a
CRUD oprations on NIOS Objects.")
    (license license:asl2.0)))

(define-public go-github-com-integrii-flaggy
  (package
    (name "go-github-com-integrii-flaggy")
    (version "1.5.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/integrii/flaggy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qn55pn0c75bd4gm1fd2in0qp9fllfabwzn0qs994frd32cfz7h3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/integrii/flaggy"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://github.com/integrii/flaggy")
    (synopsis "Installation")
    (description
     "Package flaggy is a input flag parsing package that supports recursive
subcommands, positional values, and any-position flags without unnecessary
complexeties.")
    (license license:unlicense)))

(define-public go-github-com-intel-go-cpuid
  (package
    (name "go-github-com-intel-go-cpuid")
    (version "0.0.0-20240823053301-6c0fd109086b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/intel-go/cpuid")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1imh58p3aas6m02p44s10zb55sx0mnq044nczadb4l8384y6m46i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/intel-go/cpuid"))
    (home-page "https://github.com/intel-go/cpuid")
    (synopsis "cpuid")
    (description
     "Package cpuid provides access to the information available through the CPUID
instruction.  All information is gathered during package initialization phase so
package's public interface doesn't call CPUID instruction.")
    (license license:bsd-3)))

(define-public go-github-com-intel-goresctrl
  (package
    (name "go-github-com-intel-goresctrl")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/intel/goresctrl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "164qjx8lnjmb8c1vx1z80wyi1s8p03vglq1xfhszi7p88mbgmiwh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/intel/goresctrl"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-k8s-io-apimachinery
                             go-golang-org-x-sys
                             go-golang-org-x-exp
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/intel/goresctrl")
    (synopsis "Go Resource Control")
    (description
     "The goresctrl library provides Go interface to manage following resources.")
    (license license:asl2.0)))

(define-public go-github-com-invopop-jsonschema
  (package
    (name "go-github-com-invopop-jsonschema")
    (version "0.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/invopop/jsonschema")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0badhbc4k9pb01ag819r1014wzk3abcljnyky72rb96wbrhxb5iv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/invopop/jsonschema"))
    (propagated-inputs (list go-github-com-wk8-go-ordered-map-v2
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/invopop/jsonschema")
    (synopsis "Go JSON Schema Reflection")
    (description
     "Package jsonschema uses reflection to generate JSON Schemas from Go types [1].")
    (license license:expat)))

(define-public go-github-com-ionos-cloud-sdk-go-v6
  (package
    (name "go-github-com-ionos-cloud-sdk-go-v6")
    (version "6.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ionos-cloud/sdk-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15ccibf73rkhvb40xxm8118dkdyvdb8bxqzc0qrdqgaximpnrd7x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ionos-cloud/sdk-go/v6"
      #:unpack-path "github.com/ionos-cloud/sdk-go"))
    (propagated-inputs (list go-golang-org-x-oauth2))
    (home-page "https://github.com/ionos-cloud/sdk-go")
    (synopsis "Go API client for ionoscloud")
    (description
     "IONOS Enterprise-grade Infrastructure as a Service (@code{IaaS}) solutions can
be managed through the Cloud API, in addition or as an alternative to the \"Data
Center Designer\" (DCD) browser-based tool.")
    (license license:asl2.0)))

(define-public go-github-com-iris-contrib-go-uuid
  (package
    (name "go-github-com-iris-contrib-go-uuid")
    (version "2.0.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/iris-contrib/go.uuid")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nc0ggn0a6bcwdrwinnx3z6889x65c20a2dwja0n8can3xblxs35"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/iris-contrib/go.uuid"))
    (home-page "https://github.com/iris-contrib/go.uuid")
    (synopsis "UUID package for Go language")
    (description
     "Package uuid provides implementation of Universally Unique Identifier (UUID).
Supported versions are 1, 3, 4 and 5 (as specified in
@@url{https://rfc-editor.org/rfc/rfc4122.html,RFC 4122}) and version 2 (as
specified in DCE 1.1).")
    (license license:expat)))

(define-public go-github-com-iris-contrib-httpexpect-v2
  (package
    (name "go-github-com-iris-contrib-httpexpect-v2")
    (version "2.15.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/iris-contrib/httpexpect")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lnq6g6kdc0avgn114dgabccsa5hi03iy24c4r9595v7qs6nhq3v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/iris-contrib/httpexpect/v2"
      #:unpack-path "github.com/iris-contrib/httpexpect"))
    (propagated-inputs (list go-moul-io-http2curl-v2 ; packaged
                             go-golang-org-x-net
                             go-github-com-yudai-gojsondiff
                             go-github-com-yalp-jsonpath
                             go-github-com-xeipuuv-gojsonschema
                             go-github-com-stretchr-testify
                             go-github-com-sanity-io-litter
                             go-github-com-mitchellh-go-wordwrap
                             go-github-com-mattn-go-isatty
                             go-github-com-imkira-go-interpol
                             go-github-com-gorilla-websocket
                             go-github-com-google-go-querystring
                             go-github-com-gobwas-glob
                             go-github-com-fatih-structs ; packaged
                             go-github-com-fatih-color
                             go-github-com-ajg-form))
    (home-page "https://github.com/iris-contrib/httpexpect")
    (synopsis "HTTP Expect")
    (description
     "Package httpexpect helps with end-to-end HTTP and REST API testing.")
    (license license:expat)))

(define-public go-github-com-iris-contrib-schema
  (package
    (name "go-github-com-iris-contrib-schema")
    (version "0.0.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/iris-contrib/schema")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0njlpmbb9pdkkl9ikmyi07h03zz4900w7986nfk0398w9bm3hffs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/iris-contrib/schema"))
    (home-page "https://github.com/iris-contrib/schema")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-j-keck-arping
  (package
    (name "go-github-com-j-keck-arping")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/j-keck/arping")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xrlv7sfh3v1ns6v02wm1qch5b3d1hr4isx32bisji73pijkha8n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/j-keck/arping"))
    (home-page "https://github.com/j-keck/arping")
    (synopsis "arping")
    (description
     "Package arping is a native go library to ping a host per arp datagram, or query
a host mac address.")
    (license license:expat)))

(define-public go-github-com-jalfresi-justext
  (package
    (name "go-github-com-jalfresi-justext")
    (version "0.0.0-20221106200834-be571e3e3052")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/JalfResi/justext")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lx2wgcmlhdw412v1xj64kdbcg9v95vbaq6vxb476yz0rcsjjc48"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/JalfResi/justext"))
    (home-page "https://github.com/JalfResi/justext")
    (synopsis "justext")
    (description
     "This package provides a Go package that implements the @code{JusText}
boilerplate removal algorithm
(@@url{http://code.google.com/p/justext/,http://code.google.com/p/justext/}).")
    (license license:expat)))

(define-public go-github-com-jdkato-prose
  (package
    (name "go-github-com-jdkato-prose")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jdkato/prose")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rwxk7s4mz86r32gqn8slih1cms60rz41cwa76ck84x4b5yqhlly"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jdkato/prose"))
    (propagated-inputs (list ;go-gopkg-in-neurosnap-sentences-v1
                             go-github-com-stretchr-testify
                             go-github-com-shogo82148-go-shuffle
                             go-github-com-montanaflynn-stats))
    (home-page "https://github.com/jdkato/prose")
    (synopsis "prose")
    (description
     "Package prose is a repository of packages related to text processing, including
tokenization, part-of-speech tagging, and named-entity extraction.")
    (license license:expat)))

(define-public go-github-com-jdkato-regexp
  (package
    (name "go-github-com-jdkato-regexp")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jdkato/regexp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kymf4z8ldcav0j04pkjaj37kc54xmbmh26i72cd4s7gv78y82hc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jdkato/regexp"))
    (home-page "https://github.com/jdkato/regexp")
    (synopsis "go regexp + RE2 DFA port")
    (description "Package regexp implements regular expression search.")
    (license license:bsd-3)))

(define-public go-github-com-jdx-go-netrc
  (package
    (name "go-github-com-jdx-go-netrc")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jdx/go-netrc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kp8gmjfv39g4islga00d0j858wjga5b5mlq1f7rg4s8az4lnmbq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jdx/go-netrc"))
    (propagated-inputs (list go-gopkg-in-check-v1))
    (home-page "https://github.com/jdx/go-netrc")
    (synopsis "go-netrc")
    (description "This package provides a netrc parser for Go.")
    (license license:expat)))

(define-public go-github-com-jellydator-ttlcache-v3
  (package
    (name "go-github-com-jellydator-ttlcache-v3")
    (version "3.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jellydator/ttlcache")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "110iixx40041132mjmadrzj86kfww7ly1am2m4c4np691g40xnca"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jellydator/ttlcache/v3"
      #:unpack-path "github.com/jellydator/ttlcache"))
    (propagated-inputs (list go-golang-org-x-sync go-go-uber-org-goleak
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/jellydator/ttlcache")
    (synopsis
     "TTLCache - an in-memory cache with item expiration and generics")
    (description
     "The main type of @@code{ttlcache} is @@code{Cache}.  It represents a single
in-memory data store.")
    (license license:expat)))

(define-public go-github-com-jesseduffield-generics
  (package
    (name "go-github-com-jesseduffield-generics")
    (version "0.0.0-20220320043834-727e535cbe68")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jesseduffield/generics")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "182wdkvc57lnwli8wpyykd1jyywnlq1m6vx8l7pi2wwjp0msq1wx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jesseduffield/generics"))
    (propagated-inputs (list go-golang-org-x-exp))
    (home-page "https://github.com/jesseduffield/generics")
    (synopsis "Generics")
    (description
     "This is a repo for some helper methods/structs that involve generics (added in
Go 1.18).")
    (license license:expat)))

(define-public go-github-com-jesseduffield-go-git-v5
  (package
    (name "go-github-com-jesseduffield-go-git-v5")
    (version "5.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jesseduffield/go-git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ks3x4qbjcg4nqgc3zg8l6b71mkg6xgs9s0rldbxrkbrf3sh36ar"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jesseduffield/go-git/v5"
      #:unpack-path "github.com/jesseduffield/go-git"))
    (propagated-inputs (list go-gopkg-in-check-v1
                             go-golang-org-x-text
                             go-golang-org-x-net
                             go-golang-org-x-crypto
                             go-github-com-xanzy-ssh-agent ; packaged
                             go-github-com-sergi-go-diff ; packaged
                             go-github-com-mitchellh-go-homedir
                             go-github-com-kevinburke-ssh-config
                             go-github-com-jessevdk-go-flags
                             go-github-com-jbenet-go-context
                             go-github-com-imdario-mergo
                             go-github-com-google-go-cmp
                             go-github-com-go-git-go-git-fixtures-v4
                             go-github-com-go-git-go-billy-v5
                             go-github-com-go-git-gcfg
                             go-github-com-gliderlabs-ssh
                             go-github-com-emirpasic-gods
                             go-github-com-armon-go-socks5))
    (home-page "https://github.com/jesseduffield/go-git")
    (synopsis "Project Status")
    (description
     "This package provides a highly extensible git implementation in pure Go.")
    (license license:asl2.0)))

(define-public go-github-com-jesseduffield-gocui
  (package
    (name "go-github-com-jesseduffield-gocui")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jesseduffield/gocui")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01xac0my3jkiykbqylfldx7yj1xcwjqhxm1d9fqy1gmy3bwwzvkg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jesseduffield/gocui"))
    (home-page "https://github.com/jesseduffield/gocui")
    (synopsis "GOCUI - Go Console User Interface")
    (description "Package gocui allows to create console user interfaces.")
    (license license:bsd-3)))

(define-public go-github-com-jesseduffield-kill
  (package
    (name "go-github-com-jesseduffield-kill")
    (version "0.0.0-20250101124109-e216ddbe133a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jesseduffield/kill")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16kjka2gm0i390j5hnc3rh8x00i61nhhs6xpmw552nj4f8a6cwcn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jesseduffield/kill"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/jesseduffield/kill")
    (synopsis "Kill")
    (description
     "Go package for killing processes across different platforms.  Handles killing
children of processes as well as the process itself.")
    (license license:expat)))

(define-public go-github-com-jesseduffield-lazycore
  (package
    (name "go-github-com-jesseduffield-lazycore")
    (version "0.0.0-20221023210126-718a4caea996")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jesseduffield/lazycore")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05x45q86yf033npddc4bk110j9p1l3qikgjilsqb4wjd3mxfrh52"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jesseduffield/lazycore"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-samber-lo ; packaged
                             ))
    (home-page "https://github.com/jesseduffield/lazycore")
    (synopsis "lazycore")
    (description "Shared functionality for lazygit, lazydocker, etc.")
    (license license:expat)))

(define-public go-github-com-jesseduffield-lazygit
  (package
    (name "go-github-com-jesseduffield-lazygit")
    (version "0.45.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jesseduffield/lazygit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nz2i6yl2xbf8hzr1jx1gcajm3pmr7q8vvlralc20x45l0vg9k07"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/jesseduffield/lazygit"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             ;go-gopkg-in-ozeidan-fuzzy-patricia-v3
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-github-com-xo-terminfo
                             go-github-com-stretchr-testify
                             go-github-com-stefanhaller-git-todo-parser
                             go-github-com-spkg-bom
                             go-github-com-spf13-afero
                             go-github-com-sirupsen-logrus
                             go-github-com-sasha-s-go-deadlock
                             go-github-com-sanity-io-litter
                             go-github-com-samber-lo ; packaged
                             go-github-com-sahilm-fuzzy
                             go-github-com-mitchellh-go-ps ; packaged
                             go-github-com-mgutz-str
                             go-github-com-mattn-go-runewidth
                             go-github-com-lucasb-eyer-go-colorful
                             go-github-com-kyokomi-emoji-v2
                             go-github-com-karimkhaleel-jsonschema
                             go-github-com-kardianos-osext
                             go-github-com-jesseduffield-minimal-gitignore
                             go-github-com-jesseduffield-lazycore
                             go-github-com-jesseduffield-kill
                             go-github-com-jesseduffield-gocui
                             go-github-com-jesseduffield-go-git-v5
                             go-github-com-jesseduffield-generics
                             go-github-com-integrii-flaggy
                             go-github-com-imdario-mergo
                             go-github-com-iancoleman-orderedmap
                             go-github-com-gookit-color
                             go-github-com-go-errors-errors ; packaged
                             go-github-com-gdamore-tcell-v2 ; packaged
                             go-github-com-creack-pty
                             go-github-com-cloudfoundry-jibber-jabber
                             go-github-com-aybabtme-humanlog
                             go-github-com-atotto-clipboard ; packaged
                             go-github-com-adrg-xdg))
    (home-page "https://github.com/jesseduffield/lazygit")
    (synopsis "Sponsors")
    (description
     "Maintenance of this project is made possible by all the
@@url{https://github.com/jesseduffield/lazygit/graphs/contributors,contributors}
and @@url{https://github.com/sponsors/jesseduffield,sponsors}.  If you'd like to
sponsor this project and have your avatar or company logo appear below
@@url{https://github.com/sponsors/jesseduffield,click here}. 💙.")
    (license license:expat)))

(define-public go-github-com-jesseduffield-minimal-gitignore
  (package
    (name "go-github-com-jesseduffield-minimal-gitignore")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jesseduffield/minimal")
             (commit (go-version->git-ref version
                                          #:subdir "gitignore"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0m4r0hg9pwb3p8ngr2skdl8aq7d07zrxdkh2wcvddfpbbh2jfdcb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jesseduffield/minimal/gitignore"
      #:unpack-path "github.com/jesseduffield/minimal"))
    (propagated-inputs (list go-github-com-gobwas-glob))
    (home-page "https://github.com/jesseduffield/minimal")
    (synopsis #f)
    (description
     "Package gitignore can be used to parse .gitignore-style files into lists of
globs that can be used to test against paths or selectively walk a file tree.
Gobwas's glob package is used for matching because it is faster than using
regexp, which is overkill, and supports globstars (**), unlike filepath.Match.")
    (license license:bsd-3)))

(define-public go-github-com-jezek-xgb
  (package
    (name "go-github-com-jezek-xgb")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jezek/xgb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dhhrybxs1sapxz19hb39igackv69j55bzpx75afbkcx3mdwfdif"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jezek/xgb"))
    (home-page "https://github.com/jezek/xgb")
    (synopsis #f)
    (description
     "Package XGB provides the X Go Binding, which is a low-level API to communicate
with the core X protocol and many of the X extensions.")
    (license license:expat))) ; check-license

(define-public go-github-com-jgautheron-goconst
  (package
    (name "go-github-com-jgautheron-goconst")
    (version "1.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jgautheron/goconst")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mjbjb1qpfgxpg6rdyhrl2zk8vf7h0adkr67lcsxqs7rkwkrk4qs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jgautheron/goconst"))
    (home-page "https://github.com/jgautheron/goconst")
    (synopsis "goconst")
    (description
     "Package goconst finds repeated strings that could be replaced by a constant.")
    (license license:expat)))

(define-public go-github-com-jhump-gopoet
  (package
    (name "go-github-com-jhump-gopoet")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jhump/gopoet")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0wb1ldpc9l8p29xhl9nkkq4vcp4rfrz72a4xlfn1qsjdg66b1rhq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jhump/gopoet"))
    (home-page "https://github.com/jhump/gopoet")
    (synopsis "Go Poet")
    (description
     "Package gopoet is a library to assist with generating Go code.  It includes a
model of the Go language that is simpler, and thus easier to work with, than
those provided by the \"go/ast\" and \"go/types\" packages.  It also provides
adapter methods to allow simple interoperability with elements from the
\"go/types\" and \"reflect\" packages.")
    (license license:asl2.0)))

(define-public go-github-com-jhump-goprotoc
  (package
    (name "go-github-com-jhump-goprotoc")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jhump/goprotoc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0k2wy5as8h7zbmy151973g20lpyzjcgijh1pq28kn0vwqia34qjg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jhump/goprotoc"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-google-golang-org-protobuf
                             go-golang-org-x-sync
                             go-github-com-jhump-protoreflect
                             go-github-com-jhump-gopoet
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/jhump/goprotoc")
    (synopsis "Go-protoc")
    (description
     "This repo makes it easy to work in the protobuf tool chain using Go.")
    (license license:asl2.0)))

(define-public go-github-com-jhump-protoreflect
  (package
    (name "go-github-com-jhump-protoreflect")
    (version "1.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jhump/protoreflect")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "135i22i93mzc4ms261alq62zbk8h387cyjjy5r5qldfswqpsz54c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jhump/protoreflect"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-github-com-jhump-goprotoc
                             go-github-com-jhump-gopoet
                             go-github-com-golang-protobuf
                             go-github-com-bufbuild-protocompile))
    (home-page "https://github.com/jhump/protoreflect")
    (synopsis "Protocol Buffer and gRPC Reflection")
    (description
     "This repo provides reflection APIs for
@@url{https://developers.google.com/protocol-buffers/,protocol buffers} (also
known as \"protobufs\" for short) and @@url{https://grpc.io/,@code{gRPC}}.  The
core of reflection in protobufs is the
@@url{https://github.com/google/protobuf/raw/199d82fde1734ab5bc931cd0de93309e50cd7ab9/src/google/protobuf/descriptor.proto,descriptor}.
 A descriptor is itself a protobuf message that describes a @@code{.proto}
source file or any element therein.  So a collection of descriptors can describe
an entire schema of protobuf types, including RPC services.")
    (license license:asl2.0)))

(define-public go-github-com-jhump-protoreflect-v2
  (package
    (name "go-github-com-jhump-protoreflect-v2")
    (version "2.0.0-beta.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jhump/protoreflect")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04abns85sxscmppaxxdrs2fi2x0krz39za2bvdk11nk7snhj2a3z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jhump/protoreflect/v2"
      #:unpack-path "github.com/jhump/protoreflect"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-sync
                             go-github-com-stretchr-testify
                             go-github-com-jhump-protoreflect
                             go-github-com-google-go-cmp
                             go-github-com-bufbuild-protocompile))
    (home-page "https://github.com/jhump/protoreflect")
    (synopsis "Protocol Buffer and gRPC Reflection")
    (description
     "This repo builds on top of the reflection capabilities in the
@@url{https://pkg.go.dev/google.golang.org/protobuf/reflect/protoreflect,Protobuf
runtime for Go} and also provides reflection APIs for
@@url{https://grpc.io/,@code{gRPC}} as well.")
    (license license:asl2.0)))

(define-public go-github-com-jingyugao-rowserrcheck
  (package
    (name "go-github-com-jingyugao-rowserrcheck")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jingyugao/rowserrcheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1p42mpl1h62chnlm2yjqb73d45gncabpj8ihz265fs8v7pqpnham"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jingyugao/rowserrcheck"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/jingyugao/rowserrcheck")
    (synopsis "rowserrcheck")
    (description
     "@@code{rowserrcheck} is a static analysis tool which checks whether
@@code{sql.Rows.Err} is correctly checked.")
    (license license:expat)))

(define-public go-github-com-jinzhu-gorm
  (package
    (name "go-github-com-jinzhu-gorm")
    (version "1.9.16")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jinzhu/gorm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nnbxs337238gx0d9rg643m5jwpz005ki91g5did7rwvk7bbsly9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jinzhu/gorm"))
    (propagated-inputs (list go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-lib-pq
                             go-github-com-jinzhu-now
                             go-github-com-jinzhu-inflection
                             go-github-com-go-sql-driver-mysql
                             go-github-com-erikstmartin-go-testdb
                             go-github-com-denisenkom-go-mssqldb))
    (home-page "https://github.com/jinzhu/gorm")
    (synopsis "GORM")
    (description
     "GORM V2 moved to
@@url{https://github.com/go-gorm/gorm,https://github.com/go-gorm/gorm}.")
    (license license:expat)))

(define-public go-github-com-jinzhu-inflection
  (package
    (name "go-github-com-jinzhu-inflection")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jinzhu/inflection")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "165i20d11s03771gi43skl66salxj36212r25fbs0cgr4qgfj7fy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jinzhu/inflection"))
    (home-page "https://github.com/jinzhu/inflection")
    (synopsis "Inflection")
    (description
     "Package inflection pluralizes and singularizes English nouns.")
    (license license:expat)))

(define-public go-github-com-jinzhu-now
  (package
    (name "go-github-com-jinzhu-now")
    (version "1.1.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jinzhu/now")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10ywpaxs6d3y8gqlzx6rh3yw4ya83bnx0hrs0k0wq5bxbjhfmlil"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jinzhu/now"))
    (home-page "https://github.com/jinzhu/now")
    (synopsis "Now")
    (description "Package now is a time toolkit for golang.")
    (license license:expat)))

(define-public go-github-com-jjti-go-spancheck
  (package
    (name "go-github-com-jjti-go-spancheck")
    (version "0.6.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jjti/go-spancheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "133hm8mg04ps4n76j2bn49s1lxmlmq653kmn1wb53r9lf6gn2ny6"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/jjti/go-spancheck"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/jjti/go-spancheck")
    (synopsis "go-spancheck")
    (description
     "Package spancheck defines a linter that checks for mistakes with OTEL trace
spans.")
    (license license:expat)))

(define-public go-github-com-jmhodges-levigo
  (package
    (name "go-github-com-jmhodges-levigo")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jmhodges/levigo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lhh413mmclnkwn2lk1crwzargam2cx5w7k6zj8pgasy62c78iy4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jmhodges/levigo"))
    (home-page "https://github.com/jmhodges/levigo")
    (synopsis "levigo")
    (description
     "Package levigo provides the ability to create and access @code{LevelDB}
databases.")
    (license license:expat)))

(define-public go-github-com-johannesboyne-gofakes3
  (package
    (name "go-github-com-johannesboyne-gofakes3")
    (version "0.0.0-20241026070602-0da3aa9c32ca")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/johannesboyne/gofakes3")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08gdxighg8gignxpvaqcpg46070ih9z68rlbq37lx808013mmy2v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/johannesboyne/gofakes3"))
    (propagated-inputs (list go-gopkg-in-mgo-v2
                             go-golang-org-x-tools
                             go-go-shabbyrobe-org-gocovmerge
                             go-go-etcd-io-bbolt
                             go-github-com-stretchr-testify
                             go-github-com-spf13-afero
                             go-github-com-ryszard-goskiplist
                             go-github-com-cevatbarisyilmaz-ara
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/johannesboyne/gofakes3")
    (synopsis "AWS (GOFAKE)S3")
    (description
     "AWS S3 fake server and testing library for comprehensive S3 integration testing.
 This tool can be used to run a test server, for example, to support testing AWS
Lambda functions that interact with S3.  It also serves as a straightforward and
convenient S3 mock and test server for various development needs.")
    (license license:expat)))

(define-public go-github-com-johnbellone-grpc-middleware-sentry
  (package
    (name "go-github-com-johnbellone-grpc-middleware-sentry")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/johnbellone/grpc-middleware-sentry")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j1f0xp9x0w1g93z8vfd51vb10jfvlpb2r3idvaxs3prcnm076vm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/johnbellone/grpc-middleware-sentry"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-github-com-grpc-ecosystem-go-grpc-middleware
                             go-github-com-getsentry-sentry-go ; packaged
                             ))
    (home-page "https://github.com/johnbellone/grpc-middleware-sentry")
    (synopsis "Go gRPC Middleware for Sentry")
    (description "SPDX-License-Identifier: Apache-2.0.")
    (license license:asl2.0)))

(define-public go-github-com-joker-hpp
  (package
    (name "go-github-com-joker-hpp")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Joker/hpp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xnqkjkmqdj48w80qa74rwcmgar8dcilpkcrcn1f53djk45k1gq2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Joker/hpp"))
    (propagated-inputs (list go-golang-org-x-net))
    (home-page "https://github.com/Joker/hpp")
    (synopsis "HTML Pretty Print for Go (golang)")
    (description
     "Package hpp (github.com/Joker/hpp) is a HTML formatter for Go.")
    (license license:bsd-3)))

(define-public go-github-com-joker-jade
  (package
    (name "go-github-com-joker-jade")
    (version "1.1.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Joker/jade")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nbf738nyrjbs70ikk8crhfq3qh7y2c6mig0qmjysfnlwq2x7dml"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Joker/jade"))
    (propagated-inputs (list go-golang-org-x-tools go-github-com-joker-hpp))
    (home-page "https://github.com/Joker/jade")
    (synopsis "Jade.go - template engine for Go (golang)")
    (description
     "Jade.go - template engine.  Package implements Jade-lang templates for
generating Go html/template output.")
    (license license:bsd-3)))

(define-public go-github-com-josephspurrier-goversioninfo
  (package
    (name "go-github-com-josephspurrier-goversioninfo")
    (version "1.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/josephspurrier/goversioninfo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02nqhkvsxi69ny64j81x1k142fir2ps68fypi3z2hr4wd3x4i1l9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/josephspurrier/goversioninfo"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-akavel-rsrc))
    (home-page "https://github.com/josephspurrier/goversioninfo")
    (synopsis "GoVersionInfo")
    (description
     "Package goversioninfo creates a syso file which contains Microsoft Version
Information and an optional icon.")
    (license license:expat)))

(define-public go-github-com-josharian-txtarfs
  (package
    (name "go-github-com-josharian-txtarfs")
    (version "0.0.0-20240408113805-5dc76b8fe6bf")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/josharian/txtarfs")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "129rf6hviw46rxcnnkc8jb1k579798rrhnh1k3nn7npi260ia44m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/josharian/txtarfs"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/josharian/txtarfs")
    (synopsis #f)
    (description "Package txtarfs turns a txtar into an fs.FS.")
    (license license:expat)))

(define-public go-github-com-jsimonetti-pwscheme
  (package
    (name "go-github-com-jsimonetti-pwscheme")
    (version "0.0.0-20220922140336-67a4d090f150")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jsimonetti/pwscheme")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p28ipf4xmjn585mp9qmqkisk6w4967yci9iapb29jrpzjhywr6l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jsimonetti/pwscheme"))
    (home-page "https://github.com/jsimonetti/pwscheme")
    (synopsis "pwscheme")
    (description "Golang package defining password schemes.")
    (license license:expat)))

(define-public go-github-com-jstemmer-go-junit-report
  (package
    (name "go-github-com-jstemmer-go-junit-report")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jstemmer/go-junit-report")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x5qaicf7840l0jws26072abl6hqfzjn2pn2im0l9b4q97s7si7w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jstemmer/go-junit-report"))
    (home-page "https://github.com/jstemmer/go-junit-report")
    (synopsis "go-junit-report")
    (description
     "go-junit-report is a tool that converts
@@url{https://pkg.go.dev/cmd/go#hdr-Test_packages,(code go test)} output to an
XML report, suitable for applications that expect JUnit-style XML reports (e.g.
@@url{http://jenkins-ci.org,Jenkins}).")
    (license license:expat)))

(define-public go-github-com-jtolds-tracetagger-v2
  (package
    (name "go-github-com-jtolds-tracetagger-v2")
    (version "2.0.0-rc5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jtolio/tracetagger")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x47n43ikmbndzknyd3xja2cymnm0nmsn7b17cmlpfxgs7vj7gzd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jtolds/tracetagger/v2"
      #:unpack-path "github.com/jtolds/tracetagger"))
    (propagated-inputs (list go-github-com-spacemonkeygo-monkit-v3))
    (home-page "https://github.com/jtolds/tracetagger")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-jtolio-crawlspace
  (package
    (name "go-github-com-jtolio-crawlspace")
    (version "0.0.0-20240521193440-69abbbe5a93f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jtolio/crawlspace")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xj782ghf0iv8r2xxmg2vrh72b02h216y4yfyi60y9z0691lrsip"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jtolio/crawlspace"))
    (home-page "https://github.com/jtolio/crawlspace")
    (synopsis "crawlspace")
    (description
     "package crawlspace provides a means to dynamically interact with registered Go
objects in a live process, using small scripting language based around the
reflect package.")
    (license license:asl2.0)))

(define-public go-github-com-jtolio-crawlspace-tools
  (package
    (name "go-github-com-jtolio-crawlspace-tools")
    (version "0.0.0-20240521193440-69abbbe5a93f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jtolio/crawlspace")
             (commit (go-version->git-ref version
                                          #:subdir "tools"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xj782ghf0iv8r2xxmg2vrh72b02h216y4yfyi60y9z0691lrsip"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jtolio/crawlspace/tools"
      #:unpack-path "github.com/jtolio/crawlspace"))
    (propagated-inputs (list go-github-com-zeebo-sudo go-github-com-zeebo-goof
                             go-github-com-kr-pretty
                             go-github-com-jtolio-crawlspace))
    (home-page "https://github.com/jtolio/crawlspace")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-jtolio-noiseconn
  (package
    (name "go-github-com-jtolio-noiseconn")
    (version "0.0.0-20231127013910-f6d9ecbf1de7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jtolio/noiseconn")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xbki359wmmwn6sm5h9ixw28nzv74zcmkqxzabp46mkfv0qjsa85"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jtolio/noiseconn"))
    (propagated-inputs (list go-golang-org-x-sync go-github-com-zeebo-errs
                             go-github-com-flynn-noise go-github-com-dsnet-try))
    (home-page "https://github.com/jtolio/noiseconn")
    (synopsis "noiseconn")
    (description
     "This package provides a net.Conn wrapper around github.com/flynn/noise.")
    (license license:expat)))

(define-public go-github-com-juju-gnuflag
  (package
    (name "go-github-com-juju-gnuflag")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/juju/gnuflag")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rky87fv1nbmfk12c1m478gvl3xi8jx6d353xay4zlj286mqdbhg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/juju/gnuflag"))
    (home-page "https://github.com/juju/gnuflag")
    (synopsis "Gnuflag")
    (description
     "Package flag implements command-line flag parsing in the GNU style.  It is
almost exactly the same as the standard flag package, the only difference being
the extra argument to Parse.")
    (license license:bsd-3)))

(define-public go-github-com-julz-importas
  (package
    (name "go-github-com-julz-importas")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/julz/importas")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vfidyl740pl9s1v4sdsrrswnqc8ng0958zajxmdm8z2pwdi1lvs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/julz/importas"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/julz/importas")
    (synopsis "What is this for?")
    (description
     "This package provides a linter to enforce importing certain packages
consistently.")
    (license license:asl2.0)))

(define-public go-github-com-jung-kurt-gofpdf
  (package
    (name "go-github-com-jung-kurt-gofpdf")
    (version "1.16.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jung-kurt/gofpdf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1l1z1zvdnq00y75v6s4bzn8girv3h5i75wb9bi6xkx8bw7rghplq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jung-kurt/gofpdf"))
    (propagated-inputs (list go-golang-org-x-image ; packaged
                             go-github-com-ruudk-golang-pdf417
                             go-github-com-phpdave11-gofpdi ; packaged
                             go-github-com-boombuler-barcode ; packaged
                             ))
    (home-page "https://github.com/jung-kurt/gofpdf")
    (synopsis "GoFPDF document generator")
    (description
     "Package gofpdf implements a PDF document generator with high level support for
text, drawing and images.")
    (license license:expat)))

(define-public go-github-com-jwalton-gchalk
  (package
    (name "go-github-com-jwalton-gchalk")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jwalton/gchalk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ggg0m8zpydxq30vbzdh3qsxj56b1hj6sfi1z65mgy0zl1wh4xz8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jwalton/gchalk"))
    (propagated-inputs (list go-github-com-jwalton-go-supportscolor))
    (home-page "https://github.com/jwalton/gchalk")
    (synopsis "GChalk")
    (description
     "Package gchalk is terminal string styling for go done right, with full Linux,
@code{MacOS}, and painless Windows 10 support.")
    (license license:expat)))

(define-public go-github-com-jwalton-go-supportscolor
  (package
    (name "go-github-com-jwalton-go-supportscolor")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jwalton/go-supportscolor")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0yw2bz46axyry079hipayknsz069f9gzzxmcpj8rjwd6gxsfjljz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/jwalton/go-supportscolor"))
    (propagated-inputs (list go-golang-org-x-term go-golang-org-x-sys))
    (home-page "https://github.com/jwalton/go-supportscolor")
    (synopsis "supports-color")
    (description
     "Package supportscolor detects whether a terminal supports color, and enables
ANSI color support in recent Windows 10 builds.")
    (license license:expat)))

(define-public go-github-com-karamaru-alpha-copyloopvar
  (package
    (name "go-github-com-karamaru-alpha-copyloopvar")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/karamaru-alpha/copyloopvar")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nzln2vmrv8j8fyc6qwhjk5s3a0r6g88laijvnyc4q0931qzpq1p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/karamaru-alpha/copyloopvar"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-testutil))
    (home-page "https://github.com/karamaru-alpha/copyloopvar")
    (synopsis "copyloopvar")
    (description
     "copyloopvar is a linter detects places where loop variables are copied.")
    (license license:expat)))

(define-public go-github-com-karimkhaleel-jsonschema
  (package
    (name "go-github-com-karimkhaleel-jsonschema")
    (version "0.0.0-20231105093532-44bdb914ed9c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/karimkhaleel/jsonschema")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ywkc62504wacx9jnd95vf05qwsx4alhfg1v654w3k3ifkdcdzz4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/karimkhaleel/jsonschema"))
    (propagated-inputs (list go-github-com-wk8-go-ordered-map-v2
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/karimkhaleel/jsonschema")
    (synopsis "Go JSON Schema Reflection")
    (description
     "Package jsonschema uses reflection to generate JSON Schemas from Go types [1].")
    (license license:expat)))

(define-public go-github-com-kataras-blocks
  (package
    (name "go-github-com-kataras-blocks")
    (version "0.0.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kataras/blocks")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07ka87lk19g07fjmkqrjc9hpw36zgybr4rcljya6xa4i008ynxkf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/kataras/blocks"))
    (propagated-inputs (list go-github-com-valyala-bytebufferpool
                             go-github-com-russross-blackfriday-v2))
    (home-page "https://github.com/kataras/blocks")
    (synopsis "Blocks")
    (description
     "Blocks is a, simple, Go-idiomatic view engine based on
@@url{https://pkg.go.dev/html/template?tab=doc#Template,html/template}, plus the
following features:.")
    (license license:expat)))

(define-public go-github-com-kataras-iris-v12
  (package
   (name "go-github-com-kataras-iris-v12")
   (version "12.2.11")
   (source
    (origin
     (method git-fetch)
     (uri (git-reference
           (url "https://github.com/kataras/iris")
           (commit (string-append "v" version))))
     (file-name (git-file-name name version))
     (sha256
      (base32 "1lnyj43sczl40yjkk88ckgapcrljn37wjymmwc031xbbgsxjbmk5"))))
   (build-system go-build-system)
   (arguments
    (list
     #:go go-1.22
     #:import-path "github.com/kataras/iris/v12"
     #:unpack-path "github.com/kataras/iris"))
   (propagated-inputs
    (list go-github-com-andybalholm-brotli     ; packaged
          go-github-com-blang-semver-v4        ; packaged
          go-github-com-burntsushi-toml        ; packaged
          go-github-com-cloudykit-jet-v6
          go-github-com-dgraph-io-badger-v2
          go-github-com-fatih-structs ; packaged
          go-github-com-flosch-pongo2-v6 ; packaged
          go-github-com-golang-snappy
          go-github-com-gomarkdown-markdown    ; packaged
          go-github-com-google-uuid            ; packaged
          go-github-com-gorilla-securecookie   ; packaged
          go-github-com-iris-contrib-httpexpect-v2
          go-github-com-iris-contrib-schema
          go-github-com-joker-jade
          go-github-com-json-iterator-go
          go-github-com-kataras-blocks
          go-github-com-kataras-golog
          go-github-com-kataras-jwt
          go-github-com-kataras-neffos
          go-github-com-kataras-pio
          go-github-com-kataras-sitemap
          go-github-com-kataras-tunnel
          go-github-com-klauspost-compress     ; packaged
          go-github-com-mailgun-raymond-v2
          go-github-com-mailru-easyjson
          go-github-com-microcosm-cc-bluemonday
          go-github-com-redis-go-redis-v9 ; packaged

          go-github-com-schollz-closestmatch
          go-github-com-shirou-gopsutil-v3 ; packaged
          go-github-com-shopify-goreferrer     ; packaged
          go-github-com-tdewolff-minify-v2     ; packaged
          go-github-com-vmihailenco-msgpack-v5 ; packaged
          go-github-com-yosssi-ace
          go-go-etcd-io-bbolt                  ; packaged
          go-golang-org-x-crypto               ; packaged
          go-golang-org-x-exp                  ; packaged
          go-golang-org-x-net                  ; packaged
          go-golang-org-x-sys                  ; packaged
          go-golang-org-x-text                 ; packaged
          go-golang-org-x-time                 ; packaged
          go-google-golang-org-protobuf        ; packaged
          go-gopkg-in-ini-v1                   ; packaged
          go-gopkg-in-yaml-v3                  ; packaged
          ))
   (home-page "https://github.com/kataras/iris")
   (synopsis "Iris Web Framework")
   (description
    "Package iris implements the highest realistic performance, easy to learn Go web
framework.  Iris provides a beautifully expressive and easy to use foundation
for your next website, API, or distributed app.  Low-level handlers compatible
with `net/http` and high-level fastest MVC implementation and handlers
dependency injection.  Easy to learn for new gophers and advanced features for
experienced, it goes as far as you dive into it!")
   (license license:bsd-3)))

(define-public go-github-com-kataras-jwt
  (package
    (name "go-github-com-kataras-jwt")
    (version "0.1.12")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kataras/jwt")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10ch82mkz3245p36zm77wv1xbfywr3pyg88yd8imc0d7y16qhfjw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kataras/jwt"))
    (home-page "https://github.com/kataras/jwt")
    (synopsis "JWT")
    (description
     "Package jwt aims to provide an implementation of the JSON Web Token standard.
The library supports the JSON Web Algorithm standard with HMAC, RSA, ECDSA and
@code{EdDSA}.  The signing operation can accept multiple claims and merge as
one, not a single change to the existing structs is required.  The verification
process performs all the standard validations out of the box.  The library
supports only the compact serialization format.")
    (license license:expat)))

(define-public go-github-com-kataras-neffos
  (package
    (name "go-github-com-kataras-neffos")
    (version "0.0.23")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kataras/neffos")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rsm0kp6xdv8bqa3a26rdxxj9xfdcmslffmahb9962psrg8kgylf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kataras/neffos"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-github-com-nats-io-nats-go
                             go-github-com-mediocregopher-radix-v3
                             go-github-com-iris-contrib-go-uuid
                             go-github-com-gorilla-websocket
                             go-github-com-gobwas-ws))
    (home-page "https://github.com/kataras/neffos")
    (synopsis "About neffos")
    (description
     "Neffos is a cross-platform real-time framework with expressive, elegant API
written in @@url{https://go.dev,Go}.  Neffos takes the pain out of development
by easing common tasks used in real-time backend and frontend applications such
as:.")
    (license license:expat)))

(define-public go-github-com-kataras-sitemap
  (package
    (name "go-github-com-kataras-sitemap")
    (version "0.0.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kataras/sitemap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i2b1h8759j1505lifpz259w72wag23lrfc3wdkrxmck03mifq1n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kataras/sitemap"))
    (home-page "https://github.com/kataras/sitemap")
    (synopsis "Sitemap (Go)")
    (description
     "Package sitemap implements the Sitemap Protocol.  Reference:
@@url{https://www.sitemaps.org/protocol.html,https://www.sitemaps.org/protocol.html}.")
    (license license:expat)))

(define-public go-github-com-kataras-tunnel
  (package
    (name "go-github-com-kataras-tunnel")
    (version "0.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kataras/tunnel")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j9xjmcg6fpc2g4x4arr6bal4g58l5zxvn5nqq26b9dj76l84dqc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kataras/tunnel"))
    (home-page "https://github.com/kataras/tunnel")
    (synopsis "Tunnel")
    (description "Public URLs for exposing your local web server using
@@url{https://ngrok.com/,ngrok's API}.")
    (license license:expat)))

(define-public go-github-com-kbinani-screenshot
  (package
    (name "go-github-com-kbinani-screenshot")
    (version "0.0.0-20250118074034-a3924b7bbc8c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kbinani/screenshot")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06fxwmz9y84p2qpgl7q8wcr1r5gmcygmibylcybm63acfzdv0zbk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kbinani/screenshot"))
    (propagated-inputs (list go-github-com-lxn-win go-github-com-jezek-xgb
                             go-github-com-gen2brain-shm))
    (home-page "https://github.com/kbinani/screenshot")
    (synopsis "screenshot")
    (description
     "Package screenshot captures screen-shot image as image.RGBA. Mac, Windows,
Linux, @code{FreeBSD}, @code{OpenBSD} and @code{NetBSD} are supported.")
    (license license:expat)))

(define-public go-github-com-kellydunn-golang-geo
  ;; It might be abandoned project, see
  ;; <https://github.com/kellydunn/golang-geo/issues/76>
  (package
    (name "go-github-com-kellydunn-golang-geo")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kellydunn/golang-geo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04h0i78k1abhbv6lm64cc5cmkibw6rnxxa61s79cjls889cd9qwf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kellydunn/golang-geo"))
    (propagated-inputs
     (list go-github-com-erikstmartin-go-testdb
           ;; go-github-com-kylelemons-go-gypsy ; abandoned
           go-github-com-lib-pq
           go-github-com-ziutek-mymysql))
    (home-page "https://github.com/kellydunn/golang-geo")
    (synopsis "Geographical calculations in Golang")
    (description
     "This library provides convenience functions for translating, geocoding,
and calculating distances between geographical points.  It is inspired by
ruby's @code{geokit} and @code{geokit-rails} gems, and aims to make working
with geographical data a little bit easier in golang.")
    (license license:expat)))

(define-public go-github-com-kelseyhightower-envconfig
  (package
    (name "go-github-com-kelseyhightower-envconfig")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kelseyhightower/envconfig")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1a7b35njpqz94gbd7wvsl3wjzpd5y1fj1lrg2sdh00yq0nax1qj9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kelseyhightower/envconfig"))
    (home-page "https://github.com/kelseyhightower/envconfig")
    (synopsis "envconfig")
    (description
     "Package envconfig implements decoding of environment variables based on a user
defined specification.  A typical use is using environment variables for
configuration settings.")
    (license license:expat)))

(define-public go-github-com-kettek-apng
  (package
    (name "go-github-com-kettek-apng")
    (version "0.0.0-20220823221153-ff692776a607")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kettek/apng")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0cmvd9m9fs94sv00432ydyphiw8vm90g8vp1p6ln9cn96d05rv2n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kettek/apng"))
    (home-page "https://github.com/kettek/apng")
    (synopsis "APNG golang library")
    (description "Package apng implements an APNG image decoder.")
    (license license:bsd-3)))

(define-public go-github-com-keybase-go-crypto
  (package
    (name "go-github-com-keybase-go-crypto")
    (version "0.0.0-20200123153347-de78d2cb44f4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/keybase/go-crypto")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0prrpv0x7nbq5k6swn2jwypzxa8h4aj5lgyw372n6c8ln34fh9jq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/keybase/go-crypto"))
    (home-page "https://github.com/keybase/go-crypto")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-keybase-go-keybase-chat-bot
  (package
    (name "go-github-com-keybase-go-keybase-chat-bot")
    (version "0.0.0-20231213202706-1bdf50c0adf4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/keybase/go-keybase-chat-bot")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1p6gspmrgqcj2hf79y3nd5kp62dvkh2im5a98f74qhfgblj99fn1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/keybase/go-keybase-chat-bot"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-golang-org-x-sync
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/keybase/go-keybase-chat-bot")
    (synopsis "go-keybase-chat-bot")
    (description "Write rich bots for Keybase chat in Go.")
    (license license:bsd-3)))

(define-public go-github-com-keybase-go-keychain
  (package
    (name "go-github-com-keybase-go-keychain")
    (version "0.0.0-20231219164618-57a3676c3af6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/keybase/go-keychain")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xh2y3p7vml83lprgcydsx6cr2ngvbb6ypsrl3s13xkfbn27hlj3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/keybase/go-keychain"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-keybase-dbus))
    (home-page "https://github.com/keybase/go-keychain")
    (synopsis "Go Keychain")
    (description
     "This package provides a library for accessing the Keychain for @code{macOS},
@code{iOS}, and Linux in Go (golang).")
    (license license:expat)))

(define-public go-github-com-khan-genqlient
  (package
    (name "go-github-com-khan-genqlient")
    (version "0.8.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Khan/genqlient")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0djk7i1qai0ydi6s1mggim39ym2dn2d9s505yzwxfba1qlgvzzcs"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/Khan/genqlient"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-golang-org-x-tools
                             go-github-com-vektah-gqlparser-v2
                             go-github-com-stretchr-testify
                             go-github-com-gorilla-websocket
                             go-github-com-google-uuid
                             go-github-com-bradleyjkemp-cupaloy-v2
                             go-github-com-bmatcuk-doublestar-v4
                             go-github-com-alexflint-go-arg
                             go-github-com-99designs-gqlgen))
    (home-page "https://github.com/Khan/genqlient")
    (synopsis "genqlient: a truly type-safe Go GraphQL client")
    (description "genqlient is a @code{GraphQL} client generator for Go.")
    (license license:expat)))

(define-public go-github-com-kilic-bls12-381
  (package
    (name "go-github-com-kilic-bls12-381")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kilic/bls12-381")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1naja9lacl7dz4dznl2i17m2bjhyn0y2hxp8s9wrrimynv23c3vq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kilic/bls12-381"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/kilic/bls12-381")
    (synopsis "High Speed BLS12-381 Implementation in Go")
    (description
     "This package provides a Group instance or a pairing engine instance suitable for
concurrent processing since an instance has its own preallocated memory for
temporary variables.  A new instance must be created for each thread.")
    (license license:asl2.0)))

(define-public go-github-com-kisielk-errcheck
  (package
    (name "go-github-com-kisielk-errcheck")
    (version "1.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kisielk/errcheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d1vs1wqa3c7kpv0sfr227bi0kxdq2b245qgmpnzklgnkrfx8h18"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kisielk/errcheck"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/kisielk/errcheck")
    (synopsis "errcheck")
    (description
     "errcheck is a program for checking for unchecked errors in Go code.")
    (license license:expat)))

(define-public go-github-com-kjk-lzmadec
  (package
    (name "go-github-com-kjk-lzmadec")
    (version "0.0.0-20210713164611-19ac3ee91a71")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kjk/lzmadec")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16mxc3sxy8ks15g1kgj05hmcg9h2k3by2pvw5qaxfhpmskfvlj8y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kjk/lzmadec"))
    (home-page "https://github.com/kjk/lzmadec")
    (synopsis #f)
    (description
     "Package lzmadec implements extracting files from .7z archives.  It requires 7z
executable to be installed.")
    (license license:expat)))

(define-public go-github-com-kkhaike-contextcheck
  (package
    (name "go-github-com-kkhaike-contextcheck")
    (version "1.1.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kkHAIKE/contextcheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fnfmaavab4h2m34dw81hvhiny92nnm6azmp4fvblqxnyfj1snbc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kkHAIKE/contextcheck"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-analysisutil))
    (home-page "https://github.com/kkHAIKE/contextcheck")
    (synopsis "contextcheck")
    (description
     "@@code{contextcheck} is a static analysis tool used to check whether a function
uses a non-inherited context that could result in a broken call link.")
    (license license:asl2.0)))

(define-public go-github-com-kljensen-snowball
  (package
    (name "go-github-com-kljensen-snowball")
    (version "0.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kljensen/snowball")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ldc8hw13jwffhfac3w19033rxg8042jpwnw16l5mnwc0rg8b23l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kljensen/snowball"))
    (home-page "https://github.com/kljensen/snowball")
    (synopsis "Snowball")
    (description
     "This package provides a @@url{http://golang.org,Go (golang)} implementation of
the @@url{http://snowball.tartarus.org/,Snowball stemmer} for natural language
processing.")
    (license license:expat)))

(define-public go-github-com-knqyf263-go-plugin
  (package
    (name "go-github-com-knqyf263-go-plugin")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/knqyf263/go-plugin")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "091dbw30mmqz4y44xa6j3fs4kyfhkpgrzvd3dpjxp1krc21fbzb5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/knqyf263/go-plugin"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-tetratelabs-wazero
                             go-github-com-stretchr-testify
                             go-github-com-planetscale-vtprotobuf))
    (home-page "https://github.com/knqyf263/go-plugin")
    (synopsis "Go Plugin System over WebAssembly")
    (description
     "@@code{go-plugin} is a Go (golang) plugin system over @code{WebAssembly}
(abbreviated Wasm).  As a plugin is compiled to Wasm, it can be size-efficient,
memory-safe, sandboxed and portable.  The plugin system auto-generates Go SDK
for plugins from
@@url{https://developers.google.com/protocol-buffers/docs/overview,Protocol
Buffers} files.  While it is powered by Wasm, plugin authors/users don't have to
be aware of the Wasm specification since the raw Wasm APIs are capsulated by the
SDK.")
    (license license:expat)))

(define-public go-github-com-knz-bubbline
  (package
    (name "go-github-com-knz-bubbline")
    (version "0.0.0-20230717192058-486954f9953f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/knz/bubbline")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13vwvrybr3rgpk6za98ynx6x4w0g1zp1kcb2b1nbc1rzixvc22jx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/knz/bubbline"))
    (propagated-inputs (list go-golang-org-x-sys ; packaged
                             go-github-com-muesli-reflow
                             go-github-com-mattn-go-runewidth
                             go-github-com-knz-catwalk
                             go-github-com-cockroachdb-datadriven ; packaged
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-bubbletea
                             go-github-com-charmbracelet-bubbles
                             go-github-com-atotto-clipboard ; packaged
                             ))
    (home-page "https://github.com/knz/bubbline")
    (synopsis "Bubbline")
    (description
     "An input line editor for line-oriented terminal applications.")
    (license license:asl2.0)))

(define-public go-github-com-knz-catwalk
  (package
    (name "go-github-com-knz-catwalk")
    (version "0.1.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/knz/catwalk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yn5n9b3a1rvdmliri5bs9wh6slbhdpj0s1qpw33k862v53a0gzw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/knz/catwalk"))
    (propagated-inputs (list go-github-com-kr-pretty
                             go-github-com-knz-lipgloss-convert
                             go-github-com-cockroachdb-datadriven ; packaged
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-bubbletea
                             go-github-com-charmbracelet-bubbles))
    (home-page "https://github.com/knz/catwalk")
    (synopsis "catwalk")
    (description
     "@@strong{catwalk} is a unit test library for
@@url{https://github.com/charmbracelet/bubbletea,Bubbletea} TUI models (a.k.a.
“bubbles”).")
    (license license:asl2.0)))

(define-public go-github-com-koofr-go-httpclient
  (package
    (name "go-github-com-koofr-go-httpclient")
    (version "0.0.0-20240520111329-e20f8f203988")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/koofr/go-httpclient")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jl7k1254l9454bans3fjssvwmhm420f14rc7x5xmypdsphvwks0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/koofr/go-httpclient"))
    (propagated-inputs (list go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo-v2))
    (home-page "https://github.com/koofr/go-httpclient")
    (synopsis "go-httpclient")
    (description "Go HTTP client.")
    (license license:expat)))

(define-public go-github-com-koofr-go-koofrclient
  (package
    (name "go-github-com-koofr-go-koofrclient")
    (version "0.0.0-20221207135200-cbd7fc9ad6a6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/koofr/go-koofrclient")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bsc587q33kl8bjp2j8is6hydp39vrzc3z0k6cx4kkxx40y0ya07"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/koofr/go-koofrclient"))
    (home-page "https://github.com/koofr/go-koofrclient")
    (synopsis "go-koofrclient")
    (description "Go Koofr client.")
    (license license:expat)))

(define-public go-github-com-kr-logfmt
  (package
    (name "go-github-com-kr-logfmt")
    (version "0.0.0-20210122060352-19f9bcb100e6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kr/logfmt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1l6322amgy092n30l6br0wzszf3l2a3dkylck3pzpvzr4lqfcyhb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kr/logfmt"))
    (home-page "https://github.com/kr/logfmt")
    (synopsis #f)
    (description "Package implements the decoding of logfmt key-value pairs.")
    (license license:expat)))

(define-public go-github-com-kr-pty
  (package
    (name "go-github-com-kr-pty")
    (version "1.1.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kr/pty")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vcl6f90n0f8s8b4fyh0832ilybjqcypqyj233lqj1hx62fvgdbk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kr/pty"))
    (propagated-inputs (list go-github-com-creack-pty))
    (home-page "https://github.com/kr/pty")
    (synopsis "pty")
    (description
     "Package pty is a wrapper for github.com/creack/pty, which provides functions for
working with Unix terminals.")
    (license license:expat)))

(define-public go-github-com-ktrysmt-go-bitbucket
  (package
    (name "go-github-com-ktrysmt-go-bitbucket")
    (version "0.9.81")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ktrysmt/go-bitbucket")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hwmxfl5hc1mpvr8yg5gmn3x5ndvl9rsnyik39xp0wfmgqb3x56g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ktrysmt/go-bitbucket"))
    (propagated-inputs (list go-golang-org-x-oauth2 go-golang-org-x-net
                             go-github-com-stretchr-testify
                             go-github-com-mitchellh-mapstructure
                             go-github-com-k0kubun-pp))
    (home-page "https://github.com/ktrysmt/go-bitbucket")
    (synopsis "go-bitbucket")
    (description "Support Bitbucket API v2.0.")
    (license license:asl2.0)))

(define-public go-github-com-kulti-thelper
  (package
    (name "go-github-com-kulti-thelper")
    (version "0.6.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kulti/thelper")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i5137kcgkhqa4zgjrq1wypsr36cydxinfjrmf48ylxall74rqwq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kulti/thelper"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-analysisutil))
    (home-page "https://github.com/kulti/thelper")
    (synopsis "thelper")
    (description
     "thelper detects golang test helpers without @code{@@code{t.Helper()}} call.
Also, it checks the consistency of test helpers and has similar checks for
benchmarks and TB interface.  Read further to learn more.")
    (license license:expat)))

(define-public go-github-com-kunwardeep-paralleltest
  (package
    (name "go-github-com-kunwardeep-paralleltest")
    (version "1.0.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kunwardeep/paralleltest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p66n06rch549ydz0qx803ripa71njxidbqyjgxy951zlkkq03xz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kunwardeep/paralleltest"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/kunwardeep/paralleltest")
    (synopsis "paralleltest")
    (description
     "The Go linter @@code{paralleltest} checks that the t.Parallel gets called for
the test method and for the range of test cases within the test.")
    (license license:expat)))

(define-public go-github-com-kylewolfe-soaptrip
  (package
    (name "go-github-com-kylewolfe-soaptrip")
    (version "0.0.0-20160108184655-f6f12afc06a9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kylewolfe/soaptrip")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0q3y2k8vk6sgp16chx25i07r9qgcqhb7l7bxzw0mqmv9d9q5rs55"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kylewolfe/soaptrip"))
    (home-page "https://github.com/kylewolfe/soaptrip")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-kyoh86-exportloopref
  (package
    (name "go-github-com-kyoh86-exportloopref")
    (version "0.1.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kyoh86/exportloopref")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "048vgs62grw2ishd1l7865w3kx32zxvzj8z51l0ysh7gi2azjdgk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kyoh86/exportloopref"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/kyoh86/exportloopref")
    (synopsis "exportloopref")
    (description
     "An analyzer that finds exporting pointers for loop variables.  Pin them all!")
    (license license:expat)))

(define-public go-github-com-kyokomi-emoji-v2
  (package
    (name "go-github-com-kyokomi-emoji-v2")
    (version "2.2.13")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kyokomi/emoji")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1drnk289m4b24h06yxn860yj81pp2aky218myi71q92inf2sdjgg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/kyokomi/emoji/v2"
      #:unpack-path "github.com/kyokomi/emoji"))
    (home-page "https://github.com/kyokomi/emoji")
    (synopsis "Emoji")
    (description "Package emoji terminal output.")
    (license license:expat)))

(define-public go-github-com-labbsr0x-bindman-dns-webhook
  (package
    (name "go-github-com-labbsr0x-bindman-dns-webhook")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/labbsr0x/bindman-dns-webhook")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1v9r66hzy8vj89q3hz2l94i5rczccf0qc9hnkg1p3sa78maa3q4a"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/labbsr0x/bindman-dns-webhook"))
    (propagated-inputs (list go-github-com-sirupsen-logrus
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-labbsr0x-goh ; packaged
                             go-github-com-gorilla-mux ; packaged
                             go-github-com-go-errors-errors ; packaged
                             ))
    (home-page "https://github.com/labbsr0x/bindman-dns-webhook")
    (synopsis "Bindman-DNS Webhook")
    (description
     "This repository lays out the pieces of code of a Bindman-DNS webhook.")
    (license license:expat)))

(define-public go-github-com-lanrat-extsort
  (package
    (name "go-github-com-lanrat-extsort")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lanrat/extsort")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0blsif4qzmmlqxhgc6dyl7rn9zws7mvlc6ckjj43cxlp517ravk8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lanrat/extsort"))
    (propagated-inputs (list go-golang-org-x-sync))
    (home-page "https://github.com/lanrat/extsort")
    (synopsis "extsort")
    (description
     "Package extsort implements an unstable external sort for all the records in a
chan or iterator.")
    (license license:asl2.0)))

(define-public go-github-com-lasiar-canonicalheader
  (package
    (name "go-github-com-lasiar-canonicalheader")
    (version "1.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lasiar/canonicalheader")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0g33s71vqlmi6apfdh7wlwwddnqqwyagaxyx7gk51b6x9pc9dppg"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/lasiar/canonicalheader"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-stretchr-testify
                             go-github-com-go-toolsmith-astcast))
    (home-page "https://github.com/lasiar/canonicalheader")
    (synopsis "canonicalheader")
    (description "Code generated by initialismer; DO NOT EDIT.")
    (license license:expat)))

(define-public go-github-com-ldez-gomoddirectives
  (package
    (name "go-github-com-ldez-gomoddirectives")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ldez/gomoddirectives")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16j9ivjw2myb0l2kf8nsvypf8cgvk91zkdkz15m2xlcz9q8k4cwz"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/ldez/gomoddirectives"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-mod
                             go-github-com-stretchr-testify
                             go-github-com-ldez-grignotin))
    (home-page "https://github.com/ldez/gomoddirectives")
    (synopsis "gomoddirectives")
    (description
     "Package gomoddirectives a linter that handle directives into `go.mod`.")
    (license license:asl2.0)))

(define-public go-github-com-ldez-grignotin
  (package
    (name "go-github-com-ldez-grignotin")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ldez/grignotin")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0manxlkwds0jfds853zjpxbsv19wzyf26h9swrik6ja4gkhh5yz4"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/ldez/grignotin"))
    (propagated-inputs (list go-golang-org-x-mod
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/ldez/grignotin")
    (synopsis "Grignotin")
    (description
     "This package provides a collection of small helpers around Go proxy, Go meta
information, etc.")
    (license license:asl2.0)))

(define-public go-github-com-ledongthuc-pdf
  (package
    (name "go-github-com-ledongthuc-pdf")
    (version "0.0.0-20240201131950-da5b75280b06")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ledongthuc/pdf")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0c1b2sxvxwpvv9b5xawr8i2dl2d6xlcdi7bdjjg0nbvxgh74269f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ledongthuc/pdf"))
    (home-page "https://github.com/ledongthuc/pdf")
    (synopsis "PDF Reader")
    (description "Package pdf implements reading of PDF files.")
    (license license:bsd-3)))

(define-public go-github-com-leonklingele-grouper
  (package
    (name "go-github-com-leonklingele-grouper")
    (version "1.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/leonklingele/grouper")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10lhsjvdb9rcfdlyyjnib9nlpzv0gmgivp8bkpnycdi1m3y4y5ia"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/leonklingele/grouper"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/leonklingele/grouper")
    (synopsis "grouper — a Go linter to analyze expression groups")
    (description #f)
    (license license:gpl3)))

(define-public go-github-com-lesismal-llib
  (package
    (name "go-github-com-lesismal-llib")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lesismal/llib")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cg7m0gzx9c5hn3y4kyabha1mybh8nxzkkvsfxzym0hn9hz4zcrw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lesismal/llib"))
    (propagated-inputs (list go-golang-org-x-net go-golang-org-x-crypto))
    (home-page "https://github.com/lesismal/llib")
    (synopsis "llib -")
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-lesismal-nbio
  (package
    (name "go-github-com-lesismal-nbio")
    (version "1.5.12")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lesismal/nbio")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11i80vjkfsvnd9mim9dxhmazh0fwg0lx5z4v9mfr4qwx4cnpbwss"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lesismal/nbio"))
    (propagated-inputs (list go-github-com-lesismal-llib))
    (home-page "https://github.com/lesismal/nbio")
    (synopsis "NBIO - NON-BLOCKING IO")
    (description
     "For more details:
@@url{https://github.com/lesismal/go-websocket-benchmark,go-websocket-benchmark}.")
    (license license:expat)))

(define-public go-github-com-lestrrat-go-iter
  (package
    (name "go-github-com-lestrrat-go-iter")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lestrrat-go/iter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1p5fhw5g3kh7c6hvw2mc1r4ckxb3ax262x8b736yyhpv2ynl8jyz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lestrrat-go/iter"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/lestrrat-go/iter")
    (synopsis "iter")
    (description "Simple tools for container iteration.")
    (license license:expat)))

(define-public go-github-com-letsencrypt-borp
  (package
    (name "go-github-com-letsencrypt-borp")
    (version "0.0.0-20240620175310-a78493c6e2bd")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/letsencrypt/borp")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qigkiky31vwf1hcx8xl08bi63dfnvzaq9cp75vj2q5vmcv839w2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/letsencrypt/borp"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-poy-onpar
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-go-sql-driver-mysql))
    (home-page "https://github.com/letsencrypt/borp")
    (synopsis "Boulder's Object Relational Persistence")
    (description
     "Package borp provides a simple way to marshal Go structs to and from SQL
databases.  It uses the database/sql package, and should work with any compliant
database/sql driver.")
    (license license:expat)))

(define-public go-github-com-letsencrypt-boulder
  (package
    (name "go-github-com-letsencrypt-boulder")
    (version "0.0.0-20250528170803-dea81c7381f1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/letsencrypt/boulder")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vrmmhxy5kdp3vlhgs9ix9a6630x15r4kydcdd0lf2x830vlwy3c"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/letsencrypt/boulder"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-golang-org-x-time
                        go-golang-org-x-text
                        go-golang-org-x-term
                        go-golang-org-x-sync
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-go-opentelemetry-io-otel-trace
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp
                        go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
                        go-github-com-zmap-zlint-v3
                        go-github-com-zmap-zcrypto
                        go-github-com-weppos-publicsuffix-go
                        go-github-com-titanous-rocacheck
                        go-github-com-redis-go-redis-v9 ; packaged

                        go-github-com-redis-go-redis-extra-redisotel-v9
                        go-github-com-prometheus-client-model
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-nxadm-tail
                        go-github-com-miekg-pkcs11
                        go-github-com-miekg-dns
                        go-github-com-letsencrypt-validator-v10
                        go-github-com-letsencrypt-pkcs11key-v4
                        go-github-com-letsencrypt-challtestsrv ; packaged
                        go-github-com-letsencrypt-borp
                        go-github-com-jmhodges-clock
                        go-github-com-grpc-ecosystem-go-grpc-middleware-providers-prometheus ; packaged
                        go-github-com-google-certificate-transparency-go
                        go-github-com-golang-groupcache
                        go-github-com-go-sql-driver-mysql
                        go-github-com-go-logr-stdr
                        go-github-com-go-jose-go-jose-v4 ; packaged
                        go-github-com-eggsampler-acme-v3
                        go-github-com-aws-smithy-go
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2))
    (home-page "https://github.com/letsencrypt/boulder")
    (synopsis "Boulder - An ACME CA")
    (description
     "This is an implementation of an ACME-based CA. The allows the CA to
automatically verify that an applicant for a certificate actually controls an
identifier, and allows domain holders to issue and revoke certificates for their
domains.  Boulder is the software that runs .")
    (license license:mpl2.0)))

(define-public go-github-com-letsencrypt-pkcs11key-v4
  (package
    (name "go-github-com-letsencrypt-pkcs11key-v4")
    (version "4.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/letsencrypt/pkcs11key")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ynmw2zhsr1m880clc2hgmc53cx6b69wdcjddw9pz0sysddnpb81"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/letsencrypt/pkcs11key/v4"
      #:unpack-path "github.com/letsencrypt/pkcs11key"))
    (propagated-inputs (list go-github-com-miekg-pkcs11 ; packaged
                             ))
    (home-page "https://github.com/letsencrypt/pkcs11key")
    (synopsis #f)
    (description
     "Package pkcs11key implements crypto.Signer for PKCS #11 private keys.  See
@@url{https://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.pdf,https://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.pdf}
for details of the Cryptoki PKCS#11 API. See
@@url{https://github.com/letsencrypt/pkcs11key/blob/master/test.sh,https://github.com/letsencrypt/pkcs11key/blob/master/test.sh}
for examples of how to test and/or benchmark.")
    (license license:bsd-2)))

(define-public go-github-com-letsencrypt-validator-v10
  (package
    (name "go-github-com-letsencrypt-validator-v10")
    (version "10.0.0-20230304002924-2ed8f7d619ac")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/letsencrypt/validator")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sjwh635g8mf7s21f56nx99v1hica568j56b2r4bmfnnkm2ncxs2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/letsencrypt/validator/v10"
      #:unpack-path "github.com/letsencrypt/validator"))
    (propagated-inputs (list go-github-com-go-playground-universal-translator
                             go-github-com-go-playground-locales
                             go-github-com-go-playground-assert-v2))
    (home-page "https://github.com/letsencrypt/validator")
    (synopsis "Package validator")
    (description
     "Package validator implements value validations for structs and individual fields
based on tags.")
    (license license:expat)))

(define-public go-github-com-lieut-data-squirrel
  (package
    (name "go-github-com-lieut-data-squirrel")
    (version "0.0.0-20240201131950-da5b75280b06")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lieut-data/squirrel")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0c1b2sxvxwpvv9b5xawr8i2dl2d6xlcdi7bdjjg0nbvxgh74269f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lieut-data/squirrel"))
    (home-page "https://github.com/lieut-data/squirrel")
    (synopsis "")
    (description "")
    (license license:bsd-3)))

(define-public go-github-com-liggitt-tabwriter
  (package
    (name "go-github-com-liggitt-tabwriter")
    (version "0.0.0-20181228230101-89fcab3d43de")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/liggitt/tabwriter")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04q8d0jk1ymvy7pv1dgfbqzk8gcjfa77psg1lk30ghlisf54pakg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/liggitt/tabwriter"))
    (home-page "https://github.com/liggitt/tabwriter")
    (synopsis #f)
    (description
     "Package tabwriter implements a write filter (tabwriter.Writer) that translates
tabbed columns in input into properly aligned text.")
    (license license:bsd-3)))

(define-public go-github-com-lightstep-lightstep-tracer-common-golang-gogo
  (package
    (name "go-github-com-lightstep-lightstep-tracer-common-golang-gogo")
    (version "0.0.0-20210210170715-a8dfcb80d3a7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lightstep/lightstep-tracer-common")
             (commit (go-version->git-ref version
                                          #:subdir "golang/gogo"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06xcwkcaw2fgl37yryxqkap0v2nvbgdgm35714j2bv6x1a8l19hl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lightstep/lightstep-tracer-common/golang/gogo"
      #:unpack-path "github.com/lightstep/lightstep-tracer-common"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-google-golang-org-genproto go-golang-org-x-net
                             go-github-com-gogo-protobuf))
    (home-page "https://github.com/lightstep/lightstep-tracer-common")
    (synopsis #f)
    (description
     "This package provides a package file to ensure that go modules will recognize
the dependency correctly.")
    (license license:expat)))

(define-public go-github-com-lightstep-lightstep-tracer-go
  (package
    (name "go-github-com-lightstep-lightstep-tracer-go")
    (version "0.26.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lightstep/lightstep-tracer-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15y0z58dc682bcq0ksrz258lbikyndm7g9b9wlw500j9x6n5xadf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lightstep/lightstep-tracer-go"))
    (propagated-inputs (list go-google-golang-org-grpc
                        go-go-opencensus-io ; packaged

                        go-github-com-opentracing-opentracing-go
                        go-github-com-onsi-gomega
                        go-github-com-onsi-ginkgo
                        go-github-com-lightstep-lightstep-tracer-common-golang-gogo
                        go-github-com-gogo-protobuf))
    (home-page "https://github.com/lightstep/lightstep-tracer-go")
    (synopsis "lightstep-tracer-go")
    (description
     "Package lightstep implements the @code{LightStep} @code{OpenTracing} client for
Go.")
    (license license:expat)))

(define-public go-github-com-lighttiger2505-sqls
  (package
    (name "go-github-com-lighttiger2505-sqls")
    (version "0.2.28")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sqls-server/sqls")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s32la10bcl2jpdp0mckr1p39wqrphpa2s0l7j7f5yd77p5cnz3g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lighttiger2505/sqls"))
    (propagated-inputs (list go-github-com-vertica-vertica-sql-go
                             go-github-com-olekukonko-tablewriter
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-k0kubun-pp
                             go-gopkg-in-yaml-v2
                             go-golang-org-x-crypto
                             go-github-com-urfave-cli-v2
                             go-github-com-sourcegraph-jsonrpc2
                             go-github-com-jackc-pgx-v4
                             go-github-com-google-go-cmp
                             go-github-com-godror-godror
                             go-github-com-go-sql-driver-mysql
                             go-github-com-denisenkom-go-mssqldb
                             go-github-com-codingame-h2go))
    (home-page "https://github.com/lighttiger2505/sqls")
    (synopsis "sqls")
    (description "An implementation of the Language Server Protocol for SQL.")
    (license license:expat)))

(define-public go-github-com-linkedin-goavro-v2
  (package
    (name "go-github-com-linkedin-goavro-v2")
    (version "2.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/linkedin/goavro")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vc1dcrzpn8j9mmr7xaw8w9nliysdxkxhz6xcvzfsbnsism8dfkp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/linkedin/goavro/v2"
      #:unpack-path "github.com/linkedin/goavro"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-golang-snappy))
    (home-page "https://github.com/linkedin/goavro")
    (synopsis "goavro")
    (description
     "Package goavro is a library that encodes and decodes Avro data.")
    (license license:asl2.0)))

(define-public go-github-com-linode-linodego
  (package
    (name "go-github-com-linode-linodego")
    (version "1.44.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/linode/linodego")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15sb75ya5cy4fnj76ls31vawyl95g01mpbzb21ib2zbz7qzid5pq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/linode/linodego"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-gopkg-in-ini-v1
                             go-golang-org-x-text
                             go-golang-org-x-oauth2
                             go-golang-org-x-net
                             go-github-com-jarcoal-httpmock
                             go-github-com-google-go-querystring
                             go-github-com-google-go-cmp
                             go-github-com-go-resty-resty-v2))
    (home-page "https://github.com/linode/linodego")
    (synopsis "linodego")
    (description
     "Go client for @@url{https://techdocs.akamai.com/linode-api/reference/api,Linode
REST v4 API}.")
    (license license:expat)))

(define-public go-github-com-linuxkit-virtsock
  (package
    (name "go-github-com-linuxkit-virtsock")
    (version "0.0.0-20241009230534-cb6a20cc0422")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/linuxkit/virtsock")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08f8m6jnq76p1996wbf5kw8s1p9g3ix373rb4f46n9qg1qang4bl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/linuxkit/virtsock"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/linuxkit/virtsock")
    (synopsis "Organisation")
    (description
     "This repository contains Go bindings and sample code for
@@url{https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/develop/make_mgmt_service,Hyper-V
sockets} and @@url{http://stefanha.github.io/virtio/,virtio sockets}(VSOCK).")
    (license license:asl2.0)))

(define-public go-github-com-liquidweb-go-lwapi
  (package
    (name "go-github-com-liquidweb-go-lwapi")
    (version "0.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/liquidweb/go-lwApi")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1znmh18qkc00j5fs9wkmhmzpqg5lh4ayxjlbybfcbgbsbjhzx83l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/liquidweb/go-lwApi"))
    (home-page "https://github.com/liquidweb/go-lwApi")
    (synopsis "go-lwApi")
    (description
     "Package @code{lwApi} is a minimalist API client to @code{LiquidWeb's}
(@@url{https://www.liquidweb.com,https://www.liquidweb.com}) API:.")
    (license license:asl2.0)))

(define-public go-github-com-liquidweb-liquidweb-cli
  (package
    (name "go-github-com-liquidweb-liquidweb-cli")
    (version "0.6.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/liquidweb/liquidweb-cli")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "127hyxsy842vydsax54jrmq39vzqwydp2l424x6jxl5d9vh921bp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/liquidweb/liquidweb-cli"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-golang-org-x-crypto
                             go-github-com-spf13-viper
                             go-github-com-spf13-cobra
                             go-github-com-spf13-cast
                             go-github-com-mitchellh-mapstructure
                             go-github-com-mitchellh-go-homedir
                             go-github-com-liquidweb-go-lwapi
                             go-github-com-k0kubun-go-ansi
                             go-github-com-google-go-github-v32
                             go-github-com-c-bata-go-prompt))
    (home-page "https://github.com/liquidweb/liquidweb-cli")
    (synopsis "lw (liquidweb-cli)")
    (description "Copyright © @code{LiquidWeb}.")
    (license license:asl2.0)))

(define-public go-github-com-liquidweb-liquidweb-go
  (package
    (name "go-github-com-liquidweb-liquidweb-go")
    (version "1.6.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/liquidweb/liquidweb-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1pxri9p8cw68ih1dm4ha2vfq1rvzmnlc4gj2sf97qj4h1v7fxmmb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/liquidweb/liquidweb-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-liquidweb-liquidweb-cli))
    (home-page "https://github.com/liquidweb/liquidweb-go")
    (synopsis "Usage")
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-lpar-date
  (package
    (name "go-github-com-lpar-date")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lpar/date")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03vjnabrxhrvc4ws0adyxc6vy6ds990hnsfbr5nxyblvchyyxvj7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lpar/date"))
    (home-page "https://github.com/lpar/date")
    (synopsis "date")
    (description
     "Minimal utility functions for working with SQL dates and other date-only dates
in Go.")
    (license license:bsd-3)))

(define-public go-github-com-lrstanley-bubblezone
  (package
    (name "go-github-com-lrstanley-bubblezone")
    (version "0.0.0-20250110055121-b45205ce63e2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lrstanley/bubblezone")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17w445bjpffk9a5xxyli67j68sk56c286wa34y84mgjm1cxpqb6r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lrstanley/bubblezone"))
    (propagated-inputs (list go-github-com-muesli-ansi
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-bubbletea))
    (home-page "https://github.com/lrstanley/bubblezone")
    (synopsis "🔗 Table of Contents")
    (description
     "@@url{https://github.com/charmbracelet/bubbletea,@code{BubbleTea}} and
@@url{https://github.com/charmbracelet/lipgloss,lipgloss} allow you to build
extremely fast terminal interfaces, in a semantic and scalable way.  Through
abstracting layout, colors, events, and more, it's very easy to build a
user-friendly application. @code{BubbleTea} also supports mouse events, either
through the \"basic\" mouse events, like @@code{@code{MouseButtonLeft}},
@@code{@code{MouseButtonRight}}, @@code{@code{MouseButtonWheelUp}} and
@@code{@code{MouseButtonWheelDown}}
(@@url{https://github.com/charmbracelet/bubbletea/raw/0a0182e55a30e85640a53b8e01dc9ef06824cce5/mouse.go#L38-L48,and
more}), or through full motion tracking, allowing hover and mouse movement
tracking.")
    (license license:expat)))

(define-public go-github-com-lrstanley-girc
  (package
    (name "go-github-com-lrstanley-girc")
    (version "0.0.0-20241221063712-0c03e8d927ff")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lrstanley/girc")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "160ac2iwq46q36cj9b73vcl2ni1mh8m0hrnzvjdvbpk9l0hw2f8b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lrstanley/girc"))
    (home-page "https://github.com/lrstanley/girc")
    (synopsis "🔗 Table of Contents")
    (description
     "Package girc provides a high level, yet flexible IRC library for use with
interacting with IRC servers.  girc has support for user/channel tracking, as
well as a few other neat features (like auto-reconnect).")
    (license license:expat)))

(define-public go-github-com-lucasjones-reggen
  (package
    (name "go-github-com-lucasjones-reggen")
    (version "0.0.0-20200904144131-37ba4fa293bb")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lucasjones/reggen")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0r66s2qsmgas8ij0yibz63v3rjn7sivgqadpldzaknzjl8nj4pdr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lucasjones/reggen"))
    (home-page "https://github.com/lucasjones/reggen")
    (synopsis "Reg-gen")
    (description "Package reggen generates text based on regex definitions.")
    (license license:expat)))

(define-public go-github-com-lufia-plan9stats
  (package
    (name "go-github-com-lufia-plan9stats")
    (version "0.0.0-20240909124753-873cd0166683")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lufia/plan9stats")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1aa02pks0jrcjkxksd7wpivd888a8nsdlxki8a1ji42bi57fs87x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lufia/plan9stats"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://github.com/lufia/plan9stats")
    (synopsis "plan9stats")
    (description "Package stats provides statistic utilities for Plan 9.")
    (license license:bsd-3)))

(define-public go-github-com-lunny-nodb
  (package
    (name "go-github-com-lunny-nodb")
    (version "0.0.0-20160621015157-fc1ef06ad4af")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lunny/nodb")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08p6sxphi5w9mm43pj9ma5v4n5r2v0xr7nzmp2nya3hpn9fq2vcj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lunny/nodb"))
    (home-page "https://github.com/lunny/nodb")
    (synopsis "NoDB")
    (description "package nodb is a high performance embedded @code{NoSQL}.")
    (license license:expat)))

(define-public go-github-com-lunny-vfsgen
  (package
    (name "go-github-com-lunny-vfsgen")
    (version "0.0.0-20200824052919-0d455de96546")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lunny/vfsgen")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0md1vgaq95x1jmxpnsfv6s9xf3v8gqi7lcl7mkxpf6274rf1n2pk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lunny/vfsgen"))
    (home-page "https://github.com/lunny/vfsgen")
    (synopsis "vfsgen")
    (description
     "Package vfsgen takes an http.@code{FileSystem} (likely at `go generate` time)
and generates Go code that statically implements the provided
http.@code{FileSystem}.")
    (license license:expat)))

(define-public go-github-com-lxc-incus-v6
  (package
    (name "go-github-com-lxc-incus-v6")
    (version "6.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lxc/incus")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17kdd13sq5bdq4i6cg6c73rw6ksw2w6w1q8mj3wf40xixm7rrgr2"))))
    (build-system go-build-system)
    (arguments
     (list
     ;; check-go-version
      #:import-path "github.com/lxc/incus/v6"
      #:unpack-path "github.com/lxc/incus"))
    (propagated-inputs (list
                             go-github-com-armon-go-proxyproto           ; packaged
                             go-github-com-cenkalti-backoff-v4 ;packaged

                             go-github-com-checkpoint-restore-go-criu-v6
                             go-github-com-cowsql-go-cowsql              ; packaged
                             go-github-com-digitalocean-go-qemu
                             go-github-com-digitalocean-go-smbios        ; packaged
                             go-github-com-dustinkirkland-golang-petname ; packaged
                             go-github-com-flosch-pongo2-v6              ; packaged
                             go-github-com-fvbommel-sortorder            ; packaged
                             go-github-com-go-acme-lego-v4
                             go-github-com-go-chi-chi-v5                 ; packaged
                             go-github-com-go-jose-go-jose-v4            ; packaged
                             go-github-com-go-logr-logr
                             go-github-com-golang-jwt-jwt-v5 ;packaged

                             go-github-com-google-gopacket               ; packaged
                             go-github-com-google-uuid
                             go-github-com-gorilla-mux
                             go-github-com-gorilla-websocket
                             go-github-com-gosexy-gettext                ; packaged
                             go-github-com-insomniacslk-dhcp             ; packaged
                             go-github-com-j-keck-arping
                             go-github-com-jaypipes-pcidb                ; packaged
                             go-github-com-jochenvg-go-udev              ; packaged
                             go-github-com-kballard-go-shellquote        ; packaged
                             go-github-com-lxc-go-lxc                    ; packaged
                             go-github-com-mattn-go-colorable
                             go-github-com-mattn-go-sqlite3              ; packaged
                             go-github-com-mdlayher-ndp                  ; packaged
                             go-github-com-mdlayher-netx                 ; packaged
                             go-github-com-mdlayher-vsock
                             go-github-com-miekg-dns
                             go-github-com-minio-minio-go-v7             ; packaged
                             go-github-com-mitchellh-mapstructure
                             go-github-com-olekukonko-tablewriter
                             go-github-com-opencontainers-runtime-spec   ; packaged
                             go-github-com-openfga-go-sdk                ; packaged
                             go-github-com-osrg-gobgp-v3
                             go-github-com-ovn-org-libovsdb
                             go-github-com-pierrec-lz4-v4
                             go-github-com-pkg-sftp
                             go-github-com-pkg-xattr
                             go-github-com-rican7-retry                  ; packaged
                             go-github-com-robfig-cron-v3
                             go-github-com-sirupsen-logrus
                             go-github-com-spf13-cobra
                             go-github-com-stretchr-testify
                             go-github-com-syndtr-gocapability
                             go-github-com-vishvananda-netlink
                             go-github-com-zitadel-oidc-v3               ; packaged
                             go-go-starlark-net ; packaged
                             go-golang-org-x-crypto                      ; packaged
                             go-golang-org-x-exp                         ; packaged
                             go-golang-org-x-oauth2                      ; packaged
                             go-golang-org-x-sync                        ; packaged
                             go-golang-org-x-sys                         ; packaged
                             go-golang-org-x-term                        ; packaged
                             go-golang-org-x-text                        ; packaged
                             go-google-golang-org-protobuf
                             go-gopkg-in-tomb-v2
                             go-gopkg-in-yaml-v2
                             go-k8s-io-utils
                             ))
    (home-page "https://github.com/lxc/incus")
    (synopsis "Incus")
    (description
     "Incus is a modern, secure and powerful system container and virtual machine
manager.")
    (license license:asl2.0)))

(define-public go-github-com-lxn-win
  (package
    (name "go-github-com-lxn-win")
    (version "0.0.0-20210218163916-a377121e959e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/lxn/win")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0r2jpl8nqysnji4wwj50571py1p2ipmn27859w085ibyqy2xsik8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/lxn/win"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/lxn/win")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-macabu-inamedparam
  (package
    (name "go-github-com-macabu-inamedparam")
    (version "0.1.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/macabu/inamedparam")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15xcls08ndal46w68pjjqgy8vcvg3a9znpilsmn0mx4d7q9y7563"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/macabu/inamedparam"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-testutil))
    (home-page "https://github.com/macabu/inamedparam")
    (synopsis "inamedparam")
    (description
     "This package provides a linter that reports interfaces with unnamed method
parameters.")
    (license license:expat)))

(define-public go-github-com-magefile-mage
  (package
    (name "go-github-com-magefile-mage")
    (version "1.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/magefile/mage")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zjglw9ra0mc77d6i3yavhihp94qzr9rqx1lhs9whm3qw7gyz4v9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/magefile/mage"))
    (home-page "https://github.com/magefile/mage")
    (synopsis "About")
    (description
     "Mage is a make-like build tool using Go.  You write plain-old go functions, and
Mage automatically uses them as Makefile-like runnable targets.")
    (license license:asl2.0)))

(define-public go-github-com-mailgun-raymond-v2
  (package
    (name "go-github-com-mailgun-raymond-v2")
    (version "2.0.48")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mailgun/raymond")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zg22w15avn2w0mv8qzzm6xyjvz942iqfd3dsqj2hy7x69nsyb8w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mailgun/raymond/v2"
      #:unpack-path "github.com/mailgun/raymond"))
    (propagated-inputs (list go-gopkg-in-yaml-v2))
    (home-page "https://github.com/mailgun/raymond")
    (synopsis "raymond")
    (description "Package raymond provides handlebars evaluation.")
    (license license:expat)))

(define-public go-github-com-makeworld-the-better-one-dither-v2
  (package
    (name "go-github-com-makeworld-the-better-one-dither-v2")
    (version "2.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/makew0rld/dither")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0y1q1lnzsyfzksiwyc2xjbmaj9r3rmfqhgq681rz33inyssvn0nf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/makeworld-the-better-one/dither/v2"
      #:unpack-path "github.com/makeworld-the-better-one/dither"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/makeworld-the-better-one/dither")
    (synopsis "dither")
    (description
     "dither is a library for dithering images in Go.  It has many dithering
algorithms built-in, and allows you to specify your own.  Correctness is a top
priority, as well as performance.  It is designed to work well on its own, but
also implements interfaces from the standard library, so that it can be
integrated easily in a wide variety of situtations.")
    (license license:mpl2.0)))

(define-public go-github-com-makiuchi-d-gozxing
  (package
    (name "go-github-com-makiuchi-d-gozxing")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/makiuchi-d/gozxing")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1204r25c9ynw7a5sblcyz7hd0ca4c7l9khac61mjhi9v07n4n7xi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/makiuchi-d/gozxing"))
    (propagated-inputs (list go-golang-org-x-xerrors go-golang-org-x-text))
    (home-page "https://github.com/makiuchi-d/gozxing")
    (synopsis "gozxing A Barcode Scanning/Encoding Library for Go")
    (description
     "@@url{https://github.com/zxing/zxing,ZXing} is an open-source, multi-format
1D/2D barcode image processing library for Java.  This project is a port of
ZXing core library to pure Go.")
    (license #f))) ; check

(define-public go-github-com-manifoldco-promptui
  (package
    (name "go-github-com-manifoldco-promptui")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/manifoldco/promptui")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nnlj1ahwq4ar5gbvxg8dqjl1wl5r8mhcm0bixg1c4wiihz8xv8m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/manifoldco/promptui"))
    (propagated-inputs (list go-github-com-chzyer-readline))
    (home-page "https://github.com/manifoldco/promptui")
    (synopsis "promptui")
    (description
     "Package promptui is a library providing a simple interface to create
command-line prompts for go.  It can be easily integrated into spf13/cobra,
urfave/cli or any cli go application.")
    (license license:bsd-3)))

(define-public go-github-com-manveru-faker
  (package
    (name "go-github-com-manveru-faker")
    (version "0.0.0-20171103152722-9fbc68a78c4d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/manveru/faker")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cnrf4wdjhxd9fryhlp2krl9acz6dzwic89gshs49pg3aajlf4dy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/manveru/faker"))
    (home-page "https://github.com/manveru/faker")
    (synopsis "Faker for Go")
    (description "faker generates fake data in various languages.")
    (license license:expat)))

(define-public go-github-com-maratori-testableexamples
  (package
    (name "go-github-com-maratori-testableexamples")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/maratori/testableexamples")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05hzcxhbpa1wr0ip3jhq6pw2fhm6kxl1vdrcwq0rpa112dxxg45v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/maratori/testableexamples"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/maratori/testableexamples")
    (synopsis "testableexamples")
    (description
     "Linter checks if examples are testable (have an expected output).")
    (license license:expat)))

(define-public go-github-com-maratori-testpackage
  (package
    (name "go-github-com-maratori-testpackage")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/maratori/testpackage")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jbg6bg4z8cip8vklzckdll6qig38b25lf3fbgv0zhb6fk9bxmxj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/maratori/testpackage"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/maratori/testpackage")
    (synopsis "testpackage")
    (description
     "testpackage is golang linter that makes you use a separate `_test` package.")
    (license license:expat)))

(define-public go-github-com-marekm4-color-extractor
  (package
    (name "go-github-com-marekm4-color-extractor")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/marekm4/color-extractor")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mhwrr6ls23rmggaj3a40jjd5q027bwj2s89bn58wy6g78l4bdy0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/marekm4/color-extractor"))
    (home-page "https://github.com/marekm4/color-extractor")
    (synopsis #f)
    (description
     "Simple image color extractor written in Go with no external dependencies.")
    (license license:expat)))

(define-public go-github-com-markbates-going
  (package
    (name "go-github-com-markbates-going")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/markbates/going")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14b8mj3x7bynpdw99a260j6gpjsqnki5fh3bbsf9cyggsgai11zz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/markbates/going"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-serenize-snaker))
    (home-page "https://github.com/markbates/going")
    (synopsis "github.com/markbates/going")
    (description
     "This project houses, what I consider to be some help packages for writing Go
applications.  Your mileage may vary, but I find them to be pretty darn helpful.")
    (license license:expat)))

(define-public go-github-com-markbates-goth
  (package
    (name "go-github-com-markbates-goth")
    (version "1.82.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
              (url "https://github.com/markbates/goth")
              (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f5bgdpm4vpb6jsjr2z0v7xlwg3kgy6h7jhw6mq619bdkl5hv5zd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/markbates/goth"))
    (native-inputs
     (list go-github-com-jarcoal-httpmock
           go-github-com-stretchr-testify))
    (propagated-inputs
     (list go-github-com-go-chi-chi-v5
           go-github-com-golang-jwt-jwt-v5 ;packaged

           go-github-com-gorilla-mux
           go-github-com-gorilla-pat ; packaged
           go-github-com-gorilla-sessions
           go-github-com-lestrrat-go-jwx
           go-github-com-markbates-going
           go-github-com-mrjones-oauth
           go-golang-org-x-oauth2))
    (home-page "https://github.com/markbates/goth")
    (synopsis "Idiomatic authentication for web applications in Golang")
    (description
     "This package implements a functionality to write OAuth, OAuth2 or any
similar protocol providers for authentication in web applications.")
    (license license:expat)))


(define-public go-github-com-markbates-pkger
  (package
    (name "go-github-com-markbates-pkger")
    (version "0.17.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/markbates/pkger")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12zcvsd6bv581wwhahp1wy903495s51lw86b99cfihwmxc5qw6ww"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/markbates/pkger"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-gobuffalo-here))
    (home-page "https://github.com/markbates/pkger")
    (synopsis "Pkger")
    (description
     "@@url{https://godoc.org/github.com/markbates/pkger,(code
github.com/markbates/pkger)} is a tool for embedding static files into Go
binaries.  It will, hopefully, be a replacement for
@@url{https://godoc.org/github.com/gobuffalo/packr/v2,(code
github.com/gobuffalo/packr/v2)}.")
    (license license:expat)))

(define-public go-github-com-martinhoefling-goxkcdpwgen
  (package
    (name "go-github-com-martinhoefling-goxkcdpwgen")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/martinhoefling/goxkcdpwgen")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "198i80v3rxjnnc0m2nkyxx6spad7393a8ywgdmyq51k5cksyzmzb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/martinhoefling/goxkcdpwgen"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/martinhoefling/goxkcdpwgen")
    (synopsis "goxkcdpwgen")
    (description "xkcd style password generator library and cli tool.")
    (license license:expat)))

(define-public go-github-com-maruel-panicparse-v2
  (package
    (name "go-github-com-maruel-panicparse-v2")
    (version "2.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/maruel/panicparse")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1pic49crmn1dy7rf2fnghhzv36722ixqraq5bkn8xgrqilf4w4qh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/maruel/panicparse/v2"
      #:unpack-path "github.com/maruel/panicparse"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-mgutz-ansi
                             go-github-com-mattn-go-isatty
                             go-github-com-mattn-go-colorable
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/maruel/panicparse")
    (synopsis "panicparse")
    (description
     "panicparse: analyzes stack dump of Go processes and simplifies it.")
    (license license:asl2.0)))

(define-public go-github-com-masterminds-semver
  (package
    (name "go-github-com-masterminds-semver")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Masterminds/semver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i169xscsxsh8lsw8bz2apnsqixld37xdnfh36i30xy5wnf0iwfx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Masterminds/semver"))
    (home-page "https://github.com/Masterminds/semver")
    (synopsis "SemVer")
    (description
     "Package semver provides the ability to work with Semantic Versions
(@@url{http://semver.org,http://semver.org}) in Go.")
    (license license:expat)))

(define-public go-github-com-masterminds-sprig
  (package
    (name "go-github-com-masterminds-sprig")
    (version "2.22.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Masterminds/sprig")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09dzwhj4zh3p6f1jhyic16n4qdnvpamz7hyk9fycpm4b1jfq63gd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Masterminds/sprig"))
    (home-page "https://github.com/Masterminds/sprig")
    (synopsis "Sprig: Template functions for Go templates")
    (description "Sprig: Template functions for Go.")
    (license license:expat)))

(define-public go-github-com-masterzen-simplexml
  (package
    (name "go-github-com-masterzen-simplexml")
    (version "0.0.0-20190410153822-31eea3082786")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/masterzen/simplexml")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01pf2jpigbd1mr0csp6yxrjfrbhwxydi1kkpl2n6blysmx398js7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/masterzen/simplexml"))
    (home-page "https://github.com/masterzen/simplexml")
    (synopsis "Simplexml Dom library for Go")
    (description
     "This is a naive and simple Go library to build a XML DOM to be able to produce
XML content.  This is mainly used by the \"@code{WinRM} Go
library\":[@@url{http://github.com/masterzen/winrm%5D,http://github.com/masterzen/winrm]}.")
    (license license:asl2.0)))

(define-public go-github-com-masterzen-winrm
  (package
    (name "go-github-com-masterzen-winrm")
    (version "0.0.0-20240702205601-3fad6e106085")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/masterzen/winrm")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z3ck2aj1rrqk7qaxqbwrgm7r4hdfp2ysl03rix5kladnjj0v7am"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/masterzen/winrm"))
    (propagated-inputs (list go-gopkg-in-check-v1
                             go-golang-org-x-text
                             go-github-com-masterzen-simplexml
                             go-github-com-jcmturner-gokrb5-v8
                             go-github-com-gofrs-uuid
                             go-github-com-bodgit-ntlmssp
                             go-github-com-christrenkamp-goxpath
                             go-github-com-azure-go-ntlmssp ; packaged
                             ))
    (home-page "https://github.com/masterzen/winrm")
    (synopsis "WinRM for Go")
    (description
     ": if you're looking for the @@code{winrm} command-line tool, this has been
splitted from this project and is available at
@@url{https://github.com/masterzen/winrm-cli,winrm-cli}.")
    (license license:asl2.0)))

(define-public go-github-com-matoous-go-nanoid
  (package
    (name "go-github-com-matoous-go-nanoid")
    (version "1.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matoous/go-nanoid")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0yi081draczxscwmvacamsxfw2gphg9prn8nmffwz3rw9syzgbg9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/matoous/go-nanoid"))
    (home-page "https://github.com/matoous/go-nanoid")
    (synopsis "Go Nanoid")
    (description
     "This package is Go implementation of @@url{https://github.com/ai,ai's}
@@url{https://github.com/ai/nanoid,nanoid}!")
    (license license:expat)))

(define-public go-github-com-matoous-godox
  (package
    (name "go-github-com-matoous-godox")
    (version "0.0.0-20241227120647-72181c086b34")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matoous/godox")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18q6c3g5vms8bdrp3mrk9wcvdjcbg9zk9rnpbza8ph5y3fvxzm34"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/matoous/godox"))
    (home-page "https://github.com/matoous/godox")
    (synopsis "GoDoX")
    (description
     "Package godox is a linter that scans Go code for comments containing certain
keywords (like TODO, BUG, FIXME) which typically indicate areas that require
attention.")
    (license license:expat)))

(define-public go-github-com-matryer-moq
  (package
    (name "go-github-com-matryer-moq")
    (version "0.5.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matryer/moq")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1746gcclnpiflry1bj1gac6pfy5gr69wjzsw0i75w75hxqd2akb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.24
      #:import-path "github.com/matryer/moq"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-pmezard-go-difflib))
    (home-page "https://github.com/matryer/moq")
    (synopsis "What is Moq?")
    (description "Interface mocking tool for go generate.")
    (license license:expat)))

(define-public go-github-com-matterbridge-go-xmpp
  (package
    (name "go-github-com-matterbridge-go-xmpp")
    (version "0.0.0-20220411225302-271e5088ea27")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matterbridge/go-xmpp")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08y6kbsa9cs4d9qckwg85i64gz7jbv606gqk4sk09172bzaxzsm1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/matterbridge/go-xmpp"))
    (home-page "https://github.com/matterbridge/go-xmpp")
    (synopsis "")
    (description "")
    (license license:asl2.0)))

(define-public go-github-com-matterbridge-gozulipbot
  (package
    (name "go-github-com-matterbridge-gozulipbot")
    (version "0.0.0-20170308165148-c4da7e4e233a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matterbridge/gozulipbot")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0k11r0lg3jl307rbvx2kha0srwm65j2rqf6whikx27wgyglldymz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/matterbridge/gozulipbot"))
    (home-page "https://github.com/matterbridge/gozulipbot")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-matterbridge-logrus-prefixed-formatter
  (package
    (name "go-github-com-matterbridge-logrus-prefixed-formatter")
    (version "0.5.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matterbridge/logrus-prefixed-formatter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mqcdiix0bw0hj6yksiyn4rmgnzblj3x4wdzvf03y0d9vg1zr1na"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/matterbridge/logrus-prefixed-formatter"))
    (home-page "https://github.com/matterbridge/logrus-prefixed-formatter")
    (synopsis "Logrus Prefixed Log Formatter")
    (description
     "@@url{https://github.com/sirupsen/logrus,Logrus} formatter mainly based on
original @@code{logrus.@code{TextFormatter}} but with slightly modified colored
output and support for log entry prefixes, e.g. message source followed by a
colon.  In addition, custom color themes are supported.")
    (license license:expat)))

(define-public go-github-com-matterbridge-matterclient
  (package
    (name "go-github-com-matterbridge-matterclient")
    (version "0.0.0-20240817214420-3d4c3aef3dc1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matterbridge/matterclient")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bw4hbzi9gwng59n0h24is9vss0f2f6j52qhhgkp79bks9wcm190"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/matterbridge/matterclient"))
    (propagated-inputs (list go-github-com-sirupsen-logrus
                        go-github-com-mattermost-mattermost-server-public
                        go-github-com-matterbridge-logrus-prefixed-formatter
                        go-github-com-jpillora-backoff
                        go-github-com-hashicorp-golang-lru
                        go-github-com-gorilla-websocket))
    (home-page "https://github.com/matterbridge/matterclient")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-matterbridge-rocket-chat-go-sdk
  (package
    (name "go-github-com-matterbridge-rocket-chat-go-sdk")
    (version "0.0.0-20190122035005-cf0caa702764")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matterbridge/Rocket.Chat.Go.SDK")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0v6r85xsmqzvxyixqcyplsbaann0w76ms9waabxz7f8y6bz3x352"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/matterbridge/Rocket.Chat.Go.SDK"))
    (home-page "https://github.com/matterbridge/Rocket.Chat.Go.SDK")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-mattermost-go-i18n
  (package
    (name "go-github-com-mattermost-go-i18n")
    (version "1.11.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/go-i18n")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fqr99adcwq64k8nalnjpsyi0niahylwm3q53cq39v5wp0hz3ai0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/go-i18n"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-github-com-pelletier-go-toml))
    (home-page "https://github.com/mattermost/go-i18n")
    (synopsis "go-i18n")
    (description
     "go-i18n is a Go @@url{#readme-package-i18n,package} and a
@@url{#readme-command-goi18n,command} that helps you translate Go programs into
multiple languages.")
    (license license:expat)))

(define-public go-github-com-mattermost-gorp
  (package
    (name "go-github-com-mattermost-gorp")
    (version "2.0.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/gorp")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0d8ms2a85rq86xa3mvm2jsls3h9z2b4r970ymr3av3wap94m6pwj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/gorp"))
    (home-page "https://github.com/mattermost/gorp")
    (synopsis "Go Relational Persistence")
    (description
     "Package gorp provides a simple way to marshal Go structs to and from SQL
databases.  It uses the database/sql package, and should work with any compliant
database/sql driver.")
    (license license:expat)))

(define-public go-github-com-mattermost-gosaml2
  (package
    (name "go-github-com-mattermost-gosaml2")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/gosaml2")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mbnqjpdap2r0rdwks16rqgcfjyrgj1vvr0sfx3343yv9bp7sj3q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/gosaml2"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-russellhaering-goxmldsig
                             go-github-com-mattermost-xml-roundtrip-validator
                             go-github-com-jonboulle-clockwork
                             go-github-com-beevik-etree))
    (home-page "https://github.com/mattermost/gosaml2")
    (synopsis "gosaml2")
    (description
     "SAML 2.0 implemementation for Service Providers based on
@@url{https://github.com/beevik/etree,etree} and
@@url{https://github.com/russellhaering/goxmldsig,goxmldsig}, a pure Go
implementation of XML digital signatures.")
    (license license:asl2.0)))

(define-public go-github-com-mattermost-gziphandler
  (package
    (name "go-github-com-mattermost-gziphandler")
    (version "0.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/gziphandler")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11yqvy8ralm70hjqvdjpgswzsf645dfdlp1yzxdibilm0mn7qvk0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/gziphandler"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-klauspost-compress ; packaged
))
    (home-page "https://github.com/mattermost/gziphandler")
    (synopsis "Gzip Handler")
    (description
     "This is a tiny Go package which wraps HTTP handlers to transparently gzip the
response body, for clients which support it.  Although it's usually simpler to
leave that to a reverse proxy (like nginx or Varnish), this package is useful
when that's undesirable.")
    (license license:asl2.0)))

(define-public go-github-com-mattermost-ldap
  (package
    (name "go-github-com-mattermost-ldap")
    (version "3.0.4+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/ldap")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fh2z86l09z0f8sp4q1q8x3q66rdkxj21bhg2c3z4wi61x652g2i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/ldap"))
    (home-page "https://github.com/mattermost/ldap")
    (synopsis "Basic LDAP v3 functionality for the GO programming language.")
    (description "Package ldap provides basic LDAP v3 functionality.")
    (license license:expat)))

(define-public go-github-com-mattermost-logr
  (package
    (name "go-github-com-mattermost-logr")
    (version "1.0.13")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/logr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f1fih54yqd9z8h47np75hs7l2gvfy267xfhgpw5450am7cqr1dk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/logr"))
    (propagated-inputs (list go-gopkg-in-natefinch-lumberjack-v2
                             go-github-com-wiggin77-merror
                             go-github-com-wiggin77-cfg
                             go-github-com-stretchr-testify
                             go-github-com-francoispqt-gojay))
    (home-page "https://github.com/mattermost/logr")
    (synopsis "logr")
    (description "Logr is a fully asynchronous, contextual logger for Go.")
    (license license:expat)))

(define-public go-github-com-mattermost-logr-v2
  (package
    (name "go-github-com-mattermost-logr-v2")
    (version "2.0.21")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/logr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1warc784pacwahxy20knbilmz6zmfbvy26nfxa5dqhgifgp74z43"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/logr/v2"
      #:unpack-path "github.com/mattermost/logr"))
    (propagated-inputs (list go-gopkg-in-natefinch-lumberjack-v2
                             go-github-com-wiggin77-srslog
                             go-github-com-wiggin77-merror
                             go-github-com-stretchr-testify
                             go-github-com-francoispqt-gojay))
    (home-page "https://github.com/mattermost/logr")
    (synopsis "logr")
    (description
     "Logr is inspired by @@url{https://github.com/sirupsen/logrus,Logrus} and
@@url{https://github.com/uber-go/zap,Zap} but addresses a number of issues:.")
    (license license:expat)))

(define-public go-github-com-mattermost-mattermost-server-v5
  (package
    (name "go-github-com-mattermost-mattermost-server-v5")
    (version "5.39.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/mattermost")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mzf1zv5wm78x4nlv4frw3dz7q1v9rj71q5vjcriidpq986j6av0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/mattermost-server/v5"
      #:unpack-path "github.com/mattermost/mattermost-server"))
    (propagated-inputs (list go-willnorris-com-go-imageproxy
                             go-gopkg-in-yaml-v2
                             go-gopkg-in-olivere-elastic-v6
                             go-gopkg-in-natefinch-lumberjack-v2
                             go-gopkg-in-mail-v2
                             go-golang-org-x-tools
                             go-golang-org-x-text
                             go-golang-org-x-sync
                             go-golang-org-x-net
                             go-golang-org-x-image
                             go-golang-org-x-crypto
                             go-go-uber-org-zap
                             go-github-com-yuin-goldmark
                             go-github-com-xtgo-uuid
                             go-github-com-wiggin77-srslog
                             go-github-com-wiggin77-merror
                             go-github-com-vmihailenco-msgpack-v5
                             go-github-com-uber-jaeger-lib
                             go-github-com-uber-jaeger-client-go
                             go-github-com-tylerb-graceful
                             go-github-com-tinylib-msgp
                             go-github-com-throttled-throttled
                             go-github-com-stretchr-testify
                             go-github-com-splitio-go-client-v6
                             go-github-com-spf13-cobra
                             go-github-com-sirupsen-logrus
                             go-github-com-rwcarlsen-goexif ; packaged
                             go-github-com-russellhaering-goxmldsig
                             go-github-com-rudderlabs-analytics-go
                             go-github-com-rs-cors
                             go-github-com-reflog-dateconstraints
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-pkg-errors
                             go-github-com-pborman-uuid ; packaged
                             go-github-com-opentracing-opentracing-go
                             go-github-com-oov-psd
                             go-github-com-minio-minio-go-v7 ; packaged
                             go-github-com-mholt-archiver-v3
                             go-github-com-mattermost-rsc
                             go-github-com-mattermost-logr
                             go-github-com-mattermost-ldap
                             go-github-com-mattermost-gziphandler
                             go-github-com-mattermost-gosaml2
                             go-github-com-mattermost-gorp
                             go-github-com-mattermost-go-i18n
                             go-github-com-lib-pq
                             go-github-com-ledongthuc-pdf
                             go-github-com-jonboulle-clockwork
                             go-github-com-jmoiron-sqlx ; packaged
                             go-github-com-jaytaylor-html2text
                             go-github-com-icrowley-fake
                             go-github-com-hashicorp-memberlist
                             go-github-com-hashicorp-go-plugin
                             go-github-com-hashicorp-go-multierror
                             go-github-com-hashicorp-go-hclog
                             go-github-com-hako-durafmt
                             go-github-com-h2non-go-is-svg
                             go-github-com-gorilla-websocket
                             go-github-com-gorilla-schema
                             go-github-com-gorilla-mux
                             go-github-com-gorilla-handlers
                             go-github-com-golang-freetype
                             go-github-com-golang-migrate-migrate-v4
                             go-github-com-go-sql-driver-mysql
                             go-github-com-getsentry-sentry-go ; packaged
                             go-github-com-fsnotify-fsnotify ; packaged
                             go-github-com-francoispqt-gojay
                             go-github-com-dyatlov-go-opengraph
                             go-github-com-disintegration-imaging
                             go-github-com-dgryski-dgoogauth
                             go-github-com-dgrijalva-jwt-go
                             go-github-com-cespare-xxhash-v2 ; packaged
                             go-github-com-blevesearch-bleve
                             go-github-com-blang-semver
                             go-github-com-aws-aws-sdk-go
                             go-github-com-avct-uasurfer
                             go-github-com-masterminds-squirrel
                             go-github-com-masterminds-semver-v3
                             go-code-sajari-com-docconv))
    (home-page "https://github.com/mattermost/mattermost-server")
    (synopsis "Table of Contents")
    (description
     "Mattermost is an open source, private cloud, Slack-alternative from
@@url{https://mattermost.com,https://mattermost.com}.")
    (license license:expat))) ; check-license

(define-public go-github-com-mattermost-mattermost-server-v6
  (package
    (name "go-github-com-mattermost-mattermost-server-v6")
    (version "6.7.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/mattermost")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1k5zqnc4yqnad2cw1wpqk22mjra08jz9gf4v692kbrgx3x4d13kh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/mattermost-server/v6"
      #:unpack-path "github.com/mattermost/mattermost-server"))
    (propagated-inputs (list go-github-com-lieut-data-squirrel
                             go-gopkg-in-yaml-v2
                             go-gopkg-in-olivere-elastic-v6
                             go-gopkg-in-mail-v2
                             go-golang-org-x-tools
                             go-golang-org-x-text
                             go-golang-org-x-sync
                             go-golang-org-x-net
                             go-golang-org-x-image
                             go-golang-org-x-crypto
                             go-github-com-yuin-goldmark
                             go-github-com-xtgo-uuid
                             go-github-com-wiggin77-merror
                             go-github-com-vmihailenco-msgpack-v5
                             go-github-com-uber-jaeger-lib
                             go-github-com-uber-jaeger-client-go
                             go-github-com-tylerb-graceful
                             go-github-com-tinylib-msgp
                             go-github-com-throttled-throttled
                             go-github-com-stretchr-testify
                             go-github-com-splitio-go-client-v6
                             go-github-com-spf13-cobra
                             go-github-com-rwcarlsen-goexif ; packaged
                             go-github-com-russellhaering-goxmldsig
                             go-github-com-rudderlabs-analytics-go
                             go-github-com-rs-cors
                             go-github-com-reflog-dateconstraints
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-pkg-errors
                             go-github-com-pborman-uuid ; packaged
                             go-github-com-opentracing-opentracing-go
                             go-github-com-oov-psd
                             go-github-com-minio-minio-go-v7 ; packaged
                             go-github-com-microcosm-cc-bluemonday
                             go-github-com-mholt-archiver-v3
                             go-github-com-mattermost-rsc
                             go-github-com-mattermost-morph
                             go-github-com-mattermost-logr-v2
                             go-github-com-mattermost-ldap
                             go-github-com-mattermost-gziphandler
                             go-github-com-mattermost-gosaml2
                             go-github-com-mattermost-go-i18n
                             go-github-com-lib-pq
                             go-github-com-ledongthuc-pdf
                             go-github-com-jonboulle-clockwork
                             go-github-com-jmoiron-sqlx ; packaged
                             go-github-com-jaytaylor-html2text
                             go-github-com-hashicorp-memberlist
                             go-github-com-hashicorp-go-plugin
                             go-github-com-hashicorp-go-hclog
                             go-github-com-hako-durafmt
                             go-github-com-h2non-go-is-svg
                             go-github-com-graph-gophers-graphql-go
                             go-github-com-graph-gophers-dataloader-v6
                             go-github-com-gorilla-websocket
                             go-github-com-gorilla-schema
                             go-github-com-gorilla-mux
                             go-github-com-gorilla-handlers
                             go-github-com-golang-freetype
                             go-github-com-golang-migrate-migrate-v4
                             go-github-com-go-sql-driver-mysql
                             go-github-com-getsentry-sentry-go ; packaged
                             go-github-com-fsnotify-fsnotify ; packaged
                             go-github-com-francoispqt-gojay
                             go-github-com-dyatlov-go-opengraph
                             go-github-com-disintegration-imaging
                             go-github-com-dgryski-dgoogauth
                             go-github-com-dgrijalva-jwt-go
                             go-github-com-cespare-xxhash-v2 ; packaged
                             go-github-com-blevesearch-bleve-v2
                             go-github-com-blang-semver
                             go-github-com-aws-aws-sdk-go
                             go-github-com-avct-uasurfer
                             go-github-com-masterminds-semver-v3
                             go-code-sajari-com-docconv))
    (home-page "https://github.com/mattermost/mattermost-server")
    (synopsis "Table of Contents")
    (description
     "@@url{https://mattermost.com,Mattermost} is an open source platform for secure
collaboration across the entire software development lifecycle.  This repo is
the primary source for core development on the Mattermost platform; it's written
in Go and React and runs as a single Linux binary with @code{MySQL} or
@code{PostgreSQL}.  A new compiled version is released under an MIT license
every month on the 16th.")
    (license license:expat))) ; check-license

(define-public go-github-com-mattermost-mattermost-server-public
  (package
    (name "go-github-com-mattermost-mattermost-server-public")
    (version "0.1.9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/mattermost")
             (commit (go-version->git-ref version
                                          #:subdir "server/public"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01wbd54f4bkdyk2sxwwkd6y8v6cn4syb9j894hi56070arb9zrg5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/mattermost/mattermost/server/public"
      #:unpack-path "github.com/mattermost/mattermost"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-golang-org-x-tools
                             go-golang-org-x-text
                             go-golang-org-x-oauth2
                             go-golang-org-x-crypto
                             go-github-com-vmihailenco-msgpack-v5
                             go-github-com-tinylib-msgp
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-rudderlabs-analytics-go
                             go-github-com-pkg-errors
                             go-github-com-pborman-uuid ; packaged
                             go-github-com-nicksnyder-go-i18n-v2 ; packaged
                             go-github-com-mattermost-logr-v2
                             go-github-com-mattermost-ldap
                             go-github-com-mattermost-go-i18n
                             go-github-com-lib-pq
                             go-github-com-hashicorp-go-plugin
                             go-github-com-hashicorp-go-multierror
                             go-github-com-hashicorp-go-hclog
                             go-github-com-gorilla-websocket
                             go-github-com-gorilla-mux
                             go-github-com-golang-mock ; packaged
                             go-github-com-go-sql-driver-mysql
                             go-github-com-francoispqt-gojay
                             go-github-com-dyatlov-go-opengraph-opengraph
                             go-github-com-blang-semver-v4))
    (home-page "https://github.com/mattermost/mattermost")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-mattermost-morph
  (package
    (name "go-github-com-mattermost-morph")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/morph")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07ygi6xqsqp77fldvm4c31cjcxcwq284dmyj1ljm4ld5sdmpzf1s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/morph"))
    (propagated-inputs (list go-modernc-org-sqlite
                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-pkg-errors
                             go-github-com-lib-pq
                             go-github-com-go-sql-driver-mysql
                             go-github-com-fatih-color
                             go-github-com-dave-jennifer))
    (home-page "https://github.com/mattermost/morph")
    (synopsis "Morph")
    (description
     "As an application evolves, the data flowing inside inevitably evolves along with
it.  If you have an application that persists the data in a relational database,
the way you store the data will probably change over time.  Morph is a database
migration tool that helps you to apply your migrations.  It is written with Go
so you can use it from your Go application as well.  Read our
@@url{https://mattermost.com/blog/morph-database-schema-migrations-made-easy/,blog
post} to learn more about the motivation behind this project.")
    (license license:expat)))

(define-public go-github-com-mattermost-rsc
  (package
    (name "go-github-com-mattermost-rsc")
    (version "0.0.0-20160330161541-bbaefb05eaa0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/rsc")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1y3mvala0098mhv5mkh2dn1avgfsgpm23v5f5w44hfxg4f4xkvjd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/rsc"))
    (home-page "https://github.com/mattermost/rsc")
    (synopsis "rsc")
    (description "fork of Russ Cox's code.google.com/p/rsc.")
    (license license:bsd-3)))

(define-public go-github-com-mattermost-xml-roundtrip-validator
  (package
    (name "go-github-com-mattermost-xml-roundtrip-validator")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattermost/xml-roundtrip-validator")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "023ijvb5z0yfznj5r291mjz86q5lngj1r84rc3rv36gz0aj6r6bg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattermost/xml-roundtrip-validator"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/mattermost/xml-roundtrip-validator")
    (synopsis "xml-roundtrip-validator")
    (description
     "The Go module @@code{github.com/mattermost/xml-roundtrip-validator} implements
mitigations for multiple security issues in Go's @@code{encoding/xml}.
Applications that use @@code{encoding/xml} for security-critical operations,
such as XML signature validation and SAML, may use the @@code{Validate} and
@@code{@code{ValidateAll}} functions to avoid impact from malicious XML inputs.")
    (license license:asl2.0)))

(define-public go-github-com-mattn-go-oci8
  (package
    (name "go-github-com-mattn-go-oci8")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mattn/go-oci8")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f9ri90rlmn2paa32kl8w7j115rhkb8argvwbzd8q92468qj69hy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mattn/go-oci8"))
    (home-page "https://github.com/mattn/go-oci8")
    (synopsis "go-oci8")
    (description
     "Golang Oracle database driver conforming to the Go database/sql interface.")
    (license license:expat)))

(define-public go-github-com-matttproud-golang-protobuf-extensions
  (package
    (name "go-github-com-matttproud-golang-protobuf-extensions")
    (version "1.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/matttproud/golang_protobuf_extensions")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xqsf9vpcrd4hp95rl6kgmjvkv1df4aicfw4l5vfcxcwxknfx2xs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/matttproud/golang_protobuf_extensions"))
    (propagated-inputs (list go-github-com-golang-protobuf))
    (home-page "https://github.com/matttproud/golang_protobuf_extensions")
    (synopsis "Overview")
    (description
     "This repository provides various Protocol Buffer extensions for the Go language
(golang), namely support for record length-delimited message streaming.")
    (license license:asl2.0)))

(define-public go-github-com-max-sum-base32768
  (package
    (name "go-github-com-max-sum-base32768")
    (version "0.0.0-20230304063302-18e6ce5945fd")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Max-Sum/base32768")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09nakcv5ms0xybczzqm751blqclr3ssgd7f5jp60ahpwz48xrm2c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Max-Sum/base32768"))
    (home-page "https://github.com/Max-Sum/base32768")
    (synopsis "base32768")
    (description "go implementation of base32768, optimized for UTF-16.")
    (license license:expat)))

(define-public go-github-com-maxbrunsfeld-counterfeiter-v6
  (package
    (name "go-github-com-maxbrunsfeld-counterfeiter-v6")
    (version "6.11.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/maxbrunsfeld/counterfeiter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03rnbh8csmd2iyn4r1igv9w5a3bhjlms4k2l65zr70haw3790g3z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/maxbrunsfeld/counterfeiter/v6"
      #:unpack-path "github.com/maxbrunsfeld/counterfeiter"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-text
                             go-github-com-sclevine-spec
                             go-github-com-onsi-gomega))
    (home-page "https://github.com/maxbrunsfeld/counterfeiter")
    (synopsis "")
    (description
     "When writing unit-tests for an object, it is often useful to have fake
implementations of the object's collaborators.  In go, such fake implementations
cannot be generated automatically at runtime, and writing them by hand can be
quite arduous.")
    (license license:expat)))

(define-public go-github-com-maxmind-geoipupdate-v6
  (package
    (name "go-github-com-maxmind-geoipupdate-v6")
    (version "6.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/maxmind/geoipupdate")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vv2fzyf2jkkhnfql60l70zzlka7n03q0wkykqkpwfwagk5xc8py"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/maxmind/geoipupdate/v6"
      #:unpack-path "github.com/maxmind/geoipupdate"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-gofrs-flock
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://github.com/maxmind/geoipupdate")
    (synopsis "GeoIP Update")
    (description
     "The @code{GeoIP} Update program performs automatic updates of @code{GeoIP2} and
@code{GeoLite2} binary databases.  CSV databases are supported.")
    (license (list license:asl2.0 license:expat))))

(define-public go-github-com-mdlayher-sdnotify
  (package
    (name "go-github-com-mdlayher-sdnotify")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mdlayher/sdnotify")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nxpbjba4n4vfkwfy9q2x5djv8agfnvd6pp7l7a6d6ssl2vhkcrv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mdlayher/sdnotify"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://github.com/mdlayher/sdnotify")
    (synopsis "sdnotify")
    (description
     "Package sdnotify implements systemd readiness notifications as described in
@@url{https://www.freedesktop.org/software/systemd/man/sd_notify.html,https://www.freedesktop.org/software/systemd/man/sd_notify.html}.")
    (license license:expat)))

(define-public go-github-com-mdp-qrterminal
  (package
    (name "go-github-com-mdp-qrterminal")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mdp/qrterminal")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f2zrdv9sw2a6ni1712d27cayr3f8whqagx6f0yglc5gdd9f3i2n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mdp/qrterminal"))
    (propagated-inputs (list go-rsc-io-qr))
    (home-page "https://github.com/mdp/qrterminal")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-mediocregopher-radix-v3
  (package
    (name "go-github-com-mediocregopher-radix-v3")
    (version "3.8.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mediocregopher/radix")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "084nif0hk0dcn1zkd3svack3rki061srw8gx1jx9szhjbgk5ax7n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mediocregopher/radix/v3"
      #:unpack-path "github.com/mediocregopher/radix"))
    (propagated-inputs (list go-golang-org-x-xerrors
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/mediocregopher/radix")
    (synopsis "Radix")
    (description
     "Package radix implements all functionality needed to work with redis and all
things related to it, including redis cluster, pubsub, sentinel, scanning, lua
scripting, and more.")
    (license license:expat)))

(define-public go-github-com-meilisearch-meilisearch-go
  (package
    (name "go-github-com-meilisearch-meilisearch-go")
    (version "0.30.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/meilisearch/meilisearch-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13365rcaapbawqgk6kq95j7gkjgizn688lix79ngp496fiz8jh27"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/meilisearch/meilisearch-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-mailru-easyjson
                             go-github-com-golang-jwt-jwt-v4
                             go-github-com-andybalholm-brotli))
    (home-page "https://github.com/meilisearch/meilisearch-go")
    (synopsis "Table of Contents")
    (description
     "Package meilisearch is the official Meilisearch SDK for the Go programming
language.")
    (license license:expat)))

(define-public go-github-com-metaphorsystems-metaphor-go
  (package
    (name "go-github-com-metaphorsystems-metaphor-go")
    (version "0.0.0-20231201175953-9b1f1dcb8f26")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/metaphorsystems/metaphor-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0py4gnbhag3ywqd7fayvxgm4c00fqw50qzvg21d48ymifx8jd394"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/metaphorsystems/metaphor-go"))
    (home-page "https://github.com/metaphorsystems/metaphor-go")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-mgechev-dots
  (package
    (name "go-github-com-mgechev-dots")
    (version "0.0.0-20210922191527-e955255bf517")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mgechev/dots")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1abvh8fs3rhw97yhvryczjfa5c8qasmg00dnza0kgyan7n2087pd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mgechev/dots"))
    (home-page "https://github.com/mgechev/dots")
    (synopsis "Dots")
    (description
     "This package implements the wildcard file matching in Go used by golint, go test
etc.")
    (license license:expat)))

(define-public go-github-com-mgechev-revive
  (package
    (name "go-github-com-mgechev-revive")
    (version "1.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mgechev/revive")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "192i9a4x4gapszwg661f7qrk8qb49ca0si6d626x6hdkj5f6c9lq"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/mgechev/revive"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-golang-org-x-mod
                             go-github-com-spf13-afero
                             go-github-com-olekukonko-tablewriter
                             go-github-com-mitchellh-go-homedir
                             go-github-com-mgechev-dots
                             go-github-com-hashicorp-go-version
                             go-github-com-fatih-structtag
                             go-github-com-fatih-color
                             go-github-com-chavacava-garif
                             go-github-com-burntsushi-toml))
    (home-page "https://github.com/mgechev/revive")
    (synopsis "revive")
    (description "Package main is the build entry point of revive.")
    (license license:expat)))

(define-public go-github-com-mgutz-str
  (package
    (name "go-github-com-mgutz-str")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mgutz/str")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1g3dq618mcnpfyw7q6m32dy08wjzkyvlbd0f2nvwvck682749i1j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mgutz/str"))
    (home-page "https://github.com/mgutz/str")
    (synopsis "str")
    (description
     "Package str is a comprehensive set of string functions to build more Go
awesomeness.  Str complements Go's standard packages and does not duplicate
functionality found in `strings` or `strconv`.")
    (license license:expat)))

(define-public go-github-com-mholt-archiver
  (package
    (name "go-github-com-mholt-archiver")
    (version "2.1.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mholt/archiver")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02fsc0za0yi3dg0r5caa8vpxz6kqxjxxlmwzzj5899dlmdvqk57g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mholt/archiver"))
    (home-page "https://github.com/mholt/archiver")
    (synopsis "archiver")
    (description
     "Package archiver facilitates convenient, cross-platform, high-level archival and
compression operations for a variety of formats and compression algorithms.")
    (license license:expat)))

(define-public go-github-com-microsoft-cosesign1go
  (package
    (name "go-github-com-microsoft-cosesign1go")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/microsoft/cosesign1go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00rc3xn3nn6zank6v4nbby5gvq52h7hk1zdkk14fam6p1fwy60qh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Microsoft/cosesign1go"))
    (propagated-inputs (list go-github-com-veraison-go-cose ; packaged
                             go-github-com-urfave-cli
                             go-github-com-sirupsen-logrus
                             go-github-com-microsoft-didx509go
                             ))
    (home-page "https://github.com/Microsoft/cosesign1go")
    (synopsis "cosesign1go")
    (description
     "This package provides a Go library to handle COSE Sign1 documents.")
    (license license:expat)))

(define-public go-github-com-microsoft-didx509go
  (package
    (name "go-github-com-microsoft-didx509go")
    (version "0.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/microsoft/didx509go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s7gzlfqkyjjyhxpj95448v395fcy6x5kffj2fha8vx7g094fb0k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Microsoft/didx509go"))
    (propagated-inputs (list go-github-com-lestrrat-go-jwx ; packaged
                             ))
    (home-page "https://github.com/Microsoft/didx509go")
    (synopsis "didx509go")
    (description "DID:x509 resolver for Go.")
    (license license:expat)))

(define-public go-github-com-microsoft-go-mssqldb
  (package
    (name "go-github-com-microsoft-go-mssqldb")
    (version "1.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/microsoft/go-mssqldb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "125xwjqlwavm5dqv9zxdl7ky0sjwl870jm36jf74l9wl8n7nagr8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/microsoft/go-mssqldb"))
    (propagated-inputs (list go-golang-org-x-text
                        go-golang-org-x-sys
                        go-golang-org-x-crypto
                        go-github-com-stretchr-testify
                        go-github-com-jcmturner-gokrb5-v8
                        go-github-com-google-uuid
                        go-github-com-golang-sql-sqlexp
                        go-github-com-golang-sql-civil
                        go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-azkeys
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/microsoft/go-mssqldb")
    (synopsis "Microsoft's official Go MSSQL driver")
    (description
     "package mssql implements the TDS protocol used to connect to MS SQL Server
(sqlserver) database servers.")
    (license license:bsd-3)))

(define-public go-github-com-microsoft-hcsshim
  (package
    (name "go-github-com-microsoft-hcsshim")
    (version "0.12.9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/microsoft/hcsshim")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "134j934djdm5vkqaysmdbm7h5pipafm6zzc33ncs495wmhh8p7pr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/Microsoft/hcsshim"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc-cmd-protoc-gen-go-grpc
                             go-google-golang-org-grpc
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-go-uber-org-mock
                             go-go-opencensus-io ; packaged
                             go-go-etcd-io-bbolt
                             go-github-com-vishvananda-netns
                             go-github-com-vishvananda-netlink
                             go-github-com-urfave-cli
                             go-github-com-sirupsen-logrus
                             go-github-com-pkg-errors
                             go-github-com-pelletier-go-toml
                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-opencontainers-runc ; packaged
                             go-github-com-open-policy-agent-opa
                             go-github-com-mattn-go-shellwords
                             go-github-com-linuxkit-virtsock
                             go-github-com-josephspurrier-goversioninfo
                             go-github-com-google-go-containerregistry
                             go-github-com-google-go-cmp
                             go-github-com-containerd-typeurl-v2
                             go-github-com-containerd-ttrpc
                             go-github-com-containerd-protobuild
                             go-github-com-containerd-go-runc
                             go-github-com-containerd-errdefs-pkg ; packaged
                             go-github-com-containerd-errdefs
                             go-github-com-containerd-containerd-api
                             go-github-com-containerd-containerd
                             go-github-com-containerd-console ; packaged
                             go-github-com-containerd-cgroups-v3
                             go-github-com-cenkalti-backoff-v4 ;packaged
                             go-github-com-blang-semver-v4
                             go-github-com-microsoft-go-winio
                             go-github-com-microsoft-didx509go
                             go-github-com-microsoft-cosesign1go))
    (home-page "https://github.com/Microsoft/hcsshim")
    (synopsis "hcsshim")
    (description
     "This package contains the Golang interface for using the Windows
@@url{https://techcommunity.microsoft.com/t5/containers/introducing-the-host-compute-service-hcs/ba-p/382332,Host
Compute Service} (HCS) to launch and manage
@@url{https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/,Windows
Containers}.  It also contains other helpers and functions for managing Windows
Containers such as the Golang interface for the Host Network Service (HNS), as
well as code for the
@@url{https://github.com/Microsoft/hcsshim/blob/v0.12.9/internal/guest/README.md,guest
agent} (commonly referred to as the GCS or Guest Compute Service in the
codebase) used to support running Linux Hyper-V containers.")
    (license license:expat)))

(define-public go-github-com-milvus-io-milvus-proto-go-api-v2
  (package
    (name "go-github-com-milvus-io-milvus-proto-go-api-v2")
    (version "2.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/milvus-io/milvus-proto")
             (commit (go-version->git-ref version
                                          #:subdir "go-api"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "053dihbdzcjzli1ds3y9a04hxwf8af8xk75kk3pjqnays948b8vk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/milvus-io/milvus-proto/go-api/v2"
      #:unpack-path "github.com/milvus-io/milvus-proto"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc))
    (home-page "https://github.com/milvus-io/milvus-proto")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-milvus-io-milvus-sdk-go-v2
  (package
    (name "go-github-com-milvus-io-milvus-sdk-go-v2")
    (version "2.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/milvus-io/milvus-sdk-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fj0k2k3z1isjnrx1cmrkj0cabx1qca6yd9z3cibyv3cyrr1fgdz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/milvus-io/milvus-sdk-go/v2"
      #:unpack-path "github.com/milvus-io/milvus-sdk-go"))
    (propagated-inputs (list go-google-golang-org-grpc-examples
                             go-google-golang-org-grpc
                             go-golang-org-x-sync ; packaged
                             go-github-com-x448-float16
                             go-github-com-tidwall-gjson
                             go-github-com-stretchr-testify ; packaged
                             go-github-com-milvus-io-milvus-proto-go-api-v2
                             go-github-com-grpc-ecosystem-go-grpc-middleware
                             go-github-com-golang-protobuf ; packaged
                             go-github-com-go-faker-faker-v4
                             go-github-com-cockroachdb-errors ; packaged
                             ))
    (home-page "https://github.com/milvus-io/milvus-sdk-go")
    (synopsis "Milvus Go SDK")
    (description
     "Go SDK for @@url{https://github.com/milvus-io/milvus,Milvus}.  To contribute
code to this project, please read our
@@url{https://github.com/milvus-io/milvus/blob/master/CONTRIBUTING.md,contribution
guidelines} first.")
    (license license:asl2.0)))

(define-public go-github-com-mimuret-golang-iij-dpf
  (package
    (name "go-github-com-mimuret-golang-iij-dpf")
    (version "0.9.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mimuret/golang-iij-dpf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m1qk0aqm5ypdhy08s82ib0jx5lkgg6bhv6izypgdcd9rbaznw1h"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mimuret/golang-iij-dpf"))
    (propagated-inputs (list go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo
                             go-github-com-miekg-dns
                             go-github-com-json-iterator-go
                             go-github-com-jarcoal-httpmock
                             go-github-com-google-uuid
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/mimuret/golang-iij-dpf")
    (synopsis "IIJ DNS Platform Service API for Go")
    (description #f)
    (license license:expat)))

(define-public go-github-com-minio-asm2plan9s
  (package
    (name "go-github-com-minio-asm2plan9s")
    (version "0.0.0-20200509001527-cdd76441f9d8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/minio/asm2plan9s")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0i635ipzfqy7cyj68sl3mmqbnjqgyrhjxpyp62z2dbm34i42pfbg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/minio/asm2plan9s"))
    (home-page "https://github.com/minio/asm2plan9s")
    (synopsis "asm2plan9s")
    (description
     "Tool to generate BYTE sequences for Go assembly as generated by YASM/GAS (for
Intel) or GAS (for ARM).")
    (license license:asl2.0)))

(define-public go-github-com-minio-c2goasm
  (package
    (name "go-github-com-minio-c2goasm")
    (version "0.0.0-20190812172519-36a3d3bbc4f3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/minio/c2goasm")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1aw8g7455r7av7s4sdc57yyd2d5298linppx8m4cfhrgmd6rblzf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/minio/c2goasm"))
    (home-page "https://github.com/minio/c2goasm")
    (synopsis "c2goasm: C to Go Assembly")
    (description
     "This is a tool to convert assembly as generated by a C/C++ compiler into Golang
assembly.  It is meant to be used in combination with
@@url{https://github.com/minio/asm2plan9s,asm2plan9s} in order to automatically
generate pure Go wrappers for C/C++ code (that may for instance take advantage
of compiler SIMD intrinsics or @@code{template<>} code).")
    (license license:asl2.0)))

(define-public go-github-com-minio-minio-go-v6
  (package
    (name "go-github-com-minio-minio-go-v6")
    (version "6.0.57")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/minio/minio-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "068yxi9zzcjlys676v5jl6bd131w2qqfhbzzn1c1mgms4c4rvlbr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/minio/minio-go/v6"
      #:unpack-path "github.com/minio/minio-go"))
    (propagated-inputs (list go-gopkg-in-ini-v1
                             go-golang-org-x-net
                             go-golang-org-x-crypto
                             go-github-com-mitchellh-go-homedir
                             go-github-com-minio-sha256-simd ; packaged
                             go-github-com-minio-md5-simd ; packaged
                             go-github-com-json-iterator-go
                             ))
    (home-page "https://github.com/minio/minio-go")
    (synopsis "MinIO Go Client SDK for Amazon S3 Compatible Cloud Storage")
    (description
     "The @code{MinIO} Go Client SDK provides simple APIs to access any Amazon S3
compatible object storage.")
    (license license:asl2.0)))

(define-public go-github-com-minio-xxml
  (package
    (name "go-github-com-minio-xxml")
    (version "0.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/minio/xxml")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yljar0sqgrp4d6bngs9714i5mvn99vyn0j0vdv2b4g598c87dy5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/minio/xxml"))
    (home-page "https://github.com/minio/xxml")
    (synopsis "xxml")
    (description
     "Package xml implements a simple XML 1.0 parser that understands XML name spaces.")
    (license license:bsd-3)))

(define-public go-github-com-miscreant-miscreant-go
  (package
    (name "go-github-com-miscreant-miscreant-go")
    (version "0.0.0-20200214223636-26d376326b75")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/miscreant/miscreant.go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vl66xnf67kpiim334yd0brg3bljkrpbd542rn9lcwzb75y0rhal"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/miscreant/miscreant.go"))
    (home-page "https://github.com/miscreant/miscreant.go")
    (synopsis "miscreant.go")
    (description
     "Go implementation of @@strong{Miscreant}: Advanced symmetric encryption library
which provides the @@url{https://github.com/miscreant/meta/wiki/AES-SIV,AES-SIV}
(@@url{https://tools.ietf.org/html/rfc5297,RFC 5297}),
@@url{https://github.com/miscreant/meta/wiki/AES-PMAC-SIV,AES-PMAC-SIV}, and
@@url{https://github.com/miscreant/meta/wiki/STREAM,STREAM} constructions.
These algorithms are easy-to-use (or rather, hard-to-misuse) and support
encryption of individual messages or message streams.")
    (license license:expat)))

(define-public go-github-com-mistifyio-go-zfs
  (package
    (name "go-github-com-mistifyio-go-zfs")
    (version "2.1.1+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mistifyio/go-zfs")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1k2dnrmd3zgjm7ag779mbgbxj344yyk4mq3bdn9jy7hphfpqyrgp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mistifyio/go-zfs"))
    (home-page "https://github.com/mistifyio/go-zfs")
    (synopsis "Go Wrapper for ZFS")
    (description
     "Package zfs provides wrappers around the ZFS command line tools.")
    (license license:asl2.0)))

(define-public go-github-com-mistifyio-go-zfs-v3
  (package
    (name "go-github-com-mistifyio-go-zfs-v3")
    (version "3.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mistifyio/go-zfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19wasizw95x1dsc5wxqsxc3knbnkbk3xpha6l506dc5a7wjfs8ir"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mistifyio/go-zfs/v3"
      #:unpack-path "github.com/mistifyio/go-zfs"))
    (propagated-inputs (list go-github-com-google-uuid))
    (home-page "https://github.com/mistifyio/go-zfs")
    (synopsis "Go Wrapper for ZFS")
    (description
     "Package zfs provides wrappers around the ZFS command line tools.")
    (license license:asl2.0)))

(define-public go-github-com-mitchellh-go-testing-interface
  (package
    (name "go-github-com-mitchellh-go-testing-interface")
    (version "1.14.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mitchellh/go-testing-interface")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xrpdficli723g74mq36r4nj04i9yfh7hacp6wai3p7mq3gs5hac"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mitchellh/go-testing-interface"))
    (home-page "https://github.com/mitchellh/go-testing-interface")
    (synopsis "go-testing-interface")
    (description
     "go-testing-interface is a Go library that exports an interface that
@@code{*testing.T} implements as well as a runtime version you can use in its
place.")
    (license license:expat)))

(define-public go-github-com-mitchellh-hashstructure-v2
  (package
    (name "go-github-com-mitchellh-hashstructure-v2")
    (version "2.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mitchellh/hashstructure")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0yyr1igvyv7dzjxs9hbwk7qhshwxys0hq59sy2g2a46hjgi311iv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mitchellh/hashstructure/v2"
      #:unpack-path "github.com/mitchellh/hashstructure"))
    (home-page "https://github.com/mitchellh/hashstructure")
    (synopsis "hashstructure")
    (description
     "hashstructure is a Go library for creating a unique hash value for arbitrary
values in Go.")
    (license license:expat)))

(define-public go-github-com-mkevac-debugcharts
  (package
    (name "go-github-com-mkevac-debugcharts")
    (version "0.0.0-20191222103121-ae1c48aa8615")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mkevac/debugcharts")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10y8vmnppf9izp1mnin2axbp2lmdml4i4drzpni2r1az9sph3mpy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mkevac/debugcharts"))
    (propagated-inputs (list go-github-com-shirou-gopsutil
                             go-github-com-gorilla-websocket
                             go-github-com-gorilla-handlers))
    (home-page "https://github.com/mkevac/debugcharts")
    (synopsis "debugcharts")
    (description "Simple live charts for memory consumption and GC pauses.")
    (license license:expat)))

(define-public go-github-com-mmcdole-gofeed
  (package
    (name "go-github-com-mmcdole-gofeed")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mmcdole/gofeed")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03cmj4wk6yicv5pqxwa3sbqxxbw3srx2j5c9938yv0ydkccnlyhq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mmcdole/gofeed"))
    (propagated-inputs (list go-golang-org-x-text
                             go-golang-org-x-net
                             go-github-com-urfave-cli
                             go-github-com-stretchr-testify
                             go-github-com-mmcdole-goxpp
                             go-github-com-json-iterator-go
                             go-github-com-puerkitobio-goquery))
    (home-page "https://github.com/mmcdole/gofeed")
    (synopsis "gofeed")
    (description
     "@@code{gofeed} is a powerful and flexible library designed for parsing
@@strong{RSS}, @@strong{Atom}, and @@strong{JSON} feeds across various formats
and versions.  It effectively manages non-standard elements and known
extensions, and demonstrates resilience against common feed issues.")
    (license license:expat)))

(define-public go-github-com-moby-buildkit
  (package
    (name "go-github-com-moby-buildkit")
    (version "0.18.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/buildkit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0k2wfhyq90k2axv0vjnav9dlj26c1jx9qkszx7vwy9zhcddsng2n"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/moby/buildkit"))
    (propagated-inputs (list
                        go-github-com-agext-levenshtein ; packaged
                        go-github-com-armon-circbuf
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2-feature-s3-manager
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
                        go-github-com-containerd-console ; packaged
                        go-github-com-containerd-containerd
                        go-github-com-containerd-containerd-api
                        go-github-com-containerd-continuity ; packaged
                        go-github-com-containerd-errdefs
                        go-github-com-containerd-fuse-overlayfs-snapshotter
                        go-github-com-containerd-go-cni
                        go-github-com-containerd-go-runc
                        go-github-com-containerd-log
                        go-github-com-containerd-nydus-snapshotter
                        go-github-com-containerd-platforms ; packaged
                        go-github-com-containerd-stargz-snapshotter
                        go-github-com-containerd-stargz-snapshotter-estargz
                        go-github-com-containerd-typeurl-v2
                        go-github-com-containernetworking-plugins
                        go-github-com-coreos-go-systemd-v22
                        go-github-com-distribution-reference
                        go-github-com-docker-cli
                        go-github-com-docker-docker
                        go-github-com-docker-go-connections ; packaged
                        go-github-com-docker-go-units
                        go-github-com-gofrs-flock
                        go-github-com-golang-protobuf
                        go-github-com-google-go-cmp
                        go-github-com-google-shlex
                        go-github-com-hashicorp-go-cleanhttp
                        go-github-com-hashicorp-go-immutable-radix-v2
                        go-github-com-hashicorp-go-multierror
                        go-github-com-hashicorp-golang-lru-v2 ; packaged
                        go-github-com-in-toto-in-toto-golang
                        go-github-com-klauspost-compress ; packaged
                        ;; go-github-com-microsoft-go-winio ; for Windows only
                        go-github-com-microsoft-hcsshim
                        go-github-com-mitchellh-hashstructure-v2
                        go-github-com-moby-docker-image-spec
                        go-github-com-moby-locker
                        go-github-com-moby-patternmatcher
                        go-github-com-moby-sys-mountinfo
                        go-github-com-moby-sys-signal
                        go-github-com-moby-sys-user
                        go-github-com-moby-sys-userns ; packaged
                        go-github-com-morikuni-aec
                        go-github-com-opencontainers-go-digest
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-runtime-spec ; packaged
                        go-github-com-opencontainers-selinux ; packaged
                        go-github-com-package-url-packageurl-go
                        go-github-com-pelletier-go-toml
                        go-github-com-pkg-errors
                        go-github-com-pkg-profile ; packaged
                        go-github-com-planetscale-vtprotobuf
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-prometheus-procfs
                        go-github-com-serialx-hashring
                        go-github-com-sirupsen-logrus
                        go-github-com-spdx-tools-golang
                        go-github-com-stretchr-testify
                        go-github-com-tonistiigi-fsutil
                        go-github-com-tonistiigi-go-actions-cache
                        go-github-com-tonistiigi-go-archvariant
                        go-github-com-tonistiigi-go-csvvalue
                        go-github-com-tonistiigi-units
                        go-github-com-tonistiigi-vt100
                        go-github-com-urfave-cli
                        go-github-com-vishvananda-netlink
                        go-go-etcd-io-bbolt
                        go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-httptrace-otelhttptrace
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-otel-exporters-jaeger
                        go-go-opentelemetry-io-otel-exporters-otlp-otlpmetric-otlpmetricgrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlpmetric-otlpmetrichttp
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracehttp
                        go-go-opentelemetry-io-otel-exporters-prometheus
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-sdk-metric
                        go-go-opentelemetry-io-otel-trace
                        go-go-opentelemetry-io-proto-otlp ; packaged
                        go-golang-org-x-crypto
                        go-golang-org-x-exp
                        go-golang-org-x-mod
                        go-golang-org-x-net
                        go-golang-org-x-sync
                        go-golang-org-x-sys
                        go-golang-org-x-time
                        go-google-golang-org-genproto-googleapis-rpc
                        go-google-golang-org-grpc
                        go-google-golang-org-grpc-cmd-protoc-gen-go-grpc
                        go-google-golang-org-protobuf
                        go-kernel-org-pub-linux-libs-security-libcap-cap
                        ))
    (home-page "https://github.com/moby/buildkit")
    (synopsis "BuildKit")
    (description
     "@code{BuildKit} is a toolkit for converting source code to build artifacts in an
efficient, expressive and repeatable manner.")
    (license license:asl2.0)))

(define-public go-github-com-moby-docker-image-spec
  (package
    (name "go-github-com-moby-docker-image-spec")
    (version "1.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/docker-image-spec")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06r6z8s0rvl66n626q41hmqgnnlpsqdblj32fjq3r0qsccp8s167"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/moby/docker-image-spec"))
    (propagated-inputs (list go-github-com-opencontainers-image-spec ; packaged
                             ))
    (home-page "https://github.com/moby/docker-image-spec")
    (synopsis "Docker Image Specification v1.")
    (description
     "This directory contains documents about Docker Image Specification v1.X.")
    (license license:asl2.0)))

(define-public go-github-com-moby-locker
  (package
    (name "go-github-com-moby-locker")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/locker")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07rc2c6h35f9mcy81jp382a030f6xmcifi9n5jnlayybfwxmpjir"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/moby/locker"))
    (home-page "https://github.com/moby/locker")
    (synopsis "Locker")
    (description
     "Package locker provides a mechanism for creating finer-grained locking to help
free up more global locks to handle other tasks.")
    (license license:asl2.0)))

(define-public go-github-com-moby-patternmatcher
  (package
    (name "go-github-com-moby-patternmatcher")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/patternmatcher")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s77wpsc6szr9qdpnpg9q65ibgjgj4b2d12hwf6wrwb39grcnbcz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/moby/patternmatcher"))
    (home-page "https://github.com/moby/patternmatcher")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-moby-sys-sequential
  (package
    (name "go-github-com-moby-sys-sequential")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/sys")
             (commit (go-version->git-ref version
                                          #:subdir "sequential"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i1phx1kk9qa4jf1i1nl23d3f6k9fn2w46274cl76cqw9hjqg868"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/moby/sys/sequential"
      #:unpack-path "github.com/moby/sys"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/moby/sys")
    (synopsis #f)
    (description
     "Package sequential provides a set of functions for managing sequential files on
Windows.")
    (license license:asl2.0)))

(define-public go-github-com-moby-sys-signal
  (package
    (name "go-github-com-moby-sys-signal")
    (version "0.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/sys")
             (commit (go-version->git-ref version
                                          #:subdir "signal"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i1phx1kk9qa4jf1i1nl23d3f6k9fn2w46274cl76cqw9hjqg868"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/moby/sys/signal"
      #:unpack-path "github.com/moby/sys"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/moby/sys")
    (synopsis #f)
    (description
     "Package signal provides helper functions for dealing with signals across various
operating systems.")
    (license license:asl2.0)))

(define-public go-github-com-moby-sys-symlink
  (package
    (name "go-github-com-moby-sys-symlink")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/sys")
             (commit (go-version->git-ref version
                                          #:subdir "symlink"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i1phx1kk9qa4jf1i1nl23d3f6k9fn2w46274cl76cqw9hjqg868"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/moby/sys/symlink"
      #:unpack-path "github.com/moby/sys"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/moby/sys")
    (synopsis #f)
    (description
     "Package symlink implements
@@url{#@code{FollowSymlinkInScope,FollowSymlinkInScope}} which is an extension
of @@url{/path/filepath#@code{EvalSymlinks,path/filepath.EvalSymlinks}}, as well
as a Windows long-path aware version of
@@url{/path/filepath#@code{EvalSymlinks,path/filepath.EvalSymlinks}} from the Go
standard library.")
    (license license:asl2.0)))

(define-public go-github-com-moby-sys-user
  (package
    (name "go-github-com-moby-sys-user")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moby/sys")
             (commit (go-version->git-ref version
                                          #:subdir "user"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1clr9x412gr1cq3jxf9lxblh9pkf8c42gz57wr14miy0nqsimx7j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/moby/sys/user"
      #:unpack-path "github.com/moby/sys"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/moby/sys")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-modocache-gover
  (package
    (name "go-github-com-modocache-gover")
    (version "0.0.0-20171022184752-b58185e213c5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sozorogami/gover")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1w7pzqh8ljacpxhwq9f4s4ax908dgl22qfxyrx51mblylwzvm6va"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/modocache/gover"))
    (home-page "https://github.com/modocache/gover")
    (synopsis "gover")
    (description "Usage: gover [root] [out].")
    (license license:asl2.0)))

(define-public go-github-com-monaco-io-request
  (package
    (name "go-github-com-monaco-io-request")
    (version "1.0.16")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/monaco-io/request")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1y4npafhbx8wcq3zz5x23ypzd0c633pmn53s9h5xp6q7rkww402y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/monaco-io/request"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-golang-org-x-net))
    (home-page "https://github.com/monaco-io/request")
    (synopsis "Request")
    (description "Package request HTTP client for golang.")
    (license license:expat)))

(define-public go-github-com-moricho-tparallel
  (package
    (name "go-github-com-moricho-tparallel")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/moricho/tparallel")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1008j7bdfbzjk2v7ld51xc59sa6822391x0na6289n5r06yhyjbx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/moricho/tparallel"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-analysisutil))
    (home-page "https://github.com/moricho/tparallel")
    (synopsis "tparallel")
    (description
     "@@code{tparallel} finds inappropriate usage of @code{@@code{t.Parallel()}}
method in your Go test codes.  It detects the following:.")
    (license license:expat)))

(define-public go-github-com-morikuni-aec
  (package
    (name "go-github-com-morikuni-aec")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/morikuni/aec")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qaqh0lk9wrqgff0yrxnbznvmwyhdxy3g9b2hjpazp5bw4nj0dp7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/morikuni/aec"))
    (home-page "https://github.com/morikuni/aec")
    (synopsis "aec")
    (description "Go wrapper for ANSI escape code.")
    (license license:expat)))

(define-public go-github-com-mozilla-scribe
  (package
    (name "go-github-com-mozilla-scribe")
    (version "0.0.0-20220110210141-3fd4271eb395")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mozilla/scribe")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1y71jspgpm469z5nw249gi8qvvaaqy51jrl8j8k4i3wq2dijaysr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mozilla/scribe"))
    (home-page "https://github.com/mozilla/scribe")
    (synopsis "scribe")
    (description
     "Package scribe implements the Mozilla scribe host policy evaluator.")
    (license license:mpl2.0)))

(define-public go-github-com-mozilla-tls-observatory
  (package
    (name "go-github-com-mozilla-tls-observatory")
    (version "0.0.0-20210609171429-7bc42856d2e5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mozilla/tls-observatory")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02m9py2kxmgyg012p78qs9qz8mbvd5v4wv7cvvzj40l1swqlchy5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mozilla/tls-observatory"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-gopkg-in-gcfg-v1
                             go-golang-org-x-crypto
                             go-go-mozilla-org-mozlog
                             go-github-com-yudai-gojsondiff
                             go-github-com-viki-org-dnscache
                             go-github-com-sirupsen-logrus
                             go-github-com-mozilla-scribe
                             go-github-com-miekg-dns
                             go-github-com-lib-pq
                             go-github-com-hashicorp-golang-lru
                             go-github-com-gregjones-httpcache
                             go-github-com-gorilla-mux
                             go-github-com-gorhill-cronexpr
                             go-github-com-google-certificate-transparency-go
                             go-github-com-fatih-color
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/mozilla/tls-observatory")
    (synopsis "Mozilla TLS Observatory")
    (description
     "The Mozilla TLS Observatory is a suite of tools for analysis and inspection on
Transport Layer Security (TLS) services.  The components of TLS Observatory
include:.")
    (license license:mpl2.0)))

(define-public go-github-com-mozillazg-docker-credential-acr-helper
  (package
    (name "go-github-com-mozillazg-docker-credential-acr-helper")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mozillazg/docker-credential-acr-helper")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1h8qlhabzb5qc6k5m623d9cqnkax0g1yjpjqd5fdc0zz6hyd18w4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mozillazg/docker-credential-acr-helper"))
    (propagated-inputs (list go-github-com-sirupsen-logrus
                        go-github-com-docker-docker-credential-helpers
                        go-github-com-aliyun-credentials-go
                        go-github-com-alibabacloud-go-tea-utils
                        go-github-com-alibabacloud-go-tea
                        go-github-com-alibabacloud-go-darabonba-openapi
                        go-github-com-alibabacloud-go-cr-20181201
                        go-github-com-alibabacloud-go-cr-20160607
                        go-github-com-aliyuncontainerservice-ack-ram-tool-pkg-credentials-provider))
    (home-page "https://github.com/mozillazg/docker-credential-acr-helper")
    (synopsis "docker-credential-acr-helper")
    (description
     "This package provides a
@@url{https://docs.docker.com/engine/reference/commandline/login/#credential-helpers,credential
helper} for the Docker daemon that makes it easier to use
@@url{https://www.alibabacloud.com/product/container-registry,Alibaba Cloud
Container Registry (ACR)}.")
    (license license:expat)))

(define-public go-github-com-mreiferson-go-httpclient
  (package
    (name "go-github-com-mreiferson-go-httpclient")
    (version "0.0.0-20201222173833-5e475fde3a4d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mreiferson/go-httpclient")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13s8va5zlbmh5lgxpkdrcxvbqkbxszjvf27p1njv75q4jk8g5vhq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mreiferson/go-httpclient"))
    (home-page "https://github.com/mreiferson/go-httpclient")
    (synopsis "go-httpclient")
    (description
     "This package provides an HTTP Transport that implements the
`@code{RoundTripper`} interface and can be used as a built in replacement for
the standard library's, providing:.")
    (license license:expat)))

(define-public go-github-com-mrjones-oauth
  (package
    (name "go-github-com-mrjones-oauth")
    (version "0.0.0-20190623134757-126b35219450")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mrjones/oauth")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "120ajfcqcbdiglxl31yq1xgp6ahpb7jfnyk0587b9mljkaggs8gh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mrjones/oauth"))
    (home-page "https://github.com/mrjones/oauth")
    (synopsis "OAuth 1.0 Library for")
    (description "OAuth 1.0 consumer implementation.  See
@@url{http://www.oauth.net,http://www.oauth.net} and
@@url{https://rfc-editor.org/rfc/rfc5849.html,RFC 5849}.")
    (license license:expat)))

(define-public go-github-com-mschoch-smat
  (package
    (name "go-github-com-mschoch-smat")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mschoch/smat")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qcb2jjg37krxmc915kqynghd6n26w2wxwgcafvxcwn8g0jx96qd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mschoch/smat"))
    (home-page "https://github.com/mschoch/smat")
    (synopsis "smat – State Machine Assisted Testing")
    (description
     "The concept is simple, describe valid uses of your library as states and
actions.  States describe which actions are possible, and with what probability
they should occur.  Actions mutate the context and transition to another state.")
    (license license:asl2.0)))

(define-public go-github-com-muesli-crunchy
  (package
    (name "go-github-com-muesli-crunchy")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/muesli/crunchy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qj0xlcx9vsx3igdy8aq47d0qh4ccvlqsvrxfakr2qh1v35p4p0d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/muesli/crunchy"))
    (propagated-inputs (list go-github-com-xrash-smetrics))
    (home-page "https://github.com/muesli/crunchy")
    (synopsis "crunchy")
    (description
     "Finds common flaws in passwords.  Like cracklib, but written in Go.")
    (license license:expat)))

(define-public go-github-com-muesli-mango
  (package
    (name "go-github-com-muesli-mango")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/muesli/mango")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16d0sga6cbdxzlqkibcgw0civkw11fpkcjpgv21i0q5j9mjbsjw4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/muesli/mango"))
    (propagated-inputs (list go-github-com-muesli-roff))
    (home-page "https://github.com/muesli/mango")
    (synopsis "mango")
    (description
     "mango is a man-page generator for the Go flag, pflag, cobra, coral, and kong
packages.  It extracts commands, flags, and arguments from your program and
enables it to self-document.")
    (license license:expat)))

(define-public go-github-com-muesli-mango-cobra
  (package
    (name "go-github-com-muesli-mango-cobra")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/muesli/mango-cobra")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0h3mbdp4yqsx9d7m4vg5d8gvr7hggsbzv9wd405zjrvnvcgzv9fv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/muesli/mango-cobra"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-muesli-roff
                             go-github-com-muesli-mango-pflag
                             go-github-com-muesli-mango))
    (home-page "https://github.com/muesli/mango-cobra")
    (synopsis "mango-cobra")
    (description
     "cobra adapter for @@url{https://github.com/muesli/mango,mango}.")
    (license license:expat)))

(define-public go-github-com-muesli-mango-pflag
  (package
    (name "go-github-com-muesli-mango-pflag")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/muesli/mango-pflag")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vpj2jb91qylrc1lbb32i2cj3vj6s70ff9kziq3bg6a56mb321da"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/muesli/mango-pflag"))
    (propagated-inputs (list go-github-com-spf13-pflag
                             go-github-com-muesli-roff
                             go-github-com-muesli-mango))
    (home-page "https://github.com/muesli/mango-pflag")
    (synopsis "mango-pflag")
    (description
     "pflag adapter for @@url{https://github.com/muesli/mango,mango}.")
    (license license:expat)))

(define-public go-github-com-muesli-roff
  (package
    (name "go-github-com-muesli-roff")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/muesli/roff")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0l263rqwq2ccr1lpamsvs48dddsr70xim8mv6rsj2x9y3prcq3yh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/muesli/roff"))
    (home-page "https://github.com/muesli/roff")
    (synopsis "roff")
    (description "roff lets you write roff documents in Go.")
    (license license:expat)))

(define-public go-github-com-muesli-smartcrop
  (package
    (name "go-github-com-muesli-smartcrop")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/muesli/smartcrop")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10ns8nvxjpykgh1rapg1pn0p3r9qvrjifw2p23yha85d9wnk8i1x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/muesli/smartcrop"))
    (home-page "https://github.com/muesli/smartcrop")
    (synopsis "smartcrop")
    (description
     "Package smartcrop implements a content aware image cropping library based on
Jonas Wagner's smartcrop.js
@@url{https://github.com/jwagner/smartcrop.js,https://github.com/jwagner/smartcrop.js}.")
    (license license:expat)))

(define-public go-github-com-mutecomm-go-sqlcipher-v4
  (package
    (name "go-github-com-mutecomm-go-sqlcipher-v4")
    (version "4.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mutecomm/go-sqlcipher")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sa9jza45b6mhgipvlllpykyxk1xnqgqkyc00niikh7w6yliykq9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mutecomm/go-sqlcipher/v4"
      #:unpack-path "github.com/mutecomm/go-sqlcipher"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/mutecomm/go-sqlcipher")
    (synopsis "go-sqlcipher")
    (description "Package sqlite3 provides interface to SQLite3 databases.")
    (license license:expat))) ; check-license

(define-public go-github-com-mwitkow-go-proto-validators
  (package
    (name "go-github-com-mwitkow-go-proto-validators")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mwitkow/go-proto-validators")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0flr9964jz4bgzhjpcc54niiy6zg1skf8f8x7bcp2qvbwshxwb44"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/mwitkow/go-proto-validators"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-golang-protobuf
                             go-github-com-gogo-protobuf))
    (home-page "https://github.com/mwitkow/go-proto-validators")
    (synopsis "Golang ProtoBuf Validator Compiler")
    (description
     "This package provides a @@code{protoc} plugin that generates
@code{@@code{Validate()} error} functions on Go proto @@code{struct}s based on
field options inside @@code{.proto} files.  The validation functions are
code-generated and thus don't suffer on performance from tag-based reflection on
deeply-nested messages.")
    (license license:asl2.0)))

(define-public go-github-com-nakabonne-nestif
  (package
    (name "go-github-com-nakabonne-nestif")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nakabonne/nestif")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mz93v3l1jrk2h49144iiql5iv476llmj2mfs4b66cbmnsywlky1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nakabonne/nestif"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-spf13-pflag))
    (home-page "https://github.com/nakabonne/nestif")
    (synopsis "nestif")
    (description
     "Package nestif provides an API to detect complex nested if statements.")
    (license license:bsd-2)))

(define-public go-github-com-namedotcom-go
  (package
    (name "go-github-com-namedotcom-go")
    (version "0.0.0-20180403034216-08470befbe04")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/namedotcom/go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00ai7fd74sn4alqmpqsiyczirli50b7m059b6zzg1izy9g4cdd4g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/namedotcom/go"))
    (home-page "https://github.com/namedotcom/go")
    (synopsis "Namecom")
    (description "Name.com API Go Client.")
    (license license:expat)))

(define-public go-github-com-nanmu42-limitio
  (package
    (name "go-github-com-nanmu42-limitio")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nanmu42/limitio")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18by77hz7zmky1q0lx2v6xww695wmks45fbb4hjxs2zs4xjkgnca"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nanmu42/limitio"))
    (home-page "https://github.com/nanmu42/limitio")
    (synopsis "LimitIO")
    (description
     "Package limitio brings `io.Reader` and `io.Writer` with limit.")
    (license license:expat)))

(define-public go-github-com-natefinch-npipe
  (package
    (name "go-github-com-natefinch-npipe")
    (version "0.0.0-20160621034901-c1b8fa8bdcce")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/natefinch/npipe")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qplrvhks05pay169d9lph3hl7apdam4vj1kx3yzik7cphx6b24f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/natefinch/npipe"))
    (home-page "https://github.com/natefinch/npipe")
    (synopsis "npipe")
    (description
     "Package npipe provides a pure Go wrapper around Windows named pipes.")
    (license license:expat)))

(define-public go-github-com-natefinch-pie
  (package
    (name "go-github-com-natefinch-pie")
    (version "0.0.0-20170715172608-9a0d72014007")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/natefinch/pie")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vipjdbzcna8ynlh23vcl76bspibrlvhyzxfqa4zadxcdd9gpcdz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/natefinch/pie"))
    (home-page "https://github.com/natefinch/pie")
    (synopsis "pie")
    (description
     "In addition to a regular plugin that provides an API, this package can be used
for plugins that consume an API provided by the main process.  To see an example
of this, look in the examples/consumer folder.")
    (license license:expat)))

(define-public go-github-com-nats-io-nats-server-v2
  (package
    (name "go-github-com-nats-io-nats-server-v2")
    (version "2.10.24")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nats-io/nats-server")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0r1d0l3mmb90956wl97vqlb3cdhax7jkqa95hvx9b380g93a08py"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/nats-io/nats-server/v2"
      #:unpack-path "github.com/nats-io/nats-server"))
    (propagated-inputs (list go-golang-org-x-time
                             go-golang-org-x-sys
                             go-golang-org-x-crypto
                             go-go-uber-org-automaxprocs ; packaged
                             go-github-com-nats-io-nuid
                             go-github-com-nats-io-nkeys
                             go-github-com-nats-io-nats-go
                             go-github-com-nats-io-jwt-v2
                             go-github-com-minio-highwayhash
                             go-github-com-klauspost-compress ; packaged
))
    (home-page "https://github.com/nats-io/nats-server")
    (synopsis "Documentation")
    (description
     "@@url{https://nats.io,NATS} is a simple, secure and performant communications
system for digital systems, services and devices.  NATS is part of the Cloud
Native Computing Foundation (@@url{https://cncf.io,CNCF}).  NATS has over
@@url{https://nats.io/download/,40 client language implementations}, and its
server can run on-premise, in the cloud, at the edge, and even on a Raspberry
Pi.  NATS can secure and simplify design and operation of modern distributed
systems.")
    (license license:asl2.0)))

(define-public go-github-com-nbio-st
  (package
    (name "go-github-com-nbio-st")
    (version "0.0.0-20140626010706-e9e8d9816f32")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nbio/st")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14r4acm82gp9ikqnp41a06bm4mrdlbskakhibbxsc5ljav7bni27"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nbio/st"))
    (home-page "https://github.com/nbio/st")
    (synopsis "A Tiny Test Framework for Go")
    (description
     "Package st, pronounced \"ghost\", is a tiny test framework for making short,
useful assertions in your Go tests.")
    (license license:asl2.0)))

(define-public go-github-com-nbutton23-zxcvbn-go
  (package
    (name "go-github-com-nbutton23-zxcvbn-go")
    (version "0.0.0-20210217022336-fa2cb2858354")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nbutton23/zxcvbn-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "026f5y0lprk61f3k4ld7l0hdqa8wpmvg202kj1gbfw8vjmv2kmwa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nbutton23/zxcvbn-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-pmezard-go-difflib
                             go-github-com-davecgh-go-spew))
    (home-page "https://github.com/nbutton23/zxcvbn-go")
    (synopsis "Use")
    (description
     "This is a @code{goLang} port of python-zxcvbn and
@@url{https://github.com/dropbox/zxcvbn,zxcvbn}, which are python and
@code{JavaScript} password strength generators.  zxcvbn attempts to give sound
password advice through pattern matching and conservative entropy calculations.
It finds 10k common passwords, common American names and surnames, common
English words, and common patterns like dates, repeats (aaa), sequences (abcd),
and QWERTY patterns.")
    (license license:expat)))

(define-public go-github-com-ncw-swift
  (package
    (name "go-github-com-ncw-swift")
    (version "1.0.53")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ncw/swift")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xcyf8463h6420ajma6bf0h312fgyivppfzhplk8z3dynd98nsfn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ncw/swift"))
    (home-page "https://github.com/ncw/swift")
    (synopsis "Swift")
    (description
     "Package swift provides an easy to use interface to Swift / Openstack Object
Storage / Rackspace Cloud Files.")
    (license license:expat)))

(define-public go-github-com-neelance-astrewrite
  (package
    (name "go-github-com-neelance-astrewrite")
    (version "0.0.0-20160511093645-99348263ae86")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/neelance/astrewrite")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07527807p8q6h05iq4qy0xrlcmwyzj76gpk0yqf71yaj447mz24v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/neelance/astrewrite"))
    (home-page "https://github.com/neelance/astrewrite")
    (synopsis #f)
    (description #f)
    (license license:bsd-2)))

(define-public go-github-com-neelance-sourcemap
  (package
    (name "go-github-com-neelance-sourcemap")
    (version "0.0.0-20200213170602-2833bce08e4c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/neelance/sourcemap")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05ymjg1z9phf0wp4w058kvf13bmn4skv67chb3r04z69in8y8jih"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/neelance/sourcemap"))
    (home-page "https://github.com/neelance/sourcemap")
    (synopsis #f)
    (description #f)
    (license license:bsd-2)))

(define-public go-github-com-nektos-act
  (package
    (name "go-github-com-nektos-act")
    (version "0.2.71")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nektos/act")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1v6ixhfhn0hsj0114qikp01xw6zkm50pdn6lci7nxs7rvfgplina"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/nektos/act"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-golang-jwt-jwt-v5 ;packaged

                             go-github-com-distribution-reference
                             go-dario-cat-mergo
                             go-gotest-tools-v3 ; packaged
                             go-gopkg-in-yaml-v3
                             go-golang-org-x-term
                             go-go-etcd-io-bbolt
                             go-github-com-timshannon-bolthold
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-sirupsen-logrus
                             go-github-com-sabhiram-go-gitignore
                             go-github-com-rhysd-actionlint
                             go-github-com-pkg-errors
                             go-github-com-opencontainers-selinux ; packaged
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-moby-patternmatcher
                             go-github-com-mattn-go-isatty
                             go-github-com-kballard-go-shellquote ; packaged
                             go-github-com-julienschmidt-httprouter
                             go-github-com-joho-godotenv ; packaged
                             go-github-com-go-git-go-git-v5
                             go-github-com-go-git-go-billy-v5
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-docker-docker
                             go-github-com-docker-cli
                             go-github-com-creack-pty
                             go-github-com-andreaskoch-go-fswatch
                             go-github-com-adrg-xdg
                             go-github-com-masterminds-semver
                             go-github-com-alecaivazis-survey-v2))
    (home-page "https://github.com/nektos/act")
    (synopsis "Overview")
    (description
     "Run your @@url{https://developer.github.com/actions/,@code{GitHub} Actions}
locally! Why would you want to do this? Two reasons:.")
    (license license:expat)))

(define-public go-github-com-nelsonken-gomf
  (package
    (name "go-github-com-nelsonken-gomf")
    (version "0.0.0-20190423072027-c65cc0469e94")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nelsonken/gomf")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16v25lb9jj2r7kjm3a7mbxapmc1qkdd3agxb8ay8vvia7gfpycrk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nelsonken/gomf"))
    (home-page "https://github.com/nelsonken/gomf")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-neo4j-neo4j-go-driver
  (package
    (name "go-github-com-neo4j-neo4j-go-driver")
    (version "1.8.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/neo4j/neo4j-go-driver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0cmqq5sc7c7aq3m2v2f5rjqrizgckv46ffksw3bfk869x5ig3amf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/neo4j/neo4j-go-driver"))
    (propagated-inputs (list go-github-com-pkg-errors
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo
                             go-github-com-golang-mock ; packaged
                             ))
    (home-page "https://github.com/neo4j/neo4j-go-driver")
    (synopsis "neo4j-go-driver")
    (description "This is the official Neo4j Go Driver.")
    (license license:asl2.0)))

(define-public go-github-com-netflix-go-expect
  (package
    (name "go-github-com-netflix-go-expect")
    (version "0.0.0-20220104043353-73e0943537d2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Netflix/go-expect")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zkvhnc4ii6ygvcsj54ng0kql26rnny7l3hy1w61g88mxjsww1b9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Netflix/go-expect"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-creack-pty))
    (home-page "https://github.com/Netflix/go-expect")
    (synopsis "go-expect")
    (description
     "Package expect provides an expect-like interface to automate control of
applications.  It is unlike expect in that it does not spawn or manage process
lifecycle.  This package only focuses on expecting output and sending input
through it's psuedoterminal.")
    (license license:asl2.0)))

(define-public go-github-com-networkplumbing-go-nft
  (package
    (name "go-github-com-networkplumbing-go-nft")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/networkplumbing/go-nft")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gx0xh9llgi600v6qacnaxwk3j0kmmwk7d2hm9j5jpmcm8whvp2w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/networkplumbing/go-nft"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/networkplumbing/go-nft")
    (synopsis "go-nft")
    (description "Go bindings for nft utility.")
    (license license:asl2.0)))

(define-public go-github-com-nf-cr2
  (package
    (name "go-github-com-nf-cr2")
    (version "0.0.0-20180623103828-4699471a17ed")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nf/cr2")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "105dqvynd2dm0xv0sjyf2qkhx70pf84i8mk5fmj4bfxjc06z4gmv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nf/cr2"))
    (home-page "https://github.com/nf/cr2")
    (synopsis #f)
    (description
     "Package cr2 implements rudimentary support for reading Canon Camera Raw 2 (CR2)
files.")
    (license license:bsd-3)))

(define-public go-github-com-nfnt-resize
  (package
    (name "go-github-com-nfnt-resize")
    (version "0.0.0-20180221191011-83c6a9932646")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nfnt/resize")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "005cpiwq28krbjf0zjwpfh63rp4s4is58700idn24fs3g7wdbwya"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nfnt/resize"))
    (home-page "https://github.com/nfnt/resize")
    (synopsis
     "This package is no longer being updated! Please look for alternatives if that bothers you.")
    (description "Package resize implements various image resizing methods.")
    (license license:isc)))

(define-public go-github-com-nikolalohinski-gonja
  (package
    (name "go-github-com-nikolalohinski-gonja")
    (version "1.5.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/NikolaLohinski/gonja")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ymndfpidihywi0xld36417nfhb8i6qvdbvr324g18vbr3k0402b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nikolalohinski/gonja"))
    (propagated-inputs (list go-gopkg-in-yaml-v3 ; packaged
                             go-golang-org-x-exp ; packaged
                             go-github-com-yargevad-filepathx ; packaged
                             go-github-com-x-cray-logrus-prefixed-formatter
                             go-github-com-stretchr-testify ; packaged
                             go-github-com-sirupsen-logrus ; packaged
                             go-github-com-pmezard-go-difflib ; packaged
                             go-github-com-pkg-errors ; packaged
                             go-github-com-pelletier-go-toml-v2
                             go-github-com-json-iterator-go
                             go-github-com-goph-emperror
                             go-github-com-go-check-check
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://github.com/nikolalohinski/gonja")
    (synopsis "Usage")
    (description
     "@@code{gonja} is a pure @@code{go} implementation of the
@@url{https://jinja.palletsprojects.com/,Jinja template engine}.  It aims to be
compatible with the original @@code{python} implementation but also provides
additional features to compensate the lack of @@code{python} scripting
capabilities.")
    (license license:expat)))

(define-public go-github-com-nimblemarkets-ntcharts
  (package
    (name "go-github-com-nimblemarkets-ntcharts")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/NimbleMarkets/ntcharts")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lr6jxgpfiq5lcp8p2y6lr3wsnc0nfb19623yyy05ipcbbqwh9k7"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "github.com/NimbleMarkets/ntcharts"))
    (propagated-inputs (list go-github-com-lrstanley-bubblezone
                             go-github-com-spf13-pflag
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-bubbletea
                             go-github-com-charmbracelet-bubbles
                             go-github-com-aquilax-go-perlin))
    (home-page "https://github.com/NimbleMarkets/ntcharts")
    (synopsis "ntcharts - Nimble Terminal Charts")
    (description
     "@@code{ntcharts} is a Golang Terminal Charting library for the Bubble Tea
Framework and other TUIs.")
    (license license:expat)))

(define-public go-github-com-nishanths-exhaustive
  (package
    (name "go-github-com-nishanths-exhaustive")
    (version "0.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nishanths/exhaustive")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z59p87kxmljxqw13b7kblr5whwljigj44nmrmj71an2mjs1vciq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nishanths/exhaustive"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/nishanths/exhaustive")
    (synopsis "exhaustive")
    (description
     "Package exhaustive defines an analyzer that checks exhaustiveness of switch
statements of enum-like constants in Go source code.  The analyzer can
optionally also check exhaustiveness of keys in map literals whose key type is
enum-like.")
    (license license:bsd-2)))

(define-public go-github-com-nishanths-predeclared
  (package
    (name "go-github-com-nishanths-predeclared")
    (version "0.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nishanths/predeclared")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hk0i43yh2bf1qll3k88xkfgm43v63q4qz0qnrkziaj3pg886q3j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nishanths/predeclared"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/nishanths/predeclared")
    (synopsis "predeclared")
    (description
     "Command predeclared prints the names and locations of declarations in the given
packages that have the same name as one of Go's predeclared identifiers (eg.,
int, string, delete, copy, append).")
    (license license:bsd-3)))

(define-public go-github-com-nlpodyssey-cybertron
  (package
    (name "go-github-com-nlpodyssey-cybertron")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nlpodyssey/cybertron")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0k96czplbiiw0k4mzfl0ypmf8id7vwrlx5ynwdf6938sc3cik0n9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nlpodyssey/cybertron"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc-cmd-protoc-gen-go-grpc
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-golang-org-x-text ; packaged
                             go-golang-org-x-sync ; packaged
                             go-golang-org-x-net ; packaged
                             go-github-com-stretchr-testify ; packaged
                             go-github-com-shirou-gopsutil-v3 ; packaged
                             go-github-com-rs-zerolog ; packaged
                             go-github-com-rs-cors
                             go-github-com-nlpodyssey-spago ; packaged
                             go-github-com-nlpodyssey-gotokenizers
                             go-github-com-nlpodyssey-gopickle
                             go-github-com-joho-godotenv ; packaged
                             go-github-com-grpc-ecosystem-grpc-gateway-v2
                             go-github-com-bufbuild-buf))
    (home-page "https://github.com/nlpodyssey/cybertron")
    (synopsis "Cybertron")
    (description
     "Cybertron is a package in pure Go built upon
@@url{https://github.com/nlpodyssey/spago,@code{spaGO}} that provides Go
developers with an easy interface to use NLP technologies, without needing other
programming languages or complex frameworks.  It's designed for using
pre-trained Transformer models available on the
@@url{https://huggingface.co/models,@code{HuggingFace} models repository}.")
    (license license:bsd-2)))

(define-public go-github-com-nlpodyssey-gopickle
  (package
    (name "go-github-com-nlpodyssey-gopickle")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nlpodyssey/gopickle")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fadbyq63i55g3k91knm7m1pl3j0krxdgpajrl78h27sl3mhnhal"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nlpodyssey/gopickle"))
    (propagated-inputs (list go-golang-org-x-text))
    (home-page "https://github.com/nlpodyssey/gopickle")
    (synopsis "GoPickle")
    (description
     "@code{GoPickle} is a Go library for loading Python's data serialized with
@@code{pickle} and @code{PyTorch} module files.")
    (license license:bsd-2)))

(define-public go-github-com-nlpodyssey-gotokenizers
  (package
    (name "go-github-com-nlpodyssey-gotokenizers")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nlpodyssey/gotokenizers")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xkypv452kq84l30p2y46565w0lyqjp3s3w3xp1gzh1pswpmpmvn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nlpodyssey/gotokenizers"))
    (propagated-inputs (list go-github-com-dlclark-regexp2))
    (home-page "https://github.com/nlpodyssey/gotokenizers")
    (synopsis "GoTokenizers")
    (description
     "@code{GoTokenizers} is a Go module implementing some of the most used
state-of-the-art natural language tokenizers.")
    (license license:bsd-2)))

(define-public go-github-com-noborus-guesswidth
  (package
    (name "go-github-com-noborus-guesswidth")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/noborus/guesswidth")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hrbq10lv2xm8jql0fd9b5bziwqsqwpwpxnkpjkf5axq05x5ixk9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/noborus/guesswidth"))
    (propagated-inputs (list go-github-com-spf13-cobra
                             go-github-com-mattn-go-runewidth))
    (home-page "https://github.com/noborus/guesswidth")
    (synopsis "guesswidth")
    (description
     "Package guesswidth handles the format as formatted by printf.  Spaces exist as
delimiters, but spaces are not always delimiters.  The width seems to be a fixed
length, but it doesn't always fit.  guesswidth finds the column separation
position from the reference line(header) and multiple lines(body).")
    (license license:expat)))

(define-public go-github-com-noborus-ov
  (package
    (name "go-github-com-noborus-ov")
    (version "0.39.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/noborus/ov")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0q16whq88j6ypw5jmw2779fnlwz3180akq00mf7r7ycabwrm0cby"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "github.com/noborus/ov"))
    (propagated-inputs (list go-golang-org-x-term
                             go-golang-org-x-sync
                             go-github-com-ulikunitz-xz
                             go-github-com-spf13-viper
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-rivo-uniseg
                             go-github-com-pierrec-lz4-v4
                             go-github-com-noborus-guesswidth
                             go-github-com-mattn-go-runewidth
                             go-github-com-klauspost-compress
                             go-github-com-jwalton-gchalk
                             go-github-com-hashicorp-golang-lru-v2
                             go-github-com-gdamore-tcell-v2
                             go-github-com-fsnotify-fsnotify
                             go-github-com-creack-pty
                             go-github-com-atotto-clipboard
                             go-code-rocketnine-space-tslocum-cbind))
    (home-page "https://github.com/noborus/ov")
    (synopsis "ov - feature rich terminal pager")
    (description "ov is a terminal pager.")
    (license license:expat)))

(define-public go-github-com-nozzle-throttler
  (package
    (name "go-github-com-nozzle-throttler")
    (version "0.0.0-20180817012639-2ea982251481")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nozzle/throttler")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06g6gbf25l8wd6m00gcrxyg2shakva394hkv4ppgynqrqs5cprx6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nozzle/throttler"))
    (home-page "https://github.com/nozzle/throttler")
    (synopsis "Throttler - intelligent WaitGroups")
    (description
     "Package throttler fills the gap between sync.@code{WaitGroup} and manually
monitoring your goroutines with channels.  The API is almost identical to Wait
Groups, but it allows you to set a max number of workers that can be running
simultaneously.  It uses channels internally to block until a job completes by
calling Done(err) or until all jobs have been completed.")
    (license license:asl2.0)))

(define-public go-github-com-nrdcg-auroradns
  (package
    (name "go-github-com-nrdcg-auroradns")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/auroradns")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1r0v7n1717qv5brdpdzk0829zyg750ar6hp3ilxll812fnzc1m64"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nrdcg/auroradns"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/nrdcg/auroradns")
    (synopsis "Go library for accessing the Aurora DNS API")
    (description "An Aurora DNS API client written in Go.")
    (license license:mpl2.0)))

(define-public go-github-com-nrdcg-bunny-go
  (package
    (name "go-github-com-nrdcg-bunny-go")
    (version "0.0.0-20240207213615-dde5bf4577a3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/bunny-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "173qb121lg7llgqh3wh5ib33w6iisdqs5jb8wlp16l8nzxw3n52a"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nrdcg/bunny-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-uuid
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/nrdcg/bunny-go")
    (synopsis "bunny-go")
    (description
     "Package bunny provides functionality to interact with the Bunny CDN HTTP API.")
    (license license:expat)))

(define-public go-github-com-nrdcg-desec
  (package
    (name "go-github-com-nrdcg-desec")
    (version "0.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/desec")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zzv1mbxwdfmigl8768zcm1fh8arm236lmyjixd3q0lqvgd4vgb2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/nrdcg/desec"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-peterhellberg-link
                             go-github-com-hashicorp-go-retryablehttp))
    (home-page "https://github.com/nrdcg/desec")
    (synopsis "Go library for accessing the deSEC API")
    (description "An @code{deSEC} API client written in Go.")
    (license license:mpl2.0)))

(define-public go-github-com-nrdcg-dnspod-go
  (package
    (name "go-github-com-nrdcg-dnspod-go")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/dnspod-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05ad264cw36hzb23pb7n4h2vd0rdim3nkn9yn6mnxrrwq6jqrybi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nrdcg/dnspod-go"))
    (home-page "https://github.com/nrdcg/dnspod-go")
    (synopsis "DNSPod Go API client")
    (description "Package dnspod implements a client for the dnspod API.")
    (license license:expat)))

(define-public go-github-com-nrdcg-freemyip
  (package
    (name "go-github-com-nrdcg-freemyip")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/freemyip")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ihg32cwxar3b8gz0myc3i8l2y6zk2gzsfvn7wk4iqaprl5zdwl6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nrdcg/freemyip"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/nrdcg/freemyip")
    (synopsis "Go library for accessing the freemyip.com API")
    (description
     "Package freemyip contains a client of the DNS API of freemyip.")
    (license license:mpl2.0)))

(define-public go-github-com-nrdcg-mailinabox
  (package
    (name "go-github-com-nrdcg-mailinabox")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/mailinabox")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0880k6p5mhf94297r6wdnb2jhpwgi21w5pr3y8whfh360g7ja6c8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nrdcg/mailinabox"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/nrdcg/mailinabox")
    (synopsis "Go library for accessing the Mail-in-a-Box API")
    (description
     "This package provides a Mail-in-a-Box API client written in Go.")
    (license license:mpl2.0)))

(define-public go-github-com-nrdcg-namesilo
  (package
    (name "go-github-com-nrdcg-namesilo")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/namesilo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bkrxdpaiqniw0c11mwqria66aydkzsk8dy5vnslk2b87cg9bmv6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nrdcg/namesilo"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/nrdcg/namesilo")
    (synopsis "Go library for accessing the Namesilo API")
    (description
     "Package namesilo A Go client library for accessing the Namesilo API.")
    (license license:mpl2.0)))

(define-public go-github-com-nrdcg-nodion
  (package
    (name "go-github-com-nrdcg-nodion")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/nodion")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fzqznnyz6n020rars2ac7s06qs2n8h1bbxpddlmv4p8m4pdhddz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nrdcg/nodion"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/nrdcg/nodion")
    (synopsis "Go library for accessing the Nodion DNS API")
    (description "Package nodion contains a client of the DNS API of Nodion.")
    (license license:mpl2.0)))

(define-public go-github-com-nrdcg-porkbun
  (package
    (name "go-github-com-nrdcg-porkbun")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nrdcg/porkbun")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1012gym6zvldjhs3df5iwsjrlkwdxhlnrnzn79c8hbpga9hysyqc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nrdcg/porkbun"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/nrdcg/porkbun")
    (synopsis "Go library for accessing the Porkbun API")
    (description
     "Package porkbun contains a client of the DNS API of Porkdun.")
    (license license:mpl2.0)))

(define-public go-github-com-nsf-jsondiff
  (package
    (name "go-github-com-nsf-jsondiff")
    (version "0.0.0-20230430225905-43f6cf3098c1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nsf/jsondiff")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dv0h6hn6ycxwmwkz9rfjxi8a2nq48w88h5mdmyww7myf0m6dfyr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nsf/jsondiff"))
    (home-page "https://github.com/nsf/jsondiff")
    (synopsis "JsonDiff library")
    (description
     "The main purpose of the library is integration into tests which use json and
providing human-readable output of test results.")
    (license license:expat)))

(define-public go-github-com-nunnatsa-ginkgolinter
  (package
    (name "go-github-com-nunnatsa-ginkgolinter")
    (version "0.18.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nunnatsa/ginkgolinter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1y80cg4dh6f122jv06qprik5zw40cb2v8kpzcbng6aaszx079b2n"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/nunnatsa/ginkgolinter"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-go-toolsmith-astcopy))
    (home-page "https://github.com/nunnatsa/ginkgolinter")
    (synopsis "ginkgo-linter")
    (description
     "@@url{https://onsi.github.io/ginkgo/,ginkgo} is a popular testing framework and
@@url{https://onsi.github.io/gomega/,gomega} is its assertion package.")
    (license license:expat)))

(define-public go-github-com-nyaruka-phonenumbers
  (package
    (name "go-github-com-nyaruka-phonenumbers")
    (version "1.4.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nyaruka/phonenumbers")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0r7c55sw8yswaniipj64s83zfb9ycmqi5cgb8syqqmr5m5kpxk80"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nyaruka/phonenumbers"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-golang-org-x-text go-golang-org-x-exp
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/nyaruka/phonenumbers")
    (synopsis "☎️ phonenumbers")
    (description
     "golang port of Google's
@@url{https://github.com/googlei18n/libphonenumber,libphonenumber} forked from
libphonenumber from
@@url{https://github.com/ttacon/libphonenumber,ttacon/libphonenumber}.  This
library is used daily in production for parsing and validation of numbers across
the world, so is well maintained.  Please open an issue if you encounter any
problems, we'll do our best to address them.")
    (license license:expat)))

(define-public go-github-com-nzdjb-go-metaname
  (package
    (name "go-github-com-nzdjb-go-metaname")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nzdjb/go-metaname")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03kcray2zfrjas8wdq1jf9q8yjih5kwfdfafjkbnckxryf5fdcqx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/nzdjb/go-metaname"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-adamslevy-jsonrpc2-v14))
    (home-page "https://github.com/nzdjb/go-metaname")
    (synopsis "Go Metaname")
    (description "Package metaname provides a client for the Metaname API.")
    (license license:expat)))

(define-public go-github-com-oapi-codegen-runtime
  (package
    (name "go-github-com-oapi-codegen-runtime")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/oapi-codegen/runtime")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1win3ksak8q2nm78id1di33s72ld476bvbyjwwrg0h7016jz66qr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/oapi-codegen/runtime"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-labstack-echo-v4 ; packaged
                             go-github-com-kataras-iris-v12
                             go-github-com-google-uuid
                             go-github-com-gin-gonic-gin
                             go-github-com-apapsch-go-jsonmerge-v2))
    (home-page "https://github.com/oapi-codegen/runtime")
    (synopsis "oapi-codegen/runtime")
    (description "Copyright 2021 @code{DeepMap}, Inc.")
    (license license:asl2.0)))

(define-public go-github-com-oauth2-proxy-mockoidc
  (package
    (name "go-github-com-oauth2-proxy-mockoidc")
    (version "0.0.0-20240214162133-caebfff84d25")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/oauth2-proxy/mockoidc")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ds14nav5swf4wzj3f45liwbdzibjb2ysjym648knvyabf7yvb87"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/oauth2-proxy/mockoidc"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-golang-jwt-jwt-v5 ;packaged

                             go-github-com-go-jose-go-jose-v3))
    (home-page "https://github.com/oauth2-proxy/mockoidc")
    (synopsis "mockoidc")
    (description
     "This package provides a Mock @code{OpenID} Connect Server for Authentication
Unit and Integration Tests.")
    (license license:expat)))

(define-public go-github-com-oleiade-reflections
  (package
    (name "go-github-com-oleiade-reflections")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/oleiade/reflections")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0wnd84lqma3cg6qk4f8nbpy78068jmkwylay41i34vcg45sn90ag"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/oleiade/reflections"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/oleiade/reflections")
    (synopsis "Reflections")
    (description
     "Package reflections provides high level abstractions over the Go standard
@@url{http://golang.org/pkg/reflect/,reflect} library.")
    (license license:expat)))

(define-public go-github-com-olivere-elastic-v7
  (package
    (name "go-github-com-olivere-elastic-v7")
    (version "7.0.32")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/olivere/elastic")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wgb891qs4rgw1sfpwfnplp57g4w4sq3ci31h7121cx118hy1v17"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/olivere/elastic/v7"
      #:unpack-path "github.com/olivere/elastic"))
    (propagated-inputs (list go-go-opentelemetry-io-otel
                             go-go-opencensus-io ; packaged

                             go-github-com-smartystreets-go-aws-auth ; packaged
                             go-github-com-pkg-errors
                             go-github-com-opentracing-opentracing-go
                             go-github-com-mailru-easyjson
                             go-github-com-google-go-cmp
                             go-github-com-fortytw2-leaktest
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/olivere/elastic")
    (synopsis "Elastic")
    (description
     "Package elastic provides an interface to the Elasticsearch server
(@@url{https://www.elastic.co/products/elasticsearch,https://www.elastic.co/products/elasticsearch}).")
    (license license:expat)))

(define-public go-github-com-ooni-minivpn
  (package
    (name "go-github-com-ooni-minivpn")
    (version "0.0.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ooni/minivpn")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07qs7z3255xi35c2ypbizxdp6mn5xm3xlzlsf63ncyi1khs6xwhb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ooni/minivpn"))
    (propagated-inputs (list go-golang-org-x-exp
                        go-golang-org-x-sync
                        go-golang-org-x-net
                        go-gitlab-com-yawning-obfs4-git
                        go-github-com-refraction-networking-utls
                        go-github-com-ory-dockertest-v3
                        go-github-com-jackpal-gateway
                        go-github-com-google-uuid
                        go-github-com-google-martian
                        go-github-com-google-gopacket ; packaged
                        go-github-com-google-go-cmp
                        go-github-com-apex-log ; packaged
                        go-github-com-doridian-water
                        #;go-git-torproject-org-pluggable-transports-goptlib-git))
    (home-page "https://github.com/ooni/minivpn")
    (synopsis "minivpn")
    (description
     "This package provides a minimalistic implementation of the @code{OpenVPN}
protocol in Go (client only).")
    (license license:gpl3)))

(define-public go-github-com-ooni-netem
  (package
    (name "go-github-com-ooni-netem")
    (version "0.0.0-20240208095707-608dcbcd82b8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ooni/netem")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0maa77qfx34r5j6xryxlap1z59pxwk6j1a5bj02z983w6fcv504k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ooni/netem"))
    (propagated-inputs (list go-github-com-montanaflynn-stats
                             go-github-com-google-go-cmp
                             go-gvisor-dev-gvisor
                             go-golang-org-x-crypto
                             go-github-com-miekg-dns
                             go-github-com-google-gopacket ; packaged
                             go-github-com-apex-log ; packaged
                             ))
    (home-page "https://github.com/ooni/netem")
    (synopsis "Netem")
    (description
     "Package netem is a framework to write integration tests that use TCP/IP stacks
implemented in userspace.")
    (license license:bsd-3)))

(define-public go-github-com-ooni-oocrypto
  (package
    (name "go-github-com-ooni-oocrypto")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ooni/oocrypto")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01z48qa7kynjvqv267fb21yncksa4qxm4dnbkgq48gr3lvajpjsa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ooni/oocrypto"))
    (propagated-inputs (list go-golang-org-x-sys go-golang-org-x-crypto))
    (home-page "https://github.com/ooni/oocrypto")
    (synopsis "github.com/ooni/oocrypto")
    (description
     "This repository contains a fork of a subset of the Go stdlib's @@code{crypto}
package including patches to allow selecting AES hardware support on Android
devices.  We documented why we need these patches at OONI in the
@@url{https://ooni.org/post/making-ooni-probe-android-more-resilient/,Making the
OONI Probe Android app more resilient} blog post.")
    (license license:gpl3)))

(define-public go-github-com-ooni-oohttp
  (package
    (name "go-github-com-ooni-oohttp")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ooni/oohttp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1v5z1gdr9vly3z8v7jmfskfds6p3jhm3f8049mym69rzdm0lmk9n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ooni/oohttp"))
    (propagated-inputs (list go-golang-org-x-net))
    (home-page "https://github.com/ooni/oohttp")
    (synopsis "github.com/ooni/oohttp")
    (description
     "Package http is a fork of stdlib's net/http that provides HTTP client and server
implementations that are compatible with alternative TLS libraries such as
github.com/refraction-networking/utls.")
    (license license:bsd-3)))

(define-public go-github-com-ooni-probe-assets
  (package
    (name "go-github-com-ooni-probe-assets")
    (version "0.25.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ooni/probe-assets")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ffglrvvvfc9wzqbxrsq4wzcbb5x2vmij870lvhf329f1bkmav06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ooni/probe-assets"))
    (propagated-inputs (list go-github-com-oschwald-maxminddb-golang))
    (home-page "https://github.com/ooni/probe-assets")
    (synopsis "OONI Probe Assets")
    (description
     "Repository for packaging generic OONI assets.  It includes @code{MaxMind} DB
files retrieved from CURL. Every release is a different branch to avoid making
the history of the main branch too heavy.  You should pin your golang code to
the most recent branch using:.")
    (license license:bsd-3)))

(define-public go-github-com-ooni-probe-engine
  (package
    (name "go-github-com-ooni-probe-engine")
    (version "0.30.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ooni/probe-engine")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rhv32fnzbc5yb3m8sy9mqjlx2frqlxcd63n0rkas5nngnhg06p9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ooni/probe-engine"))
    (propagated-inputs (list
                        go-filippo-io-age
                        go-github-com-apex-log ; packaged
                        go-github-com-armon-go-socks5
                        go-github-com-cloudflare-circl
                        go-github-com-cretz-bine
                        go-github-com-dop251-goja
                        go-github-com-dop251-goja-nodejs
                        go-github-com-google-go-cmp
                        go-github-com-google-gopacket ; packaged
                        go-github-com-google-shlex
                        go-github-com-google-uuid
                        go-github-com-gorilla-websocket
                        go-github-com-hexops-gotextdiff
                        go-github-com-mattn-go-sqlite3 ; packaged
                        go-github-com-miekg-dns
                        go-github-com-montanaflynn-stats
                        go-github-com-ooni-minivpn
                        go-github-com-ooni-netem
                        go-github-com-ooni-oocrypto
                        go-github-com-ooni-oohttp
                        go-github-com-ooni-probe-assets
                        go-github-com-oschwald-maxminddb-golang
                        go-github-com-pborman-getopt-v2
                        go-github-com-pion-stun
                        go-github-com-pkg-errors
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-psiphon-labs-psiphon-tunnel-core
                        go-github-com-quic-go-quic-go ; packaged
                        go-github-com-rogpeppe-go-internal
                        go-github-com-rubenv-sql-migrate
                        go-github-com-schollz-progressbar-v3
                        go-github-com-spf13-cobra
                        go-github-com-tailscale-hujson
                        go-github-com-upper-db-v4
                        go-gitlab-com-yawning-obfs4-git
                        go-gitlab-com-yawning-utls-git
                        go-gitlab-torproject-org-tpo-anti-censorship-pluggable-transports-goptlib
                        go-gitlab-torproject-org-tpo-anti-censorship-pluggable-transports-snowflake-v2
                        go-golang-org-x-crypto ; packaged
                        go-golang-org-x-net ; packaged
                        go-golang-org-x-sys ; packaged
                        ))
    (home-page "https://github.com/ooni/probe-engine")
    (synopsis "OONI Probe Engine")
    (description "Semi-automatically exported from github.com/ooni/probe-cli.")
    (license license:gpl3)))

(define-public go-github-com-oov-psd
  (package
    (name "go-github-com-oov-psd")
    (version "0.0.0-20220121172623-5db5eafcecbb")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/oov/psd")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0k933fdl20p5x6wfz1f0b2l6xw2rh8d432v25isgm99rqvcwdjvn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/oov/psd"))
    (home-page "https://github.com/oov/psd")
    (synopsis "PSD/PSB(Photoshop) file reader for Go programming language")
    (description "It works almost well but it is still in development.")
    (license license:expat)))

(define-public go-github-com-open-policy-agent-opa
  (package
    (name "go-github-com-open-policy-agent-opa")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-policy-agent/opa")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rxb4qirbpy93g66lxx6i4bh2gm8chxddblgrimlah21gpj65kfi"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/open-policy-agent/opa"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                        go-oras-land-oras-go-v2
                        go-gopkg-in-yaml-v3
                        go-gopkg-in-check-v1
                        go-google-golang-org-grpc
                        go-golang-org-x-time
                        go-golang-org-x-net
                        go-go-uber-org-automaxprocs ; packaged
                        go-go-opentelemetry-io-otel-trace
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-github-com-yashtewari-glob-intersection
                        go-github-com-xeipuuv-gojsonreference
                        go-github-com-tchap-go-patricia-v2
                        go-github-com-spf13-viper
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-sirupsen-logrus
                        go-github-com-sergi-go-diff ; packaged
                        go-github-com-rcrowley-go-metrics
                        go-github-com-prometheus-client-model ; packaged
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-peterh-liner ; packaged
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-olekukonko-tablewriter
                        go-github-com-gorilla-mux
                        go-github-com-google-uuid
                        go-github-com-google-go-cmp
                        go-github-com-golang-protobuf
                        go-github-com-gobwas-glob
                        go-github-com-go-logr-logr
                        go-github-com-go-ini-ini
                        go-github-com-fsnotify-fsnotify ; packaged
                        go-github-com-foxcpp-go-mockdns
                        go-github-com-fortytw2-leaktest
                        go-github-com-dgraph-io-badger-v3
                        go-github-com-containerd-errdefs
                        go-github-com-containerd-containerd
                        go-github-com-bytecodealliance-wasmtime-go-v3
                        go-github-com-andreyvit-diff
                        go-github-com-agnivade-levenshtein
                        go-github-com-oneofone-xxhash))
    (home-page "https://github.com/open-policy-agent/opa")
    (synopsis "Open Policy Agent")
    (description
     "Open Policy Agent (OPA) is an open source, general-purpose policy engine that
enables unified, context-aware policy enforcement across the entire stack.")
    (license license:asl2.0)))

(define-public go-github-com-opencontainers-runtime-tools
  (package
    (name "go-github-com-opencontainers-runtime-tools")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/opencontainers/runtime-tools")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1pli3jb1rq9lkzzz83f7jw788vijg7x6ly3vgasdlwri7kiph1sa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/opencontainers/runtime-tools"))
    (home-page "https://github.com/opencontainers/runtime-tools")
    (synopsis "oci-runtime-tool")
    (description
     "oci-runtime-tool is a collection of tools for working with the
@@url{https://github.com/opencontainers/runtime-spec,OCI runtime specification}.
 To build from source code, runtime-tools requires Go 1.10.x or above.")
    (license license:asl2.0)))

(define-public go-github-com-opendns-vegadns2client
  (package
    (name "go-github-com-opendns-vegadns2client")
    (version "0.0.0-20180418235048-a3fa4a771d87")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/opendns/vegadns2client")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m1kqr6hrpik0ffiwxw7n261hvilvlmp5bsm9530ijr6rld8j4f5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/OpenDNS/vegadns2client"))
    (home-page "https://github.com/OpenDNS/vegadns2client")
    (synopsis "vegadns2client")
    (description
     "vegadns2client is a go client for
@@url{https://github.com/shupp/@code{VegaDNS-API,VegaDNS-API}}.  This is an
incomplete client, initially intended to support
@@url{https://github.com/xenolf/lego,lego}.")
    (license license:asl2.0)))

(define-public go-github-com-openpeedeep-depguard-v2
  (package
    (name "go-github-com-openpeedeep-depguard-v2")
    (version "2.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/OpenPeeDeeP/depguard")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0h49z0bw1jgr9v605z5kv7s88zypbmg98dh17ys8c6q31948n8wa"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/OpenPeeDeeP/depguard/v2"
      #:unpack-path "github.com/OpenPeeDeeP/depguard"))
    (propagated-inputs (list go-gopkg-in-yaml-v3 go-github-com-google-go-cmp
                             go-github-com-burntsushi-toml
                             go-golang-org-x-tools go-github-com-gobwas-glob))
    (home-page "https://github.com/OpenPeeDeeP/depguard")
    (synopsis "Depguard")
    (description
     "This package provides a Go linter that checks package imports are in a list of
acceptable packages.  This allows you to allow imports from a whole organization
or only allow specific packages within a repository.")
    (license license:gpl3)))

(define-public go-github-com-opensearch-project-opensearch-go
  (package
    (name "go-github-com-opensearch-project-opensearch-go")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/opensearch-project/opensearch-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mm2xjgsv3xa0nqlv6yyh4h2cgcg2in8r7gd88nlhqmp804bddkx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/opensearch-project/opensearch-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/opensearch-project/opensearch-go")
    (synopsis "Welcome!")
    (description
     "Package opensearch provides a Go client for @code{OpenSearch}.")
    (license license:asl2.0)))

(define-public go-github-com-opentracing-basictracer-go
  (package
    (name "go-github-com-opentracing-basictracer-go")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/opentracing/basictracer-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0688ir5vs3xiin4piw8vaqvl71r73lg2sc7ds3nh6clkqx9mnkam"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/opentracing/basictracer-go"))
    (propagated-inputs (list go-golang-org-x-net
                             go-golang-org-x-lint
                             go-github-com-stretchr-testify
                             go-github-com-opentracing-opentracing-go
                             go-github-com-gogo-protobuf
                             go-github-com-davecgh-go-spew))
    (home-page "https://github.com/opentracing/basictracer-go")
    (synopsis "basictracer-go")
    (description
     "Basic implementation of the @code{OpenTracing} API for Go.  Sometimes this
package is called \"reference implementation\", but it is not meant as a
production quality library.  For real production implementations, search the
@code{OpenTracing} Registry
(@@url{https://opentracing.io/registry/?s=go,https://opentracing.io/registry/?s=go})
for packages with the tag \"tracer\".")
    (license license:asl2.0)))

(define-public go-github-com-opentracing-contrib-go-observer
  (package
    (name "go-github-com-opentracing-contrib-go-observer")
    (version "0.0.0-20170622124052-a52f23424492")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/opentracing-contrib/go-observer")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q7z458m2vh3bzml4x9vm2paffqn1jcgiydbisl0zg2asfniq7k3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/opentracing-contrib/go-observer"))
    (home-page "https://github.com/opentracing-contrib/go-observer")
    (synopsis "An Observer API for OpenTracing-go Tracers")
    (description
     "OTObserver can be used to watch the span events like @code{StartSpan()},
@code{SetOperationName()}, @code{SetTag()} and @code{Finish()}.  A need for
observers arose when information (metrics) more than just the latency
information was required for the spans, in the distributed tracers.  But, there
can be a lot of metrics in different domains and adding such metrics to any one
(client) tracer breaks cross-platform compatibility.  There are various ways to
avoid such issues, however, an observer pattern is cleaner and provides loose
coupling between the packages exporting metrics (on span events) and the tracer.")
    (license license:asl2.0)))

(define-public go-github-com-openzipkin-contrib-zipkin-go-opentracing
  (package
    (name "go-github-com-openzipkin-contrib-zipkin-go-opentracing")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://github.com/openzipkin-contrib/zipkin-go-opentracing")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16zzlkvb9agnbjvsqbsj9lkbyha1p397kvgrqflhrh7w36psl9vn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/openzipkin-contrib/zipkin-go-opentracing"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-github-com-stretchr-testify
                             go-github-com-openzipkin-zipkin-go ; packaged
                             go-github-com-opentracing-opentracing-go
                             go-github-com-opentracing-contrib-go-observer))
    (home-page "https://github.com/openzipkin-contrib/zipkin-go-opentracing")
    (synopsis "zipkin-go-opentracing")
    (description
     "@@url{http://opentracing.io,@code{OpenTracing}} bridge for the native
@@url{https://zipkin.io,Zipkin} tracing implementation
@@url{https://github.com/openzipkin/zipkin-go,Zipkin Go}.")
    (license license:asl2.0)))

(define-public go-github-com-oracle-oci-go-sdk-v65
  (package
    (name "go-github-com-oracle-oci-go-sdk-v65")
    (version "65.81.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/oracle/oci-go-sdk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07bn78g5di1cgyx7b61zpk48vx2x2vd4rxjrkrxpnrffksldmgsc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/oracle/oci-go-sdk/v65"
      #:unpack-path "github.com/oracle/oci-go-sdk"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-sony-gobreaker
                             go-github-com-gofrs-flock))
    (home-page "https://github.com/oracle/oci-go-sdk")
    (synopsis "Oracle Cloud Infrastructure Golang SDK")
    (description
     "This is the official Go SDK for Oracle Cloud Infrastructure.")
    (license license:expat))) ; check-license

(define-public go-github-com-orangecms-go-framebuffer
  (package
    (name "go-github-com-orangecms-go-framebuffer")
    (version "0.0.0-20200613202404-a0700d90c330")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/orangecms/go-framebuffer")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19n3mi5ghnyhjw8qjwcj3708bdvqvw124vch4g305yvilfsgfnn5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/orangecms/go-framebuffer"))
    (home-page "https://github.com/orangecms/go-framebuffer")
    (synopsis "framebuffer")
    (description "Library for linux framebuffer device.")
    (license license:bsd-3)))

(define-public go-github-com-ory-dockertest-v3
  (package
    (name "go-github-com-ory-dockertest-v3")
    (version "3.11.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ory/dockertest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1didvmfjp9skdjkasff1wls72ip6kb6xcvpii2yxzir9z03cswrv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/ory/dockertest/v3"
      #:unpack-path "github.com/ory/dockertest"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-opencontainers-runc ; packaged
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-moby-term ; packaged
                             go-github-com-lib-pq
                             go-github-com-go-sql-driver-mysql
                             go-github-com-docker-go-units
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-docker-cli
                             go-github-com-containerd-continuity ; packaged
                             go-github-com-cenkalti-backoff-v4 ;packaged

                             go-github-com-nvveen-gotty ; apckaged
                             ;; go-github-com-microsoft-go-winio ; for Windows only
                             ))
    (home-page "https://github.com/ory/dockertest")
    (synopsis "Why should I use Dockertest?")
    (description
     "Use Docker to run your Golang integration tests against third party services on
@@strong{Microsoft Windows, Mac OSX and Linux}!")
    (license license:asl2.0)))

(define-public go-github-com-osrg-gobgp-v3
  (package
    (name "go-github-com-osrg-gobgp-v3")
    (version "3.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/osrg/gobgp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0a7j0qpvhg02cc5kr7chsw5hzd3dh5ajrnijq3issm65b25s50qc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/osrg/gobgp/v3"
      #:unpack-path "github.com/osrg/gobgp"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-time
                             go-golang-org-x-text
                             go-golang-org-x-sys
                             go-github-com-vishvananda-netlink
                             go-github-com-stretchr-testify
                             go-github-com-spf13-viper
                             go-github-com-spf13-cobra
                             go-github-com-sirupsen-logrus
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-kr-pretty
                             go-github-com-k-sone-critbitgo ; packaged
                             go-github-com-jessevdk-go-flags
                             go-github-com-grpc-ecosystem-go-grpc-prometheus ; packaged
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-github-com-go-test-deep
                             go-github-com-fsnotify-fsnotify ; packaged
                             go-github-com-eapache-channels ; packaged
                             go-github-com-dgryski-go-farm ; packaged
                             go-github-com-coreos-go-systemd-v22
                             go-github-com-burntsushi-toml))
    (home-page "https://github.com/osrg/gobgp")
    (synopsis "GoBGP: BGP implementation in Go")
    (description
     "@code{GoBGP} is an open source Border Gateway Protocol (BGP) implementation
designed from scratch for modern environment and implemented in a modern
programming language, @@url{http://golang.org/,the Go Programming Language}.")
    (license license:asl2.0)))

(define-public go-github-com-otiai10-gosseract-v2
  (package
    (name "go-github-com-otiai10-gosseract-v2")
    (version "2.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/otiai10/gosseract")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0v899n8pyl2ndb0aw3bpknb4sqxacpk399xc97af383f829fq6p7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/otiai10/gosseract/v2"
      #:unpack-path "github.com/otiai10/gosseract"))
    (propagated-inputs (list go-github-com-otiai10-mint))
    (home-page "https://github.com/otiai10/gosseract")
    (synopsis "gosseract OCR")
    (description "Golang OCR package, by using Tesseract C++ library.")
    (license license:expat)))

(define-public go-github-com-outcaste-io-badger-v3
  (package
    (name "go-github-com-outcaste-io-badger-v3")
    (version "3.2202.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/outcaste-io/badger")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ib8yx42fi0iragylai2xy5d7fdasxcmya97fgdl9pd5v4sxyxjh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/outcaste-io/badger/v3"
      #:unpack-path "github.com/outcaste-io/badger"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-golang-org-x-net
                             go-go-opencensus-io ; packaged

                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-pkg-errors
                             go-github-com-outcaste-io-ristretto
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-google-flatbuffers ; packaged
                             go-github-com-golang-snappy
                             go-github-com-golang-protobuf
                             go-github-com-gogo-protobuf
                             go-github-com-dustin-go-humanize ; packaged
                             go-github-com-cespare-xxhash))
    (home-page "https://github.com/outcaste-io/badger")
    (synopsis "BadgerDB")
    (description
     "Package badger implements an embeddable, simple and fast key-value database,
written in pure Go.  It is designed to be highly performant for both reads and
writes simultaneously.  Badger uses Multi-Version Concurrency Control (MVCC),
and supports transactions.  It runs transactions concurrently, with serializable
snapshot isolation guarantees.")
    (license license:asl2.0)))

(define-public go-github-com-ovh-go-ovh
  (package
    (name "go-github-com-ovh-go-ovh")
    (version "1.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ovh/go-ovh")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hiwygh31cm40f0c2xrxyph0j67bxrwb7xhxvgydxxgkqxv5m2jy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ovh/go-ovh"))
    (propagated-inputs (list go-gopkg-in-ini-v1 go-golang-org-x-oauth2
                             go-github-com-maxatome-go-testdeep
                             go-github-com-jarcoal-httpmock))
    (home-page "https://github.com/ovh/go-ovh")
    (synopsis "go-ovh")
    (description
     "Lightweight Go wrapper around OVHcloud's APIs.  Handles all the hard work
including credential creation and requests signing.")
    (license license:bsd-3)))

(define-public go-github-com-ovn-org-libovsdb
  (package
    (name "go-github-com-ovn-org-libovsdb")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ovn-org/libovsdb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0x21yrgzb3armnc81kjasvq7906mvvv7w3ax6my4dpjapv5gszg8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ovn-org/libovsdb"))
    (propagated-inputs (list go-golang-org-x-text
                             go-github-com-stretchr-testify
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-ory-dockertest-v3
                             go-github-com-google-uuid
                             go-github-com-go-logr-stdr
                             go-github-com-go-logr-logr
                             go-github-com-cenkalti-rpc2 ; packaged
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://github.com/ovn-org/libovsdb")
    (synopsis "libovsdb")
    (description "An OVSDB Library written in Go.")
    (license license:asl2.0)))

(define-public go-github-com-package-url-packageurl-go
  (package
    (name "go-github-com-package-url-packageurl-go")
    (version "0.1.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/package-url/packageurl-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0i8zgznr56kr9jn0kyc1w39dbj93d589rk44hrd5qx2750wzs890"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/package-url/packageurl-go"))
    (home-page "https://github.com/package-url/packageurl-go")
    (synopsis "packageurl-go")
    (description "Package packageurl implements the package-url spec.")
    (license license:expat)))

(define-public go-github-com-paesslerag-gval
  (package
    (name "go-github-com-paesslerag-gval")
    (version "1.2.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/PaesslerAG/gval")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "006my38wxv4kmhlbmbps01r7gbkq2a80a4h7hdcni3cjbn6zspps"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/PaesslerAG/gval"))
    (propagated-inputs (list go-github-com-shopspring-decimal
                             go-github-com-paesslerag-jsonpath))
    (home-page "https://github.com/PaesslerAG/gval")
    (synopsis "Gval")
    (description
     "Package gval provides a generic expression language.  All functions, infix and
prefix operators can be replaced by composing languages into a new one.")
    (license license:bsd-3)))

(define-public go-github-com-paesslerag-jsonpath
  (package
    (name "go-github-com-paesslerag-jsonpath")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/PaesslerAG/jsonpath")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19x98ilxgklhy70x3y5fmqn5kdymwssnwxv0gjyfcf2zwnzm89c4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/PaesslerAG/jsonpath"))
    (propagated-inputs (list go-github-com-paesslerag-gval))
    (home-page "https://github.com/PaesslerAG/jsonpath")
    (synopsis "JSONPath")
    (description
     "Package jsonpath is an implementation of
@@url{http://goessner.net/articles/@code{JsonPath/,http://goessner.net/articles/JsonPath}/}
If a JSONPath contains one of [key1, key2 ...], .., *, [min:max],
[min:max:step], (? expression) all matchs are listed in an []interface{}.")
    (license license:bsd-3)))

(define-public go-github-com-panjf2000-ants-v2
  (package
    (name "go-github-com-panjf2000-ants-v2")
    (version "2.11.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/panjf2000/ants")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ygb6zn489nfbxsi2hawklw70pnab4gjzb2mxfnfx7xcr1jdgjlf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/panjf2000/ants/v2"
      #:unpack-path "github.com/panjf2000/ants"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/panjf2000/ants")
    (synopsis "📖 Introduction")
    (description
     "Package ants implements an efficient and reliable goroutine pool for Go.")
    (license license:expat)))

(define-public go-github-com-pascaldekloe-name
  (package
    (name "go-github-com-pascaldekloe-name")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pascaldekloe/name")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x379sm8x16xls6dcn6l1kwb9aqnw1gqvnj7s4qcfg67hxgryw6d"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/pascaldekloe/name"))
    (home-page "https://github.com/pascaldekloe/name")
    (synopsis "About")
    (description
     "Package name implements various naming conventions.  The two categories are
delimiter-separated and letter case-separated words.  Each of the formatting
functions support both techniques for input, without any context.")
    (license license:cc0)))

(define-public go-github-com-paularoy-azurestoragecache
  (package
    (name "go-github-com-paularoy-azurestoragecache")
    (version "0.0.0-20170906084534-3c249a3ba788")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/PaulARoy/azurestoragecache")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11v3assgkfkcjccda320grbdm3f38ynh1har9lm9a6hdk7mi1a2w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/PaulARoy/azurestoragecache"))
    (home-page "https://github.com/PaulARoy/azurestoragecache")
    (synopsis "azurestoragecache")
    (description
     "Package azurestoragecache provides an implementation of httpcache.Cache that
stores and retrieves data using Azure Storage.")
    (license license:asl2.0)))

(define-public go-github-com-paulmach-orb
  (package
    (name "go-github-com-paulmach-orb")
    (version "0.11.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/paulmach/orb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nrc9d6ixn6v5s227fczpcqnpnn4ry5qj8vd6rq5dr3m77k4j7m2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/paulmach/orb"))
    (propagated-inputs (list go-go-mongodb-org-mongo-driver
                             go-github-com-paulmach-protoscan
                             go-github-com-gogo-protobuf))
    (home-page "https://github.com/paulmach/orb")
    (synopsis "orb")
    (description
     "Package @@code{orb} defines a set of types for working with 2d geo and
planar/projected geometric data in Golang.  There are a set of sub-packages that
use these types to do interesting things.  They each provide their own README
with extra info.")
    (license license:expat)))

(define-public go-github-com-paulmach-protoscan
  (package
    (name "go-github-com-paulmach-protoscan")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/paulmach/protoscan")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15sb6sc1v2haz44ccrlaxz9mgwc2hnyiy7gql46bisk25f8lx41b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/paulmach/protoscan"))
    (propagated-inputs (list go-google-golang-org-protobuf))
    (home-page "https://github.com/paulmach/protoscan")
    (synopsis "protoscan")
    (description
     "Package @@code{protoscan} is a low-level reader for
@@url{https://developers.google.com/protocol-buffers,protocol buffers} encoded
data in Golang.  The main feature is the support for lazy/conditional decoding
of fields.")
    (license license:expat)))

(define-public go-github-com-paulrosania-go-charset
  (package
    (name "go-github-com-paulrosania-go-charset")
    (version "0.0.0-20190326053356-55c9d7a5834c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tessro/go-charset")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qinvy7jblsngw4fbz2f05jzqrzlzpxha733j0g9ipzvwhzzjdiv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/paulrosania/go-charset"))
    (home-page "https://github.com/paulrosania/go-charset")
    (synopsis "Character set conversion for Go")
    (description
     "This package provides a fork of
@@url{https://code.google.com/p/go-charset/,go-charset}, which itself is a port
of inferno's convcs for Go, which supports conversion to and from utf-8 for the
following character sets:.")
    (license license:bsd-3)))

(define-public go-github-com-pdfcpu-pdfcpu
  (package
    (name "go-github-com-pdfcpu-pdfcpu")
    (version "0.9.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pdfcpu/pdfcpu")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w2qhn15ir498n4qz3zffccskvr5cbpyhxfnk9wrhgpp5b0frgnd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/pdfcpu/pdfcpu"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-golang-org-x-text
                             go-golang-org-x-image
                             go-github-com-pkg-errors
                             go-github-com-mattn-go-runewidth
                             go-github-com-hhrutter-tiff
                             go-github-com-hhrutter-lzw))
    (home-page "https://github.com/pdfcpu/pdfcpu")
    (synopsis "pdfcpu: a Go PDF processor and CLI")
    (description
     "pdfcpu is a PDF processing library written in @@url{http://golang.org,Go} that
supports encryption and offers both an API and a command-line interface (CLI).
It is compatible with all PDF versions with basic support and ongoing
improvement for PDF 2.0 (ISO-32000-2).")
    (license license:asl2.0)))

(define-public go-github-com-pengsrc-go-shared
  (package
    (name "go-github-com-pengsrc-go-shared")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pengsrc/go-shared")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d0nfnfilvxlxdzw18k744py5b9p852qisz37ikfyxyp24jbi6fr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/pengsrc/go-shared"))
    (home-page "https://github.com/pengsrc/go-shared")
    (synopsis "go-shared")
    (description "Useful packages for the Go programming language.")
    (license license:asl2.0)))

(define-public go-github-com-peterbourgon-diskv-v3
  (package
    (name "go-github-com-peterbourgon-diskv-v3")
    (version "3.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/peterbourgon/diskv")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1158f22h2jvzx7fjk0lwg84avsrm1zijg7gdzaw7bbg1lb6xmj2g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/peterbourgon/diskv/v3"
      #:unpack-path "github.com/peterbourgon/diskv"))
    (propagated-inputs (list go-github-com-google-btree))
    (home-page "https://github.com/peterbourgon/diskv")
    (synopsis "What is diskv?")
    (description
     "Diskv (disk-vee) is a simple, persistent key-value store written in the Go
language.  It starts with an incredibly simple API for storing arbitrary data on
a filesystem by key, and builds several layers of performance-enhancing
abstraction on top.  The end result is a conceptually simple, but highly
performant, disk-backed storage system.")
    (license license:expat)))

(define-public go-github-com-peterhellberg-link
  (package
    (name "go-github-com-peterhellberg-link")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/peterhellberg/link")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xg6qzs7vr0lqs8yqq2h920mqkn2nv3srxbk1v6ygh9n66ig9b87"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/peterhellberg/link"))
    (home-page "https://github.com/peterhellberg/link")
    (synopsis "link")
    (description
     "Package link parses Link headers used for pagination, as defined in
@@url{https://rfc-editor.org/rfc/rfc5988.html,RFC 5988}.")
    (license license:expat)))

(define-public go-github-com-pgvector-pgvector-go
  (package
    (name "go-github-com-pgvector-pgvector-go")
    (version "0.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pgvector/pgvector-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fb4sj7hkdkcjw813b3zqzsssg6zh5qs59qjk6hk4d8xzm4diirn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/pgvector/pgvector-go"))
    (propagated-inputs (list go-gorm-io-gorm
                             go-gorm-io-driver-postgres
                             go-github-com-uptrace-bun-driver-pgdriver
                             go-github-com-uptrace-bun-dialect-pgdialect
                             go-github-com-uptrace-bun
                             go-github-com-lib-pq
                             go-github-com-jmoiron-sqlx ; packaged
                             go-github-com-jackc-pgx-v5
                             go-github-com-go-pg-pg-v10
                             go-github-com-ankane-disco-go
                             go-entgo-io-ent))
    (home-page "https://github.com/pgvector/pgvector-go")
    (synopsis "pgvector-go")
    (description
     "@@url{https://github.com/pgvector/pgvector,pgvector} support for Go.")
    (license license:expat)))

(define-public go-github-com-phayes-checkstyle
  (package
    (name "go-github-com-phayes-checkstyle")
    (version "0.0.0-20170904204023-bfd46e6a821d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/phayes/checkstyle")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bdfvgvm8gnrxdndnbvwcfjijxyn4c9xcmd11w5bbaz05c40dshx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/phayes/checkstyle"))
    (home-page "https://github.com/phayes/checkstyle")
    (synopsis "checkstyle")
    (description
     "Package checkstyle allows the parsing of generation of checkstyle XML files.")
    (license license:bsd-3)))

(define-public go-github-com-philipp15b-go-steam
  (package
    (name "go-github-com-philipp15b-go-steam")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Philipp15b/go-steam")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06d9294jdpmvax0inyzyk3jlzjlb1hw1nwsqki3zgk2ni88shzv3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Philipp15b/go-steam"))
    (home-page "https://github.com/Philipp15b/go-steam")
    (synopsis "Steam for Go")
    (description
     "This package allows you to automate actions on Valve's Steam network.  It is a
Go port of @code{SteamKit}.")
    (license license:bsd-3)))

(define-public go-github-com-phpdave11-gofpdf
  (package
    (name "go-github-com-phpdave11-gofpdf")
    (version "1.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/phpdave11/gofpdf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cfssmcv55p37zni9f5c4yn2jwd6fvqwml45f1s9gvj32kbhxvxg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/phpdave11/gofpdf"))
    (propagated-inputs (list go-golang-org-x-image
                             go-github-com-ruudk-golang-pdf417
                             go-github-com-phpdave11-gofpdi ; packaged
                             go-github-com-boombuler-barcode ; packaged
                             ))
    (home-page "https://github.com/phpdave11/gofpdf")
    (synopsis "GoFPDF document generator")
    (description
     "Package gofpdf implements a PDF document generator with high level support for
text, drawing and images.")
    (license license:expat)))

(define-public go-github-com-pinecone-io-go-pinecone
  (package
    (name "go-github-com-pinecone-io-go-pinecone")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pinecone-io/go-pinecone")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0x2qwd2bnw2b7cksbp8bcr81glr13ls50746zzki72yz13qg4nb3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/pinecone-io/go-pinecone"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-oapi-codegen-runtime
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/pinecone-io/go-pinecone")
    (synopsis "Pinecone Go SDK ·")
    (description
     "This is the official Go SDK for @@url{https://www.pinecone.io,Pinecone}.")
    (license license:asl2.0)))

(define-public go-github-com-pkoukk-tiktoken-go
  (package
    (name "go-github-com-pkoukk-tiktoken-go")
    (version "0.1.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pkoukk/tiktoken-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1v9vwsnkdhdj8ibxhi4pbngwgad836n8x6inm047415zambny230"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/pkoukk/tiktoken-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-uuid
                             go-github-com-dlclark-regexp2))
    (home-page "https://github.com/pkoukk/tiktoken-go")
    (synopsis "tiktoken-go")
    (description "@code{OpenAI's} tiktoken in Go.")
    (license license:expat)))

(define-public go-github-com-plaid-plaid-go
  (package
    (name "go-github-com-plaid-plaid-go")
    (version "1.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/plaid/plaid-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nhj88p7fw1yvmwgalf8dz99spfsyr30qm1451in3ii058x6wgsi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/plaid/plaid-go"))
    (propagated-inputs (list go-golang-org-x-oauth2
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/plaid/plaid-go")
    (synopsis "plaid-go")
    (description
     "The official Go client library for the @@url{https://plaid.com/docs,Plaid API}.
The library is now generated from our
@@url{https://github.com/plaid/plaid-openapi,@code{OpenAPI} schema}.  For older
manually-written versions of this client library, go
@@url{https://github.com/plaid/plaid-go/commit/0d3f02cddaa8fd637e84dccf2175a4a1a7dd0e07,here}
for the latest non-generated version.")
    (license license:expat)))

(define-public go-github-com-planetscale-vtprotobuf
  (package
    (name "go-github-com-planetscale-vtprotobuf")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/planetscale/vtprotobuf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bms8rrg8wrm3x9mspqrzzix24vjgi3p5zzbw108ydr1rnarwblf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/planetscale/vtprotobuf"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/planetscale/vtprotobuf")
    (synopsis ", the Vitess Protocol Buffers compiler")
    (description
     "This repository provides the @@code{protoc-gen-go-vtproto} plug-in for
@@code{protoc}, which is used by Vitess to generate optimized marshall &
unmarshal code.")
    (license license:bsd-3)))

(define-public go-github-com-polydawn-go-timeless-api
  (package
    (name "go-github-com-polydawn-go-timeless-api")
    (version "0.0.0-20220821201550-b93919e12c56")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/polydawn/go-timeless-api")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0wff5gm5pyvr0b1pcdxvxkbzqk6g4q4hxifkzxfnwcy28y19zg30"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/polydawn/go-timeless-api"))
    (propagated-inputs (list go-github-com-warpfork-go-wish
                             go-github-com-warpfork-go-errcat
                             go-github-com-polydawn-refmt ; packaged
                             ))
    (home-page "https://github.com/polydawn/go-timeless-api")
    (synopsis "Timeless Stack APIs for Go(lang)")
    (description "Go(lang) APIs for the Timeless Stack
(@@url{https://github.com/polydawn/timeless/,📖 docs here}.")
    (license license:asl2.0)))

(define-public go-github-com-polydawn-rio
  (package
    (name "go-github-com-polydawn-rio")
    (version "0.0.0-20220823181337-7c31ad9831a4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/polydawn/rio")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ralw0q3wiygpk8lbvynmhingxlk7svf1c5r89r9xpa0q6w61jhm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/polydawn/rio"))
    (propagated-inputs (list go-gopkg-in-src-d-go-git-v4
                             go-gopkg-in-src-d-go-billy-v4
                             go-gopkg-in-alecthomas-kingpin-v2
                             go-golang-org-x-sys
                             go-github-com-xi2-xz
                             go-github-com-warpfork-go-errcat
                             go-github-com-syndtr-gocapability
                             go-github-com-smartystreets-goconvey
                             go-github-com-polydawn-refmt ; packaged
                             go-github-com-polydawn-go-timeless-api))
    (home-page "https://github.com/polydawn/rio")
    (synopsis "rio")
    (description "@@strong{R}epeatable @@strong{I}/@@strong{O}.")
    (license license:asl2.0)))

(define-public go-github-com-polyfloyd-go-errorlint
  (package
    (name "go-github-com-polyfloyd-go-errorlint")
    (version "1.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/polyfloyd/go-errorlint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sq59fmdpy0x63wf2g0vv0hbdz0r9mkfg8wjjwqsvlhy98cnw23s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/polyfloyd/go-errorlint"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/polyfloyd/go-errorlint")
    (synopsis "go-errorlint")
    (description
     "go-errorlint is a source code linter for Go software that can be used to find
code that will cause problems with the error wrapping scheme introduced in Go
1.13.")
    (license license:expat)))

(define-public go-github-com-power-devops-perfstat
  (package
    (name "go-github-com-power-devops-perfstat")
    (version "0.0.0-20240221224432-82ca36839d55")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/power-devops/perfstat")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lmsxb3wlf0088198mcljq6krqnvpy1qy8li833hhhkdbckywg5s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/power-devops/perfstat"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/power-devops/perfstat")
    (synopsis #f)
    (description
     "Copyright 2020 Power-Devops.com.  All rights reserved.  Use of this source code
is governed by the license that can be found in the LICENSE file.")
    (license license:expat)))

(define-public go-github-com-poy-onpar
  (package
    (name "go-github-com-poy-onpar")
    (version "0.3.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/poy/onpar")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0q6vsblm4wmd2f5jjbx16q9chy80d5i6rl396dn5yzf1j9y2v4jb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/poy/onpar"))
    (propagated-inputs (list go-github-com-fatih-color
                             go-git-sr-ht--nelsam-hel))
    (home-page "https://github.com/poy/onpar")
    (synopsis "onpar")
    (description "Parallel testing framework for Go.")
    (license license:expat)))

(define-public go-github-com-pquerna-otp
  (package
    (name "go-github-com-pquerna-otp")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pquerna/otp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ip8gshs4s2cdiwqydma00wdm7y4avhb6pw5bs1xbcbvkjmba4zs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/pquerna/otp"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-boombuler-barcode))
    (home-page "https://github.com/pquerna/otp")
    (synopsis "otp: One Time Password utilities Go / Golang")
    (description
     "Package otp implements both HOTP and TOTP based one time passcodes in a Google
Authenticator compatible manner.")
    (license license:asl2.0)))

(define-public go-github-com-proglottis-gpgme
  (package
    (name "go-github-com-proglottis-gpgme")
    (version "0.1.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/proglottis/gpgme")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hwa3hafay69m6mpg0jgwcbkw2fxligwp92pc3k3iwdn2zbfyzfm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/proglottis/gpgme"))
    (home-page "https://github.com/proglottis/gpgme")
    (synopsis "GPGME (golang)")
    (description "Package gpgme provides a Go wrapper for the GPGME library.")
    (license license:bsd-3)))

(define-public go-github-com-prometheus-alertmanager
  (package
    (name "go-github-com-prometheus-alertmanager")
    (version "0.28.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/prometheus/alertmanager")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cjd9w1cprhss0idwss8h76bv1p7h5ngd7x8z1swaynbyc7kd0dj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/prometheus/alertmanager"))
    (propagated-inputs (list
                        go-github-com-alecthomas-kingpin-v2       ; packaged
                        go-github-com-alecthomas-units            ; packaged
                        go-github-com-aws-aws-sdk-go              ; packaged
                        go-github-com-cenkalti-backoff-v4 ;packaged
         ; packaged
                        go-github-com-cespare-xxhash-v2           ; packaged
                        go-github-com-coder-quartz                ; packaged
                        go-github-com-emersion-go-smtp            ; packaged
                        go-github-com-go-openapi-analysis         ; packaged
                        go-github-com-go-openapi-errors           ; packaged
                        go-github-com-go-openapi-loads            ; packaged
                        go-github-com-go-openapi-runtime ; packaged
                        go-github-com-go-openapi-spec             ; packaged
                        go-github-com-go-openapi-strfmt           ; packaged
                        go-github-com-go-openapi-swag             ; packaged
                        go-github-com-go-openapi-validate         ; packaged
                        go-github-com-gofrs-uuid                  ; packaged
                        go-github-com-gogo-protobuf               ; packaged
                        go-github-com-hashicorp-go-sockaddr       ; packaged
                        go-github-com-hashicorp-golang-lru-v2     ; packaged
                        go-github-com-hashicorp-memberlist
                        go-github-com-jessevdk-go-flags           ; packaged
                        go-github-com-kimmachinegun-automemlimit  ; packaged
                        go-github-com-kylelemons-godebug          ; packaged
                        go-github-com-matttproud-golang-protobuf-extensions
                        go-github-com-oklog-run                   ; packaged
                        go-github-com-oklog-ulid                  ; packaged
                        go-github-com-prometheus-client-golang ; packaged
    ; packaged
                        go-github-com-prometheus-common           ; packaged
                        go-github-com-prometheus-common-assets    ; packaged
                        go-github-com-prometheus-exporter-toolkit ; packaged
                        go-github-com-prometheus-sigv4            ; packaged
                        go-github-com-rs-cors                     ; packaged
                        go-github-com-shurcool-httpfs             ; packaged
                        go-github-com-shurcool-vfsgen             ; packaged
                        go-github-com-stretchr-testify            ; packaged
                        ;; go-github-com-trivago-tgo ; <https://github.com/trivago/tgo> abandoned
                        go-github-com-xlab-treeprint ; packaged
                        go-go-uber-org-atomic                     ; packaged
                        go-go-uber-org-automaxprocs               ; packaged
                        go-golang-org-x-mod                       ; packaged
                        go-golang-org-x-net                       ; packaged
                        go-golang-org-x-text                      ; packaged
                        go-golang-org-x-tools                     ; packaged
                        go-gopkg-in-telebot-v3                    ; packaged
                        go-gopkg-in-yaml-v2                       ; packaged
                        ))
    (home-page "https://github.com/prometheus/alertmanager")
    (synopsis "Alertmanager")
    (description
     "The Alertmanager handles alerts sent by client applications such as the
Prometheus server.  It takes care of deduplicating, grouping, and routing them
to the correct
@@url{https://prometheus.io/docs/alerting/latest/configuration/#receiver,receiver
integrations} such as email, @code{PagerDuty}, @code{OpsGenie}, or many other
@@url{https://prometheus.io/docs/operating/integrations/#alertmanager-webhook-receiver,mechanisms}
thanks to the webhook receiver.  It also takes care of silencing and inhibition
of alerts.")
    (license license:asl2.0)))

(define-public go-github-com-prometheus-prometheus
  (package
    (name "go-github-com-prometheus-prometheus")
    (version "0.300.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/prometheus/prometheus")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vxiv5iw3vlxq6cq8y23qvriz8g2qy76knzfchwnxm1rds8rrpkl"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/prometheus/prometheus"))
    (propagated-inputs (list
                        go-github-com-alecthomas-kingpin-v2 ; packaged
                        go-github-com-alecthomas-units ; packaged
                        go-github-com-aws-aws-sdk-go
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-compute-armcompute-v5
                        go-github-com-azure-azure-sdk-for-go-sdk-resourcemanager-network-armnetwork-v4
                        go-github-com-bboreham-go-loser
                        go-github-com-cespare-xxhash-v2 ; packaged
                        go-github-com-code-hex-go-generics-cache ; packaged
                        go-github-com-dennwc-varint
                        go-github-com-digitalocean-godo ; packaged
                        go-github-com-docker-docker
                        go-github-com-edsrzf-mmap-go
                        go-github-com-envoyproxy-go-control-plane
                        go-github-com-envoyproxy-protoc-gen-validate
                        go-github-com-facette-natsort
                        go-github-com-fsnotify-fsnotify ; packaged
                        go-github-com-go-openapi-strfmt ; packaged
                        go-github-com-go-zookeeper-zk
                        go-github-com-gogo-protobuf
                        go-github-com-golang-snappy
                        go-github-com-google-go-cmp
                        go-github-com-google-pprof
                        go-github-com-google-uuid
                        go-github-com-gophercloud-gophercloud
                        go-github-com-grafana-regexp
                        go-github-com-grpc-ecosystem-grpc-gateway
                        go-github-com-hashicorp-consul-api
                        go-github-com-hashicorp-nomad-api
                        go-github-com-hetznercloud-hcloud-go-v2
                        go-github-com-ionos-cloud-sdk-go-v6
                        go-github-com-json-iterator-go
                        go-github-com-kimmachinegun-automemlimit ; packaged
                        go-github-com-klauspost-compress ; packaged
                        go-github-com-kolo-xmlrpc
                        go-github-com-linode-linodego
                        go-github-com-miekg-dns
                        go-github-com-munnerz-goautoneg
                        go-github-com-mwitkow-go-conntrack
                        go-github-com-nsf-jsondiff
                        go-github-com-oklog-run
                        go-github-com-oklog-ulid
                        go-github-com-ovh-go-ovh
                        go-github-com-prometheus-alertmanager
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-prometheus-client-model ; packaged
                        go-github-com-prometheus-common
                        go-github-com-prometheus-common-assets
                        go-github-com-prometheus-exporter-toolkit
                        go-github-com-scaleway-scaleway-sdk-go
                        go-github-com-shurcool-httpfs
                        go-github-com-stretchr-testify
                        go-github-com-vultr-govultr-v2
                        go-go-opentelemetry-io-collector-pdata
                        go-go-opentelemetry-io-collector-semconv
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-httptrace-otelhttptrace
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracehttp
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-trace
                        go-go-uber-org-atomic ; packaged
                        go-go-uber-org-automaxprocs ; packaged
                        go-go-uber-org-goleak ; packaged
                        go-go-uber-org-multierr ; packaged
                        go-golang-org-x-oauth2 ; packaged
                        go-golang-org-x-sync ; packaged
                        go-golang-org-x-sys ; packaged
                        go-golang-org-x-text ; packaged
                        go-golang-org-x-tools ; packaged
                        go-google-golang-org-api
                        go-google-golang-org-genproto-googleapis-api ; packaged
                        go-google-golang-org-grpc
                        go-google-golang-org-protobuf
                        go-gopkg-in-yaml-v2
                        go-gopkg-in-yaml-v3
                        go-k8s-io-api
                        go-k8s-io-apimachinery
                        go-k8s-io-client-go
                        go-k8s-io-klog-v2
                        ))
    (home-page "https://github.com/prometheus/prometheus")
    (synopsis "Architecture overview")
    (description
     "Visit @@url{https://prometheus.io,prometheus.io} for the full documentation,
examples and guides.")
    (license license:asl2.0)))

;; Same as https://github.com/emersion/go-autostart
(define-public go-github-com-protocolbuffers-txtpbfmt
  (package
    (name "go-github-com-protocolbuffers-txtpbfmt")
    (version "0.0.0-20250326144435-a5fe55684d52")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/protocolbuffers/txtpbfmt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07sgzai9wlixniif10drm2p9v1nphqs3wqhqasix22psx9047jvv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/protocolbuffers/txtpbfmt"))
    (propagated-inputs (list go-github-com-mitchellh-go-wordwrap
                             go-github-com-kylelemons-godebug
                             go-github-com-google-go-cmp
                             go-github-com-golang-glog))
    (home-page "https://github.com/protocolbuffers/txtpbfmt")
    (synopsis "Text Proto Formatter")
    (description
     "@@code{txtpbfmt} parses, edits and formats text proto files in a way that
preserves comments.")
    (license license:asl2.0)))

(define-public go-github-com-protonmail-bcrypt
  (package
    (name "go-github-com-protonmail-bcrypt")
    (version "0.0.0-20211005172633-e235017c1baf")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ProtonMail/bcrypt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0znxsia69c2p4vgj9qckqq3p06rg2b5qzdm7p7svs3x46bp28s3s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ProtonMail/bcrypt"))
    (home-page "https://github.com/ProtonMail/bcrypt")
    (synopsis "github.com/ProtonMail/bcrypt")
    (description
     "This package provides a golang implementation of the bcrypt hash algorithm.  It
is a fork of
@@url{https://github.com/jameskeane/bcrypt,github.com/jameskeane/bcrypt}.")
    (license license:bsd-3)))

(define-public go-github-com-protonmail-gluon
  (package
    (name "go-github-com-protonmail-gluon")
    (version "0.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ProtonMail/gluon")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yaxsgcflmh9h2airja1cwa0livhiw5ghxdcl2aa52fn0khkx7gp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ProtonMail/gluon"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-text
                             go-golang-org-x-sys
                             go-golang-org-x-exp
                             go-go-uber-org-goleak
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-pkg-profile
                             go-github-com-pierrec-lz4-v4
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-google-uuid
                             go-github-com-golang-mock ; packaged
                             go-github-com-emersion-go-imap-uidplus
                             go-github-com-emersion-go-imap
                             go-github-com-bradenaw-juniper
                             go-github-com-protonmail-go-mbox))
    (home-page "https://github.com/ProtonMail/gluon")
    (synopsis "Demo")
    (description
     "Package gluon implements an IMAP4rev1 (+ extensions) mailserver.")
    (license license:expat)))

(define-public go-github-com-protonmail-go-autostart
  (package
    (name "go-github-com-protonmail-go-autostart")
    (version "0.0.0-20210130080809-00ed301c8e9a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/emersion/go-autostart")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0cqqvbzn32xv5lknfygrx01rx2sc6pi833k7008nlk9lsfgry06v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ProtonMail/go-autostart"))
    (home-page "https://github.com/ProtonMail/go-autostart")
    (synopsis "go-autostart")
    (description
     "This package provides a Go library to run a command after login.")
    (license license:expat)))

(define-public go-github-com-protonmail-go-mbox
  (package
    (name "go-github-com-protonmail-go-mbox")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ProtonMail/go-mbox")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j82rmigq8ayjgn3a5pfhmb6mghy30nrix30kbjdjf498kxvhlgv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ProtonMail/go-mbox"))
    (home-page "https://github.com/ProtonMail/go-mbox")
    (synopsis "go-mbox")
    (description "Package mbox parses and formats the mbox file format.")
    (license license:expat)))

(define-public go-github-com-protonmail-go-mime
  (package
    (name "go-github-com-protonmail-go-mime")
    (version "0.0.0-20230322103455-7d82a3887f2f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ProtonMail/go-mime")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0n7q98dsw4v2zjf2bhi8gc4map1fc8m9p9v95mqcljnfp5kncxwz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ProtonMail/go-mime"))
    (propagated-inputs (list go-golang-org-x-text))
    (home-page "https://github.com/ProtonMail/go-mime")
    (synopsis "Go Mime Wrapper Library")
    (description "This package provides a parser for MIME messages.")
    (license license:expat)))

(define-public go-github-com-protonmail-go-srp
  (package
    (name "go-github-com-protonmail-go-srp")
    (version "0.0.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ProtonMail/go-srp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bzpq1yqfrrzyrmmwc9kf84k35567hdrs4zagxakpi7hia847l1z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ProtonMail/go-srp"))
    (propagated-inputs (list go-golang-org-x-crypto go-github-com-pkg-errors
                             go-github-com-cronokirby-saferith
                             go-github-com-protonmail-go-crypto
                             go-github-com-protonmail-bcrypt))
    (home-page "https://github.com/ProtonMail/go-srp")
    (synopsis "go-srp")
    (description
     "Golang implementation of the
@@url{https://datatracker.ietf.org/doc/html/rfc5054,SRP protocol}, used for
authentication of @code{ProtonMail} users.")
    (license license:expat)))

(define-public go-github-com-protonmail-gopenpgp-v2
  (package
    (name "go-github-com-protonmail-gopenpgp-v2")
    (version "2.8.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ProtonMail/gopenpgp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hflm08kzww4dmxd07v9zndb832bng9qimk1wx5aja9zmyqbasa8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ProtonMail/gopenpgp/v2"
      #:unpack-path "github.com/ProtonMail/gopenpgp"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-protonmail-go-mime
                             go-github-com-protonmail-go-crypto))
    (home-page "https://github.com/ProtonMail/gopenpgp")
    (synopsis "GopenPGP V2")
    (description
     "@code{GopenPGP} is a high-level @code{OpenPGP} library built on top of .")
    (license license:expat)))

(define-public go-github-com-proullon-ramsql
  (package
    (name "go-github-com-proullon-ramsql")
    (version "0.1.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/proullon/ramsql")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ak5pcad18hig7scxqrx95hskk3fngf18zj48mm7d9k7yjgd0pcp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/proullon/ramsql"))
    (propagated-inputs (list go-gorm-io-gorm go-gorm-io-driver-postgres
                             go-github-com-go-gorp-gorp
                             go-github-com-glebarez-go-sqlite))
    (home-page "https://github.com/proullon/ramsql")
    (synopsis "RamSQL")
    (description
     "@code{RamSQL} has been written to be used in your project's test suite.")
    (license license:bsd-3)))

(define-public go-github-com-pseudomuto-protoc-gen-doc
  (package
    (name "go-github-com-pseudomuto-protoc-gen-doc")
    (version "1.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pseudomuto/protoc-gen-doc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15hgrw6966jhs65svx09mcn3w6v2jl593yb6wjm03a9hc3mqvl6p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/pseudomuto/protoc-gen-doc"))
    (propagated-inputs (list go-google-golang-org-genproto
                             go-google-golang-org-api
                             go-github-com-stretchr-testify
                             go-github-com-pseudomuto-protokit
                             go-github-com-mwitkow-go-proto-validators
                             go-github-com-golang-protobuf
                             go-github-com-envoyproxy-protoc-gen-validate
                             go-github-com-masterminds-sprig))
    (home-page "https://github.com/pseudomuto/protoc-gen-doc")
    (synopsis "protoc-gen-doc")
    (description
     "Package gendoc is a protoc plugin for generating documentation from your proto
files.")
    (license license:expat)))

(define-public go-github-com-pseudomuto-protokit
  (package
    (name "go-github-com-pseudomuto-protokit")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pseudomuto/protokit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lrd5h4hdy7sp9vpr272zk6z4fsrlsmqfwm3wx983k0ifnhgxgs6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/pseudomuto/protokit"))
    (propagated-inputs (list go-google-golang-org-genproto
                             go-github-com-stretchr-testify
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/pseudomuto/protokit")
    (synopsis "protokit")
    (description
     "Package protokit is a library that makes it easy to create your own protoc
plugins.  It has excellent test coverage, and saves you so much time!")
    (license license:expat)))

(define-public go-github-com-psiphon-labs-psiphon-tunnel-core
  (package
    (name "go-github-com-psiphon-labs-psiphon-tunnel-core")
    (version "1.0.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Psiphon-Labs/psiphon-tunnel-core")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10j1harhjzkkmyjnxbx8wapz5zcfjnibqpx5d7j79gqf9mzbf9dk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Psiphon-Labs/psiphon-tunnel-core"))
    (home-page "https://github.com/Psiphon-Labs/psiphon-tunnel-core")
    (synopsis "Psiphon Tunnel Core README")
    (description "Psiphon is an Internet censorship circumvention system.")
    (license license:gpl3)))

(define-public go-github-com-putdotio-go-putio-putio
  (package
    (name "go-github-com-putdotio-go-putio-putio")
    (version "0.0.0-20200123120452-16d982cac2b8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/putdotio/go-putio")
             (commit (go-version->git-ref version
                                          #:subdir "putio"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z4rfrhzrm6kbx7hpg00g02q88n3k6hvixd4drdadak13dsncipb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/putdotio/go-putio/putio"
      #:unpack-path "github.com/putdotio/go-putio"))
    (home-page "https://github.com/putdotio/go-putio")
    (synopsis #f)
    (description "Package putio is the Put.io API v2 client for Go.")
    (license license:expat)))

(define-public go-github-com-puzpuzpuz-xsync-v2
  (package
    (name "go-github-com-puzpuzpuz-xsync-v2")
    (version "2.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/puzpuzpuz/xsync")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1almmzvkhyvhdwyhv9jphbhcm5yv45cmv9v39r3rcbkvl212igmz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/puzpuzpuz/xsync/v2"
      #:unpack-path "github.com/puzpuzpuz/xsync"))
    (home-page "https://github.com/puzpuzpuz/xsync")
    (synopsis "xsync")
    (description
     "Concurrent data structures for Go.  Aims to provide more scalable alternatives
for some of the data structures from the standard @@code{sync} package, but not
only.")
    (license license:expat)))

(define-public go-github-com-puzpuzpuz-xsync-v3
  (package
    (name "go-github-com-puzpuzpuz-xsync-v3")
    (version "3.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/puzpuzpuz/xsync")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d2sjf8qn83w5y2z1h8rlj67cakgc4lik0mfklcrcy1hr879fqy7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/puzpuzpuz/xsync/v3"
      #:unpack-path "github.com/puzpuzpuz/xsync"))
    (home-page "https://github.com/puzpuzpuz/xsync")
    (synopsis "xsync")
    (description
     "Concurrent data structures for Go.  Aims to provide more scalable alternatives
for some of the data structures from the standard @@code{sync} package, but not
only.")
    (license license:asl2.0)))

(define-public go-github-com-qdrant-go-client
  (package
    (name "go-github-com-qdrant-go-client")
    (version "1.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/qdrant/go-client")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gc85lj7rj11d1cz0y9scbp5vrlizn2fzywbbqflvr92lpnqvkhh"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/qdrant/go-client"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-github-com-testcontainers-testcontainers-go
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/qdrant/go-client")
    (synopsis "📥 Installation")
    (description "Go client library with handy utilities for interfacing with
@@url{https://qdrant.tech/,Qdrant}.")
    (license license:asl2.0)))

(define-public go-github-com-qri-io-jsonpointer
  (package
    (name "go-github-com-qri-io-jsonpointer")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/qri-io/jsonpointer")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dnabmdkha3avw3pqnf8m97c3qna3xkvg5x7n0lkk9mdwvdsrjbd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/qri-io/jsonpointer"))
    (home-page "https://github.com/qri-io/jsonpointer")
    (synopsis "jsonpointer")
    (description
     "Package jsonpointer implements IETF rfc6901 JSON Pointers are a string syntax
for identifying a specific value within a @code{JavaScript} Object Notation
(JSON) document [RFC4627].  JSON Pointer is intended to be easily expressed in
JSON string values as well as Uniform Resource Identifier (URI) [RFC3986]
fragment identifiers.")
    (license license:expat)))

(define-public go-github-com-qri-io-jsonschema
  (package
    (name "go-github-com-qri-io-jsonschema")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/qri-io/jsonschema")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1iwrgf0xhzf0gr2rgcm00m5rc385490ghq7gi0ldkqky09dxg6xj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/qri-io/jsonschema"))
    (propagated-inputs (list go-github-com-sergi-go-diff ; packaged
                             go-github-com-qri-io-jsonpointer))
    (home-page "https://github.com/qri-io/jsonschema")
    (synopsis "jsonschema")
    (description
     "golang implementation of the @@url{http://json-schema.org/,JSON Schema
Specification}, which lets you write JSON that validates some other json.  Rad.")
    (license license:expat)))

(define-public go-github-com-quasilyte-go-ruleguard
  (package
    (name "go-github-com-quasilyte-go-ruleguard")
    (version "0.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/quasilyte/go-ruleguard")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01kn50vbhfy1fs4rl5f8lwl6m1fm5h52c3v7rm0c763qx6yawwrn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/quasilyte/go-ruleguard"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-golang-org-x-exp-typeparams
                             go-github-com-quasilyte-stdinfo
                             go-github-com-quasilyte-gogrep
                             go-github-com-quasilyte-go-ruleguard-rules
                             go-github-com-quasilyte-go-ruleguard-dsl
                             go-github-com-google-go-cmp
                             go-github-com-go-toolsmith-astcopy))
    (home-page "https://github.com/quasilyte/go-ruleguard")
    (synopsis "go-ruleguard")
    (description
     "@@url{https://pkg.go.dev/golang.org/x/tools/go/analysis,analysis}-based Go
linter that runs dynamically loaded rules.")
    (license license:bsd-3)))

(define-public go-github-com-quasilyte-go-ruleguard-dsl
  (package
    (name "go-github-com-quasilyte-go-ruleguard-dsl")
    (version "0.3.22")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/quasilyte/go-ruleguard")
             (commit (go-version->git-ref version
                                          #:subdir "dsl"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0a4956cww5b11lhrhdcg6xvv7wnxbalfa895cqf7q3ng03wywpn4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/quasilyte/go-ruleguard/dsl"
      #:unpack-path "github.com/quasilyte/go-ruleguard"))
    (home-page "https://github.com/quasilyte/go-ruleguard")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-quasilyte-go-ruleguard-rules
  (package
    (name "go-github-com-quasilyte-go-ruleguard-rules")
    (version "0.0.0-20240823090925-0fe6f58b47b1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/quasilyte/go-ruleguard")
             (commit (go-version->git-ref version
                                          #:subdir "rules"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1byh4da2znqxw2k6m2yfjd89ddcfhq2mn24dcvjx5chi1l217vj9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/quasilyte/go-ruleguard/rules"
      #:unpack-path "github.com/quasilyte/go-ruleguard"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-quasilyte-go-ruleguard-dsl
                             go-github-com-quasilyte-go-ruleguard))
    (home-page "https://github.com/quasilyte/go-ruleguard")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-quasilyte-gogrep
  (package
    (name "go-github-com-quasilyte-gogrep")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/quasilyte/gogrep")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "178m6i5qd6ipx8f5k951aj3zsh7biqhx5ahab8zcvm1hcczls88i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/quasilyte/gogrep"))
    (propagated-inputs (list go-golang-org-x-exp-typeparams
                             go-github-com-google-go-cmp
                             go-github-com-go-toolsmith-astequal))
    (home-page "https://github.com/quasilyte/gogrep")
    (synopsis "gogrep")
    (description
     "This is an attempt to move a modified
@@url{https://github.com/mvdan/gogrep,gogrep} from the
@@url{https://github.com/quasilyte/go-ruleguard,go-ruleguard} project, so it can
be used independently.")
    (license license:bsd-3)))

(define-public go-github-com-quasilyte-regex-syntax
  (package
    (name "go-github-com-quasilyte-regex-syntax")
    (version "0.0.0-20210819130434-b3f0c404a727")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/quasilyte/regex")
             (commit (go-version->git-ref version
                                          #:subdir "syntax"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04bp94j9yfqxczz67n7kxy57nanyjjwdngr9wpcgsp8l6zljazaf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/quasilyte/regex/syntax"
      #:unpack-path "github.com/quasilyte/regex"))
    (home-page "https://github.com/quasilyte/regex")
    (synopsis "Package")
    (description
     "Package @@code{syntax} provides regular expressions parser as well as AST
definitions.")
    (license license:expat)))

(define-public go-github-com-quasilyte-stdinfo
  (package
    (name "go-github-com-quasilyte-stdinfo")
    (version "0.0.0-20220114132959-f7386bf02567")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/quasilyte/stdinfo")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jq2wv5gckc5n6070aia01gqk66vwhklh8ppib1s29xb0j1jryf3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/quasilyte/stdinfo"))
    (home-page "https://github.com/quasilyte/stdinfo")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-quasoft-websspi
  (package
    (name "go-github-com-quasoft-websspi")
    (version "1.1.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/quasoft/websspi")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xgq9cghrf25zqjrx7hmc2qcjgh38lpkxb8b5i71c7k1nv1hh65z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/quasoft/websspi"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-gorilla-sessions
                             go-github-com-gorilla-securecookie ; packaged
                             ))
    (home-page "https://github.com/quasoft/websspi")
    (synopsis "websspi")
    (description
     "@@code{websspi} is an HTTP middleware for Golang that uses Kerberos/NTLM for
single sign-on (SSO) authentication of browser based clients in a Windows
environment.")
    (license license:expat)))

(define-public go-github-com-r3labs-sse
  (package
    (name "go-github-com-r3labs-sse")
    (version "0.0.0-20210224172625-26fe804710bc")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/r3labs/sse")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fxg68gjs702p6y98g9m9rl2nvz564fdmj0k1dagxc3rlhrh7rac"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/r3labs/sse"))
    (propagated-inputs (list go-gopkg-in-cenkalti-backoff-v1
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/r3labs/sse")
    (synopsis "SSE - Server Sent Events Client/Server Library for Go")
    (description
     "SSE is a client/server implementation for Server Sent Events for Golang.")
    (license license:mpl2.0)))

(define-public go-github-com-rabbitmq-amqp091-go
  (package
    (name "go-github-com-rabbitmq-amqp091-go")
    (version "1.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rabbitmq/amqp091-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mqjxjh7ydj4h0yr8i2y2hx68pjw420djzl9blclpczjb9ay3cwr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rabbitmq/amqp091-go"))
    (propagated-inputs (list go-go-uber-org-goleak))
    (home-page "https://github.com/rabbitmq/amqp091-go")
    (synopsis "Go RabbitMQ Client Library")
    (description
     "Package amqp091 is an AMQP 0.9.1 client with @code{RabbitMQ} extensions.")
    (license license:bsd-2)))

(define-public go-github-com-raeperd-recvcheck
  (package
    (name "go-github-com-raeperd-recvcheck")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/raeperd/recvcheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z4hcg43rxa3w9g3np6zcql9zb2i9w0xxm462qllnhjbaxaf939y"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/raeperd/recvcheck"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/raeperd/recvcheck")
    (synopsis "recvcheck")
    (description
     "@@url{https://github.com/raeperd/recvcheck/actions/workflows/build.yaml,(img (@@
(src
https://github.com/raeperd/recvcheck/actions/workflows/build.yaml/badge.svg)
(alt .github/workflows/build.yaml)))}
@@url{https://goreportcard.com/report/github.com/raeperd/recvcheck,(img (@@ (src
https://goreportcard.com/badge/github.com/raeperd/recvcheck) (alt Go Report
Card)))} Golang linter for check receiver type in method.")
    (license license:expat)))

(define-public go-github-com-rainycape-memcache
  (package
    (name "go-github-com-rainycape-memcache")
    (version "0.0.0-20150622160815-1031fa0ce2f2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rainycape/memcache")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02cbhy192vi0d1kwh57mdrg1mkr027ndkvd1y0cx0kn0h6pszggn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rainycape/memcache"))
    (home-page "https://github.com/rainycape/memcache")
    (synopsis "Memcache Client in Go (golang)")
    (description
     "Package memcache provides a client for the memcached cache server.")
    (license license:asl2.0)))

(define-public go-github-com-rakyll-embedmd
  (package
    (name "go-github-com-rakyll-embedmd")
    (version "0.0.0-20171029212350-c8060a0752a2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rakyll/embedmd")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06fp14qv7z6axmmnygd6llmwfq36zspzr6rsbniziin2bpjlggf6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rakyll/embedmd"))
    (home-page "https://github.com/rakyll/embedmd")
    (synopsis "embedmd")
    (description "embedmd.")
    (license license:asl2.0)))

(define-public go-github-com-rasky-go-xdr
  (package
    (name "go-github-com-rasky-go-xdr")
    (version "0.0.0-20170124162913-1a41d1a06c93")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rasky/go-xdr")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f69yfdvgwyqrj6l0zdbdb78fi6iwkqh4v6rr5ns4v63kxvnfs9s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rasky/go-xdr"))
    (home-page "https://github.com/rasky/go-xdr")
    (synopsis "go-xdr")
    (description
     "[]
(@@url{https://travis-ci.org/davecgh/go-xdr,https://travis-ci.org/davecgh/go-xdr})
[![Coverage Status]
(@@url{https://coveralls.io/repos/davecgh/go-xdr/badge.png?branch=master)%5D,https://coveralls.io/repos/davecgh/go-xdr/badge.png?branch=master)]}
(@@url{https://coveralls.io/r/davecgh/go-xdr?branch=master,https://coveralls.io/r/davecgh/go-xdr?branch=master}).")
    (license license:isc)))

(define-public go-github-com-ravenox-go-jsoncommentstrip
  (package
    (name "go-github-com-ravenox-go-jsoncommentstrip")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/RaveNoX/go-jsoncommentstrip")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0igb0mxccw6q7c8m96v8wjqlcfkrpv9ac1jk4xp9i466hiphjgbc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/RaveNoX/go-jsoncommentstrip"))
    (home-page "https://github.com/RaveNoX/go-jsoncommentstrip")
    (synopsis "go-jsoncommentstrip")
    (description
     "Package jsoncommentstrip contains functions which strips comments from JSON
input.")
    (license license:expat)))

(define-public go-github-com-rck-unit
  (package
    (name "go-github-com-rck-unit")
    (version "0.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rck/unit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qx0ri11p4rq93817wc992rk1d5brpab3q5yb0fxd4jshnhgdjgz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rck/unit"))
    (home-page "https://github.com/rck/unit")
    (synopsis "unit")
    (description
     "Package unit implements parsing for string values with units.")
    (license license:bsd-3)))

(define-public go-github-com-rclone-gofakes3
  (package
    (name "go-github-com-rclone-gofakes3")
    (version "0.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rclone/gofakes3")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "021xy4sycanrn55a0ygbkmirvnwdsplxkzq336nvlfhnd8bnyf6v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rclone/gofakes3"))
    (propagated-inputs (list go-golang-org-x-tools
                        go-github-com-stretchr-testify
                        go-github-com-shabbyrobe-gocovmerge
                        go-github-com-ryszard-goskiplist
                        go-github-com-minio-xxml
                        go-github-com-aws-smithy-go
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-aws-aws-sdk-go-v2-feature-s3-manager
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2))
    (home-page "https://github.com/rclone/gofakes3")
    (synopsis #f)
    (description "Package s3 implements a fake s3 server for rclone.")
    (license license:expat)))

(define-public go-github-com-rclone-rclone
  (package
    (name "go-github-com-rclone-rclone")
    (version "1.69.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rclone/rclone")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1553abzab0fa3h1q4d3gpv7jda1nrsq5mx4ac1d13sfbwr36b4vh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rclone/rclone"))
    (propagated-inputs
     (list go-bazil-org-fuse                                  ; packaged
           go-github-com-a8m-tree
           go-github-com-aalpar-deheap
           go-github-com-abbot-go-http-auth
           go-github-com-anacrolix-dms
           go-github-com-anacrolix-log                        ; packaged
           go-github-com-atotto-clipboard                     ; packaged
           go-github-com-aws-aws-sdk-go-v2                    ; packaged
           go-github-com-aws-aws-sdk-go-v2-config             ; packaged
           go-github-com-aws-aws-sdk-go-v2-credentials        ; packaged
           go-github-com-aws-aws-sdk-go-v2-feature-s3-manager ; packaged
           go-github-com-aws-aws-sdk-go-v2-service-s3         ; packaged
           go-github-com-aws-smithy-go                        ; packaged
           go-github-com-azure-azure-sdk-for-go-sdk-azcore
           go-github-com-azure-azure-sdk-for-go-sdk-azidentity
           go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
           go-github-com-azure-azure-sdk-for-go-sdk-storage-azfile
           go-github-com-azure-go-ntlmssp                     ; packaged
           go-github-com-buengese-sgzip
           go-github-com-cloudinary-cloudinary-go-v2
           go-github-com-cloudsoda-go-smb2
           go-github-com-colinmarc-hdfs-v2
           go-github-com-coreos-go-semver                     ; packaged
           go-github-com-coreos-go-systemd-v22                ; packaged
           go-github-com-dop251-scsu                          ; packaged
           go-github-com-dropbox-dropbox-sdk-go-unofficial-v6
           go-github-com-files-com-files-sdk-go-v3
           go-github-com-gabriel-vasile-mimetype              ; packaged
           go-github-com-gdamore-tcell-v2                     ; packaged
           go-github-com-go-chi-chi-v5 ; packaged
           go-github-com-go-darwin-apfs
           go-github-com-go-git-go-billy-v5
           go-github-com-golang-jwt-jwt-v4
           go-github-com-google-uuid                          ; packaged
           go-github-com-hanwen-go-fuse-v2                    ; packaged
           go-github-com-henrybear327-go-proton-api
           go-github-com-henrybear327-proton-api-bridge
           go-github-com-jcmturner-gokrb5-v8
           go-github-com-jlaffaye-ftp
           go-github-com-josephspurrier-goversioninfo
           go-github-com-jzelinskie-whirlpool
           go-github-com-klauspost-compress                   ; packaged
           go-github-com-koofr-go-httpclient
           go-github-com-koofr-go-koofrclient
           go-github-com-mattn-go-colorable
           go-github-com-mattn-go-runewidth
           go-github-com-max-sum-base32768
           go-github-com-minio-minio-go-v7                    ; packaged
           go-github-com-mitchellh-go-homedir
           go-github-com-moby-sys-mountinfo
           go-github-com-ncw-swift-v2                         ; packaged
           go-github-com-oracle-oci-go-sdk-v65
           go-github-com-patrickmn-go-cache
           go-github-com-pkg-sftp
           go-github-com-pkg-xattr
           go-github-com-pmezard-go-difflib
           go-github-com-prometheus-client-golang ; packaged

           go-github-com-protonmail-go-crypto
           go-github-com-putdotio-go-putio-putio
           go-github-com-quasilyte-go-ruleguard-dsl
           go-github-com-rclone-gofakes3
           go-github-com-rfjakob-eme
           go-github-com-rivo-uniseg
           go-github-com-rogpeppe-go-internal
           go-github-com-shirou-gopsutil-v4
           go-github-com-sirupsen-logrus
           go-github-com-skratchdot-open-golang
           go-github-com-spf13-cobra
           go-github-com-spf13-pflag
           go-github-com-stretchr-testify
           go-github-com-t3rm1n4l-go-mega
           go-github-com-unknwon-goconfig
           go-github-com-willscott-go-nfs
           go-github-com-winfsp-cgofuse
           go-github-com-xanzy-ssh-agent                      ; packaged
           go-github-com-youmark-pkcs8                        ; packaged
           go-github-com-yunify-qingstor-sdk-go-v3
           go-github-com-zeebo-blake3                         ; packaged
           go-go-etcd-io-bbolt                                ; packaged
           go-goftp-io-server-v2
           go-golang-org-x-crypto                             ; packaged
           go-golang-org-x-mobile
           go-golang-org-x-net                                ; packaged
           go-golang-org-x-oauth2                             ; packaged
           go-golang-org-x-sync                               ; packaged
           go-golang-org-x-sys                                ; packaged
           go-golang-org-x-term                               ; packaged
           go-golang-org-x-text                               ; packaged
           go-golang-org-x-time                               ; packaged
           go-google-golang-org-api
           go-gopkg-in-validator-v2
           go-gopkg-in-yaml-v2                                ; packaged
           go-storj-io-uplink))
    (home-page "https://github.com/rclone/rclone")
    (synopsis "Rclone")
    (description
     "Sync files and directories to and from local and remote object stores.")
    (license license:expat)))

(define-public go-github-com-redis-go-redis-extra-redisotel-v9
  (package
    (name "go-github-com-redis-go-redis-extra-redisotel-v9")
    (version "9.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/redis/go-redis")
             (commit (go-version->git-ref version
                                          #:subdir "extra/redisotel"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sqa2zjkq6jcn7bg5da863j5275q4hrgrsqbmwxr0j75kxfhw9dx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/redis/go-redis/extra/redisotel/v9"
      #:unpack-path "github.com/redis/go-redis"))
    (propagated-inputs (list go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-sdk
                             go-go-opentelemetry-io-otel-metric ; packaged
                             go-go-opentelemetry-io-otel))
    (home-page "https://github.com/redis/go-redis")
    (synopsis "OpenTelemetry instrumentation for go-redis")
    (description "Tracing is enabled by adding a hook:.")
    (license license:bsd-2)))

(define-public go-github-com-redis-rueidis
  (package
    (name "go-github-com-redis-rueidis")
    (version "1.0.52")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/redis/rueidis")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "139h3ry36gda1vbgbdncan5m0mq2khzrbbwpgq6hackf7hxabyqz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/redis/rueidis"))
    (propagated-inputs (list go-golang-org-x-sys go-github-com-onsi-gomega))
    (home-page "https://github.com/redis/rueidis")
    (synopsis "rueidis")
    (description
     "Package rueidis is a fast Golang Redis RESP3 client that does auto pipelining
and supports client side caching.")
    (license license:asl2.0)))

(define-public go-github-com-reflog-dateconstraints
  (package
    (name "go-github-com-reflog-dateconstraints")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/reflog/dateconstraints")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p2dn4xm6msdg7jsr1wiwpxygyjyjchy12dkv7ywrblzxabjlhpp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/reflog/dateconstraints"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/reflog/dateconstraints")
    (synopsis "Date Constraints")
    (description
     "This module is heavily based on
@@url{https://github.com/Masterminds/semver,https://github.com/Masterminds/semver}
so kudos to @@url{https://github.com/Masterminds/semver,Masterminds}.")
    (license license:expat)))

(define-public go-github-com-regfish-regfish-dnsapi-go
  (package
    (name "go-github-com-regfish-regfish-dnsapi-go")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/regfish/regfish-dnsapi-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rl8gmxxjd8w729c1vsvvd325yc501yiwd0z9x5fnq3rkv48f1vs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/regfish/regfish-dnsapi-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-joho-godotenv ; packaged
                             ))
    (home-page "https://github.com/regfish/regfish-dnsapi-go")
    (synopsis "regfish DNS API Go Client")
    (description
     "Create a @@code{.env} file containing the varibles @@code{RF_API_KEY} using
credentials from your regfish account (from Account, Security, API keys).
Modify @@code{client_test.go} and replace @@code{example.com} with your own
domain, then run @@code{go test -v} to run the tests.")
    (license license:expat)))

(define-public go-github-com-rekby-gpt
  (package
    (name "go-github-com-rekby-gpt")
    (version "0.0.0-20200614112001-7da10aec5566")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rekby/gpt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m44xmsrgpd7836myqnyk6ffy3k2hpwhx4ri5mc7s0w6a1fkg904"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rekby/gpt"))
    (home-page "https://github.com/rekby/gpt")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-relvacode-iso8601
  (package
    (name "go-github-com-relvacode-iso8601")
    (version "1.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/relvacode/iso8601")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0m2qy40s45p69l99ky3rdql4rpjk3z9vp6zg1yp1xcrdqnbfp1rj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/relvacode/iso8601"))
    (home-page "https://github.com/relvacode/iso8601")
    (synopsis "Usage")
    (description
     "Package iso8601 is a utility for parsing ISO8601 datetime strings into native Go
times.  The standard library's RFC3339 reference layout can be too strict for
working with 3rd party APIs, especially ones written in other languages.")
    (license license:expat)))

(define-public go-github-com-restic-restic
  (package
    (name "go-github-com-restic-restic")
    (version "0.17.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/restic/restic")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wsgq7f0bfi0i5iiwcc3hlf2lhxcnz3zfs8p8bc6l913r9hvyg1x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/restic/restic"))
    (propagated-inputs
     (list
           go-cloud-google-com-go-storage
           go-github-com-anacrolix-fuse             ; packaged
           go-github-com-azure-azure-sdk-for-go-sdk-azcore
           go-github-com-azure-azure-sdk-for-go-sdk-azidentity
           go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
           go-github-com-backblaze-blazer
           go-github-com-cenkalti-backoff-v4 ;packaged
        ; packaged
           go-github-com-cespare-xxhash-v2          ; packaged
           go-github-com-elithrar-simple-scrypt     ; packaged
           go-github-com-go-ole-go-ole              ; windows only
           go-github-com-google-go-cmp              ; packaged
           go-github-com-hashicorp-golang-lru-v2    ; packaged
           go-github-com-klauspost-compress         ; packaged
           go-github-com-minio-minio-go-v7          ; packaged
           go-github-com-minio-sha256-simd          ; packaged
           go-github-com-ncw-swift-v2               ; packaged
           go-github-com-peterbourgon-unixtransport ; packaged
           go-github-com-pkg-errors                 ; packaged
           go-github-com-pkg-profile                ; packaged
           go-github-com-pkg-sftp                   ; packaged
           go-github-com-pkg-xattr                  ; packaged
           go-github-com-restic-chunker             ; packaged
           go-github-com-spf13-cobra                ; packaged
           go-github-com-spf13-pflag                ; packaged
           go-go-uber-org-automaxprocs              ; packaged
           go-golang-org-x-crypto                   ; packaged
           go-golang-org-x-net                      ; packaged
           go-golang-org-x-oauth2                   ; packaged
           go-golang-org-x-sync                     ; packaged
           go-golang-org-x-sys                      ; packaged
           go-golang-org-x-term                     ; packaged
           go-golang-org-x-text                     ; packaged
           go-golang-org-x-time                     ; packaged
           go-google-golang-org-api
           ))
    (home-page "https://github.com/restic/restic")
    (synopsis "Introduction")
    (description
     "Package restic gives a (very brief) introduction to the structure of source
code.")
    (license license:bsd-2)))

(define-public go-github-com-rhymen-go-whatsapp
  (package
    (name "go-github-com-rhymen-go-whatsapp")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Rhymen/go-whatsapp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j1qvh1hmbgr4pywpw3kal0c80slh57g734wl609l9cjf1gx9zcs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Rhymen/go-whatsapp"))
    (propagated-inputs (list go-golang-org-x-crypto go-github-com-pkg-errors
                             go-github-com-gorilla-websocket
                             go-github-com-golang-protobuf))
    (home-page "https://github.com/Rhymen/go-whatsapp")
    (synopsis "go-whatsapp")
    (description
     "Package whatsapp provides a developer API to interact with the
@code{WhatsAppWeb-Servers}.")
    (license license:expat)))

(define-public go-github-com-rhysd-actionlint
  (package
    (name "go-github-com-rhysd-actionlint")
    (version "1.7.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rhysd/actionlint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1waq9v48pbys8b8qmmvl0wi77jzri033fh8194gcwfzipvxb6y9l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rhysd/actionlint"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-github-com-yuin-goldmark
                             go-github-com-robfig-cron-v3
                             go-github-com-mattn-go-shellwords
                             go-github-com-mattn-go-runewidth
                             go-github-com-mattn-go-colorable
                             go-github-com-google-go-cmp
                             go-github-com-fatih-color
                             go-github-com-bmatcuk-doublestar-v4))
    (home-page "https://github.com/rhysd/actionlint")
    (synopsis "actionlint")
    (description
     "Package actionlint is the implementation of actionlint linter.  It's a static
checker for @code{GitHub} Actions workflow files.")
    (license license:expat)))

(define-public go-github-com-richardlehane-mscfb
  (package
    (name "go-github-com-richardlehane-mscfb")
    (version "1.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/richardlehane/mscfb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xbb667cgr8hfy7ybwzf5ncpb2a053y44rjrq5dr2kami5qa8my6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/richardlehane/mscfb"))
    (propagated-inputs (list go-github-com-richardlehane-msoleps))
    (home-page "https://github.com/richardlehane/mscfb")
    (synopsis #f)
    (description
     "Package mscfb implements a reader for Microsoft's Compound File Binary File
Format
(@@url{http://msdn.microsoft.com/en-us/library/dd942138.aspx,http://msdn.microsoft.com/en-us/library/dd942138.aspx}).")
    (license license:asl2.0)))

(define-public go-github-com-richardlehane-msoleps
  (package
    (name "go-github-com-richardlehane-msoleps")
    (version "1.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/richardlehane/msoleps")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11ii34l9i8k9ly3qlf993q02v8qipkzy0r7iqrmilzyz7v1cjprc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/richardlehane/msoleps"))
    (home-page "https://github.com/richardlehane/msoleps")
    (synopsis #f)
    (description "Example:.")
    (license license:asl2.0)))

(define-public go-github-com-rickb777-date
  (package
    (name "go-github-com-rickb777-date")
    (version "1.21.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rickb777/date")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s2afbf14cfvw38v6ckifv2y99qa83b5b7zp1w3kknw738sqijiy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rickb777/date"))
    (propagated-inputs (list go-golang-org-x-text
                             go-github-com-rickb777-plural
                             go-github-com-onsi-gomega))
    (home-page "https://github.com/rickb777/date")
    (synopsis "date")
    (description
     "Package date provides functionality for working with dates.  It implements a
light-weight Date type that is storage-efficient and convenient for calendrical
calculations and date parsing and formatting (including years outside the
[0,9999] interval).")
    (license license:bsd-3)))

(define-public go-github-com-rickb777-plural
  (package
    (name "go-github-com-rickb777-plural")
    (version "1.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rickb777/plural")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "069ag331f0y1mjjmxhkir1q99665q3ch86jqj2ljglmvh0vccrrp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rickb777/plural"))
    (home-page "https://github.com/rickb777/plural")
    (synopsis "plural - Simple Go API for Pluralisation.")
    (description
     "Package plural provides simple support for localising plurals in a flexible
range of different styles.")
    (license license:bsd-3)))

(define-public go-github-com-roaringbitmap-roaring
  (package
    (name "go-github-com-roaringbitmap-roaring")
    (version "1.9.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/RoaringBitmap/roaring")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hhiph1cc6dh1mb6yx5iy4hcpi6vhvfgzyans6vsw7zcyd1qp8rq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/RoaringBitmap/roaring"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-mschoch-smat
                             go-github-com-bits-and-blooms-bitset))
    (home-page "https://github.com/RoaringBitmap/roaring")
    (synopsis "roaring")
    (description
     "Package roaring is an implementation of Roaring Bitmaps in Go.  They provide
fast compressed bitmap data structures (also called bitset).  They are ideally
suited to represent sets of integers over relatively small ranges.  See
@@url{http://roaringbitmap.org,http://roaringbitmap.org} for details.")
    (license (list license:asl2.0)))) ;; check

(define-public go-github-com-robfig-cron-v3
  (package
    (name "go-github-com-robfig-cron-v3")
    (version "3.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/robfig/cron")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1agzbw2dfk2d1mpmddr85s5vh6ygm8kqrvfg87i9d2wqnlsnliqm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/robfig/cron/v3"
      #:unpack-path "github.com/robfig/cron"))
    (home-page "https://github.com/robfig/cron")
    (synopsis "cron")
    (description "Package cron implements a cron spec parser and job runner.")
    (license license:expat)))

(define-public go-github-com-rogpeppe-retry
  (package
    (name "go-github-com-rogpeppe-retry")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rogpeppe/retry")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yiypm1wwigy8l9g0bfmdhafmqfm3d1lw9aaa4dwbsln8g0r7j17"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rogpeppe/retry"))
    (propagated-inputs (list go-github-com-frankban-quicktest))
    (home-page "https://github.com/rogpeppe/retry")
    (synopsis #f)
    (description
     "Package retry implements an efficient loop-based retry mechanism that allows the
retry policy to be specified independently of the control structure.  It
supports exponential (with jitter) and linear retry policies.")
    (license license:asl2.0)))

(define-public go-github-com-rollbar-rollbar-go
  (package
    (name "go-github-com-rollbar-rollbar-go")
    (version "1.4.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rollbar/rollbar-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07i5xc0lml7sfbvdjds93vk421010yl4rmj949sk4jw2slczw31k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rollbar/rollbar-go"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/rollbar/rollbar-go")
    (synopsis "rollbar-go")
    (description
     "Package rollbar is a Golang Rollbar client that makes it easy to report errors
to Rollbar with full stacktraces.")
    (license license:expat)))

(define-public go-github-com-rootless-containers-proto
  (package
    (name "go-github-com-rootless-containers-proto")
    (version "0.1.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rootless-containers/proto")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01lmjg70l0ll2sf7kg114nhc1pd848j5xpgwb1xm3k0q81h4x9d3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rootless-containers/proto"))
    (home-page "https://github.com/rootless-containers/proto")
    (synopsis #f)
    (description
     "This project contains the
@@url{https://developers.google.com/protocol-buffers/,protobuf} definition of
the @@code{user.rootlesscontainers} extended attribute.  The main purpose of
this attribute is to allow for a interoperable and standardised way of emulating
persistent syscalls in a @@url{https://rootlesscontaine.rs/,rootless container}
(syscalls such as @@code{chown(2)} which would ordinarily fail).")
    (license license:asl2.0)))

(define-public go-github-com-rqlite-gorqlite
  (package
    (name "go-github-com-rqlite-gorqlite")
    (version "0.0.0-20241013203532-4385768ae85d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rqlite/gorqlite")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yryzf2f4mn5dyr9xd6djgfl7rilly9brcjjv3n0g9nqhcfrlvky"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rqlite/gorqlite"))
    (home-page "https://github.com/rqlite/gorqlite")
    (synopsis "gorqlite - a Go client for rqlite")
    (description
     "Package gorqlite provieds a database/sql-like driver for rqlite, the distributed
consistent sqlite.")
    (license license:expat)))

(define-public go-github-com-rubenv-sql-migrate
  (package
    (name "go-github-com-rubenv-sql-migrate")
    (version "1.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rubenv/sql-migrate")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zq4nrmffh6a5j7a7laqws7051649phpki15wm004qx6z5afdcpc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rubenv/sql-migrate"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-gopkg-in-check-v1
                             go-github-com-olekukonko-tablewriter
                             go-github-com-mitchellh-cli
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-mattn-go-oci8
                             go-github-com-lib-pq
                             go-github-com-godror-godror
                             go-github-com-go-sql-driver-mysql
                             go-github-com-go-gorp-gorp-v3
                             go-github-com-denisenkom-go-mssqldb))
    (home-page "https://github.com/rubenv/sql-migrate")
    (synopsis "sql-migrate")
    (description "SQL Schema migration tool for Go.")
    (license license:expat)))

(define-public go-github-com-rudderlabs-analytics-go
  (package
    (name "go-github-com-rudderlabs-analytics-go")
    (version "3.3.3+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rudderlabs/analytics-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03sp32dw677y6b82ar8hxmxzjglsdf1vi316qsnp165cl7x27g9m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/rudderlabs/analytics-go"))
    (home-page "https://github.com/rudderlabs/analytics-go")
    (synopsis "Installation")
    (description
     "The package can be simply installed via \"go get\", we recommend that you use a
tool like Godep to avoid issues related to API breaking changes introduced
between major versions of the library.")
    (license license:expat)))

(define-public go-github-com-russellhaering-goxmldsig
  (package
    (name "go-github-com-russellhaering-goxmldsig")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/russellhaering/goxmldsig")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jl8dyld3z47pwxv6dvyjscm21yfs528v03b18p43gpaz7pxprvv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/russellhaering/goxmldsig"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-jonboulle-clockwork
                             go-github-com-beevik-etree))
    (home-page "https://github.com/russellhaering/goxmldsig")
    (synopsis "goxmldsig")
    (description "XML Digital Signatures implemented in pure Go.")
    (license license:asl2.0)))

(define-public go-github-com-ruudk-golang-pdf417
  (package
    (name "go-github-com-ruudk-golang-pdf417")
    (version "0.0.0-20201230142125-a7e3863a1245")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ruudk/golang-pdf417")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02zq0yk89567sbgck1ynywyycj8rd5s0hs1l81s2jz4sbfx44ac6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ruudk/golang-pdf417"))
    (propagated-inputs (list go-github-com-stretchr-testify ; packaged
                             go-github-com-phpdave11-gofpdf
                             go-github-com-boombuler-barcode ; packaged
                             ))
    (home-page "https://github.com/ruudk/golang-pdf417")
    (synopsis "PDF417 barcodes in Golang")
    (description
     "This is a port of
@@url{https://github.com/ihabunek/pdf417-php,https://github.com/ihabunek/pdf417-php}.")
    (license license:expat)))

(define-public go-github-com-ryancurrah-gomodguard
  (package
    (name "go-github-com-ryancurrah-gomodguard")
    (version "1.3.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ryancurrah/gomodguard")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q5127cwnvxaf3bpymswklmi5sycx5rbhl2xmd0ssk6zpxzjnjd8"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/ryancurrah/gomodguard"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-golang-org-x-mod
                             go-github-com-stretchr-testify
                             go-github-com-phayes-checkstyle
                             go-github-com-mitchellh-go-homedir
                             go-github-com-go-xmlfmt-xmlfmt
                             go-github-com-masterminds-semver-v3))
    (home-page "https://github.com/ryancurrah/gomodguard")
    (synopsis "gomodguard")
    (description
     "Allow and block list linter for direct Go module dependencies.  This is useful
for organizations where they want to standardize on the modules used and be able
to recommend alternative modules.")
    (license license:expat)))

(define-public go-github-com-ryanrolds-sqlclosecheck
  (package
    (name "go-github-com-ryanrolds-sqlclosecheck")
    (version "0.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ryanrolds/sqlclosecheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0iibif6mqaay1aq98i9y2k9vbjb1802ccza5acs69v5vh8v7k1q1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ryanrolds/sqlclosecheck"))
    (propagated-inputs (list go-golang-org-x-tools go-github-com-jmoiron-sqlx ; packaged
                             go-github-com-jackc-pgx-v5
                             go-github-com-go-sql-driver-mysql))
    (home-page "https://github.com/ryanrolds/sqlclosecheck")
    (synopsis "sqlclosecheck")
    (description
     "Linter that checks if SQL rows/statements are closed.  Unclosed rows and
statements may cause DB connection pool exhaustion.  Included in
@@code{golangci-lint} as @@code{sqlclosecheck}.")
    (license license:expat)))

(define-public go-github-com-ryanuber-go-glob
  (package
    (name "go-github-com-ryanuber-go-glob")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ryanuber/go-glob")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mhrjy0iba3jr6bsgy7q50zjr42ar1njn1sb2fvihlkhxgb2ahv2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ryanuber/go-glob"))
    (home-page "https://github.com/ryanuber/go-glob")
    (synopsis "String globbing in golang")
    (description
     "@@code{go-glob} is a single-function library implementing basic string glob
support.")
    (license license:expat)))

(define-public go-github-com-ryszard-goskiplist
  (package
    (name "go-github-com-ryszard-goskiplist")
    (version "0.0.0-20150312221310-2dfbae5fcf46")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ryszard/goskiplist")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1135gmvcwnmk36zryxq554fmikrmg5c6y5ml00arqpagn5xhnmnl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ryszard/goskiplist"))
    (home-page "https://github.com/ryszard/goskiplist")
    (synopsis "About")
    (description
     "This is a library implementing skip lists for the Go programming language
(@@url{http://golang.org/,http://golang.org/}).")
    (license license:asl2.0)))

(define-public go-github-com-sacloud-api-client-go
  (package
    (name "go-github-com-sacloud-api-client-go")
    (version "0.2.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sacloud/api-client-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "125cryx9gwprlc4czdq5gd07vgj7lwik8awgv4wmy11v2hcng2mq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sacloud/api-client-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-sacloud-packages-go
                             go-github-com-sacloud-go-http ; packaged
                             go-github-com-hashicorp-go-retryablehttp))
    (home-page "https://github.com/sacloud/api-client-go")
    (synopsis "api-client-go")
    (description "さくらのクラウド向けAPI/HTTPクライアントライブラリ.")
    (license license:asl2.0)))

(define-public go-github-com-sacloud-iaas-api-go
  (package
    (name "go-github-com-sacloud-iaas-api-go")
    (version "1.14.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sacloud/iaas-api-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hm3m3i8misjkzzwd8rhilj6fps0i0j52v97ww5d2l9qq4k051z7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sacloud/iaas-api-go"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-sacloud-packages-go
                             go-github-com-sacloud-go-http ; packaged
                             go-github-com-sacloud-api-client-go
                             go-github-com-mitchellh-mapstructure
                             go-github-com-mitchellh-go-homedir
                             go-github-com-huandu-xstrings
                             go-github-com-hashicorp-go-multierror
                             go-github-com-fsnotify-fsnotify ; packaged
                             go-github-com-fatih-structs ; packaged
                             ))
    (home-page "https://github.com/sacloud/iaas-api-go")
    (synopsis "iaas-api-go")
    (description "Package sacloud さくらのクラウド API ライブラリ.")
    (license license:asl2.0)))

(define-public go-github-com-sacloud-packages-go
  (package
    (name "go-github-com-sacloud-packages-go")
    (version "0.0.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sacloud/packages-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dgizi5nwmyrxplz7b3ypdda37i22ch7wkssl21idn6fd9cwakgb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sacloud/packages-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-hashicorp-terraform-exec
                             go-github-com-hashicorp-hc-install
                             go-github-com-hashicorp-go-multierror
                             go-github-com-go-playground-validator-v10))
    (home-page "https://github.com/sacloud/packages-go")
    (synopsis "packages-go")
    (description "さくらのクラウドAPIライブラリのための汎用パッケージ群.")
    (license license:asl2.0)))

(define-public go-github-com-saintfish-chardet
  (package
    (name "go-github-com-saintfish-chardet")
    (version "0.0.0-20230101081208-5e3ef4b5456d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/saintfish/chardet")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "144zjm48y8zplr74bhc10rzd4c2fkrh0846w8f8wh1yp4qq4fy95"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/saintfish/chardet"))
    (home-page "https://github.com/saintfish/chardet")
    (synopsis "chardet")
    (description "Package chardet ports character set detection from ICU.")
    (license license:expat)))

(define-public go-github-com-sanity-io-litter
  (package
    (name "go-github-com-sanity-io-litter")
    (version "1.5.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sanity-io/litter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vgzwl9y50x4wdiaiqdbr4y9h1dvcrhdaljd65dc3ypqcbp0ynhg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sanity-io/litter"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/sanity-io/litter")
    (synopsis "Litter")
    (description "Litter is provided by.")
    (license license:expat)))

(define-public go-github-com-sanposhiho-wastedassign-v2
  (package
    (name "go-github-com-sanposhiho-wastedassign-v2")
    (version "2.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sanposhiho/wastedassign")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hba9qih1n5062al3z43g8mj1pp0ls4sxyg1la4hii8yf7ymz5fy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sanposhiho/wastedassign/v2"
      #:unpack-path "github.com/sanposhiho/wastedassign"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/sanposhiho/wastedassign")
    (synopsis "wastedassign")
    (description "@@code{wastedassign} finds wasted assignment statements.")
    (license license:expat)))

(define-public go-github-com-santhosh-tekuri-jsonschema-v6
  (package
    (name "go-github-com-santhosh-tekuri-jsonschema-v6")
    (version "6.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/santhosh-tekuri/jsonschema")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0d1mpp77a9080r7n45wi2avf2zpgjyvxk5zqzxdyd8q0rvb811h0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/santhosh-tekuri/jsonschema/v6"
      #:unpack-path "github.com/santhosh-tekuri/jsonschema"))
    (propagated-inputs (list go-golang-org-x-text
                             go-github-com-dlclark-regexp2))
    (home-page "https://github.com/santhosh-tekuri/jsonschema")
    (synopsis "jsonschema v6.0.2")
    (description
     "see @@url{https://pkg.go.dev/github.com/santhosh-tekuri/jsonschema/v6,godoc} for
examples.")
    (license license:asl2.0)))

(define-public go-github-com-sashamelentyev-interfacebloat
  (package
    (name "go-github-com-sashamelentyev-interfacebloat")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sashamelentyev/interfacebloat")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03s0vrcavx8q5s9b26zl7bqs13i0c7ngd6rap1xl2fb74m9d5bhq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sashamelentyev/interfacebloat"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/sashamelentyev/interfacebloat")
    (synopsis "interfacebloat")
    (description
     "Interface bloat (anti-pattern, also called fat interface) is when an interface
incorporates too many operations on some data.")
    (license license:expat)))

(define-public go-github-com-sashamelentyev-usestdlibvars
  (package
    (name "go-github-com-sashamelentyev-usestdlibvars")
    (version "1.28.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sashamelentyev/usestdlibvars")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dpgr7ic8x8b5rmg8j73cyjyb6mrwpxk0xyakfr21yri8vi6f45g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sashamelentyev/usestdlibvars"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/sashamelentyev/usestdlibvars")
    (synopsis "usestdlibvars")
    (description
     "This package provides a linter that detect the possibility to use
variables/constants from the Go standard library.")
    (license license:expat)))

(define-public go-github-com-sassoftware-go-rpmutils
  (package
    (name "go-github-com-sassoftware-go-rpmutils")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sassoftware/go-rpmutils")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06ymwjn6xvc4cpxcsh5achwgma4i075ikbzq8jm143m0pck4pmfi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sassoftware/go-rpmutils"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-go-uber-org-goleak
                             go-github-com-xi2-xz
                             go-github-com-ulikunitz-xz
                             go-github-com-stretchr-testify
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-protonmail-go-crypto
                             go-github-com-datadog-zstd))
    (home-page "https://github.com/sassoftware/go-rpmutils")
    (synopsis "Go RPM Utils")
    (description
     "go-rpmutils is a library written in @@url{http://golang.org,go} for parsing and
extracting content from @@url{http://www.rpm.org,RPMs}.")
    (license license:asl2.0)))

(define-public go-github-com-sassoftware-relic
  (package
    (name "go-github-com-sassoftware-relic")
    (version "6.1.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sassoftware/relic")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rsgqvfq1s91g8l73z0r79038n04yvcmzs1qma6fd7r3sx0mjm85"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sassoftware/relic"))
    (home-page "https://github.com/sassoftware/relic")
    (synopsis "Package types")
    (description
     "relic is a multi-tool and server for package signing and working with hardware
security modules (HSMs).")
    (license license:asl2.0)))

(define-public go-github-com-sassoftware-relic-v7
  (package
    (name "go-github-com-sassoftware-relic-v7")
    (version "7.6.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sassoftware/relic")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jbl44hrnmpr2lc9hm1f13da1zmi9ds162jam24b9mijv4bbxgjg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sassoftware/relic/v7"
      #:unpack-path "github.com/sassoftware/relic"))
    (propagated-inputs (list go-software-sslmate-com-src-go-pkcs12
                        go-howett-net-plist
                        go-gopkg-in-yaml-v3
                        go-google-golang-org-genproto
                        go-google-golang-org-api
                        go-golang-org-x-time
                        go-golang-org-x-term
                        go-golang-org-x-sys
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-github-com-zalando-go-keyring
                        go-github-com-xi2-xz
                        go-github-com-stretchr-testify
                        go-github-com-streadway-amqp
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-sassoftware-go-rpmutils
                        go-github-com-rs-zerolog
                        ;; go-github-com-qur-ar ; <github.com/qur/ar> abandoned
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-peterbourgon-diskv
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-go-digest
                        go-github-com-miekg-pkcs11
                        go-github-com-lib-pq
                        go-github-com-kr-pretty
                        go-github-com-howeyc-gopass
                        go-github-com-gregjones-httpcache
                        go-github-com-google-uuid
                        go-github-com-golang-snappy
                        go-github-com-go-jose-go-jose-v3
                        go-github-com-go-chi-chi-v5 ; packaged
                        go-github-com-go-asn1-ber-asn1-ber
                        go-github-com-cli-browser
                        go-github-com-bradfitz-gomemcache
                        go-github-com-beevik-etree
                        go-github-com-aws-aws-sdk-go-v2-service-kms
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-azuread-microsoft-authentication-library-for-go
                        go-github-com-azure-go-autorest-autorest-azure-auth
                        go-github-com-azure-go-autorest-autorest-adal
                        go-github-com-azure-go-autorest-autorest
                        go-github-com-azure-azure-sdk-for-go
                        go-cloud-google-com-go-kms))
    (home-page "https://github.com/sassoftware/relic")
    (synopsis "Package types")
    (description
     "relic is a multi-tool and server for package signing and working with hardware
security modules (HSMs).")
    (license license:asl2.0)))

(define-public go-github-com-scaleway-scaleway-sdk-go
  (package
    (name "go-github-com-scaleway-scaleway-sdk-go")
    (version "1.0.0-beta.30")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/scaleway/scaleway-sdk-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f8n67nkwmmra1wsbh2q3iwr75b2k03dgkw56gfm3gz6466wyc3p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/scaleway/scaleway-sdk-go"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-golang-org-x-text
                             go-github-com-dnaeon-go-vcr))
    (home-page "https://github.com/scaleway/scaleway-sdk-go")
    (synopsis "Scaleway GO SDK")
    (description "Package scalewaysdkgo is the Scaleway API SDK for Go.")
    (license license:asl2.0)))

(define-public go-github-com-schollz-closestmatch
  (package
    (name "go-github-com-schollz-closestmatch")
    (version "2.1.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/schollz/closestmatch")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gpzqrvka1bps790b2px0h9z1j2vjga5xx7204anl83qndiyyrli"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/schollz/closestmatch"))
    (home-page "https://github.com/schollz/closestmatch")
    (synopsis "closestmatch 📃")
    (description
     "is a simple and fast Go library for fuzzy matching an input string to a list of
target strings.  is useful for handling input from a user where the input (which
could be mispelled or out of order) needs to match a key in a database.  uses a
@@url{https://en.wikipedia.org/wiki/Bag-of-words_model,bag-of-words approach} to
precompute character n-grams to represent each possible target string.  The
closest matches have highest overlap between the sets of n-grams.  The
precomputation scales well and is much faster and more accurate than Levenshtein
for long strings.")
    (license license:expat)))

(define-public go-github-com-schollz-jsonstore
  (package
    (name "go-github-com-schollz-jsonstore")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/schollz/jsonstore")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05k38xjyiqsx6wlqs675k27g9vliq2r2xhpwy1dfi450bq1xzng7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/schollz/jsonstore"))
    (home-page "https://github.com/schollz/jsonstore")
    (synopsis "jsonstore  🏪")
    (description
     "is a Go-library for a simple thread-safe in-memory JSON key-store with
persistent backend.  It's made for those times where you don't need a RDBMS like
@@url{https://www.mysql.com/,@code{MySQL}}, or a @code{NoSQL} like
@@url{https://www.mongodb.com/,@code{MongoDB}} - basically when you just need a
simple keystore.  A really simple keystore.  is used in those times you don't
need a distributed keystore like
@@url{https://coreos.com/etcd/docs/latest/,etcd}, or a remote keystore
@@url{https://redis.io/,Redis} or a local keystore like
@@url{https://github.com/boltdb/bolt,Bolt}.  Its really for those times where
you just need a JSON file.")
    (license license:expat)))

(define-public go-github-com-sclevine-spec
  (package
    (name "go-github-com-sclevine-spec")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sclevine/spec")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0y3rqb7dd51qnw5ns7w5sy93879ybnlg6gwslbv5mkfnrk0gl7na"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sclevine/spec"))
    (home-page "https://github.com/sclevine/spec")
    (synopsis "spec")
    (description
     "Spec is a simple BDD test organizer for Go.  It minimally extends the standard
library @@code{testing} package by facilitating easy organization of Go 1.7+
@@url{https://blog.golang.org/subtests,subtests}.")
    (license license:asl2.0)))

(define-public go-github-com-scylladb-termtables
  (package
    (name "go-github-com-scylladb-termtables")
    (version "0.0.0-20191203121021-c4c0b6d42ff4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/scylladb/termtables")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12qjh5gjw2hvrjdh99d4ng8sxicjgdf5bbadrlp4sbd86rwskr54"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/scylladb/termtables"))
    (home-page "https://github.com/scylladb/termtables")
    (synopsis "Termtables")
    (description
     "This package provides a @@url{http://golang.org,Go} port of the Ruby library
@@url{https://github.com/visionmedia/terminal-table,terminal-tables} for fast
and simple ASCII table generation.")
    (license license:asl2.0)))

(define-public go-github-com-sebdah-goldie
  (package
    (name "go-github-com-sebdah-goldie")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sebdah/goldie")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "165xnrsj8xwgbc26yhx317yh240hp8d7cydm8pyjr2gc9m4kiw0g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sebdah/goldie"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/sebdah/goldie")
    (synopsis "goldie - Golden test utility for Go")
    (description
     "Package goldie provides test assertions based on golden files.  It's typically
used for testing responses with larger data bodies.")
    (license license:expat)))

(define-public go-github-com-secure-systems-lab-go-securesystemslib
  (package
    (name "go-github-com-secure-systems-lab-go-securesystemslib")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/secure-systems-lab/go-securesystemslib")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ifi33vqy7dkb6jf8h9vilbl9yc0v2gz8nqh73rjc9adsm0z4n2r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/secure-systems-lab/go-securesystemslib"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-codahale-rfc6979))
    (home-page "https://github.com/secure-systems-lab/go-securesystemslib")
    (synopsis #f)
    (description
     "This package provides a library that provides cryptographic and general-purpose
functions for Go Secure Systems Lab projects at NYU.")
    (license license:expat)))

(define-public go-github-com-securego-gosec-v2
  (package
    (name "go-github-com-securego-gosec-v2")
    (version "2.21.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/securego/gosec")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qxqdl6znbkr1w8b12qnkch18s68mg43g7zms2jqs4kjsvwj9vby"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/securego/gosec/v2"
      #:unpack-path "github.com/securego/gosec"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-google-golang-org-api
                             go-golang-org-x-tools
                             go-golang-org-x-text
                             go-golang-org-x-lint
                             go-golang-org-x-exp
                             go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo-v2
                             go-github-com-mozilla-tls-observatory
                             go-github-com-lib-pq
                             go-github-com-gookit-color
                             go-github-com-google-uuid
                             go-github-com-google-generative-ai-go
                             go-github-com-ccojocar-zxcvbn-go))
    (home-page "https://github.com/securego/gosec")
    (synopsis "gosec - Go Security Checker")
    (description
     "Package gosec holds the central scanning logic used by gosec security scanner.")
    (license license:asl2.0)))

(define-public go-github-com-segmentio-asm
  (package
    (name "go-github-com-segmentio-asm")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/segmentio/asm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01c90h83rq7fkvzfn28lz7x0455zxbvaxknd3c8259dfszfyr2zx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/segmentio/asm"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/segmentio/asm")
    (synopsis "asm")
    (description
     "Go library providing algorithms that use the full power of modern CPUs to get
the best performance.")
    (license license:expat)))

(define-public go-github-com-segmentio-encoding
  (package
    (name "go-github-com-segmentio-encoding")
    (version "0.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/segmentio/encoding")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gk2ry6s20h4j5gvl9vf83wi3badphnnzh6fhxfx3r24pbg7c2dx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/segmentio/encoding"))
    (propagated-inputs (list go-github-com-segmentio-asm))
    (home-page "https://github.com/segmentio/encoding")
    (synopsis "encoding")
    (description
     "Go package containing implementations of encoders and decoders for various data
formats.")
    (license license:expat)))

(define-public go-github-com-segmentio-fasthash
  (package
    (name "go-github-com-segmentio-fasthash")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/segmentio/fasthash")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0wrlviycj5hz4w576f156h2cpnnmkflfx5jfj298qzn5lymnqv86"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/segmentio/fasthash"))
    (home-page "https://github.com/segmentio/fasthash")
    (synopsis "fasthash")
    (description
     "Go package porting the standard hashing algorithms to a more efficient
implementation.")
    (license license:expat)))

(define-public go-github-com-segmentio-ksuid
  (package
    (name "go-github-com-segmentio-ksuid")
    (version "1.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/segmentio/ksuid")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qc9w7imal5jk0lw0hwyszs2fh7wjsnbkawgw7kwzdvg9nbahjg7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/segmentio/ksuid"))
    (home-page "https://github.com/segmentio/ksuid")
    (synopsis "ksuid")
    (description
     "ksuid is an efficient, comprehensive, battle-tested Go library for generating
and parsing a specific kind of globally unique identifier called a .  This
library serves as its reference implementation.")
    (license license:expat)))

(define-public go-github-com-selectel-domains-go
  (package
    (name "go-github-com-selectel-domains-go")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/selectel/domains-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hjdg11h6616k8hhsgs2c9s7wbd18i4ivnks859mkl0wysz6wpv4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/selectel/domains-go"))
    (home-page "https://github.com/selectel/domains-go")
    (synopsis "domains-go: Go SDK for Selectel Domains API")
    (description
     "Package domains-go provides Go SDK to work with the Selectel Domains API.")
    (license license:asl2.0)))

(define-public go-github-com-selectel-go-selvpcclient-v3
  (package
    (name "go-github-com-selectel-go-selvpcclient-v3")
    (version "3.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/selectel/go-selvpcclient")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zzq92i0anq0af7vq56y1l027vmrd915sr8djnqm6jc0vnimwxy6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/selectel/go-selvpcclient/v3"
      #:unpack-path "github.com/selectel/go-selvpcclient"))
    (propagated-inputs (list go-github-com-gophercloud-gophercloud
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/selectel/go-selvpcclient")
    (synopsis "go-selvpcclient: a Go library for the Selectel VPC API")
    (description
     "Package go-selvpcclient provides a Go library to work with the Selectel API:.")
    (license license:asl2.0)))

(define-public go-github-com-serenize-snaker
  (package
    (name "go-github-com-serenize-snaker")
    (version "0.0.0-20201027110005-a7ad2135616e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/serenize/snaker")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1c1d335q1i3mz55bhs2k84rcrz4xdaps2y63vwkyv9fsjpb2wnzb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/serenize/snaker"))
    (home-page "https://github.com/serenize/snaker")
    (synopsis "snaker")
    (description
     "Package snaker provides methods to convert @code{CamelCase} names to snake_case
and back.  It considers the list of allowed initialsms used by
github.com/golang/lint/golint (e.g. ID or HTTP).")
    (license license:expat)))

(define-public go-github-com-serialx-hashring
  (package
    (name "go-github-com-serialx-hashring")
    (version "0.0.0-20200727003509-22c0c7ab6b1b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/serialx/hashring")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dbqc69z6hjqvvbbls97cizb3rixil67jq37fnjw2pkf0zhs9i4q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/serialx/hashring"))
    (home-page "https://github.com/serialx/hashring")
    (synopsis "hashring")
    (description
     "This package implements consistent hashing that can be used when the number of
server nodes can increase or decrease (like in memcached).  The hashing ring is
built using the same algorithm as libketama.")
    (license license:expat)))

(define-public go-github-com-severecloud-vksdk-v2
  (package
    (name "go-github-com-severecloud-vksdk-v2")
    (version "2.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/SevereCloud/vksdk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m508piva8a17y8hbxq9nk2myy21gkj2g9yhghz8nas9bdjzz48f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/SevereCloud/vksdk/v2"
      #:unpack-path "github.com/SevereCloud/vksdk"))
    (propagated-inputs (list go-golang-org-x-text
                             go-github-com-vmihailenco-msgpack-v5
                             go-github-com-stretchr-testify
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-gorilla-websocket
                             go-github-com-gorilla-schema))
    (home-page "https://github.com/SevereCloud/vksdk")
    (synopsis "VK SDK for Golang")
    (description "Package vksdk implements the basic VK API functions.")
    (license license:expat)))

(define-public go-github-com-shabbyrobe-gocovmerge
  (package
    (name "go-github-com-shabbyrobe-gocovmerge")
    (version "0.0.0-20230507112040-c3350d9342df")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shabbyrobe/gocovmerge")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1853x61fcc0gnqgizggqhh4w9d3i6dcdw72z3gzncr6fhb03y4mz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shabbyrobe/gocovmerge"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/shabbyrobe/gocovmerge")
    (synopsis "gocovmerge")
    (description
     "Package gocovmerge takes the results from multiple `go test -coverprofile` runs
and merges them into one profile.")
    (license license:bsd-2)))

(define-public go-github-com-shazow-go-diff
  (package
    (name "go-github-com-shazow-go-diff")
    (version "0.0.0-20160112020656-b6b7b6733b8c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shazow/go-diff")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "095q9cc94j8p7c2z1007gjac35xnhixlfdi46c4kacvspz833bgr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shazow/go-diff"))
    (home-page "https://github.com/shazow/go-diff")
    (synopsis "go-diff")
    (description "Library for generating Git-style diff patchsets in Go.")
    (license license:expat)))

(define-public go-github-com-shazow-rateio
  (package
    (name "go-github-com-shazow-rateio")
    (version "0.0.0-20200113175441-4461efc8bdc4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shazow/rateio")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1isy75cmm71q18mvs6xaizgdjqnn6pllkj4yvd42brfgfj84qz0w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shazow/rateio"))
    (home-page "https://github.com/shazow/rateio")
    (synopsis #f)
    (description "Package rateio provides an io interfaces for rate-limiting.")
    (license license:expat)))

(define-public go-github-com-shazow-ssh-chat
  (package
    (name "go-github-com-shazow-ssh-chat")
    (version "1.10.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shazow/ssh-chat")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1iq56hvnzy9mbs2vahvrsrwvz8dvrdj8pnm04ssb1d1zwcifl2if"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shazow/ssh-chat"))
    (propagated-inputs (list go-golang-org-x-text
                             go-golang-org-x-sys
                             go-golang-org-x-crypto
                             go-github-com-shazow-rateio
                             go-github-com-jessevdk-go-flags
                             go-github-com-howeyc-gopass
                             go-github-com-alexcesaro-log))
    (home-page "https://github.com/shazow/ssh-chat")
    (synopsis "ssh-chat")
    (description
     "Package sshchat is an implementation of an ssh server which serves a chat room
instead of a shell.")
    (license license:expat)))

(define-public go-github-com-shibumi-go-pathspec
  (package
    (name "go-github-com-shibumi-go-pathspec")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shibumi/go-pathspec")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wsnn0di87qdp171j8x27qzf9f59hdqc50jna9mj5iryzavxywk4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shibumi/go-pathspec"))
    (home-page "https://github.com/shibumi/go-pathspec")
    (synopsis "go-pathspec")
    (description
     "Package pathspec implements git compatible gitignore pattern matching.  See the
description below, if you are unfamiliar with it:.")
    (license license:asl2.0)))

(define-public go-github-com-shiena-ansicolor
  (package
    (name "go-github-com-shiena-ansicolor")
    (version "0.0.0-20230509054315-a9deabde6e02")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shiena/ansicolor")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "058cfacl9jddi86rb0cgms3c6b93sw12ynikw0lbpvwn2psa3bfq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shiena/ansicolor"))
    (home-page "https://github.com/shiena/ansicolor")
    (synopsis "ansicolor")
    (description
     "Package ansicolor provides color console in Windows as ANSICON.")
    (license license:expat)))

(define-public go-github-com-shoenig-test
  (package
    (name "go-github-com-shoenig-test")
    (version "1.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shoenig/test")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j31gv7px4mqckq2bszri3fddnw17p3w0npii4c8n1r1rvbykl7k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shoenig/test"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://github.com/shoenig/test")
    (synopsis "test")
    (description
     "Package test provides a modern generic testing assertions library.")
    (license license:mpl2.0)))

(define-public go-github-com-shopify-ejson
  (package
    (name "go-github-com-shopify-ejson")
    (version "1.5.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Shopify/ejson")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ffpabj0ys60qnh40a2dihbqai5gniamh9dvbl7y9xkacrbdrb2r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Shopify/ejson"))
    (propagated-inputs (list go-golang-org-x-crypto go-github-com-urfave-cli
                             go-github-com-smartystreets-goconvey
                             go-github-com-dustin-gojson))
    (home-page "https://github.com/Shopify/ejson")
    (synopsis "ejson")
    (description
     "Package ejson implements the primary interface to interact with ejson documents
and keypairs.  The CLI implemented by cmd/ejson is a fairly thin wrapper around
this package.")
    (license license:expat)))

(define-public go-github-com-shopify-logrus-bugsnag
  (package
    (name "go-github-com-shopify-logrus-bugsnag")
    (version "0.0.0-20240507214313-004243a594f4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/Shopify/logrus-bugsnag")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0b4wyjgyynivgs7xrfcs7vmgvmww4jc3lgwkiwzsqn37xpv3j6mj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Shopify/logrus-bugsnag"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-bugsnag-bugsnag-go-v2))
    (home-page "https://github.com/Shopify/logrus-bugsnag")
    (synopsis "logrus-bugsnag")
    (description
     "logrus-bugsnag is a hook that allows
@@url{https://github.com/sirupsen/logrus,Logrus} to interface with
@@url{https://bugsnag.com,Bugsnag}.")
    (license license:expat)))

(define-public go-github-com-shopify-sarama
  (package
    (name "go-github-com-shopify-sarama")
    (version "1.44.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/IBM/sarama")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1llssjb1fyk33y7g2brgk100fjcmizn7vyczh6gvi985ry0x663b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/Shopify/sarama"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-golang-org-x-net
                             go-github-com-stretchr-testify
                             go-github-com-rcrowley-go-metrics
                             go-github-com-pierrec-lz4-v4
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-jcmturner-gokrb5-v8
                             go-github-com-jcmturner-gofork
                             go-github-com-hashicorp-go-multierror
                             go-github-com-fortytw2-leaktest
                             go-github-com-eapache-queue ; packaged
                             go-github-com-eapache-go-xerial-snappy
                             go-github-com-eapache-go-resiliency
                             go-github-com-davecgh-go-spew))
    (home-page "https://github.com/Shopify/sarama")
    (synopsis "sarama")
    (description
     "Package sarama is a pure Go client library for dealing with Apache Kafka
(versions 0.8 and later).  It includes a high-level API for easily producing and
consuming messages, and a low-level API for controlling bytes on the wire when
the high-level API is insufficient.  Usage examples for the high-level APIs are
provided inline with their full documentation.")
    (license license:expat)))

(define-public go-github-com-shurcool-go
  (package
    (name "go-github-com-shurcool-go")
    (version "0.0.0-20230706063926-5fe729b41b3a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shurcooL/go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dym1msgjgywjhsl01frrqx4x4s96pcp1laavs9swz53z5ww95qq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shurcooL/go"))
    (home-page "https://github.com/shurcooL/go")
    (synopsis "go")
    (description "Common Go code.")
    (license license:expat)))

(define-public go-github-com-shurcool-go-goon
  (package
    (name "go-github-com-shurcool-go-goon")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/shurcooL-deprecated/go-goon")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bzky89a5magyhskyhnmz802lyg8csc834brgxh19iacmmn40pi4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/shurcooL/go-goon"))
    (propagated-inputs (list go-github-com-shurcool-go))
    (home-page "https://github.com/shurcooL/go-goon")
    (synopsis "goon")
    (description
     "Package goon is a deep pretty printer with Go-like notation.  It implements the
goon specification.")
    (license license:expat)))

(define-public go-github-com-siddontang-go
  (package
    (name "go-github-com-siddontang-go")
    (version "0.0.0-20180604090527-bdc77568d726")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/siddontang/go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qx28xwqby3pl2r62y700x7j7aplmfm4hrq0y49p4ar8927mpxl6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/siddontang/go"))
    (home-page "https://github.com/siddontang/go")
    (synopsis "golib")
    (description "my golang lib.")
    (license license:expat)))

(define-public go-github-com-siddontang-goredis
  (package
    (name "go-github-com-siddontang-goredis")
    (version "0.0.0-20180423163523-0b4019cbd7b7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/siddontang/goredis")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1cmkmljgyqvfc5ba5jj6xfiwdc82vksagvh2v7z06265i2snvhw5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/siddontang/goredis"))
    (home-page "https://github.com/siddontang/goredis")
    (synopsis #f)
    (description "Package goredis is a client for the redis and ledisdb.")
    (license license:expat)))

(define-public go-github-com-siddontang-ledisdb
  (package
    (name "go-github-com-siddontang-ledisdb")
    (version "0.0.0-20200510135210-d35789ec47e6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ledisdb/ledisdb")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vjsjscnbg2l9id5psn3ja0hs0jf3bal01b87cx34swjxmnawh1p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/siddontang/ledisdb"))
    (propagated-inputs (list go-golang-org-x-net
                             go-github-com-yuin-gopher-lua
                             go-github-com-ugorji-go
                             go-github-com-syndtr-goleveldb
                             go-github-com-siddontang-rdb
                             go-github-com-siddontang-goredis
                             go-github-com-siddontang-go
                             go-github-com-peterh-liner ; packaged
                             go-github-com-pelletier-go-toml
                             go-github-com-glendc-gopher-json
                             go-github-com-edsrzf-mmap-go))
    (home-page "https://github.com/siddontang/ledisdb")
    (synopsis "LedisDB")
    (description
     "Ledisdb is a high-performance @code{NoSQL} database, similar to Redis, written
in @@url{http://golang.org/,Go}.  It supports many data structures including kv,
list, hash, zset, set.")
    (license license:expat)))

(define-public go-github-com-siddontang-rdb
  (package
    (name "go-github-com-siddontang-rdb")
    (version "0.0.0-20150307021120-fc89ed2e418d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/siddontang/rdb")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "107wb2kcg67iggfx1bjmm5nhy8cg96zi1iw7nkv9dydivnvalbbd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/siddontang/rdb"))
    (home-page "https://github.com/siddontang/rdb")
    (synopsis "rdb")
    (description "Handling Redis RDB format.")
    (license license:expat)))

(define-public go-github-com-sigstore-cosign-v2
  (package
    (name "go-github-com-sigstore-cosign-v2")
    (version "2.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/cosign")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kf1r229hzpyy5bl6ylm04d9abbd6vxmllg8z4bx24qwj8k3xxa2"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/cosign/v2"
      #:unpack-path "github.com/sigstore/cosign"))
    (propagated-inputs (list go-sigs-k8s-io-release-utils
                        go-k8s-io-utils
                        go-k8s-io-client-go
                        go-k8s-io-apimachinery
                        go-k8s-io-api
                        go-google-golang-org-protobuf
                        go-google-golang-org-api
                        go-golang-org-x-term
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-golang-org-x-crypto
                        go-gitlab-com-gitlab-org-api-client-go
                        go-github-com-withfig-autocomplete-tools-integrations-cobra
                        go-github-com-transparency-dev-merkle
                        go-github-com-theupdateframework-go-tuf-v2
                        go-github-com-stretchr-testify
                        go-github-com-spiffe-go-spiffe-v2
                        go-github-com-spf13-viper
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-sigstore-timestamp-authority
                        go-github-com-sigstore-sigstore-pkg-signature-kms-hashivault
                        go-github-com-sigstore-sigstore-pkg-signature-kms-gcp
                        go-github-com-sigstore-sigstore-pkg-signature-kms-azure
                        go-github-com-sigstore-sigstore-pkg-signature-kms-aws
                        go-github-com-sigstore-sigstore-go
                        go-github-com-sigstore-sigstore
                        go-github-com-sigstore-rekor
                        go-github-com-sigstore-protobuf-specs
                        go-github-com-sigstore-fulcio
                        go-github-com-secure-systems-lab-go-securesystemslib
                        go-github-com-open-policy-agent-opa
                        go-github-com-nozzle-throttler
                        go-github-com-mozillazg-docker-credential-acr-helper
                        go-github-com-moby-term ; packaged
                        go-github-com-mitchellh-go-wordwrap
                        go-github-com-miekg-pkcs11
                        go-github-com-manifoldco-promptui
                        go-github-com-kelseyhightower-envconfig
                        go-github-com-in-toto-in-toto-golang
                        go-github-com-google-go-github-v55
                        go-github-com-google-go-containerregistry
                        go-github-com-google-go-cmp
                        go-github-com-google-certificate-transparency-go
                        go-github-com-go-piv-piv-go-v2
                        go-github-com-go-openapi-swag
                        go-github-com-go-openapi-strfmt
                        go-github-com-go-openapi-runtime ; packaged
                        go-github-com-go-jose-go-jose-v3
                        go-github-com-dustin-go-humanize
                        go-github-com-digitorus-timestamp
                        go-github-com-depcheck-test-depcheck-test
                        go-github-com-cyberphone-json-canonicalization
                        go-github-com-chrismellard-docker-credential-acr-env
                        go-github-com-buildkite-agent-v3
                        go-github-com-awslabs-amazon-ecr-credential-helper-ecr-login
                        go-github-com-thalesignite-crypto11
                        go-cuelang-org-go))
    (home-page "https://github.com/sigstore/cosign")
    (synopsis "cosign")
    (description "Signing OCI containers (and other artifacts) using
@@url{https://sigstore.dev/,Sigstore}!")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-fulcio
  (package
    (name "go-github-com-sigstore-fulcio")
    (version "1.7.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/fulcio")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1acnhyy0sbvb9flgdjgm4msngnqvmzcq624m6h060rh9kxwm1mzj"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/fulcio"))
    (propagated-inputs (list go-sigs-k8s-io-release-utils
                        go-gopkg-in-yaml-v3
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto-googleapis-api
                        go-google-golang-org-api
                        go-goa-design-goa-v3
                        go-go-uber-org-zap
                        go-go-step-sm-crypto
                        go-github-com-tink-crypto-tink-go-v2
                        go-github-com-tink-crypto-tink-go-gcpkms-v2
                        go-github-com-tink-crypto-tink-go-awskms-v2
                        go-github-com-stretchr-testify
                        go-github-com-spiffe-go-spiffe-v2
                        go-github-com-spf13-viper
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-sigstore-sigstore-pkg-signature-kms-hashivault
                        go-github-com-sigstore-sigstore-pkg-signature-kms-gcp
                        go-github-com-sigstore-sigstore-pkg-signature-kms-azure
                        go-github-com-sigstore-sigstore-pkg-signature-kms-aws
                        go-github-com-sigstore-sigstore
                        go-github-com-sigstore-protobuf-specs
                        go-github-com-rs-cors
                        go-github-com-prometheus-common
                        go-github-com-prometheus-client-model
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-magiconair-properties
                        go-github-com-hashicorp-golang-lru-v2
                        go-github-com-grpc-ecosystem-grpc-gateway-v2
                        go-github-com-grpc-ecosystem-go-grpc-prometheus ; packaged
                        go-github-com-grpc-ecosystem-go-grpc-middleware
                        go-github-com-google-go-cmp
                        go-github-com-google-certificate-transparency-go
                        go-github-com-go-jose-go-jose-v4 ; packaged
                        go-github-com-fsnotify-fsnotify
                        go-github-com-coreos-go-oidc-v3
                        go-github-com-asaskevich-govalidator
                        go-github-com-thalesignite-crypto11
                        go-github-com-paesslerag-jsonpath
                        go-cloud-google-com-go-security
                        go-chainguard-dev-sdk
                        go-chainguard-dev-go-grpc-kit))
    (home-page "https://github.com/sigstore/fulcio")
    (synopsis "Fulcio")
    (description
     "Fulcio is a free-to-use certificate authority for issuing code signing
certificates for an @code{OpenID} Connect (OIDC) identity, such as email
address.")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-protobuf-specs
  (package
    (name "go-github-com-sigstore-protobuf-specs")
    (version "0.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/protobuf-specs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q4rlhh7zmh8gy2prf1796f700622l73q5mkkawy0sbvmbbgwfbs"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/protobuf-specs"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-genproto-googleapis-api))
    (home-page "https://github.com/sigstore/protobuf-specs")
    (synopsis "protobuf-specs")
    (description
     "This repository holds protobuf specifications for Sigstore messages.")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-rekor
  (package
    (name "go-github-com-sigstore-rekor")
    (version "1.3.10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/rekor")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06bw2l8k0in32qfhmh8h7hmjh6pb9i24x1q7w7nikli5bi37fk7h"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/rekor"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                        go-google-golang-org-api
                        go-go-step-sm-crypto
                        go-google-golang-org-genproto-googleapis-rpc
                        go-golang-org-x-exp
                        go-github-com-tink-crypto-tink-go-v2
                        go-github-com-tink-crypto-tink-go-gcpkms-v2
                        go-github-com-tink-crypto-tink-go-awskms-v2
                        go-github-com-stretchr-testify
                        go-github-com-sigstore-sigstore-pkg-signature-kms-hashivault
                        go-github-com-sigstore-sigstore-pkg-signature-kms-gcp
                        go-github-com-sigstore-sigstore-pkg-signature-kms-azure
                        go-github-com-sigstore-sigstore-pkg-signature-kms-aws
                        go-github-com-sigstore-protobuf-specs
                        go-github-com-sassoftware-relic-v7
                        go-github-com-redis-go-redis-v9 ; packaged

                        go-github-com-jmoiron-sqlx
                        go-github-com-hashicorp-go-retryablehttp
                        go-github-com-hashicorp-go-cleanhttp
                        go-github-com-golang-mock ; packaged
                        go-github-com-go-sql-driver-mysql
                        go-github-com-go-redis-redismock-v9
                        go-github-com-cyberphone-json-canonicalization
                        go-github-com-data-dog-go-sqlmock
                        go-github-com-adamkorcz-go-fuzz-headers-1
                        go-cloud-google-com-go-pubsub
                        go-cloud-google-com-go-profiler
                        go-sigs-k8s-io-yaml
                        go-sigs-k8s-io-release-utils
                        go-gopkg-in-ini-v1
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-golang-org-x-sync
                        go-golang-org-x-net
                        go-golang-org-x-mod
                        go-golang-org-x-crypto
                        go-gocloud-dev
                        go-go-uber-org-zap
                        go-go-uber-org-goleak
                        go-github-com-veraison-go-cose ; packaged
                        go-github-com-transparency-dev-merkle
                        go-github-com-theupdateframework-go-tuf
                        go-github-com-spf13-viper
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-sigstore-sigstore
                        go-github-com-secure-systems-lab-go-securesystemslib
                        go-github-com-sassoftware-relic
                        go-github-com-rs-cors
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-mitchellh-mapstructure
                        go-github-com-mitchellh-go-homedir
                        go-github-com-jedisct1-go-minisign
                        go-github-com-in-toto-in-toto-golang
                        go-github-com-google-trillian
                        go-github-com-google-rpmpack
                        go-github-com-google-go-cmp
                        go-github-com-go-openapi-validate
                        go-github-com-go-openapi-swag
                        go-github-com-go-openapi-strfmt
                        go-github-com-go-openapi-spec
                        go-github-com-go-openapi-runtime ; packaged
                        go-github-com-go-openapi-loads
                        go-github-com-go-openapi-errors
                        go-github-com-go-chi-chi
                        go-github-com-cavaliercoder-go-rpm
                        go-github-com-blang-semver
                        go-github-com-asaskevich-govalidator))
    (home-page "https://github.com/sigstore/rekor")
    (synopsis "Rekor")
    (description "Rekór - Greek for “Record”.")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-sigstore
  (package
    (name "go-github-com-sigstore-sigstore")
    (version "1.9.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/sigstore")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ilbms62xhp0xqwbm2q98rl3z59cafmxdfba9mp94pvd17xijx5m"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/sigstore"))
    (propagated-inputs (list go-golang-org-x-term
                        go-golang-org-x-oauth2
                        go-golang-org-x-crypto
                        go-github-com-tink-crypto-tink-go-v2
                        go-github-com-theupdateframework-go-tuf
                        go-github-com-stretchr-testify
                        go-github-com-skratchdot-open-golang
                        go-github-com-sigstore-protobuf-specs
                        go-github-com-segmentio-ksuid
                        go-github-com-secure-systems-lab-go-securesystemslib
                        go-github-com-pkg-browser
                        go-github-com-letsencrypt-boulder
                        go-github-com-google-go-containerregistry
                        go-github-com-google-go-cmp
                        go-github-com-go-test-deep
                        go-github-com-go-rod-rod
                        go-github-com-go-jose-go-jose-v4 ; packaged
                        go-github-com-coreos-go-oidc-v3))
    (home-page "https://github.com/sigstore/sigstore")
    (synopsis "sigstore framework")
    (description
     "sigstore/sigstore contains common @@url{https://www.sigstore.dev/,Sigstore}
code: that is, code shared by infrastructure (e.g.,
@@url{https://github.com/sigstore/fulcio,Fulcio} and
@@url{https://github.com/sigstore/rekor,Rekor}) and Go language clients (e.g.,
@@url{https://github.com/sigstore/cosign,Cosign} and
@@url{https://github.com/sigstore/gitsign,Gitsign}).")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-sigstore-go
  (package
    (name "go-github-com-sigstore-sigstore-go")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/sigstore-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i4m4aykb5b0l7wd0qbh41njzyv1m8ir6lnzvs73zxgwkywyygsh"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/sigstore-go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-golang-org-x-mod
                        go-golang-org-x-crypto
                        go-github-com-theupdateframework-go-tuf-v2
                        go-github-com-stretchr-testify
                        go-github-com-sigstore-timestamp-authority
                        go-github-com-sigstore-sigstore
                        go-github-com-sigstore-rekor
                        go-github-com-sigstore-protobuf-specs
                        go-github-com-secure-systems-lab-go-securesystemslib
                        go-github-com-in-toto-in-toto-golang
                        go-github-com-in-toto-attestation
                        go-github-com-google-certificate-transparency-go
                        go-github-com-go-openapi-swag
                        go-github-com-go-openapi-strfmt
                        go-github-com-go-openapi-runtime ; packaged
                        go-github-com-digitorus-timestamp
                        go-github-com-cyberphone-json-canonicalization))
    (home-page "https://github.com/sigstore/sigstore-go")
    (synopsis "sigstore-go")
    (description "This package provides a client library for
@@url{https://www.sigstore.dev/,Sigstore}, written in Go.")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-sigstore-pkg-signature-kms-aws
  (package
    (name "go-github-com-sigstore-sigstore-pkg-signature-kms-aws")
    (version "1.9.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/sigstore")
             (commit (go-version->git-ref version
                                          #:subdir "pkg/signature/kms/aws"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ilbms62xhp0xqwbm2q98rl3z59cafmxdfba9mp94pvd17xijx5m"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/sigstore/pkg/signature/kms/aws"
      #:unpack-path "github.com/sigstore/sigstore"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-jellydator-ttlcache-v3
                             go-github-com-aws-aws-sdk-go-v2-service-kms
                             go-github-com-aws-aws-sdk-go-v2-config
                             go-github-com-aws-aws-sdk-go-v2
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/sigstore/sigstore")
    (synopsis #f)
    (description
     "Package aws implement the interface with amazon aws kms service.")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-sigstore-pkg-signature-kms-azure
  (package
    (name "go-github-com-sigstore-sigstore-pkg-signature-kms-azure")
    (version "1.9.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/sigstore")
             (commit (go-version->git-ref version
                                          #:subdir "pkg/signature/kms/azure"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ilbms62xhp0xqwbm2q98rl3z59cafmxdfba9mp94pvd17xijx5m"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/sigstore/pkg/signature/kms/azure"
      #:unpack-path "github.com/sigstore/sigstore"))
    (propagated-inputs (list go-golang-org-x-crypto
                        go-github-com-jellydator-ttlcache-v3
                        go-github-com-google-go-cmp
                        go-github-com-go-jose-go-jose-v4 ; packaged
                        go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-azkeys
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore))
    (home-page "https://github.com/sigstore/sigstore")
    (synopsis "Azure KMS")
    (description
     "Package azure implement the interface with microsoft azure kms service.")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-sigstore-pkg-signature-kms-gcp
  (package
    (name "go-github-com-sigstore-sigstore-pkg-signature-kms-gcp")
    (version "1.9.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/sigstore")
             (commit (go-version->git-ref version
                                          #:subdir "pkg/signature/kms/gcp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ilbms62xhp0xqwbm2q98rl3z59cafmxdfba9mp94pvd17xijx5m"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/sigstore/pkg/signature/kms/gcp"
      #:unpack-path "github.com/sigstore/sigstore"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-api go-golang-org-x-oauth2
                             go-github-com-jellydator-ttlcache-v3
                             go-cloud-google-com-go-kms))
    (home-page "https://github.com/sigstore/sigstore")
    (synopsis #f)
    (description
     "Package gcp implement the interface with google cloud kms service.")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-sigstore-pkg-signature-kms-hashivault
  (package
    (name "go-github-com-sigstore-sigstore-pkg-signature-kms-hashivault")
    (version "1.9.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/sigstore")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "pkg/signature/kms/hashivault"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ilbms62xhp0xqwbm2q98rl3z59cafmxdfba9mp94pvd17xijx5m"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path
      "github.com/sigstore/sigstore/pkg/signature/kms/hashivault"
      #:unpack-path "github.com/sigstore/sigstore"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-mitchellh-go-homedir
                             go-github-com-jellydator-ttlcache-v3
                             go-github-com-hashicorp-vault-api))
    (home-page "https://github.com/sigstore/sigstore")
    (synopsis #f)
    (description
     "Package hashivault implement the interface with hashivault kms service.")
    (license license:asl2.0)))

(define-public go-github-com-sigstore-timestamp-authority
  (package
    (name "go-github-com-sigstore-timestamp-authority")
    (version "1.2.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sigstore/timestamp-authority")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1am44iscz1hlxhkliwyiw6n1qgpg3lnvwljp870fabj6ny81nfcr"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sigstore/timestamp-authority"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                        go-sigs-k8s-io-release-utils
                        go-google-golang-org-protobuf
                        go-golang-org-x-net
                        go-go-uber-org-zap
                        go-go-uber-org-goleak
                        go-go-step-sm-crypto
                        go-github-com-urfave-negroni
                        go-github-com-tink-crypto-tink-go-v2
                        go-github-com-tink-crypto-tink-go-hcvault-v2
                        go-github-com-tink-crypto-tink-go-gcpkms-v2
                        go-github-com-tink-crypto-tink-go-awskms-v2
                        go-github-com-spf13-viper
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-sigstore-sigstore-pkg-signature-kms-hashivault
                        go-github-com-sigstore-sigstore-pkg-signature-kms-gcp
                        go-github-com-sigstore-sigstore-pkg-signature-kms-azure
                        go-github-com-sigstore-sigstore-pkg-signature-kms-aws
                        go-github-com-sigstore-sigstore
                        go-github-com-rs-cors
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-pkg-errors
                        go-github-com-mitchellh-mapstructure
                        go-github-com-mitchellh-go-homedir
                        go-github-com-google-go-cmp
                        go-github-com-go-playground-validator-v10
                        go-github-com-go-openapi-swag
                        go-github-com-go-openapi-strfmt
                        go-github-com-go-openapi-spec
                        go-github-com-go-openapi-runtime ; packaged
                        go-github-com-go-openapi-loads
                        go-github-com-go-openapi-errors
                        go-github-com-go-chi-chi
                        go-github-com-digitorus-timestamp
                        go-github-com-digitorus-pkcs7
                        go-github-com-beevik-ntp
                        go-cloud-google-com-go-security))
    (home-page "https://github.com/sigstore/timestamp-authority")
    (synopsis "Sigstore Timestamp Authority")
    (description
     "This package provides a service for issuing
@@url{https://datatracker.ietf.org/doc/html/rfc3161,RFC 3161 timestamps}.")
    (license license:asl2.0)))

(define-public go-github-com-sivchari-containedctx
  (package
    (name "go-github-com-sivchari-containedctx")
    (version "1.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sivchari/containedctx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06gd9sqvv9sm2vdf5bs15j5dh71hkid814c4i6xryx8cb07syzds"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sivchari/containedctx"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-testutil))
    (home-page "https://github.com/sivchari/containedctx")
    (synopsis "containedctx")
    (description
     "containedctx is a linter that detects struct contained context.Context field.
This is discouraged technique in favour of passing context as first argument of
method or function.  For rationale please read
@@url{https://go.dev/blog/context-and-structs,Contexts and structs} the Go blog
post.")
    (license license:expat)))

(define-public go-github-com-sivchari-tenv
  (package
    (name "go-github-com-sivchari-tenv")
    (version "1.12.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sivchari/tenv")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1p0zs96c5cscv22a3mx2clsi48mlcj0sws4x6qygcl3vvcdpwlhx"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/sivchari/tenv"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-testutil))
    (home-page "https://github.com/sivchari/tenv")
    (synopsis "tenv")
    (description
     "tenv is analyzer that detects using os.Setenv instead of t.Setenv since Go1.17.")
    (license license:expat)))

(define-public go-github-com-sizeofint-webpanimation
  (package
    (name "go-github-com-sizeofint-webpanimation")
    (version "0.0.0-20210809145948-1d2b32119882")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sizeofint/webpanimation")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yihq7bzcgl5qgl4r7ks8xqbci93fdzi8qijbv7vm0ych8rqbr74"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sizeofint/webpanimation"))
    (home-page "https://github.com/sizeofint/webpanimation")
    (synopsis "webpanimation")
    (description
     "Packge is binding to libwebp providing methods to create webp animations from
golang @@code{image.Image} interface.")
    (license license:bsd-3)))

(define-public go-github-com-slack-go-slack
  (package
    (name "go-github-com-slack-go-slack")
    (version "0.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/slack-go/slack")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hbs8h4917ahrf0jfpwk1m3bgaf2zwjwvkfyimlgcly7zzaqcica"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/slack-go/slack"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-gorilla-websocket
                             go-github-com-google-go-cmp
                             go-github-com-go-test-deep))
    (home-page "https://github.com/slack-go/slack")
    (synopsis "Slack API in Go")
    (description
     "This is the original Slack library for Go created by Norberto Lopes, transferred
to a @code{GitHub} organization.")
    (license license:bsd-2)))

(define-public go-github-com-slok-go-http-metrics
  (package
    (name "go-github-com-slok-go-http-metrics")
    (version "0.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/slok/go-http-metrics")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lrnf0vhqlnhad6n8yyc2iafqlw6jr55cmyg9gqns2yi2gdfqv8m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/slok/go-http-metrics"))
    (propagated-inputs
     (list go-goji-io                             ; packaged
           go-go-opencensus-io                    ; packaged
           go-github-com-valyala-fasthttp         ; packaged
           go-github-com-urfave-negroni           ; packaged
           go-github-com-stretchr-testify         ; packaged
           go-github-com-prometheus-client-golang ; packaged
 ; packaged
           go-github-com-labstack-echo-v4         ; packaged
           go-github-com-kataras-iris-v12
           go-github-com-justinas-alice           ; packaged
           go-github-com-julienschmidt-httprouter ; packaged
           go-github-com-gorilla-mux              ; packaged
           go-github-com-go-chi-chi-v5 ; packaged
           go-github-com-gin-gonic-gin            ; packaged
           go-github-com-fasthttp-router          ; packaged
           go-github-com-emicklei-go-restful-v3   ; packaged
           go-contrib-go-opencensus-io-exporter-prometheus ; packaged
           ))
    (home-page "https://github.com/slok/go-http-metrics")
    (synopsis "go-http-metrics")
    (description
     "Package gohttpmetrics knows how to measure http metrics in different metric
formats, it comes with a middleware that can be used for different frameworks
and also the the main Go net/http handler:.")
    (license license:asl2.0)))

(define-public go-github-com-sloonz-go-qprintable
  (package
    (name "go-github-com-sloonz-go-qprintable")
    (version "0.0.0-20210417175225-715103f9e6eb")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sloonz/go-qprintable")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hxy7y0yxcxmqlhg5jrs2d8iz7dd9f6cxi94kffpik5y2520iwl7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sloonz/go-qprintable"))
    (home-page "https://github.com/sloonz/go-qprintable")
    (synopsis "qprintable")
    (description
     "Package qprintable implements quoted-printable encoding as specified by
@@url{https://rfc-editor.org/rfc/rfc2045.html,RFC 2045}.  It is strict on ouput,
generous on input.")
    (license license:unlicense)))

(define-public go-github-com-smallstep-go-attestation
  (package
    (name "go-github-com-smallstep-go-attestation")
    (version "0.4.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/smallstep/go-attestation")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "064n4xzs7p30cfkajnlwl5xmcxxwbz9fdlffyyj1fm2fcmdw9glp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/smallstep/go-attestation"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-google-go-tspi
                             go-github-com-google-go-tpm-tools
                             go-github-com-google-go-tpm
                             go-github-com-google-go-cmp
                             go-github-com-google-certificate-transparency-go))
    (home-page "https://github.com/smallstep/go-attestation")
    (synopsis "Go-Attestation")
    (description
     "Go-Attestation abstracts remote attestation operations across a variety of
platforms and TPMs, enabling remote validation of machine identity and state.
This project attempts to provide high level primitives for both client and
server logic.")
    (license license:asl2.0)))

(define-public go-github-com-smallstep-pkcs7
  (package
    (name "go-github-com-smallstep-pkcs7")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/smallstep/pkcs7")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qglhy0kjz594h03j7b09cyggx1qmykh31aashzrg3js8lcc44vl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/smallstep/pkcs7"))
    (propagated-inputs (list go-golang-org-x-crypto))
    (home-page "https://github.com/smallstep/pkcs7")
    (synopsis "pkcs7")
    (description
     "Package pkcs7 implements parsing and generation of some PKCS#7 structures.")
    (license license:expat)))

(define-public go-github-com-snabb-httpreaderat
  (package
    (name "go-github-com-snabb-httpreaderat")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/snabb/httpreaderat")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f9qdqyzk57mrizdbr049ynz8xpw6h3dlsb5ibbzlcryl0pbhzki"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/snabb/httpreaderat"))
    (propagated-inputs (list go-github-com-pkg-errors
                             go-github-com-avvmoto-buf-readerat))
    (home-page "https://github.com/snabb/httpreaderat")
    (synopsis "httpreaderat")
    (description
     "Package httpreaderat implements io.@code{ReaderAt} that makes HTTP Range
Requests.")
    (license license:expat)))

(define-public go-github-com-snowflakedb-gosnowflake
  (package
    (name "go-github-com-snowflakedb-gosnowflake")
    (version "1.12.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/snowflakedb/gosnowflake")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "119y4lnp076m5jzpnpdgn7ypsi3ma6jj3qk8md5ciqwgs98p1x98"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/snowflakedb/gosnowflake"))
    (propagated-inputs (list go-golang-org-x-sys
                        go-golang-org-x-crypto
                        go-github-com-sirupsen-logrus
                        go-github-com-pkg-browser
                        go-github-com-golang-jwt-jwt-v5 ;packaged

                        go-github-com-gabriel-vasile-mimetype ; packaged
                        go-github-com-aws-smithy-go
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-aws-aws-sdk-go-v2-feature-s3-manager
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-apache-arrow-go-v16
                        go-github-com-burntsushi-toml
                        go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore
                        go-github-com-99designs-keyring))
    (home-page "https://github.com/snowflakedb/gosnowflake")
    (synopsis "Support")
    (description
     "Package gosnowflake is a pure Go Snowflake driver for the database/sql package.")
    (license license:asl2.0)))

(define-public go-github-com-softlayer-softlayer-go
  (package
    (name "go-github-com-softlayer-softlayer-go")
    (version "1.1.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/softlayer/softlayer-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0cq5y925c4slvgq0fyjgxds2lhl81zk5v4plrb9lp8c41d430g9b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/softlayer/softlayer-go"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-spf13-cobra
                             go-github-com-softlayer-xmlrpc
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo-v2
                             go-github-com-maxbrunsfeld-counterfeiter-v6
                             go-github-com-jarcoal-httpmock))
    (home-page "https://github.com/softlayer/softlayer-go")
    (synopsis "softlayer-go")
    (description
     "The Official and Complete @code{SoftLayer} API Client for Golang (the Go
programming language).")
    (license license:asl2.0)))

(define-public go-github-com-softlayer-xmlrpc
  (package
    (name "go-github-com-softlayer-xmlrpc")
    (version "0.0.0-20200409220501-5f089df7cb7e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/softlayer/xmlrpc")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nmdy7zs23r76z9b9m7raajsp9p3dai0wf7jacbnxb8yccc352wq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/softlayer/xmlrpc"))
    (home-page "https://github.com/softlayer/xmlrpc")
    (synopsis "Overview")
    (description
     "xmlrpc is an implementation of client side part of XMLRPC protocol in Go
language.  This project was forked from
@@url{https://github.com/kolo/xmlrpc,https://github.com/kolo/xmlrpc} and
contains a few minor changes to help interact with the
@@url{https://sldn.softlayer.com,@code{SoftLayer} API}.")
    (license license:expat)))

(define-public go-github-com-soheilhy-cmux
  (package
    (name "go-github-com-soheilhy-cmux")
    (version "0.1.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/soheilhy/cmux")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17zpa45xvmk3jl1qqx3lkqdyxs6hdczpv7hwg4s7x0895jx3zl5y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/soheilhy/cmux"))
    (propagated-inputs (list go-golang-org-x-net))
    (home-page "https://github.com/soheilhy/cmux")
    (synopsis "cmux: Connection Mux")
    (description
     "Package cmux is a library to multiplex network connections based on their
payload.  Using cmux, you can serve different protocols from the same listener.")
    (license license:asl2.0)))

(define-public go-github-com-sonatard-noctx
  (package
    (name "go-github-com-sonatard-noctx")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sonatard/noctx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15jfgk83hjl4h3qrmr4myaz1q4nz9zni8qzv2df224syz9v6p0lq"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/sonatard/noctx"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-analysisutil))
    (home-page "https://github.com/sonatard/noctx")
    (synopsis "noctx")
    (description
     "@@code{noctx} finds sending http request without context.Context.")
    (license license:expat)))

(define-public go-github-com-sony-gobreaker
  (package
    (name "go-github-com-sony-gobreaker")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sony/gobreaker")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ghqsyb98q76drh6kx5pnmaynijxhp3wkbwq8y07z37zq3maggww"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sony/gobreaker"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/sony/gobreaker")
    (synopsis "gobreaker")
    (description
     "Package gobreaker implements the Circuit Breaker pattern.  See
@@url{https://msdn.microsoft.com/en-us/library/dn589784.aspx,https://msdn.microsoft.com/en-us/library/dn589784.aspx}.")
    (license license:expat)))

(define-public go-github-com-sourcegraph-go-diff
  (package
    (name "go-github-com-sourcegraph-go-diff")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sourcegraph/go-diff")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18kypvvc751mz98s1wxxgvyrzg59wriwnqmvr3xd3pnp53gzpkz0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sourcegraph/go-diff"))
    (propagated-inputs (list go-github-com-shurcool-go-goon
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/sourcegraph/go-diff")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-spacemonkeygo-monkit-v3
  (package
    (name "go-github-com-spacemonkeygo-monkit-v3")
    (version "3.0.24")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/spacemonkeygo/monkit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lrzj7gb151058k0wdknsrrh02aldhl9w9i9bmv3lcwgaprfdzjl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/spacemonkeygo/monkit/v3"
      #:unpack-path "github.com/spacemonkeygo/monkit"))
    (home-page "https://github.com/spacemonkeygo/monkit")
    (synopsis #f)
    (description
     "Package monkit is a flexible code instrumenting and data collection library.")
    (license license:asl2.0)))

(define-public go-github-com-spdx-gordf
  (package
    (name "go-github-com-spdx-gordf")
    (version "0.0.0-20221230105357-b735bd5aac89")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/spdx/gordf")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0jlakc3glvbrgn3fbhqqyc0lpwyrn8c5az613dvgppgvv21wsi1j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/spdx/gordf"))
    (home-page "https://github.com/spdx/gordf")
    (synopsis "gordf")
    (description
     "gordf is a package which provides a parser for RDF files linearized using
RDF/XML format.  It will be used to represent the rdf files in memory and write
back in possibly different formats like json, and xml.")
    (license license:expat)))

(define-public go-github-com-spdx-tools-golang
  (package
    (name "go-github-com-spdx-tools-golang")
    (version "0.5.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/spdx/tools-golang")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pdcwb6hvv5zr5k844knpcgbhnm0zgpwaacd5cjahb196q6xpgbw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/spdx/tools-golang"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-github-com-stretchr-testify
                             go-github-com-spdx-gordf
                             go-github-com-google-go-cmp
                             go-github-com-anchore-go-struct-converter))
    (home-page "https://github.com/spdx/tools-golang")
    (synopsis "SPDX tools-golang")
    (description
     "@@code{tools-golang} is a collection of Go packages intended to make it easier
for Go programs to work with @@url{https://spdx.dev/,SPDX®} files.")
    (license (list license:cc-by4.0)))) ;; check

(define-public go-github-com-spf13-afero
  (package
    (name "go-github-com-spf13-afero")
    (version "1.11.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/spf13/afero")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10c8q6bgib8vbj45z1c4gwl9ihn2wqhyxjaa2dy77mvb6rq7gdgs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/spf13/afero"))
    (propagated-inputs (list go-google-golang-org-api
                             go-golang-org-x-text
                             go-golang-org-x-oauth2
                             go-golang-org-x-crypto
                             go-github-com-pkg-sftp
                             go-github-com-googleapis-google-cloud-go-testing
                             go-cloud-google-com-go-storage))
    (home-page "https://github.com/spf13/afero")
    (synopsis "Overview")
    (description
     "This package provides a @code{FileSystem} Abstraction System for Go.")
    (license license:asl2.0)))

(define-public go-github-com-spf13-fsync
  (package
    (name "go-github-com-spf13-fsync")
    (version "0.10.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/spf13/fsync")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17s9klxw3yrxfv8j4hcx3wxl8zwy81qk83gnx8qgcjnkxsqjjz4m"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/spf13/fsync"))
    (propagated-inputs (list go-github-com-spf13-afero))
    (home-page "https://github.com/spf13/fsync")
    (synopsis #f)
    (description
     "Package @@code{fsync} keeps files and directories in sync.  Read the
documentation on @@url{http://godoc.org/github.com/mostafah/fsync,@code{GoDoc}}.")
    (license license:expat)))

(define-public go-github-com-spiffe-go-spiffe-v2
  (package
    (name "go-github-com-spiffe-go-spiffe-v2")
    (version "2.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/spiffe/go-spiffe")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gasiprhfa32s3wf162bxrfz0g0jjx3shnjdyhjiakrz49g28dpd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/spiffe/go-spiffe/v2"
      #:unpack-path "github.com/spiffe/go-spiffe"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc-examples
                             go-google-golang-org-grpc
                             go-github-com-zeebo-errs
                             go-github-com-stretchr-testify
                             go-github-com-go-jose-go-jose-v4 ; packaged
                             go-github-com-microsoft-go-winio))
    (home-page "https://github.com/spiffe/go-spiffe")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-spkg-bom
  (package
    (name "go-github-com-spkg-bom")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/spkg/bom")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fm2c84mlbcaschl7db4sfydqn9kbj1a6v51adgy8m2rrhzzbrxq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/spkg/bom"))
    (home-page "https://github.com/spkg/bom")
    (synopsis "bom")
    (description "Package bom is used to clean up UTF-8 Byte Order Marks.")
    (license license:expat)))

(define-public go-github-com-splitio-go-client-v6
  (package
    (name "go-github-com-splitio-go-client-v6")
    (version "6.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/splitio/go-client")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kz574zcz6llfx9fgm03fnkfzdghlddkn3s9wd0sfyv0ilf0wsy7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/splitio/go-client/v6"
      #:unpack-path "github.com/splitio/go-client"))
    (propagated-inputs (list go-github-com-splitio-go-toolkit-v5
                             go-github-com-splitio-go-split-commons-v6))
    (home-page "https://github.com/splitio/go-client")
    (synopsis "Split GO SDK")
    (description
     "This SDK is designed to work with Split, the platform for controlled rollouts,
which serves features to your users via feature flags to manage your complete
customer experience.")
    (license license:asl2.0)))

(define-public go-github-com-splitio-go-split-commons-v6
  (package
    (name "go-github-com-splitio-go-split-commons-v6")
    (version "6.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/splitio/go-split-commons")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1iaqy8x307qqxsagncfj60vs63b2rfw19q9hfqkp6952l50aybyl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/splitio/go-split-commons/v6"
      #:unpack-path "github.com/splitio/go-split-commons"))
    (propagated-inputs (list go-golang-org-x-exp
                             go-gopkg-in-yaml-v3
                             go-golang-org-x-sync
                             go-github-com-stretchr-testify
                             go-github-com-splitio-go-toolkit-v5
                             go-github-com-bits-and-blooms-bloom-v3))
    (home-page "https://github.com/splitio/go-split-commons")
    (synopsis "go-split-commons")
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-splitio-go-toolkit-v5
  (package
    (name "go-github-com-splitio-go-toolkit-v5")
    (version "5.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/splitio/go-toolkit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0srmzhfmga5jabb4s6cjlfb2lj69h3ja3ypngkhydca73g1hjp8v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/splitio/go-toolkit/v5"
      #:unpack-path "github.com/splitio/go-toolkit"))
    (propagated-inputs (list go-github-com-redis-go-redis-v9 ; packaged
))
    (home-page "https://github.com/splitio/go-toolkit")
    (synopsis "go-toolkit")
    (description "Common libraries for go projects.")
    (license license:asl2.0)))

(define-public go-github-com-ssgreg-nlreturn-v2
  (package
    (name "go-github-com-ssgreg-nlreturn-v2")
    (version "2.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ssgreg/nlreturn")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fp505fxczcwzdnsij324q2jq9293qi53dr4i115sgc1r6zjgbh0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ssgreg/nlreturn/v2"
      #:unpack-path "github.com/ssgreg/nlreturn"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/ssgreg/nlreturn")
    (synopsis "nlreturn")
    (description
     "Linter requires a new line before return and branch statements except when the
return is alone inside a statement group (such as an if statement) to increase
code clarity.")
    (license license:expat)))

(define-public go-github-com-stbenjam-no-sprintf-host-port
  (package
    (name "go-github-com-stbenjam-no-sprintf-host-port")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/stbenjam/no-sprintf-host-port")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0gln0a19zysbp4npwcdci81ffcvy341z8rn0q0r72q3i3nqch3g6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/stbenjam/no-sprintf-host-port"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/stbenjam/no-sprintf-host-port")
    (synopsis "no-sprintf-host-port")
    (description
     "The Go linter no-sprintf-host-port checks that sprintf is not used to construct
a host:port combination in a URL. A frequent pattern is for a developer to
construct a URL like this:.")
    (license license:expat)))

(define-public go-github-com-stefanberger-go-pkcs11uri
  (package
    (name "go-github-com-stefanberger-go-pkcs11uri")
    (version "0.0.0-20230803200340-78284954bff6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/stefanberger/go-pkcs11uri")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05gdfpb2h69fypp91dz1m8mff7mzg5x0kg1vsqh4wwd9cxwdhj10"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/stefanberger/go-pkcs11uri"))
    (home-page "https://github.com/stefanberger/go-pkcs11uri")
    (synopsis "go-pkcs11uri")
    (description
     "Welcome to the go-pkcs11uri library.  The implementation follows
@@url{https://tools.ietf.org/html/rfc7512,RFC 7512} and this
@@url{https://www.rfc-editor.org/errata/rfc7512,errata}.")
    (license license:asl2.0)))

(define-public go-github-com-stefanhaller-git-todo-parser
  (package
    (name "go-github-com-stefanhaller-git-todo-parser")
    (version "0.0.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/stefanhaller/git-todo-parser")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0k3x0q70cgc3b31i5yknln6x8cbry1f36pkg607hbrln6nskf36x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/stefanhaller/git-todo-parser"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/stefanhaller/git-todo-parser")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-steveyen-gtreap
  (package
    (name "go-github-com-steveyen-gtreap")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/steveyen/gtreap")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qim822f4f6r6ks1z3qvzxljjv6kzrz3bm5bixg6sjz1c2cqvj2j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/steveyen/gtreap"))
    (home-page "https://github.com/steveyen/gtreap")
    (synopsis "gtreap")
    (description
     "gtreap is an immutable treap implementation in the Go Language.")
    (license license:expat)))

(define-public go-github-com-streadway-amqp
  (package
    (name "go-github-com-streadway-amqp")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/streadway/amqp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1w6591zkfm1b6zrnbk8bb92r9p0ljwszkqp38k7f3akjiw83df2l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/streadway/amqp"))
    (home-page "https://github.com/streadway/amqp")
    (synopsis "Go RabbitMQ Client Library (Unmaintained Fork)")
    (description
     "Package amqp is an AMQP 0.9.1 client with @code{RabbitMQ} extensions.")
    (license license:bsd-2)))

(define-public go-github-com-streadway-handy
  (package
    (name "go-github-com-streadway-handy")
    (version "0.0.0-20200128134331-0f66f006fb2e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/streadway/handy")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03cm61ndfj6mz8kjsdb5jjka94v21fqn6nd5agnvhb7qx3fkq1y4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/streadway/handy"))
    (home-page "https://github.com/streadway/handy")
    (synopsis "Handy Handlers")
    (description
     "Package handy organizes some useful http server handler filters or handlers for
reuse.")
    (license license:bsd-2)))

(define-public go-github-com-studio-b12-gowebdav
  (package
    (name "go-github-com-studio-b12-gowebdav")
    (version "0.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/studio-b12/gowebdav")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10nzkrziz15n2a7ca3qfvbm1zrmlyg5aznwrar3ydgx7lnmd6dpf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/studio-b12/gowebdav"))
    (home-page "https://github.com/studio-b12/gowebdav")
    (synopsis "GoWebDAV")
    (description
     "Package gowebdav is a @code{WebDAV} client library with a command line tool
included.")
    (license license:bsd-3)))

(define-public go-github-com-substrait-io-substrait
  (package
    (name "go-github-com-substrait-io-substrait")
    (version "0.63.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/substrait-io/substrait")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1r5lgc43w1gxz5hq9yv95csw6cncgfskgwh34y65a0lf0dbxi7r0"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/substrait-io/substrait"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/substrait-io/substrait")
    (synopsis "Substrait")
    (description
     "Package substrait provides access to Substrait artifacts via embed.FS. Use
@code{substrait.GetSubstraitFS()} to retrieve the embed.FS object.")
    (license license:asl2.0)))

(define-public go-github-com-substrait-io-substrait-go
  (package
    (name "go-github-com-substrait-io-substrait-go")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/substrait-io/substrait-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "032d2d5dgapv5dypp3h6m0zzm20x79ypljwc02fw5gcpbli3x2m7"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/substrait-io/substrait-go"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-google-golang-org-protobuf
                             go-golang-org-x-exp
                             go-github-com-substrait-io-substrait ; -
                             go-github-com-stretchr-testify
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-github-com-goccy-go-yaml
                             go-github-com-creasty-defaults
                             go-github-com-cockroachdb-apd-v3
                             go-github-com-alecthomas-participle-v2))
    (home-page "https://github.com/substrait-io/substrait-go")
    (synopsis "substrait-go")
    (description
     "Package substraitgo contains the experimental go bindings for substrait
(@@url{https://substrait.io,https://substrait.io}).")
    (license license:asl2.0)))

(define-public go-github-com-swaggo-echo-swagger
  (package
    (name "go-github-com-swaggo-echo-swagger")
    (version "1.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/swaggo/echo-swagger")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bh1rmf16f5f6qhz8308v7kz5dw04sjwvisbbwjd7hkr54hghkvl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/swaggo/echo-swagger"))
    (propagated-inputs (list go-github-com-swaggo-swag ; packaged
                             go-github-com-swaggo-files-v2
                             go-github-com-stretchr-testify ; packaged
                             go-github-com-labstack-echo-v4 ; packaged
                             go-github-com-ghodss-yaml ; packaged
                             ))
    (home-page "https://github.com/swaggo/echo-swagger")
    (synopsis "echo-swagger")
    (description
     "echo middleware to automatically generate RESTful API documentation with Swagger
2.0.")
    (license license:expat)))

(define-public go-github-com-swaggo-files-v2
  (package
    (name "go-github-com-swaggo-files-v2")
    (version "2.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/swaggo/files")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mgjhkcys2i50ggwqx2rl9qg617yhxgs7wf34jpddhs0ldy5wh75"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/swaggo/files/v2"
      #:unpack-path "github.com/swaggo/files"))
    (home-page "https://github.com/swaggo/files")
    (synopsis "swaggerFiles")
    (description "Generate swagger ui embedded files by using:.")
    (license license:expat)))

(define-public go-github-com-sylabs-json-resp
  (package
    (name "go-github-com-sylabs-json-resp")
    (version "0.9.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sylabs/json-resp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1a4kmb45gbgw0x67fnb53wx4a7qkc06xigx4r7b6dvj5hfpirbwz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sylabs/json-resp"))
    (home-page "https://github.com/sylabs/json-resp")
    (synopsis "JSON Response")
    (description
     "The @@code{json-resp} package contains a small set of functions that are used to
marshall and unmarshall response data and errors in JSON format.")
    (license license:bsd-3)))

(define-public go-github-com-sylabs-oci-tools
  (package
    (name "go-github-com-sylabs-oci-tools")
    (version "0.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sylabs/oci-tools")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xph7w0hcghrbniwcr8b80k2yn9ncl4flrqnc8h0igg34dhf5phm"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sylabs/oci-tools"))
    (propagated-inputs (list go-github-com-sylabs-sif-v2
                             go-github-com-sigstore-cosign-v2
                             go-github-com-sebdah-goldie-v2
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-google-go-containerregistry
                             go-github-com-containerd-platforms))
    (home-page "https://github.com/sylabs/oci-tools")
    (synopsis "oci-tools")
    (description
     "This is a Go module for working with container images based on
@@url{https://opencontainers.org,Open Container Initiative} standards.")
    (license license:asl2.0)))

(define-public go-github-com-sylabs-scs-build-client
  (package
    (name "go-github-com-sylabs-scs-build-client")
    (version "0.9.19")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sylabs/scs-build-client")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01b9q6b4w5nslafwg86ryhir1g643vvl2i5vl7yja3bpclydj4b6"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sylabs/scs-build-client"))
    (propagated-inputs (list go-golang-org-x-term
                             go-github-com-sylabs-sif-v2
                             go-github-com-sylabs-scs-library-client
                             go-github-com-sylabs-json-resp
                             go-github-com-stretchr-testify
                             go-github-com-spf13-viper
                             go-github-com-spf13-cobra
                             go-github-com-sigstore-sigstore
                             go-github-com-sebdah-goldie-v2
                             go-github-com-gorilla-websocket
                             go-github-com-protonmail-go-crypto))
    (home-page "https://github.com/sylabs/scs-build-client")
    (synopsis "scs-build")
    (description
     "@@code{scs-build} allows users to build
@@url{https://github.com/sylabs/sif,Singularity Image Format (SIF)} images via
@@url{https://cloud.sylabs.io,Singularity Container Services} or
@@url{https://sylabs.io/singularity-enterprise,Singularity Enterprise} without
the need to install and configure Singularity.")
    (license license:bsd-3)))

(define-public go-github-com-sylabs-scs-key-client
  (package
    (name "go-github-com-sylabs-scs-key-client")
    (version "0.7.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sylabs/scs-key-client")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ls70q959rjk35n84a7jndmnjmnghzkqv9i7vcizp3ar0z8hspwq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/sylabs/scs-key-client"))
    (propagated-inputs (list go-github-com-sylabs-json-resp))
    (home-page "https://github.com/sylabs/scs-key-client")
    (synopsis "SCS Key Client")
    (description
     "This project provides a Go client for the Singularity Container Services (SCS)
Key Service.")
    (license license:bsd-3)))

(define-public go-github-com-sylabs-scs-library-client
  (package
    (name "go-github-com-sylabs-scs-library-client")
    (version "1.4.12")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sylabs/scs-library-client")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rnnwfv6fi35j915i48h7i4f3357xk4bsxi41kvj3vn3x32665i5"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sylabs/scs-library-client"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-github-com-sylabs-sif-v2
                             go-github-com-sylabs-json-resp
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest
                             go-github-com-go-log-log
                             go-github-com-blang-semver-v4))
    (home-page "https://github.com/sylabs/scs-library-client")
    (synopsis "SCS Library Client")
    (description
     "This project provides a Go client for the Singularity Container Services (SCS)
Library Service.")
    (license license:bsd-3)))

(define-public go-github-com-sylabs-sif-v2
  (package
    (name "go-github-com-sylabs-sif-v2")
    (version "2.21.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sylabs/sif")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13r05j0rdgr1mnkrda5530n8hsk8ssd7s79cri1q1rycjn8qxv7m"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sylabs/sif/v2"
      #:unpack-path "github.com/sylabs/sif"))
    (propagated-inputs (list go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-sigstore-sigstore
                             go-github-com-sebdah-goldie-v2
                             go-github-com-google-uuid
                             go-github-com-google-go-containerregistry
                             go-github-com-protonmail-go-crypto))
    (home-page "https://github.com/sylabs/sif")
    (synopsis "The Singularity Image Format (SIF)")
    (description
     "This module contains an open source implementation of the Singularity Image
Format (SIF) that makes it easy to create complete and encapsulated container
environments stored in a single file.")
    (license license:bsd-3)))

(define-public go-github-com-sylabs-singularity
  (package
    (name "go-github-com-sylabs-singularity")
    (version "4.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sylabs/singularity")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07fqn0yjny4q6zanqac4pn9h7yi3rssng2xg5mly9h80mps0qic6"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sylabs/singularity/v4"
      #:unpack-path "github.com/sylabs/singularity"))
    (propagated-inputs (list
                        go-tags-cncf-io-container-device-interface-specs-go
                        go-tags-cncf-io-container-device-interface
                        go-mvdan-cc-sh-v3 ; packaged
                        go-gotest-tools-v3
                        go-gotest-tools
                        go-gopkg-in-yaml-v3
                        go-google-golang-org-grpc
                        go-golang-org-x-text ; packaged
                        go-golang-org-x-term ; packaged
                        go-golang-org-x-sys ; packaged
                        go-golang-org-x-sync ; packaged
                        go-golang-org-x-crypto ; packaged
                        go-go-etcd-io-bbolt
                        go-github-com-vbauerster-mpb-v8
                        go-github-com-sylabs-squashfs
                        go-github-com-sylabs-sif-v2
                        go-github-com-sylabs-scs-library-client
                        go-github-com-sylabs-scs-key-client
                        go-github-com-sylabs-scs-build-client
                        go-github-com-sylabs-oci-tools
                        go-github-com-sylabs-json-resp
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-sirupsen-logrus
                        go-github-com-sigstore-sigstore
                        go-github-com-sigstore-cosign-v2
                        go-github-com-shopspring-decimal
                        go-github-com-seccomp-libseccomp-golang ; packaged
                        go-github-com-sebdah-goldie-v2
                        go-github-com-samber-lo
                        go-github-com-pkg-errors
                        go-github-com-pelletier-go-toml-v2
                        go-github-com-opencontainers-umoci ; packaged
                        go-github-com-opencontainers-selinux ; packaged
                        go-github-com-opencontainers-runtime-tools
                        go-github-com-opencontainers-runtime-spec ; packaged
                        go-github-com-opencontainers-runc ; packaged
                        go-github-com-opencontainers-image-spec ; packaged
                        go-github-com-opencontainers-cgroups ; packaged
                        go-github-com-moby-term ; packaged
                        go-github-com-moby-sys-userns
                        go-github-com-moby-sys-sequential
                        go-github-com-moby-buildkit
                        go-github-com-gosimple-slug
                        go-github-com-google-uuid
                        go-github-com-google-go-containerregistry
                        go-github-com-gofrs-flock
                        go-github-com-go-log-log
                        go-github-com-fatih-color
                        go-github-com-docker-go-units
                        go-github-com-docker-docker
                        go-github-com-docker-distribution
                        go-github-com-docker-cli
                        go-github-com-cyphar-filepath-securejoin
                        go-github-com-coreos-go-systemd-v22
                        go-github-com-containers-image-v5
                        go-github-com-containernetworking-plugins
                        go-github-com-containernetworking-cni
                        go-github-com-containerd-platforms
                        go-github-com-containerd-go-runc
                        go-github-com-containerd-continuity ; packaged
                        go-github-com-containerd-containerd-v2
                        go-github-com-ccoveille-go-safecast
                        go-github-com-buger-jsonparser
                        go-github-com-buger-goterm
                        go-github-com-blang-semver-v4
                        go-github-com-astromechza-etcpwdparse
                        go-github-com-apex-log ; packaged
                        go-github-com-adigunhammedolalekan-registry-auth
                        go-github-com-protonmail-go-crypto
                        go-github-com-netflix-go-expect))
    (home-page "https://github.com/sylabs/singularity")
    (synopsis "SingularityCE")
    (description
     "@code{SingularityCE} is the Community Edition of Singularity, an open source
container platform designed to be simple, fast, and secure.  Many container
platforms are available, but @code{SingularityCE} is designed for ease-of-use on
shared systems and in high performance computing (HPC) environments.  It
features:.")
    (license license:bsd-3)))

(define-public go-github-com-sylabs-squashfs
  (package
    (name "go-github-com-sylabs-squashfs")
    (version "1.0.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/sylabs/squashfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0prygnil3n6aqdljm7vcipx39w73jqlv3g6mxdrzih92clqw5bkl"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/sylabs/squashfs"))
    (propagated-inputs (list go-github-com-ulikunitz-xz
                             go-github-com-therootcompany-xz
                             go-github-com-pierrec-lz4-v4
                             go-github-com-klauspost-compress))
    (home-page "https://github.com/sylabs/squashfs")
    (synopsis "squashfs")
    (description
     "This is a fork of @@code{@code{CalebQ42/squashfs}} for the purpose of maintaing
a package that removes the lzo dependency, so that it does not contain GPL code.")
    (license license:expat)))

(define-public go-github-com-syncthing-syncthing
  (package
    (name "go-github-com-syncthing-syncthing")
    (version "1.28.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/syncthing/syncthing")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w466267g1nslw2ipfz05bj0dcxxfw0270vmkgfsw343kzmvpgay"))))
    (build-system go-build-system)
    (arguments
     (list
                                                 ;; check-go-version
      #:import-path "github.com/syncthing/syncthing"))
    (propagated-inputs
     (list go-github-com-alecthomas-kong
           go-github-com-audriusbutkevicius-recli
           go-github-com-aws-aws-sdk-go
           go-github-com-calmh-glob
           go-github-com-calmh-incontainer
           go-github-com-calmh-xdr
           go-github-com-ccding-go-stun
           go-github-com-chmduquesne-rollinghash
           go-github-com-d4l3k-messagediff
           ;; go-github-com-getsentry-raven-go deprecated
           go-github-com-go-ldap-ldap-v3
           go-github-com-gogo-protobuf
           go-github-com-greatroar-blobloom
           go-github-com-hashicorp-golang-lru-v2 ; packaged
           go-github-com-jackpal-gateway
           go-github-com-jackpal-go-nat-pmp
           go-github-com-julienschmidt-httprouter
           go-github-com-kballard-go-shellquote  ; packaged
           go-github-com-maruel-panicparse-v2
           go-github-com-maxbrunsfeld-counterfeiter-v6
           go-github-com-maxmind-geoipupdate-v6
           go-github-com-miscreant-miscreant-go
           go-github-com-oschwald-geoip2-golang
           go-github-com-pierrec-lz4-v4
           go-github-com-prometheus-client-golang ; packaged

           go-github-com-puzpuzpuz-xsync-v3
           go-github-com-quic-go-quic-go         ; packaged
           go-github-com-rabbitmq-amqp091-go
           go-github-com-rcrowley-go-metrics
           go-github-com-shirou-gopsutil-v4
           go-github-com-syncthing-notify
           go-github-com-syndtr-goleveldb
           go-github-com-thejerf-suture-v4
           go-github-com-urfave-cli
           go-github-com-vitrun-qart
           go-github-com-willabides-kongplete
           go-go-uber-org-automaxprocs           ; packaged
           go-golang-org-x-crypto                ; packaged
           go-golang-org-x-net                   ; packaged
           go-golang-org-x-sys                   ; packaged
           go-golang-org-x-text                  ; packaged
           go-golang-org-x-time                  ; packaged
           go-golang-org-x-tools                 ; packaged
           go-google-golang-org-protobuf         ; packaged
           go-sigs-k8s-io-yaml))
    (home-page "https://github.com/syncthing/syncthing")
    (synopsis "Goals")
    (description
     "Syncthing is a @@strong{continuous file synchronization program}.  It
synchronizes files between two or more computers.  We strive to fulfill the
goals below.  The goals are listed in order of importance, the most important
ones first.  This is the summary version of the goal list - for more commentary,
see the full
@@url{https://github.com/syncthing/syncthing/blob/main/GOALS.md,Goals document}.")
    (license license:mpl2.0)))

(define-public go-github-com-syndtr-gocapability
  (package
    (name "go-github-com-syndtr-gocapability")
    (version "0.0.0-20200815063812-42c35b437635")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/syndtr/gocapability")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zi0k190ydlm9drnafvj9p4cf6axm858wr71pbmq1p3r94iqws4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/syndtr/gocapability"))
    (home-page "https://github.com/syndtr/gocapability")
    (synopsis #f)
    (description #f)
    (license license:bsd-2)))

(define-public go-github-com-t3rm1n4l-go-mega
  (package
    (name "go-github-com-t3rm1n4l-go-mega")
    (version "0.0.0-20241213151442-a19cff0ec7b5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/t3rm1n4l/go-mega")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m6l3kfj3dlv1yzy1l9hdsh1rgy968z0gv2w7xsn1v0i3r001i08"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/t3rm1n4l/go-mega"))
    (propagated-inputs (list go-golang-org-x-crypto))
    (home-page "https://github.com/t3rm1n4l/go-mega")
    (synopsis "go-mega")
    (description
     "This package provides a client library in go for mega.co.nz storage service.")
    (license license:expat)))

(define-public go-github-com-tadvi-systray
  (package
    (name "go-github-com-tadvi-systray")
    (version "0.0.0-20190226123456-11a2b8fa57af")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tadvi/systray")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0br5lds2wnlrpfigm1d2nrsn7jp5dawmnh1j18zr15vwnyg7wim3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tadvi/systray"))
    (home-page "https://github.com/tadvi/systray")
    (synopsis "systray")
    (description
     "Go package for Windows Systray icon, menu and notifications.")
    (license license:expat)))

(define-public go-github-com-tailor-inc-graphql
  (package
    (name "go-github-com-tailor-inc-graphql")
    (version "0.5.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailor-inc/graphql")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03rpikj8n8jyxlxx56dfyjbfbdyqmwfh3d5s5j4z8all3klm4z44"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailor-inc/graphql"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/tailor-inc/graphql")
    (synopsis "graphql")
    (description
     "An implementation of @code{GraphQL} in Go.  Follows the official reference
implementation @@url{https://github.com/graphql/graphql-js,(code graphql-js)}.")
    (license license:expat)))

(define-public go-github-com-tailscale-certstore
  (package
    (name "go-github-com-tailscale-certstore")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/certstore")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "192d6bpby4nyqk8b8xflpabcz7b3y256ny4dfzfqr9pkp9zy6cmp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/certstore"))
    (propagated-inputs (list go-github-com-pkg-errors
                             go-github-com-github-fakeca))
    (home-page "https://github.com/tailscale/certstore")
    (synopsis "certstore")
    (description
     "Certstore is a Go library for accessing user identities stored in platform
certificate stores.  On Windows and @code{macOS}, certstore can enumerate user
identities and sign messages with their private keys.")
    (license license:expat)))

(define-public go-github-com-tailscale-go-winio
  (package
    (name "go-github-com-tailscale-go-winio")
    (version "0.0.0-20231025203758-c4f33415bf55")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/go-winio")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01hskfb66xiphhnfhrfgriz95nf99mapk7qn68v8k01nrp8vcmaq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/go-winio"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-sys
                             go-github-com-sirupsen-logrus
                             ))
    (home-page "https://github.com/tailscale/go-winio")
    (synopsis "go-winio")
    (description
     "This package provides utilities for efficiently performing Win32 IO operations
in Go.  Currently, this package is provides support for genreal IO and
management of.")
    (license license:expat)))

(define-public go-github-com-tailscale-goexpect
  (package
    (name "go-github-com-tailscale-goexpect")
    (version "0.0.0-20210902213824-6e8c725cea41")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/goexpect")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q3npn5n51p3cxi1p87i8iqjw3mldwdg08wp1fk0y47m57m59yhh"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/goexpect"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-ziutek-telnet
                             go-github-com-google-goterm))
    (home-page "https://github.com/tailscale/goexpect")
    (synopsis "Features:")
    (description "Package expect is a Go version of the classic TCL Expect.")
    (license license:bsd-3)))

(define-public go-github-com-tailscale-golang-x-crypto
  (package
    (name "go-github-com-tailscale-golang-x-crypto")
    (version "0.91.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/golang-x-crypto")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0m9qkk48mihrkmfh1fzfhc39l8957qkpfx8qbw4xdjws7dy4vzbz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/golang-x-crypto"))
    (propagated-inputs (list go-golang-org-x-crypto go-golang-org-x-term
                             go-golang-org-x-sys go-golang-org-x-net))
    (home-page "https://github.com/tailscale/golang-x-crypto")
    (synopsis "Go Cryptography")
    (description
     "This repository holds supplementary Go cryptography libraries.")
    (license license:bsd-3)))

(define-public go-github-com-tailscale-goupnp
  (package
    (name "go-github-com-tailscale-goupnp")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/goupnp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12f7rigf1f4xh1an1qis61xkj5s1r8ygk48zahf3n4gaqxmgm7i6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/goupnp"))
    (propagated-inputs (list go-golang-org-x-net go-github-com-huin-goutil))
    (home-page "https://github.com/tailscale/goupnp")
    (synopsis "tailscale/goupnp")
    (description
     "goupnp is an implementation of a client for various U@code{PnP} services.")
    (license license:bsd-2)))

(define-public go-github-com-tailscale-hujson
  (package
    (name "go-github-com-tailscale-hujson")
    (version "0.0.0-20241010212012-29efb4a0184b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/hujson")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0iyn4k2wpszm6whnhjfhgqg9kxypiacdg83v8xskkhbqf76kga5l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/tailscale/hujson"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://github.com/tailscale/hujson")
    (synopsis "HuJSON - \"Human JSON\" (")
    (description
     "Package hujson contains a parser and packer for the JWCC format: JSON With
Commas and Comments (or \"human JSON\").")
    (license license:bsd-3)))

(define-public go-github-com-tailscale-mkctr
  (package
    (name "go-github-com-tailscale-mkctr")
    (version "0.0.0-20241111153353-1a38f6676f10")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/mkctr")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z35bsqfdvk8wpsb59mqraaaq7xmaa2yqn4slx4ww0an539zkjwb"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/tailscale/mkctr"))
    (propagated-inputs (list go-github-com-google-go-containerregistry))
    (home-page "https://github.com/tailscale/mkctr")
    (synopsis ": cross platform container builder for go")
    (description "mkctr builds the Tailscale OCI containers.")
    (license license:bsd-3)))

(define-public go-github-com-tailscale-netlink
  (package
    (name "go-github-com-tailscale-netlink")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/netlink")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vhl30p1gx636a088ls4h6a0l8jjyfvz79fr5w0qzdrg4qg9h08h"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/netlink"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-vishvananda-netns))
    (home-page "https://github.com/tailscale/netlink")
    (synopsis "netlink - netlink library for go")
    (description
     "Package netlink provides a simple library for netlink.  Netlink is the interface
a user-space program in linux uses to communicate with the kernel.  It can be
used to add and remove interfaces, set up ip addresses and routes, and confiugre
ipsec.  Netlink communication requires elevated privileges, so in most cases
this code needs to be run as root.  The low level primitives for netlink are
contained in the nl subpackage.  This package attempts to provide a high-level
interface that is loosly modeled on the iproute2 cli.")
    (license license:asl2.0)))

(define-public go-github-com-tailscale-peercred
  (package
    (name "go-github-com-tailscale-peercred")
    (version "0.0.0-20240214030740-b535050b2aa4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/peercred")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18pcplxmbdm5zj4nc0z1pyzbr4v33liix37x63m8xbylyk11srzk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/peercred"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://github.com/tailscale/peercred")
    (synopsis "peercred")
    (description
     "Package peercred maps from a net.Conn to information about the other side of the
connection, using various OS-specific facilities.")
    (license license:bsd-3)))

(define-public go-github-com-tailscale-web-client-prebuilt
  (package
    (name "go-github-com-tailscale-web-client-prebuilt")
    (version "0.0.0-20240226180453-5db17b287bf1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/web-client-prebuilt")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "004c1v9l0bgqq9lhylq8jm24023zp8v79fy1wpxq7dq0pl50ykw8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/web-client-prebuilt"))
    (home-page "https://github.com/tailscale/web-client-prebuilt")
    (synopsis "web-client-prebuilt")
    (description
     "Package prebuilt provides the pre-built artifacts for the web client.")
    (license license:bsd-3)))

(define-public go-github-com-tailscale-wf
  (package
    (name "go-github-com-tailscale-wf")
    (version "0.0.0-20240214030419-6fbb0a674ee6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/wf")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07brxgalcg0kqwmywb9953a50zxmsg32zpx3d1sy7zb5dz020kv3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/wf"))
    (propagated-inputs (list go-honnef-co-go-tools go-golang-org-x-sys
                             go-go4-org-netipx
                             go-github-com-peterbourgon-ff-v3 ; packaged
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/tailscale/wf")
    (synopsis "wf")
    (description
     "This is a package for controlling the Windows Filtering Platform (WFP), also
known as the Windows firewall.")
    (license license:bsd-3)))

(define-public go-github-com-tailscale-wireguard-go
  (package
    (name "go-github-com-tailscale-wireguard-go")
    (version "0.0.0-20241113014420-4e883d38c8d3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/wireguard-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "166r7ikg7b10gc4m0wbrr99jca0nrid2wigqradw0g79w7v1hizp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tailscale/wireguard-go"))
    (propagated-inputs (list go-gvisor-dev-gvisor go-golang-zx2c4-com-wintun
                             go-golang-org-x-sys go-golang-org-x-net
                             go-golang-org-x-crypto))
    (home-page "https://github.com/tailscale/wireguard-go")
    (synopsis "Go Implementation of")
    (description "This is an implementation of @code{WireGuard} in Go.")
    (license license:gpl2)))

(define-public go-github-com-tc-hib-winres
  (package
    (name "go-github-com-tc-hib-winres")
    (version "0.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tc-hib/winres")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sr4x8391jv96xv6b2ak2dlfl7p7fka5njz1p3y26bigw2420pxx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tc-hib/winres"))
    (propagated-inputs (list go-golang-org-x-image go-github-com-nfnt-resize))
    (home-page "https://github.com/tc-hib/winres")
    (synopsis "winres")
    (description
     "Package winres provides functions to create a resource section for Windows
executables.  This is where the application's icon, manifest, and version
information are stored.")
    (license license:bsd-0)))

(define-public go-github-com-tchap-go-patricia-v2
  (package
    (name "go-github-com-tchap-go-patricia-v2")
    (version "2.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tchap/go-patricia")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gnzkiqpksws8nqdwvbldq850d7lzyhn6gkv73whvj1sr4ri7v72"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tchap/go-patricia/v2"
      #:unpack-path "github.com/tchap/go-patricia"))
    (home-page "https://github.com/tchap/go-patricia")
    (synopsis "go-patricia")
    (description
     "@@strong{Documentation}:
@@url{http://godoc.org/github.com/tchap/go-patricia/patricia,@code{GoDoc}}
@@strong{Test Coverage}: @@url{https://coveralls.io/r/tchap/go-patricia,(img (@@
(src https://coveralls.io/repos/tchap/go-patricia/badge.png) (alt Coverage
Status)))}.")
    (license license:expat)))

(define-public go-github-com-tcnksm-go-httpstat
  (package
    (name "go-github-com-tcnksm-go-httpstat")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tcnksm/go-httpstat")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18jn40ra97waxx1mf23pkh6rq46y0nqd7vi3zcx9cwc39zqaf9bc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tcnksm/go-httpstat"))
    (home-page "https://github.com/tcnksm/go-httpstat")
    (synopsis "go-httpstat")
    (description
     "Package httpstat traces HTTP latency infomation (DNSLookup, TCP Connection and
so on) on any golang HTTP request.  It uses `httptrace` package.  Just create
`go-httpstat` powered `context.Context` and give it your `http.Request` (no big
code modification is required).")
    (license license:expat)))

(define-public go-github-com-tdakkota-asciicheck
  (package
    (name "go-github-com-tdakkota-asciicheck")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tdakkota/asciicheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i8xkz23sljvn8wzflwbl2fr2a1dzrzqhzcmmywjb31ac656cql6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tdakkota/asciicheck"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/tdakkota/asciicheck")
    (synopsis "asciicheck")
    (description
     "Simple linter to check that your code does not contain non-ASCII identifiers.")
    (license license:expat)))

(define-public go-github-com-tebeka-snowball
  (package
    (name "go-github-com-tebeka-snowball")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tebeka/snowball")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0r7nimb1j0bsvlfvds50355xlx7g0s9jvqhavgyrk01b7wdgw5bx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tebeka/snowball"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/tebeka/snowball")
    (synopsis "Stemmer for Go")
    (description "Package snowball implements a stemmer.")
    (license license:expat)))

(define-public go-github-com-tecbot-gorocksdb
  (package
    (name "go-github-com-tecbot-gorocksdb")
    (version "0.0.0-20191217155057-f0fad39f321c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tecbot/gorocksdb")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0brf99da00jf91hf7w0qqk6yj61zcya9ci7pm8d60q6zl40i87c5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tecbot/gorocksdb"))
    (home-page "https://github.com/tecbot/gorocksdb")
    (synopsis "gorocksdb, a Go wrapper for RocksDB")
    (description
     "Package gorocksdb provides the ability to create and access @code{RocksDB}
databases.")
    (license license:expat)))

(define-public go-github-com-tencentcloud-tencentcloud-sdk-go-tencentcloud-common
  (package
    (name "go-github-com-tencentcloud-tencentcloud-sdk-go-tencentcloud-common")
    (version "1.0.1071")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/TencentCloud/tencentcloud-sdk-go")
             (commit (go-version->git-ref version
                                          #:subdir "tencentcloud/common"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rl2my5nw4364m1v3qs64v96wnpc5cw313m91jl343q5rm9iycfk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common"
      #:unpack-path "github.com/tencentcloud/tencentcloud-sdk-go"))
    (home-page "https://github.com/tencentcloud/tencentcloud-sdk-go")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-tencentcloud-tencentcloud-sdk-go-tencentcloud-dnspod
  (package
    (name "go-github-com-tencentcloud-tencentcloud-sdk-go-tencentcloud-dnspod")
    (version "1.0.1071")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/TencentCloud/tencentcloud-sdk-go")
             (commit (go-version->git-ref version
                                          #:subdir "tencentcloud/dnspod"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rl2my5nw4364m1v3qs64v96wnpc5cw313m91jl343q5rm9iycfk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod"
      #:unpack-path "github.com/tencentcloud/tencentcloud-sdk-go"))
    (propagated-inputs (list
                        go-github-com-tencentcloud-tencentcloud-sdk-go-tencentcloud-common))
    (home-page "https://github.com/tencentcloud/tencentcloud-sdk-go")
    (synopsis #f)
    (description "Package doc.")
    (license license:asl2.0)))

(define-public go-github-com-tenntenn-modver
  (package
    (name "go-github-com-tenntenn-modver")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tenntenn/modver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1p4402lizz5ny0l49yxa65ryhx09wm8g13lx4pw0nw0s4r06rw3g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tenntenn/modver"))
    (propagated-inputs (list go-github-com-hashicorp-go-version
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/tenntenn/modver")
    (synopsis "modver")
    (description "@@code{modver} is utility for Go Modules.")
    (license license:expat)))

(define-public go-github-com-tenntenn-text-transform
  (package
    (name "go-github-com-tenntenn-text-transform")
    (version "0.0.0-20200319021203-7eef512accb3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tenntenn/text")
             (commit (go-version->git-ref version
                                          #:subdir "transform"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xa9ga9dvw22zbdqw77ry9cc2ax0hcsdsm2xc75g4mlrzcca4gpw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tenntenn/text/transform"
      #:unpack-path "github.com/tenntenn/text"))
    (propagated-inputs (list go-golang-org-x-text))
    (home-page "https://github.com/tenntenn/text")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-termie-go-shutil
  (package
    (name "go-github-com-termie-go-shutil")
    (version "0.0.0-20140729215957-bcacb06fecae")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/termie/go-shutil")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xwdx3qiqxm1bmlzqlf1cgdmrkmmahhdm2piikyhw8cbl3wdih82"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/termie/go-shutil"))
    (home-page "https://github.com/termie/go-shutil")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-testcontainers-testcontainers-go
  (package
    (name "go-github-com-testcontainers-testcontainers-go")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-shirou-gopsutil-v3 ; packaged
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-moby-term ; packaged
                             go-github-com-moby-patternmatcher
                             go-github-com-magiconair-properties
                             go-github-com-google-uuid
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-docker-docker
                             go-github-com-cpuguy83-dockercfg
                             go-github-com-containerd-platforms ; packaged
                             go-github-com-cenkalti-backoff-v4 ;packaged

                             go-dario-cat-mergo))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis "Testcontainers")
    (description
     "is a Go package that makes it simple to create and clean up container-based
dependencies for automated integration/smoke tests.  The clean, easy-to-use API
enables developers to programmatically define containers that should be run as
part of a test and clean up those resources when the test is done.")
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-chroma
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-chroma")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/chroma"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/chroma"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-amikos-tech-chroma-go))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-milvus
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-milvus")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/milvus"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/milvus"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-milvus-io-milvus-sdk-go-v2))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-mongodb
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-mongodb")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/mongodb"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/mongodb"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-go-mongodb-org-mongo-driver
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-mysql
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-mysql")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/mysql"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/mysql"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-go-sql-driver-mysql))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-ollama
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-ollama")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/ollama"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/ollama"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-github-com-tmc-langchaingo
                             go-github-com-stretchr-testify
                             go-github-com-google-uuid
                             go-github-com-docker-docker))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-opensearch
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-opensearch")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/opensearch"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/opensearch"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-docker-go-units
                             go-github-com-docker-docker))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-postgres
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-postgres")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/postgres"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/postgres"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-lib-pq go-github-com-jackc-pgx-v5
                             go-github-com-docker-go-connections ; packaged
                             ))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-qdrant
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-qdrant")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/qdrant"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/qdrant"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-github-com-stretchr-testify
                             go-github-com-qdrant-go-client))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-redis
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-redis")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/redis"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/redis"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-uuid
                             go-github-com-go-redis-redis-v8))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-testcontainers-testcontainers-go-modules-weaviate
  (package
    (name "go-github-com-testcontainers-testcontainers-go-modules-weaviate")
    (version "0.34.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/testcontainers/testcontainers-go")
             (commit (go-version->git-ref version
                                          #:subdir "modules/weaviate"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00zcbf0askqlw9a801ybvrxcabxym7nrdkmq1crdblz9nvlix3pz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path
      "github.com/testcontainers/testcontainers-go/modules/weaviate"
      #:unpack-path "github.com/testcontainers/testcontainers-go"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-github-com-weaviate-weaviate-go-client-v4
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/testcontainers/testcontainers-go")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-tetafro-godot
  (package
    (name "go-github-com-tetafro-godot")
    (version "1.4.20")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tetafro/godot")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18z9vv2ivpr5risx91kghcsci42fwy7qnl5vjj4bwq0vy9qm38hy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tetafro/godot"))
    (propagated-inputs (list go-gopkg-in-yaml-v2))
    (home-page "https://github.com/tetafro/godot")
    (synopsis "godot")
    (description
     "Package godot checks if comments contain a period at the end of the last
sentence if needed.")
    (license license:expat)))

(define-public go-github-com-tgulacsi-go
  (package
    (name "go-github-com-tgulacsi-go")
    (version "0.27.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tgulacsi/go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00ks5slf5lngh3vffdnw748y9lrqr95k7vv2qiz280wfayr21dgl"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/tgulacsi/go"))
    (propagated-inputs (list go-github-com-burntsushi-toml
                             go-github-com-clipperhouse-uax29
                             go-github-com-dgraph-io-badger-v2
                             go-github-com-dgryski-go-linebreak
                             go-github-com-emersion-go-message
                             go-github-com-emersion-go-vcard
                             go-github-com-go-kit-log
                             go-github-com-go-logr-logr
                             go-github-com-go-logr-zerologr
                             go-github-com-godbus-dbus-v5
                             go-github-com-google-go-cmp
                             go-github-com-google-renameio-v2
                             go-github-com-hack-pad-hackpadfs
                             go-github-com-hashicorp-go-retryablehttp
                             go-github-com-jacobsa-fuse ; packaged
                             go-github-com-jung-kurt-gofpdf
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-kylelemons-godebug
                             go-github-com-kylewolfe-soaptrip
                             go-github-com-opentracing-basictracer-go
                             go-github-com-opentracing-opentracing-go
                             go-github-com-outcaste-io-badger-v3
                             go-github-com-pdfcpu-pdfcpu
                             go-github-com-peterbourgon-ff-v3 ; packaged
                             go-github-com-rogpeppe-retry
                             go-github-com-rs-zerolog ; packaged
                             go-github-com-sloonz-go-qprintable
                             go-github-com-sony-gobreaker
                             go-github-com-syndtr-goleveldb
                             go-github-com-tmc-langchaingo
                             go-github-com-uno-soft-zlog
                             go-github-com-valyala-quicktemplate
                             go-golang-org-x-crypto
                             go-golang-org-x-exp
                             go-golang-org-x-net
                             go-golang-org-x-sync
                             go-golang-org-x-sys
                             go-golang-org-x-term
                             go-golang-org-x-text
                             go-golang-org-x-time
                             go-perkeep-org))
    (home-page "https://github.com/tgulacsi/go")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-tgulacsi-picago
  (package
    (name "go-github-com-tgulacsi-picago")
    (version "0.0.0-20190121054412-7cafae2873ea")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tgulacsi/picago")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ahflzff1q9k4ybcr80q1zpgpmlz0ma9bcbmf9klzpfp10ifspwx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tgulacsi/picago"))
    (home-page "https://github.com/tgulacsi/picago")
    (synopsis "WARNING")
    (description
     "Package picago contains functions for downloading albums and photos from Picasa
Web.  Implemented from scratch following
@@url{https://developers.google.com/picasa-web/docs/2.0/developers_guide_protocol?hl=en,https://developers.google.com/picasa-web/docs/2.0/developers_guide_protocol?hl=en}
.")
    (license license:asl2.0)))

(define-public go-github-com-thales-e-security-pool
  (package
    (name "go-github-com-thales-e-security-pool")
    (version "0.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/thales-e-security/pool")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0fx32ka3p594nq7iarlrlslayp9w90xi6zhr8wfh0zcv83c9rja4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/thales-e-security/pool"))
    (home-page "https://github.com/thales-e-security/pool")
    (synopsis #f)
    (description
     "Package pools provides functionality to manage and reuse resources like
connections.")
    (license license:asl2.0)))

(define-public go-github-com-thalesignite-crypto11
  (package
    (name "go-github-com-thalesignite-crypto11")
    (version "1.4.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ThalesGroup/crypto11")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05j55g1rpbigsv91256hcdry22j50aplf0sm5bw7dhh3yzgxq35j"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/ThalesIgnite/crypto11"))
    (propagated-inputs (list go-github-com-thales-e-security-pool
                             go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-miekg-pkcs11))
    (home-page "https://github.com/ThalesIgnite/crypto11")
    (synopsis "Crypto11")
    (description
     "Package crypto11 enables access to cryptographic keys from PKCS#11 using Go
crypto API.")
    (license license:expat)))

(define-public go-github-com-theckman-goconstraint
  (package
    (name "go-github-com-theckman-goconstraint")
    (version "1.11.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/theckman/goconstraint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ngc5zc409smdbl5yj84ynzzcqk3g070bxwhl9jy03bz0ic4sfxc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/theckman/goconstraint"))
    (home-page "https://github.com/theckman/goconstraint")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-therootcompany-xz
  (package
    (name "go-github-com-therootcompany-xz")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/therootcompany/xz")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kzzgifx0n6rln7mv9z8naqf2dxdb3j2lp992g59adj86hpyvs2a"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/therootcompany/xz"))
    (home-page "https://github.com/therootcompany/xz")
    (synopsis "Xz")
    (description "Package xz implements XZ decompression natively in Go.")
    (license license:cc0)))

(define-public go-github-com-theupdateframework-go-tuf-v2
  (package
    (name "go-github-com-theupdateframework-go-tuf-v2")
    (version "2.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/theupdateframework/go-tuf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00d0rxybaiqlfp3hb9axr4z7fiq39mj3n83yfms7xh5igyhwf635"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/theupdateframework/go-tuf/v2"
      #:unpack-path "github.com/theupdateframework/go-tuf"))
    (propagated-inputs (list go-github-com-stretchr-testify
                        go-github-com-spf13-cobra
                        go-github-com-sigstore-sigstore
                        go-github-com-secure-systems-lab-go-securesystemslib
                        go-github-com-go-logr-stdr
                        go-github-com-cenkalti-backoff-v5))
    (home-page "https://github.com/theupdateframework/go-tuf")
    (synopsis "go-tuf/v2 - Framework for Securing Software Update Systems")
    (description
     "@@url{https://theupdateframework.io/,The Update Framework (TUF)} is a framework
for secure content delivery and updates.  It protects against various types of
supply chain attacks and provides resilience to compromise.")
    (license license:asl2.0)))

(define-public go-github-com-theupdateframework-go-tuf
  (package
    (name "go-github-com-theupdateframework-go-tuf")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/theupdateframework/go-tuf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00yc5rj6x0lxv0011ynl7b82yz9lrqix5rgwi514km4h4m9rsl99"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/theupdateframework/go-tuf"))
    (propagated-inputs (list go-gopkg-in-check-v1
                        go-golang-org-x-term
                        go-golang-org-x-crypto
                        go-github-com-syndtr-goleveldb
                        go-github-com-stretchr-testify
                        go-github-com-secure-systems-lab-go-securesystemslib
                        go-github-com-google-gofuzz
                        go-github-com-flynn-go-docopt
                        go-github-com-dustin-go-humanize))
    (home-page "https://github.com/theupdateframework/go-tuf")
    (synopsis "go-tuf")
    (description
     "This is a Go implementation of @@url{http://theupdateframework.com/,The Update
Framework (TUF)}, a framework for securing software update systems.")
    (license license:bsd-3)))

(define-public go-github-com-theupdateframework-notary
  (package
    (name "go-github-com-theupdateframework-notary")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/notaryproject/notary")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mj5qx359xzj16s4fdlzsnn3irrqsshzp8jrvac3b04l1h5zsdwd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/theupdateframework/notary"))
    (propagated-inputs (list go-gopkg-in-rethinkdb-rethinkdb-go-v6
                             go-google-golang-org-grpc
                             go-golang-org-x-term
                             go-golang-org-x-sys
                             go-golang-org-x-net
                             go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-spf13-viper
                             go-github-com-spf13-cobra
                             go-github-com-sirupsen-logrus
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-miekg-pkcs11 ; packaged
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-lib-pq
                             go-github-com-jinzhu-gorm
                             go-github-com-gorilla-mux
                             go-github-com-golang-protobuf
                             go-github-com-go-sql-driver-mysql
                             go-github-com-dvsekhvalnov-jose2go
                             go-github-com-docker-go-connections ; packaged
                             go-github-com-docker-go
                             go-github-com-docker-distribution
                             go-github-com-cloudflare-cfssl
                             go-github-com-bugsnag-bugsnag-go
                             go-github-com-shopify-logrus-bugsnag))
    (home-page "https://github.com/theupdateframework/notary")
    (synopsis "Notice")
    (description
     "The Notary project has officially been accepted in to the Cloud Native Computing
Foundation (CNCF).  It has moved to
@@url{https://github.com/theupdateframework/notary,https://github.com/theupdateframework/notary}.
 Any downstream consumers should update their Go imports to use this new
location, which will be the canonical location going forward.")
    (license license:asl2.0)))

(define-public go-github-com-throttled-throttled
  (package
    (name "go-github-com-throttled-throttled")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/throttled/throttled")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00rllq53h83cvxd9r7dd65xa1k4kn116jk2yf2amxh53x080qggf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/throttled/throttled"))
    (home-page "https://github.com/throttled/throttled")
    (synopsis "Throttled")
    (description
     "Package throttled implements rate limiting access to resources such as HTTP
endpoints.")
    (license license:bsd-3)))

(define-public go-github-com-tidwall-transform
  (package
    (name "go-github-com-tidwall-transform")
    (version "0.0.0-20201103190739-32f242e2dbde")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tidwall/transform")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m6cgcivhjvdmvbfjpjk47dgp0vfk0x79xay247fkykb2d7wpxix"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tidwall/transform"))
    (home-page "https://github.com/tidwall/transform")
    (synopsis "Transform")
    (description
     "Package transform provides a convenient utility for transforming one data format
to another.")
    (license license:isc)))

(define-public go-github-com-tilt-dev-fsnotify
  (package
    (name "go-github-com-tilt-dev-fsnotify")
    (version "1.4.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tilt-dev/fsnotify")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07va9crci0ijlivbb7q57d2rz9h27zgn2fsm60spjsqpdbvyrx4g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tilt-dev/fsnotify"))
    (home-page "https://github.com/tilt-dev/fsnotify")
    (synopsis "File system notifications for Go")
    (description
     "Package fsnotify provides a platform-independent interface for file system
notifications.")
    (license license:bsd-3)))

(define-public go-github-com-timakin-bodyclose
  (package
    (name "go-github-com-timakin-bodyclose")
    (version "0.0.0-20241222091800-1db5c5ca4d67")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/timakin/bodyclose")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0b5kygys5b5v17mnzwy3yxlq7v36fscmr3g8na27303sjnzdd5mk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/timakin/bodyclose"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-analysisutil))
    (home-page "https://github.com/timakin/bodyclose")
    (synopsis "bodyclose")
    (description
     "@@code{bodyclose} is a static analysis tool which checks whether
@@code{res.Body} is correctly closed.")
    (license license:expat)))

(define-public go-github-com-timonwong-loggercheck
  (package
    (name "go-github-com-timonwong-loggercheck")
    (version "0.10.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/timonwong/loggercheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nndy3j4qd4lp8iwbliv3wn14vlrw56smlhpppaprgf6p2grksmv"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/timonwong/loggercheck"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/timonwong/loggercheck")
    (synopsis "loggercheck")
    (description
     "This package provides a linter checks the odd number of key and value pairs for
common logger libraries:.")
    (license license:expat)))

(define-public go-github-com-timshannon-bolthold
  (package
    (name "go-github-com-timshannon-bolthold")
    (version "0.0.0-20240314194003-30aac6950928")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/timshannon/bolthold")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "107r4nwhvpdp0n9b5fls1lw8z8qsiajiykkpjs7947nrbc07ij1j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/timshannon/bolthold"))
    (propagated-inputs (list go-go-etcd-io-bbolt))
    (home-page "https://github.com/timshannon/bolthold")
    (synopsis "BoltHold")
    (description
     "Package bolthold is an indexing and querying layer on top of a Bolt DB. The goal
is to allow easy, persistent storage and retrieval of Go types. @code{BoltDB} is
an embedded key-value store, and bolthold servers a similar use case however
with a higher level interface for common uses of @code{BoltDB}.")
    (license license:expat)))

(define-public go-github-com-tink-crypto-tink-go-v2
  (package
    (name "go-github-com-tink-crypto-tink-go-v2")
    (version "2.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tink-crypto/tink-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vr01zixdqhc5yvknmg9sz1pip4d7hvv7ri37s4s11igrjv59h67"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/tink-crypto/tink-go/v2"
      #:unpack-path "github.com/tink-crypto/tink-go"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-golang-org-x-crypto
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/tink-crypto/tink-go")
    (synopsis "Tink Go")
    (description
     "Using crypto in your application
@@url{https://www.usenix.org/sites/default/files/conference/protected-files/hotsec15_slides_green.pdf,shouldn't
have to} feel like juggling chainsaws in the dark.  Tink is a crypto library
written by a group of cryptographers and security engineers at Google.  It was
born out of our extensive experience working with Google's product teams,
@@url{https://github.com/google/wycheproof,fixing weaknesses in
implementations}, and providing simple APIs that can be used safely without
needing a crypto background.")
    (license license:asl2.0)))

(define-public go-github-com-tink-crypto-tink-go-awskms-v2
  (package
    (name "go-github-com-tink-crypto-tink-go-awskms-v2")
    (version "2.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tink-crypto/tink-go-awskms")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0crsky461yyvl04g0gbsz9gh2zmlmgd5li5qk4k7zvmj103gmwlr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tink-crypto/tink-go-awskms/v2"
      #:unpack-path "github.com/tink-crypto/tink-go-awskms"))
    (propagated-inputs (list go-github-com-tink-crypto-tink-go-v2
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/tink-crypto/tink-go-awskms")
    (synopsis "Tink Go AWS KMS extension")
    (description
     "This is an extension to the @@url{https://github.com/tink-crypto/tink-go,Tink
Go} library that provides support for AWS KMS.")
    (license license:asl2.0)))

(define-public go-github-com-tink-crypto-tink-go-gcpkms-v2
  (package
    (name "go-github-com-tink-crypto-tink-go-gcpkms-v2")
    (version "2.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tink-crypto/tink-go-gcpkms")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hf31f26lmpg81k64flsvcx83ngkhazkkf792i5qkq14q4ndsdhw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tink-crypto/tink-go-gcpkms/v2"
      #:unpack-path "github.com/tink-crypto/tink-go-gcpkms"))
    (propagated-inputs (list go-google-golang-org-api
                             go-github-com-tink-crypto-tink-go-v2))
    (home-page "https://github.com/tink-crypto/tink-go-gcpkms")
    (synopsis "Tink Go Google Cloud KMS extension")
    (description
     "This is an extension to the @@url{https://github.com/tink-crypto/tink-go,Tink
Go} library that provides support for Google Cloud KMS.")
    (license license:asl2.0)))

(define-public go-github-com-tink-crypto-tink-go-hcvault-v2
  (package
    (name "go-github-com-tink-crypto-tink-go-hcvault-v2")
    (version "2.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tink-crypto/tink-go-hcvault")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z7yhna7mprk1jm9qkpxkb60k40mb92hmj3k8iqlmxax78dpxa13"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/tink-crypto/tink-go-hcvault/v2"
      #:unpack-path "github.com/tink-crypto/tink-go-hcvault"))
    (propagated-inputs (list go-github-com-tink-crypto-tink-go-v2
                             go-github-com-hashicorp-vault-api))
    (home-page "https://github.com/tink-crypto/tink-go-hcvault")
    (synopsis "Tink Go HashiCorp Vault extension")
    (description
     "This is an extension to the @@url{https://github.com/tink-crypto/tink-go,Tink
Go} library that provides support for @code{HashiCorp} Vault.")
    (license license:asl2.0)))

(define-public go-github-com-titanous-rocacheck
  (package
    (name "go-github-com-titanous-rocacheck")
    (version "0.0.0-20171023193734-afe73141d399")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/titanous/rocacheck")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xb0hii3dffi88hczd81jb5p1hi7yk1davlsfz6q2xiza03x95dg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/titanous/rocacheck"))
    (home-page "https://github.com/titanous/rocacheck")
    (synopsis "rocacheck")
    (description
     "Package rocacheck checks if a key was generated by broken Infineon code and is
vulnerable to factorization via the Return of Coppersmith's Attack (ROCA) /
CVE-2017-15361.")
    (license license:expat)))

(define-public go-github-com-tmc-dot
  (package
    (name "go-github-com-tmc-dot")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tmc/dot")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dl1vjv6j46b8mmwq13h3vq3ixp2hydypsqf9x404q58451v8nnz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tmc/dot"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://github.com/tmc/dot")
    (synopsis "dot")
    (description
     "dot is a Go package that provides support for working with the DOT language,
which is used for describing graphs in Graphviz.")
    (license license:expat)))

(define-public go-github-com-tmc-grpc-websocket-proxy
  (package
    (name "go-github-com-tmc-grpc-websocket-proxy")
    (version "0.0.0-20220101234140-673ab2c3ae75")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tmc/grpc-websocket-proxy")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0299q3njcs6smrac6734xfjslpvwvsc8jyh5fq5849cdlp5a8290"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tmc/grpc-websocket-proxy"))
    (propagated-inputs (list go-golang-org-x-net go-github-com-sirupsen-logrus
                             go-github-com-gorilla-websocket))
    (home-page "https://github.com/tmc/grpc-websocket-proxy")
    (synopsis "grpc-websocket-proxy")
    (description
     "Wrap your grpc-gateway mux with this helper to expose streaming endpoints over
websockets.")
    (license license:expat)))

(define-public go-github-com-tmc-langchaingo
  (package
    (name "go-github-com-tmc-langchaingo")
    (version "0.1.13")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tmc/langchaingo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1is2ck43dmnw430n356ag2yipcdlhbl7g70yrd517bbl71kzaawq"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/tmc/langchaingo"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-api
                        go-golang-org-x-tools
                        go-golang-org-x-exp
                        go-go-starlark-net ; packaged
                        go-go-mongodb-org-mongo-driver-v2
                        go-go-mongodb-org-mongo-driver
                        go-gitlab-com-golang-commonmark-markdown
                        go-github-com-weaviate-weaviate-go-client-v4
                        go-github-com-weaviate-weaviate
                        go-github-com-redis-rueidis
                        go-github-com-pkoukk-tiktoken-go
                        go-github-com-pinecone-io-go-pinecone
                        go-github-com-pgvector-pgvector-go
                        go-github-com-opensearch-project-opensearch-go
                        go-github-com-nlpodyssey-cybertron
                        go-github-com-nikolalohinski-gonja
                        go-github-com-milvus-io-milvus-sdk-go-v2
                        go-github-com-microcosm-cc-bluemonday
                        go-github-com-metaphorsystems-metaphor-go
                        go-github-com-mattn-go-sqlite3 ; packaged
                        go-github-com-ledongthuc-pdf
                        go-github-com-jackc-pgx-v5
                        go-github-com-google-go-cmp
                        go-github-com-google-generative-ai-go
                        go-github-com-gocolly-colly
                        go-github-com-go-sql-driver-mysql
                        go-github-com-go-openapi-strfmt
                        go-github-com-getzep-zep-go
                        go-github-com-gage-technologies-mistral-go
                        go-github-com-fatih-color
                        go-github-com-cohere-ai-tokenizer
                        go-github-com-aws-aws-sdk-go-v2-service-bedrockruntime
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-amikos-tech-chroma-go
                        go-github-com-puerkitobio-goquery
                        go-github-com-masterminds-sprig-v3
                        go-github-com-ibm-watsonx-go
                        go-github-com-code-hex-go-generics-cache
                        go-github-com-assemblyai-assemblyai-go-sdk
                        go-cloud-google-com-go-vertexai
                        go-cloud-google-com-go-aiplatform
                        go-github-com-testcontainers-testcontainers-go-modules-weaviate
                        go-github-com-testcontainers-testcontainers-go-modules-redis
                        go-github-com-testcontainers-testcontainers-go-modules-qdrant
                        go-github-com-testcontainers-testcontainers-go-modules-postgres
                        go-github-com-testcontainers-testcontainers-go-modules-opensearch
                        go-github-com-testcontainers-testcontainers-go-modules-mysql
                        go-github-com-testcontainers-testcontainers-go-modules-mongodb
                        go-github-com-testcontainers-testcontainers-go-modules-milvus
                        go-github-com-testcontainers-testcontainers-go-modules-chroma
                        go-github-com-testcontainers-testcontainers-go
                        go-github-com-stretchr-testify
                        go-github-com-google-uuid))
    (home-page "https://github.com/tmc/langchaingo")
    (synopsis "🦜️🔗 LangChain Go")
    (description
     "Package langchaingo implements the Go language version of the langchain project.")
    (license license:expat)))

(define-public go-github-com-tmthrgd-go-hex
  (package
    (name "go-github-com-tmthrgd-go-hex")
    (version "0.0.0-20190904060850-447a3041c3bc")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tmthrgd/go-hex")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04dwdl0xfd17k3inzxyz8rwkcmhhdidr6lhmgpxcmg40jszz5w8v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tmthrgd/go-hex"))
    (home-page "https://github.com/tmthrgd/go-hex")
    (synopsis "go-hex")
    (description
     "Package hex is an efficient hexadecimal implementation for Golang.")
    (license license:expat))) ; check-license

(define-public go-github-com-tobischo-argon2
  (package
    (name "go-github-com-tobischo-argon2")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tobischo/argon2")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wn5zph74r3cp4jz66xpb0p7ywg62ibf8f70cjqp57cv3xg0b6pn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tobischo/argon2"))
    (home-page "https://github.com/tobischo/argon2")
    (synopsis "argon2")
    (description
     "Package argon2 implements the key derivation function Argon2.  Argon2 was
selected as the winner of the Password Hashing Competition and can be used to
derive cryptographic keys from passwords.")
    (license license:bsd-3)))

(define-public go-github-com-tobischo-gokeepasslib-v3
  (package
    (name "go-github-com-tobischo-gokeepasslib-v3")
    (version "3.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tobischo/gokeepasslib")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06bfx5nv5picymh33asdhlk0hbbpas1mbphmzw78fz57xxhibj28"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/tobischo/gokeepasslib/v3"
      #:unpack-path "github.com/tobischo/gokeepasslib"))
    (propagated-inputs (list go-golang-org-x-exp go-golang-org-x-crypto
                             go-github-com-tobischo-argon2
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/tobischo/gokeepasslib")
    (synopsis "gokeepasslib")
    (description
     "gokeepasslib is a library which allows reading Keepass 2 files (kdbx).")
    (license license:expat)))

(define-public go-github-com-tomarrell-wrapcheck-v2
  (package
    (name "go-github-com-tomarrell-wrapcheck-v2")
    (version "2.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tomarrell/wrapcheck")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ns3m16ffa5bm68iyz7nd4a1v1g4v412iwbbxw8fvz36knqffqqr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tomarrell/wrapcheck/v2"
      #:unpack-path "github.com/tomarrell/wrapcheck"))
    (propagated-inputs (list go-gopkg-in-yaml-v3 go-golang-org-x-tools
                             go-github-com-stretchr-testify
                             go-github-com-spf13-viper
                             go-github-com-gobwas-glob))
    (home-page "https://github.com/tomarrell/wrapcheck")
    (synopsis "Wrapcheck")
    (description
     "This package provides a simple Go linter to check that errors from external
packages are wrapped during return to help identify the error source during
debugging.")
    (license license:expat)))

(define-public go-github-com-tomasen-realip
  (package
    (name "go-github-com-tomasen-realip")
    (version "0.0.0-20180522021738-f0c99a92ddce")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tomasen/realip")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1iz2cwks2ywwvvnbfmw3pfyz4ql7z0f8s9sdj6pzirpp75zar9nn"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tomasen/realip"))
    (home-page "https://github.com/tomasen/realip")
    (synopsis "RealIP")
    (description
     "Go package that can be used to get client's real public IP, which usually useful
for logging HTTP server.")
    (license license:expat)))

(define-public go-github-com-tommy-muehle-go-mnd-v2
  (package
    (name "go-github-com-tommy-muehle-go-mnd-v2")
    (version "2.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tommy-muehle/go-mnd")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j45zxmh1jza54sif7jx2qdw503z2nxvkjccsh3wd8sif0v4jqfc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tommy-muehle/go-mnd/v2"
      #:unpack-path "github.com/tommy-muehle/go-mnd"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/tommy-muehle/go-mnd")
    (synopsis "go-mnd - Magic number detector for Golang")
    (description
     "This package provides a vet analyzer to detect magic numbers.")
    (license license:expat)))

(define-public go-github-com-tonistiigi-dchapes-mode
  (package
    (name "go-github-com-tonistiigi-dchapes-mode")
    (version "0.0.0-20241001053921-ca0759fec205")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tonistiigi/dchapes-mode")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wh4ly56ncjnp1vss2mp9dz7pypwj63hyvzgsxyl4i32j8qd82wl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tonistiigi/dchapes-mode"))
    (home-page "https://github.com/tonistiigi/dchapes-mode")
    (synopsis "Mode")
    (description
     "Package mode provides a native Go implementation of BSD's setmode and getmode
which can be used to modify the mode bits of an os.@code{FileMode} value based
on a symbolic value as described by the Unix chmod command.")
    (license license:bsd-2)))

(define-public go-github-com-tonistiigi-fsutil
  (package
    (name "go-github-com-tonistiigi-fsutil")
    (version "0.0.0-20241212180509-bec5f0e12553")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tonistiigi/fsutil")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rlsrlb3bw4bjhwqjs3z0zn9k1ks78gayh72fbifmpz5qq9j383c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tonistiigi/fsutil"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-github-com-tonistiigi-dchapes-mode
                             go-github-com-stretchr-testify
                             go-github-com-planetscale-vtprotobuf
                             go-github-com-pkg-errors
                             go-github-com-opencontainers-go-digest
                             go-github-com-moby-patternmatcher
                             go-github-com-containerd-continuity ; packaged
                             go-github-com-microsoft-go-winio))
    (home-page "https://github.com/tonistiigi/fsutil")
    (synopsis #f)
    (description "Incremental file directory sync tools in golang.")
    (license license:expat)))

(define-public go-github-com-tonistiigi-go-actions-cache
  (package
    (name "go-github-com-tonistiigi-go-actions-cache")
    (version "0.0.0-20241210095730-017636a73805")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tonistiigi/go-actions-cache")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ccgs5p88nfcyz5lnzcslgylzmbhsprwx8912wrpq7qawydr31cp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/tonistiigi/go-actions-cache"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-golang-jwt-jwt-v5 ;packaged

                             go-github-com-dimchansky-utfbom))
    (home-page "https://github.com/tonistiigi/go-actions-cache")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-tonistiigi-go-archvariant
  (package
    (name "go-github-com-tonistiigi-go-archvariant")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tonistiigi/go-archvariant")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kmchhx374ahd9a7p0qx3gq9cffxfkkgq503q95ygya986xkgnjz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tonistiigi/go-archvariant"))
    (home-page "https://github.com/tonistiigi/go-archvariant")
    (synopsis "go-archvariant")
    (description
     "Go package for determining the maximum compatibility version of the current
system.  The main use case is to use this value in container
@@url{https://github.com/containerd/containerd/raw/v1.5.9/platforms/platforms.go#L55,platform
definitions}.")
    (license license:expat)))

(define-public go-github-com-tonistiigi-go-csvvalue
  (package
    (name "go-github-com-tonistiigi-go-csvvalue")
    (version "0.0.0-20240814133006-030d3b2625d0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tonistiigi/go-csvvalue")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "128i7fmxyf08q80b1i6hgb3sbx2nsa56p2kr6vcdyijazhqnrn0p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tonistiigi/go-csvvalue"))
    (home-page "https://github.com/tonistiigi/go-csvvalue")
    (synopsis "go-csvvalue")
    (description
     "Package csvvalue provides an efficient parser for a single line CSV value.  It
is more efficient than the standard library csv package for parsing many small
values.  For multi-line CSV parsing, the standard library is recommended.")
    (license license:expat)))

(define-public go-github-com-tonistiigi-units
  (package
    (name "go-github-com-tonistiigi-units")
    (version "0.0.0-20180711220420-6950e57a87ea")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tonistiigi/units")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1w8rgmlg6pim4vchg4qfpdf6niqmsp0a4f6bafgwd1gnwxi71zkf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tonistiigi/units"))
    (home-page "https://github.com/tonistiigi/units")
    (synopsis "Simple byte size formatting.")
    (description "Simple byte size formatting.")
    (license license:expat)))

(define-public go-github-com-tonistiigi-vt100
  (package
    (name "go-github-com-tonistiigi-vt100")
    (version "0.0.0-20240514184818-90bafcd6abab")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tonistiigi/vt100")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vjk3yam610kc600h3hd3glsygr3m863765m9q7c0gsaj0vd38y0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tonistiigi/vt100"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/tonistiigi/vt100")
    (synopsis #f)
    (description
     "package vt100 implements a quick-and-dirty programmable ANSI terminal emulator.")
    (license license:expat)))

(define-public go-github-com-toqueteos-webbrowser
  (package
    (name "go-github-com-toqueteos-webbrowser")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/toqueteos/webbrowser")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j2hz0mq06v4vxksssg20yb34wwh24l55v2x7nplksfri1rmwbn0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/toqueteos/webbrowser"))
    (home-page "https://github.com/toqueteos/webbrowser")
    (synopsis "webbrowser")
    (description
     "Package webbrowser provides a simple API for opening web pages on your default
browser.")
    (license license:expat)))

(define-public go-github-com-transip-gotransip-v6
  (package
    (name "go-github-com-transip-gotransip-v6")
    (version "6.26.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/transip/gotransip")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "116a9ai49zln3y3cwdgrzbsdjvq14azy57dikdvjp0076123w1cv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/transip/gotransip/v6"
      #:unpack-path "github.com/transip/gotransip"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/transip/gotransip")
    (synopsis "gotransip - TransIP API client for Go")
    (description
     "Package gotransip implements a client for the @code{TransIP} Rest API. This
package is a complete implementation for communicating with the @code{TransIP}
@code{RestAPI}.  It covers resource calls available in the @code{TransIP}
@code{RestAPI} Docs and it allows your project(s) to connect to the
@code{TransIP} @code{RestAPI} easily.  Using this package you can order, update
and remove products from your @code{TransIP} account.")
    (license license:expat)))

(define-public go-github-com-transparency-dev-merkle
  (package
    (name "go-github-com-transparency-dev-merkle")
    (version "0.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/transparency-dev/merkle")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03yzjzc8rmvxy8vy6jwgjyir8lplw19xikl0bvbiy5g3gy2wi7qy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/transparency-dev/merkle"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://github.com/transparency-dev/merkle")
    (synopsis "Merkle")
    (description
     "Package merkle provides Merkle tree interfaces and implementation.")
    (license license:asl2.0)))

(define-public go-github-com-tstranex-u2f
  (package
    (name "go-github-com-tstranex-u2f")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tstranex/u2f")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xgyxmi8amlx35f23ldlkn900cyic77r525wpk5s58cpyw3hn5cd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tstranex/u2f"))
    (home-page "https://github.com/tstranex/u2f")
    (synopsis "Go FIDO U2F Library")
    (description
     "Package u2f implements the server-side parts of the FIDO Universal 2nd Factor
(U2F) specification.")
    (license license:expat)))

(define-public go-github-com-twpayne-chezmoi
  (package
    (name "go-github-com-twpayne-chezmoi")
    (version "2.60.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/twpayne/chezmoi")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1whr8jyyrrmn6x02v18n55gbgprz92qnqlqlin1ap2ppa3ch8qxy"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "github.com/twpayne/chezmoi/v2"
      #:unpack-path "github.com/twpayne/chezmoi"))
    (propagated-inputs
     (list go-filippo-io-age
           go-github-com-1password-onepassword-sdk-go
           go-github-com-alecthomas-assert-v2
           go-github-com-aws-aws-sdk-go-v2
           go-github-com-aws-aws-sdk-go-v2-config
           go-github-com-aws-aws-sdk-go-v2-service-secretsmanager
           go-github-com-azure-azure-sdk-for-go-sdk-azidentity
           go-github-com-azure-azure-sdk-for-go-sdk-security-keyvault-azsecrets
           go-github-com-bmatcuk-doublestar-v4
           go-github-com-bradenhilton-mozillainstallhash
           go-github-com-charmbracelet-bubbles
           go-github-com-charmbracelet-bubbletea
           go-github-com-charmbracelet-glamour
           go-github-com-charmbracelet-lipgloss
           go-github-com-coreos-go-semver
           go-github-com-fsnotify-fsnotify
           go-github-com-go-git-go-git-v5
           go-github-com-goccy-go-yaml
           go-github-com-google-go-github-v69
           go-github-com-google-renameio-v2
           go-github-com-gopasspw-gopass
           go-github-com-gregjones-httpcache
           go-github-com-itchyny-gojq
           go-github-com-klauspost-compress
           go-github-com-masterminds-sprig-v3
           go-github-com-mattn-go-runewidth
           go-github-com-mitchellh-copystructure
           go-github-com-mitchellh-mapstructure
           go-github-com-muesli-combinator
           go-github-com-muesli-termenv
           go-github-com-pelletier-go-toml-v2
           go-github-com-rogpeppe-go-internal
           go-github-com-sergi-go-diff ; packaged
           go-github-com-shopify-ejson
           go-github-com-spf13-cobra
           go-github-com-spf13-pflag
           go-github-com-tailscale-hujson
           go-github-com-tobischo-gokeepasslib-v3
           go-github-com-twpayne-go-expect
           go-github-com-twpayne-go-pinentry-v4
           go-github-com-twpayne-go-shell
           go-github-com-twpayne-go-vfs-v5
           go-github-com-twpayne-go-xdg-v6
           go-github-com-ulikunitz-xz
           go-github-com-zalando-go-keyring
           go-github-com-zricethezav-gitleaks-v8
           go-go-etcd-io-bbolt
           go-go-uber-org-automaxprocs
           go-golang-org-x-crypto
           go-golang-org-x-crypto-x509roots-fallback
           go-golang-org-x-oauth2
           go-golang-org-x-sync
           go-golang-org-x-sys
           go-golang-org-x-term
           go-gopkg-in-ini-v1
           go-howett-net-plist
           go-mvdan-cc-sh-v3 ; packaged
           ))
    (home-page "https://github.com/twpayne/chezmoi")
    (synopsis "chezmoi")
    (description
     "Manage your dotfiles across multiple diverse machines, securely.")
    (license license:expat)))

(define-public go-github-com-twpayne-go-expect
  (package
    (name "go-github-com-twpayne-go-expect")
    (version "0.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/twpayne/go-expect")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1313lxm7c1wz6fwa81lxydk0l7k1ic3kbyxlyj8n9yqjkx6mck8q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/twpayne/go-expect"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-muesli-cancelreader
                             go-github-com-creack-pty-v2))
    (home-page "https://github.com/twpayne/go-expect")
    (synopsis "go-expect")
    (description
     "Package expect provides an expect-like interface to automate control of
applications.  It is unlike expect in that it does not spawn or manage process
lifecycle.  This package only focuses on expecting output and sending input
through it's psuedoterminal.")
    (license license:asl2.0)))

(define-public go-github-com-twpayne-go-pinentry-v4
  (package
    (name "go-github-com-twpayne-go-pinentry-v4")
    (version "4.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/twpayne/go-pinentry")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z9h2lg5xd3g6dd9avcfx0nnwdybr2yibmsw7akl6pz0cls3sf63"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/twpayne/go-pinentry/v4"
      #:unpack-path "github.com/twpayne/go-pinentry"))
    (propagated-inputs (list go-github-com-golang-mock ; packaged
                             go-github-com-alecthomas-assert-v2))
    (home-page "https://github.com/twpayne/go-pinentry")
    (synopsis "go-pinentry")
    (description
     "Package pinentry provides a client to @code{GnuPG's} pinentry.")
    (license license:expat)))

(define-public go-github-com-tylerb-graceful
  (package
    (name "go-github-com-tylerb-graceful")
    (version "1.2.15")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tylerstillwater/graceful")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qspbrzr3h6c89v75c99avn7iizkfnjh901wp650vyy0j3p6ydnd"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/tylerb/graceful"))
    (home-page "https://github.com/tylerb/graceful")
    (synopsis "graceful")
    (description
     "Graceful is a Go 1.3+ package enabling graceful shutdown of http.Handler
servers.")
    (license license:expat)))

(define-public go-github-com-u-root-gobusybox-src
  (package
    (name "go-github-com-u-root-gobusybox-src")
    (version "0.0.0-20241227071010-1318b4af946d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/u-root/gobusybox")
             (commit (go-version->git-ref version
                                          #:subdir "src"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xv79pr67pchvv88cwi01vk61qjzx8baszyqklrpkm9gfv8psj1i"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/u-root/gobusybox/src"
      #:unpack-path "github.com/u-root/gobusybox"))
    (propagated-inputs (list go-mvdan-cc-sh-v3 ; packaged
                             go-golang-org-x-tools
                             go-golang-org-x-exp
                             go-github-com-u-root-uio ; packaed
                             go-github-com-hashicorp-go-version
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://github.com/u-root/gobusybox")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-github-com-u-root-iscsinl
  (package
    (name "go-github-com-u-root-iscsinl")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/u-root/iscsinl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17gpj08kzb6p980psx7f1zswdm0jl8andgsb7zhllrhpadsr9dy0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/u-root/iscsinl"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-vishvananda-netlink
                             go-github-com-u-root-u-root
                             go-github-com-hugelgupf-p9
                             go-github-com-gostor-gotgt))
    (home-page "https://github.com/u-root/iscsinl")
    (synopsis "iscsinl")
    (description
     "Package iscsinl acts as an initiator for bootstrapping an iscsi connection
Partial implementation of RFC3720 login and NETLINK_ISCSI, just enough to get a
connection going.")
    (license license:bsd-3)))

(define-public go-github-com-u-root-mkuimage
  (package
    (name "go-github-com-u-root-mkuimage")
    (version "0.0.0-20241128172401-dc7520ecaa89")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/u-root/mkuimage")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lfgjxal8p61igws4sr7mvzf1m0cd8q30dz0777859pf2d764fqf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/u-root/mkuimage"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-github-com-u-root-uio ; packaed
                             go-github-com-u-root-u-root
                             go-github-com-u-root-gobusybox-src
                             go-github-com-hugelgupf-go-shlex
                             go-github-com-google-go-cmp
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://github.com/u-root/mkuimage")
    (synopsis "uimage")
    (description
     "uimage builds initramfs images composed of arbitrary Go commands and files.")
    (license license:bsd-3)))

(define-public go-github-com-u-root-u-root
  (package
    (name "go-github-com-u-root-u-root")
    (version "0.14.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/u-root/u-root")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02iy126828psafg7i23g3p29786hkzwh7k5gf9acgr7qfyj3fc7k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/u-root/u-root"))
    (propagated-inputs (list go-src-elv-sh
                             go-pack-ag-tftp
                             go-mvdan-cc-sh-v3                  ; packaged
                             go-gopkg-in-yaml-v2 ; packaged
                             go-golang-org-x-tools              ; packaged
                             go-golang-org-x-text               ; packaged
                             go-golang-org-x-term               ; packaged
                             go-golang-org-x-sys                ; packaged
                             go-golang-org-x-net                ; packaged
                             go-golang-org-x-exp                ; packaged
                             go-golang-org-x-crypto             ; packaged
                             go-github-com-vtolstov-go-ioctl
                             go-github-com-vishvananda-netlink
                             go-github-com-ulikunitz-xz
                             go-github-com-u-root-uio           ; packaed
                             go-github-com-u-root-mkuimage
                             go-github-com-u-root-iscsinl
                             go-github-com-u-root-gobusybox-src
                             go-github-com-spf13-pflag
                             go-github-com-safchain-ethtool
                             go-github-com-rekby-gpt
                             go-github-com-rck-unit
                             go-github-com-pierrec-lz4-v4
                             go-github-com-pborman-getopt-v2
                             go-github-com-orangecms-go-framebuffer
                             go-github-com-nanmu42-limitio
                             go-github-com-knz-bubbline
                             go-github-com-klauspost-pgzip
                             go-github-com-klauspost-compress   ; packaged
                             go-github-com-kevinburke-ssh-config
                             go-github-com-intel-go-cpuid
                             go-github-com-insomniacslk-dhcp    ; packaged
                             go-github-com-hugelgupf-vmtest
                             go-github-com-google-uuid          ; packaged
                             go-github-com-google-go-tpm        ; packaged
                             go-github-com-google-go-cmp        ; packaged
                             go-github-com-gojuno-minimock-v3
                             go-github-com-gliderlabs-ssh
                             go-github-com-dustin-go-humanize   ; packaged
                             go-github-com-davecgh-go-spew
                             go-github-com-creack-pty
                             go-github-com-cenkalti-backoff-v4  ;packaged
                             go-github-com-bobuhiro11-gokvm
                             go-github-com-beevik-ntp
                             go-github-com-protonmail-go-crypto ; packaged
                             go-github-com-netflix-go-expect))
    (home-page "https://github.com/u-root/u-root")
    (synopsis "u-root")
    (description
     "Command u-root builds CPIO archives with the given files and Go commands.")
    (license license:bsd-3)))

(define-public go-github-com-uber-jaeger-client-go
  (package
    (name "go-github-com-uber-jaeger-client-go")
    (version "2.30.0+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jaegertracing/jaeger-client-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0nm4mi23bvk84418gkpl2wmijij4bnb082f5zv4ivrvcrp9lhkx3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/uber/jaeger-client-go"))
    (home-page "https://github.com/uber/jaeger-client-go")
    (synopsis "🛑 This library is being deprecated!")
    (description "Package jaeger implements an @code{OpenTracing}
(@@url{http://opentracing.io,http://opentracing.io}) Tracer.")
    (license license:asl2.0)))
(define-public go-github-com-uber-jaeger-lib
  (package
    (name "go-github-com-uber-jaeger-lib")
    (version "2.4.1+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/jaegertracing/jaeger-lib")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15871xzc7qs00yy5bv1gzdv4xlfws68bhb70m4k5p5n41060ppj0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/uber/jaeger-lib"))
    (home-page "https://github.com/uber/jaeger-lib")
    (synopsis "jaeger-lib")
    (description
     "Package jaegerlib is a set of utilities shared by Jaeger backend and Jaeger Go
Client.")
    (license license:asl2.0)))

(define-public go-github-com-ugorji-go
  (package
    (name "go-github-com-ugorji-go")
    (version "1.2.12")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ugorji/go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11j0sd7kli2bh2npfr2znnvdjsk118rs8khqzfdp6pb5jm0l20ib"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ugorji/go"))
    (propagated-inputs (list go-github-com-ugorji-go-codec))
    (home-page "https://github.com/ugorji/go")
    (synopsis "go-codec")
    (description
     "This repository contains the @@code{go-codec} library, the @@code{codecgen} tool
and benchmarks for comparing against other libraries.")
    (license license:expat)))

(define-public go-github-com-ultradns-ultradns-go-sdk
  (package
    (name "go-github-com-ultradns-ultradns-go-sdk")
    (version "1.8.0-20241010134910-243eeec")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ultradns/ultradns-go-sdk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02skkqypff0vy6ixmighx7ani7y8d9nx51vb2j3cmg30wr5zq8va"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/ultradns/ultradns-go-sdk"))
    (propagated-inputs (list go-golang-org-x-oauth2))
    (home-page "https://github.com/ultradns/ultradns-go-sdk")
    (synopsis "UltraDNS SDK for Go")
    (description
     "ultradns-go-sdk is the official @code{UltraDNS} SDK for the Go programming
language.  Golang-Version : @@code{1.22}.")
    (license license:asl2.0)))

(define-public go-github-com-ultraware-funlen
  (package
    (name "go-github-com-ultraware-funlen")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ultraware/funlen")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z5l1xjq0ymad4x221lb8v3j5a4p1c8r7kajyj9b5hfc9y2mjqcg"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/ultraware/funlen"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/ultraware/funlen")
    (synopsis "Funlen linter")
    (description
     "Funlen is a linter that checks for long functions.  It can check both on the
number of lines and the number of statements.")
    (license license:expat)))

(define-public go-github-com-ultraware-whitespace
  (package
    (name "go-github-com-ultraware-whitespace")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ultraware/whitespace")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1117m5mwf0j3ksgqyjxyyvdk76nl206lvhn65bhc22klgqbrg7lv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ultraware/whitespace"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/ultraware/whitespace")
    (synopsis "Whitespace linter")
    (description
     "Whitespace is a linter that checks for unnecessary newlines at the start and end
of functions, if, for, etc.")
    (license license:expat)))

(define-public go-github-com-unknwon-com
  (package
    (name "go-github-com-unknwon-com")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/unknwon/com")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02k1539gwcgp2bsjhy1mcm5y3fvsfbh2707ch70dyjqy7ibifdav"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/unknwon/com"))
    (propagated-inputs (list go-github-com-smartystreets-goconvey))
    (home-page "https://github.com/unknwon/com")
    (synopsis "Common Functions")
    (description
     "Package com is an open source project for commonly used functions for the Go
programming language.")
    (license license:asl2.0)))

(define-public go-github-com-unknwon-goconfig
  (package
    (name "go-github-com-unknwon-goconfig")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/unknwon/goconfig")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10f0lhb3l971b2fw2xsvbsy96gx9isyckg2003av2f4rlzs27n7b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/unknwon/goconfig"))
    (home-page "https://github.com/unknwon/goconfig")
    (synopsis "goconfig")
    (description
     "Package goconfig is a fully functional and comments-support configuration
file(.ini) parser.")
    (license license:asl2.0)))

(define-public go-github-com-uno-soft-zlog
  (package
    (name "go-github-com-uno-soft-zlog")
    (version "0.8.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/UNO-SOFT/zlog")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hbs8a699qy86mq8nn83989cvgswqh030hqj953442rwh2ldbxgk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/UNO-SOFT/zlog"))
    (propagated-inputs (list go-golang-org-x-term
                             go-golang-org-x-exp
                             go-github-com-tgulacsi-go
                             go-github-com-rs-zerolog ; packaged
                             go-github-com-go-logr-zerologr
                             go-github-com-go-logr-logr))
    (home-page "https://github.com/UNO-SOFT/zlog")
    (synopsis #f)
    (description
     "Package zlog contains some very simple go-logr / zerologr helper functions.
This sets the default timestamp format to time.RFC3339 with ms precision.")
    (license license:asl2.0)))

(define-public go-github-com-upper-db-v4
  (package
    (name "go-github-com-upper-db-v4")
    (version "4.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/upper/db")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0m8y9ihr9wa41776b4dx2yprzi1p09jlqb1fzs1lc6kjgyrlc3g0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/upper/db/v4"
      #:unpack-path "github.com/upper/db"))
    (propagated-inputs (list go-modernc-org-ql
                             go-gopkg-in-mgo-v2
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-segmentio-fasthash
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-lib-pq
                             go-github-com-jackc-pgx-v4
                             go-github-com-jackc-pgtype
                             go-github-com-ipfs-go-detect-race ; packaged
                             go-github-com-google-uuid
                             go-github-com-go-sql-driver-mysql
                             go-github-com-denisenkom-go-mssqldb))
    (home-page "https://github.com/upper/db")
    (synopsis "upper/db")
    (description
     "Package db (or upper/db) provides an agnostic data access layer to work with
different databases.")
    (license license:expat)))

(define-public go-github-com-uptrace-bun
  (package
    (name "go-github-com-uptrace-bun")
    (version "1.2.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/uptrace/bun")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w14058wwslg82vq5rncp2824awnbm7vilhcpd0h61hwb7g339c1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/uptrace/bun"))
    (propagated-inputs (list go-github-com-wk8-go-ordered-map-v2
                             go-github-com-vmihailenco-msgpack-v5
                             go-github-com-tmthrgd-go-hex
                             go-github-com-stretchr-testify
                             go-github-com-rs-zerolog ; packaged
                             go-github-com-puzpuzpuz-xsync-v3
                             go-github-com-jinzhu-inflection))
    (home-page "https://github.com/uptrace/bun")
    (synopsis
     "SQL-first Golang ORM for PostgreSQL, MySQL, MSSQL, SQLite and Oracle")
    (description "Wrote a tutorial for Bun? Create a PR to add here and on
@@url{https://bun.uptrace.dev/,Bun} site.")
    (license license:bsd-2)))

(define-public go-github-com-uptrace-bun-dialect-pgdialect
  (package
    (name "go-github-com-uptrace-bun-dialect-pgdialect")
    (version "1.2.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/uptrace/bun")
             (commit (go-version->git-ref version
                                          #:subdir "dialect/pgdialect"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w14058wwslg82vq5rncp2824awnbm7vilhcpd0h61hwb7g339c1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/uptrace/bun/dialect/pgdialect"
      #:unpack-path "github.com/uptrace/bun"))
    (propagated-inputs (list go-github-com-wk8-go-ordered-map-v2
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/uptrace/bun")
    (synopsis #f)
    (description #f)
    (license license:bsd-2)))

(define-public go-github-com-uptrace-bun-driver-pgdriver
  (package
    (name "go-github-com-uptrace-bun-driver-pgdriver")
    (version "1.2.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/uptrace/bun")
             (commit (go-version->git-ref version
                                          #:subdir "driver/pgdriver"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w14058wwslg82vq5rncp2824awnbm7vilhcpd0h61hwb7g339c1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/uptrace/bun/driver/pgdriver"
      #:unpack-path "github.com/uptrace/bun"))
    (propagated-inputs (list go-mellium-im-sasl go-github-com-stretchr-testify))
    (home-page "https://github.com/uptrace/bun")
    (synopsis "pgdriver")
    (description
     "pgdriver is a database/sql driver for @code{PostgreSQL} based on
@@url{https://github.com/go-pg/pg,go-pg} code.")
    (license license:bsd-2)))

(define-public go-github-com-uudashr-gocognit
  (package
    (name "go-github-com-uudashr-gocognit")
    (version "1.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/uudashr/gocognit")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s4yj8sl8i3m6gm747h5lb76kbfn8lj43rb05vh1r1jws57jr08b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/uudashr/gocognit"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/uudashr/gocognit")
    (synopsis "Gocognit")
    (description
     "Package gocognit defines Analyzer other utilities to checks and calculate the
complexity of function based on \"cognitive complexity\" methods.")
    (license license:expat)))

(define-public go-github-com-uudashr-iface
  (package
    (name "go-github-com-uudashr-iface")
    (version "1.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/uudashr/iface")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0i0s5j0xn9bc88ifyq3scrakm28cfd076r3c69150jiy07wbsiz8"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/uudashr/iface"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/uudashr/iface")
    (synopsis "iface")
    (description
     "Package iface provides analyzers that designed to identify the incorrect use of
interfaces, helping developers avoid interface pollution.")
    (license license:asl2.0)))

(define-public go-github-com-uwu-tools-magex
  (package
    (name "go-github-com-uwu-tools-magex")
    (version "0.10.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/uwu-tools/magex")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sr2zb89qfar95r1g29303f9jjjzcs3s61lj9b8j0y40yjaqli00"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/uwu-tools/magex"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-magefile-mage
                             go-github-com-masterminds-semver-v3))
    (home-page "https://github.com/uwu-tools/magex")
    (synopsis "Magefile Extensions")
    (description
     "Package magex provides helper methods for working with Magefiles
(@@url{https://magefile.org,https://magefile.org}).")
    (license license:expat)))

(define-public go-github-com-valyala-fastjson
  (package
    (name "go-github-com-valyala-fastjson")
    (version "1.6.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/valyala/fastjson")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ly15rbdy9qmml39d8mazjvid3f13nhvj4v2zdlp13pn4gczdp3k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/valyala/fastjson"))
    (home-page "https://github.com/valyala/fastjson")
    (synopsis "fastjson - fast JSON parser and validator for Go")
    (description "Package fastjson provides fast JSON parsing.")
    (license license:expat)))

(define-public go-github-com-valyala-quicktemplate
  (package
    (name "go-github-com-valyala-quicktemplate")
    (version "1.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/valyala/quicktemplate")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0z04a71l4812mw42jxfawanbnb2m3fnxml2a826l5ayqklnvgdkj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/valyala/quicktemplate"))
    (propagated-inputs (list go-github-com-valyala-fasthttp
                             go-github-com-valyala-bytebufferpool))
    (home-page "https://github.com/valyala/quicktemplate")
    (synopsis "quicktemplate")
    (description
     "Package quicktemplate provides fast and powerful template engine.")
    (license license:expat)))

(define-public go-github-com-vbatts-tar-split
  (package
    (name "go-github-com-vbatts-tar-split")
    (version "0.11.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vbatts/tar-split")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kiac6vq9qqmkm7bgsfx3xyrj85s7ayy9xd621hlmq2yi38i28ly"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vbatts/tar-split"))
    (propagated-inputs (list go-github-com-urfave-cli
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-magefile-mage
                             go-github-com-fatih-color))
    (home-page "https://github.com/vbatts/tar-split")
    (synopsis "tar-split")
    (description
     "Pristinely disassembling a tar archive, and stashing needed raw bytes and
offsets to reassemble a validating original archive.")
    (license license:bsd-3)))

(define-public go-github-com-vbauerster-mpb-v8
  (package
    (name "go-github-com-vbauerster-mpb-v8")
    (version "8.10.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vbauerster/mpb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05ardmvjqy79k3116vabjgsrip7yg0ran2ybnxcihx9i55a4jvhs"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "github.com/vbauerster/mpb/v8"
      #:unpack-path "github.com/vbauerster/mpb"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-mattn-go-runewidth
                             go-github-com-acarl005-stripansi
                             go-github-com-vividcortex-ewma))
    (home-page "https://github.com/vbauerster/mpb")
    (synopsis "Multi Progress Bar")
    (description
     "Package mpb is a library for rendering progress bars in terminal applications.")
    (license license:unlicense)))

(define-public go-github-com-vcaesar-cedar
  (package
    (name "go-github-com-vcaesar-cedar")
    (version "0.20.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vcaesar/cedar")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00wksl57zmmjfnv72532m22iv6aph7blm2lhpmf0dx0iv42yarnx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vcaesar/cedar"))
    (propagated-inputs (list go-github-com-vcaesar-tt))
    (home-page "https://github.com/vcaesar/cedar")
    (synopsis "cedar")
    (description
     "Package @@code{cedar} implementes double-array trie and aho corasick.")
    (license license:bsd-2)))

(define-public go-github-com-vcaesar-tt
  (package
    (name "go-github-com-vcaesar-tt")
    (version "0.20.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vcaesar/tt")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07hsjrkjvaww8vl5hj57m3zz21xpsg9d2lj82c8kpjpsl4i15v15"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vcaesar/tt"))
    (home-page "https://github.com/vcaesar/tt")
    (synopsis "tt")
    (description "Simple and colorful test tools.")
    (license license:asl2.0)))

(define-public go-github-com-vertica-vertica-sql-go
  (package
    (name "go-github-com-vertica-vertica-sql-go")
    (version "1.3.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vertica/vertica-sql-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0b9fjpvmxf8id8rbw130rm6rhvp5db67rs1dmzgb55n7r6s6m5xi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vertica/vertica-sql-go"))
    (propagated-inputs (list go-github-com-elastic-go-sysinfo))
    (home-page "https://github.com/vertica/vertica-sql-go")
    (synopsis "vertica-sql-go")
    (description
     "vertica-sql-go is a native Go adapter for the Vertica
(@@url{http://www.vertica.com,http://www.vertica.com}) database.")
    (license license:asl2.0)))

(define-public go-github-com-viki-org-dnscache
  (package
    (name "go-github-com-viki-org-dnscache")
    (version "0.0.0-20130720023526-c70c1f23c5d8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/viki-org/dnscache")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0k9p3v3df1y1l85xhh5k8wsnidhxx7qyqpyfka1pcs1562q35l97"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/viki-org/dnscache"))
    (home-page "https://github.com/viki-org/dnscache")
    (synopsis "A DNS cache for Go")
    (description
     "CGO is used to lookup domain names.  Given enough concurrent requests and the
slightest hiccup in name resolution, it's quite easy to end up with
blocked/leaking goroutines.")
    (license license:expat)))

(define-public go-github-com-vincent-petithory-dataurl
  (package
    (name "go-github-com-vincent-petithory-dataurl")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vincent-petithory/dataurl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05vdlrqpshrcvcs2z5jga17nxglba4nv8y1z7a2w1nc4rj76i3k7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vincent-petithory/dataurl"))
    (home-page "https://github.com/vincent-petithory/dataurl")
    (synopsis "Data URL Schemes for Go")
    (description
     "Package dataurl parses Data URL Schemes according to
@@url{https://rfc-editor.org/rfc/rfc2397.html,RFC 2397}
(@@url{http://tools.ietf.org/html/rfc2397,http://tools.ietf.org/html/rfc2397}).")
    (license license:expat)))

(define-public go-github-com-vinyldns-go-vinyldns
  (package
    (name "go-github-com-vinyldns-go-vinyldns")
    (version "0.9.16")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vinyldns/go-vinyldns")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10r82l1jdcd4ngibg7yxvivzm6vcay9mpg5j60y1jnv8f4cblzzs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vinyldns/go-vinyldns"))
    (propagated-inputs (list go-github-com-smartystreets-go-aws-auth ; packaged
                             go-github-com-gobs-pretty))
    (home-page "https://github.com/vinyldns/go-vinyldns")
    (synopsis "vinyldns")
    (description
     "This package provides a Golang client for the
@@url{https://github.com/vinyldns/vinyldns,vinyldns} DNS as a service API.")
    (license license:asl2.0)))

(define-public go-github-com-vividcortex-gohistogram
  (package
    (name "go-github-com-vividcortex-gohistogram")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/VividCortex/gohistogram")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ykpvrkri3mzc0z77kdva93ylh0bqg7jq3i024r3iv0i6bwx3rnf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/VividCortex/gohistogram"))
    (home-page "https://github.com/VividCortex/gohistogram")
    (synopsis "gohistogram - Histograms in Go")
    (description
     "Package gohistogram contains implementations of weighted and exponential
histograms.")
    (license license:expat)))

(define-public go-github-com-vmihailenco-bufpool
  (package
    (name "go-github-com-vmihailenco-bufpool")
    (version "0.1.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vmihailenco/bufpool")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11fs5m8ph4yr54nbfnp78k9ffsp2p4qg7bmqzjnx9c7361qgv61p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vmihailenco/bufpool"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/vmihailenco/bufpool")
    (synopsis "bufpool")
    (description
     "bufpool is an implementation of a pool of byte buffers with anti-memory-waste
protection.  It is based on the code and ideas from these 2 projects:.")
    (license license:expat)))

(define-public go-github-com-vmihailenco-msgpack
  (package
    (name "go-github-com-vmihailenco-msgpack")
    (version "3.3.3+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vmihailenco/msgpack")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1csz6y2xx065hlc947ai0273vclvji81wkqq2kr7h16spr15ipj3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vmihailenco/msgpack"))
    (home-page "https://github.com/vmihailenco/msgpack")
    (synopsis "MessagePack encoding for Golang")
    (description "Supports:.")
    (license license:bsd-2)))

(define-public go-github-com-vmihailenco-tagparser-v2
  (package
    (name "go-github-com-vmihailenco-tagparser-v2")
    (version "2.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vmihailenco/tagparser")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13arliaz3b4bja9jj7cr5ax4zvxaxm484fwrn0q6d6jjm1l35m1k"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vmihailenco/tagparser/v2"
      #:unpack-path "github.com/vmihailenco/tagparser"))
    (home-page "https://github.com/vmihailenco/tagparser")
    (synopsis "Opinionated Golang tag parser")
    (description "Install:.")
    (license license:bsd-2)))

(define-public go-github-com-volcengine-volc-sdk-golang
  (package
    (name "go-github-com-volcengine-volc-sdk-golang")
    (version "1.0.190")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/volcengine/volc-sdk-golang")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ls5xmv50f079ljdwdav2c2v4qgpwi0h288ygnrf0flixjfm87bq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/volcengine/volc-sdk-golang"))
    (propagated-inputs (list go-gopkg-in-natefinch-lumberjack-v2
                             go-google-golang-org-protobuf
                             go-golang-org-x-net
                             go-golang-org-x-exp
                             go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-pierrec-lz4
                             go-github-com-google-uuid
                             go-github-com-google-martian
                             go-github-com-google-go-querystring
                             go-github-com-golang-protobuf
                             go-github-com-gogo-protobuf
                             go-github-com-go-kit-kit
                             go-github-com-cenkalti-backoff-v4 ;packaged

                             go-github-com-avast-retry-go
                             go-github-com-shopify-sarama))
    (home-page "https://github.com/volcengine/volc-sdk-golang")
    (synopsis "前置准备")
    (description
     "请确保您已开通了您需要访问的服务。您可前往@@url{https://console.volcengine.com/,火山引擎控制台}，在左侧菜单中选择或在顶部搜索栏中搜索您需要使用的服务，进入服务控制台内完成开通流程。.")
    (license license:asl2.0)))

(define-public go-github-com-vtolstov-go-ioctl
  (package
    (name "go-github-com-vtolstov-go-ioctl")
    (version "0.0.0-20151206205506-6be9cced4810")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vtolstov/go-ioctl")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11z60qlwci1vf08f5sibaw5hc0r3qh58cpq04886wr09kiipvnrv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vtolstov/go-ioctl"))
    (home-page "https://github.com/vtolstov/go-ioctl")
    (synopsis "go-ioctl")
    (description
     "Documentation @@url{http://godoc.org/github.com/vtolstov/go-ioctl,(img (@@ (src
https://godoc.org/github.com/vtolstov/go-ioctl?status.svg) (alt
@code{GoDoc})))}.")
    (license license:expat)))

(define-public go-github-com-vultr-govultr-v2
  (package
    (name "go-github-com-vultr-govultr-v2")
    (version "2.17.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vultr/govultr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0crl56lx2djxwgp784hzis7invyxmw6xy32p713ch95qafrddi61"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/vultr/govultr/v2"
      #:unpack-path "github.com/vultr/govultr"))
    (propagated-inputs (list go-github-com-hashicorp-go-retryablehttp
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/vultr/govultr")
    (synopsis "GoVultr")
    (description
     "The official Vultr Go client - @code{GoVultr} allows you to interact with the
Vultr V2 API.")
    (license license:expat)))

(define-public go-github-com-vultr-govultr-v3
  (package
    (name "go-github-com-vultr-govultr-v3")
    (version "3.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vultr/govultr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0qxpiv2n9rvmamg4by1yghc75xq9z08i45jj4bcjkf0xm2g5xfim"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/vultr/govultr/v3"
      #:unpack-path "github.com/vultr/govultr"))
    (propagated-inputs (list go-github-com-hashicorp-go-retryablehttp
                             go-github-com-google-go-querystring))
    (home-page "https://github.com/vultr/govultr")
    (synopsis "GoVultr")
    (description
     "Package govultr contains the functionality to interact with the Vultr public
HTTP REST API.")
    (license license:expat)))

(define-public go-github-com-warpfork-go-errcat
  (package
    (name "go-github-com-warpfork-go-errcat")
    (version "0.0.0-20180917083543-335044ffc86e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/warpfork/go-errcat")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xqsnqsqy357g29w6s96qj1h3hn9bhh598pkk7j5alf94fjfixka"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/warpfork/go-errcat"))
    (home-page "https://github.com/warpfork/go-errcat")
    (synopsis "errcat")
    (description
     "errcat is a simple universal error type that helps you produce errors that are
both easy to categorize and handle, and also easy to maintain the original
messages of.")
    (license license:asl2.0)))

(define-public go-github-com-wasilibs-go-re2
  (package
    (name "go-github-com-wasilibs-go-re2")
    (version "1.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/wasilibs/go-re2")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hcy2i7mxcdmyj32n3z1sq97h5cxn1qcr7jd0br0ici4bsig4nwv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/wasilibs/go-re2"))
    (propagated-inputs (list go-github-com-wasilibs-wazero-helpers
                             go-github-com-tetratelabs-wazero))
    (home-page "https://github.com/wasilibs/go-re2")
    (synopsis "go-re2")
    (description
     "go-re2 is a drop-in replacement for the standard library
@@url{https://pkg.go.dev/regexp,regexp} package which uses the C++
@@url{https://github.com/google/re2,re2} library for improved performance with
large inputs or complex expressions.  By default, re2 is packaged as a
@code{WebAssembly} module and accessed with the pure Go runtime,
@@url{https://wazero.io,wazero}.  This means that it is compatible with any Go
application, regardless of availability of cgo.")
    (license license:expat)))

(define-public go-github-com-wasilibs-wazero-helpers
  (package
    (name "go-github-com-wasilibs-wazero-helpers")
    (version "0.0.0-20240620070341-3dff1577cd52")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/wasilibs/wazero-helpers")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "02zbqwyh7zb121842khjcc3w1k3m981r6c640braxd8k3v24krk1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/wasilibs/wazero-helpers"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-tetratelabs-wazero
                             go-github-com-stretchr-testify))
    (home-page "https://github.com/wasilibs/wazero-helpers")
    (synopsis "wazero-helpers: helpful utilities for wazero users")
    (description
     "@@url{https://wazero.io,wazero} is a @code{WebAssembly} runtime for Go programs,
providing a powerful base for executing Wasm modules.  It is relatively
low-level though, and there are certain patterns we see that can be helpful
across certain categories of Wasm modules.")
    (license license:expat)))

(define-public go-github-com-weaviate-contextionary
  (package
    (name "go-github-com-weaviate-contextionary")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/weaviate/contextionary")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0prhi0fsmimmvyy5g1frnv6zjsv4c2xqq660jzn7iw79pc6n6aqk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/weaviate/contextionary"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-github-com-syndtr-goleveldb
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-jessevdk-go-flags
                             go-github-com-golang-protobuf
                             go-github-com-fatih-camelcase))
    (home-page "https://github.com/weaviate/contextionary")
    (synopsis "Weaviate Contextionary")
    (description "Not intended for stand-alone use.  Used by .")
    (license license:bsd-3)))

(define-public go-github-com-weaviate-fgprof
  (package
    (name "go-github-com-weaviate-fgprof")
    (version "0.0.0-20241024094923-d8d71bbcfa82")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/weaviate/fgprof")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1l74ihxkz2a1jzd2a0kvqm8z7mpjxmphr9m6i1fbndgg440z1y4v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/weaviate/fgprof"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-pprof))
    (home-page "https://github.com/weaviate/fgprof")
    (synopsis "🚀 fgprof - The Full Go Profiler")
    (description
     "fgprof is a sampling Go profiler that allows you to analyze On-CPU as well as
[Off-CPU](@@url{http://www.brendangregg.com/offcpuanalysis.html,http://www.brendangregg.com/offcpuanalysis.html})
(e.g. I/O) time together.")
    (license license:expat)))

(define-public go-github-com-weaviate-s5cmd-v2
  (package
    (name "go-github-com-weaviate-s5cmd-v2")
    (version "2.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/weaviate/s5cmd")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zfgp3vmd40ihjbhshnnpnwwyqc3rvva9q71gwzk72igd7mmdk2c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/weaviate/s5cmd/v2"
      #:unpack-path "github.com/weaviate/s5cmd"))
    (propagated-inputs (list go-mvdan-cc-unparam
                             go-honnef-co-go-tools
                             go-gotest-tools-v3 ; packaged
                             go-go-uber-org-mock
                             go-github-com-urfave-cli-v2
                             go-github-com-termie-go-shutil
                             go-github-com-lanrat-extsort
                             go-github-com-kballard-go-shellquote ; packaged
                             go-github-com-karrick-godirwalk
                             go-github-com-igungor-gofakes3
                             go-github-com-iancoleman-strcase
                             go-github-com-google-go-cmp
                             go-github-com-cheggaaa-pb-v3
                             go-github-com-aws-aws-sdk-go))
    (home-page "https://github.com/weaviate/s5cmd")
    (synopsis "Overview")
    (description
     "@@code{s5cmd} is a very fast S3 and local filesystem execution tool.  It comes
with support for a multitude of operations including tab completion and wildcard
support for files, which can be very handy for your object storage workflow
while working with large number of files.")
    (license license:expat)))

(define-public go-github-com-weaviate-sroar
  (package
    (name "go-github-com-weaviate-sroar")
    (version "0.0.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/weaviate/sroar")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f28d6p5z2wijbpj6bpahncg02cpcv646v2k34m56i8c5q3dad54"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/weaviate/sroar"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-roaringbitmap-roaring))
    (home-page "https://github.com/weaviate/sroar")
    (synopsis "sroar: Serialized Roaring Bitmaps")
    (description
     "sroar is a re-written version of Roaring Bitmaps in Go, with the aim to have
equality between in-memory representation and on-disk representation.  An
sroar.Bitmap does not need to be marshalled or unmarshalled, as the underlying
represetation is a byte slice.  Therefore, it can be written to disk, brought to
memory, or shipped over the network immediately.  This is needed in
@@url{https://github.com/dgraph-io/dgraph,Dgraph}, where we need to deal with
lots of bitmaps.")
    (license license:asl2.0)))

(define-public go-github-com-weaviate-tiktoken-go
  (package
    (name "go-github-com-weaviate-tiktoken-go")
    (version "0.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/weaviate/tiktoken-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0iryzlll2sd5b4dnmqz4q3zssicry2pp357dq1kshaspsnfbmiyb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/weaviate/tiktoken-go"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-uuid
                             go-github-com-dlclark-regexp2))
    (home-page "https://github.com/weaviate/tiktoken-go")
    (synopsis "tiktoken-go")
    (description
     "This is a fork of github.com/pkoukk/tiktoken-go .  The original project is no
longer maintained and does not support the latest @code{OpenAi} embedding
models.  We will actively maintain this project.")
    (license license:expat)))

(define-public go-github-com-weaviate-weaviate
  (package
    (name "go-github-com-weaviate-weaviate")
    (version "1.28.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/weaviate/weaviate")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1c1vwfqamb6kqfnjaprp2lx208xm9pckwwpv6gzmqkx8gh0br1n8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "github.com/weaviate/weaviate"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-golang-org-x-time
                        go-golang-org-x-text
                        go-golang-org-x-exp
                        go-github-com-weaviate-tiktoken-go
                        go-github-com-weaviate-sroar
                        go-github-com-weaviate-s5cmd-v2
                        go-github-com-weaviate-fgprof
                        go-github-com-vmihailenco-msgpack-v5
                        go-github-com-urfave-cli-v2
                        go-github-com-tailor-inc-graphql
                        go-github-com-prometheus-common
                        go-github-com-pbnjay-memory ; packaged
                        go-github-com-oauth2-proxy-mockoidc
                        go-github-com-johnbellone-grpc-middleware-sentry
                        go-github-com-ikawaha-kagome-v2
                        go-github-com-ikawaha-kagome-dict-ipa
                        go-github-com-ikawaha-kagome-dict-ko
                        go-github-com-hashicorp-raft-boltdb-v2
                        go-github-com-hashicorp-raft
                        go-github-com-hashicorp-go-hclog
                        go-github-com-grpc-ecosystem-go-grpc-middleware
                        go-github-com-googleapis-gax-go-v2
                        go-github-com-go-ego-gse
                        go-github-com-getsentry-sentry-go ; packaged
                        go-github-com-felixge-httpsnoop ; packaged
                        go-github-com-edsrzf-mmap-go
                        go-github-com-coreos-go-oidc-v3
                        go-github-com-cenkalti-backoff-v4 ;packaged

                        go-github-com-casbin-casbin-v2
                        go-github-com-aws-aws-sdk-go-v2-service-bedrockruntime
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-armon-go-metrics
                        go-github-com-kimmachinegun-automemlimit ; packaged
                        go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore
                        go-gopkg-in-yaml-v2
                        go-google-golang-org-grpc
                        go-google-golang-org-api
                        go-gonum-org-v1-gonum ; packaged
                        go-golang-org-x-sys
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-go-etcd-io-bbolt
                        go-github-com-willf-bloom
                        go-github-com-weaviate-contextionary
                        go-github-com-testcontainers-testcontainers-go
                        go-github-com-stretchr-testify
                        go-github-com-spaolacci-murmur3 ; packaged
                        go-github-com-sirupsen-logrus
                        go-github-com-rs-cors
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-pkg-errors
                        go-github-com-nyaruka-phonenumbers
                        go-github-com-minio-minio-go-v7 ; packaged
                        go-github-com-jessevdk-go-flags
                        go-github-com-hashicorp-memberlist
                        go-github-com-google-uuid
                        go-github-com-golang-jwt-jwt-v4
                        go-github-com-go-openapi-validate ; packaged
                        go-github-com-go-openapi-swag ; packaged
                        go-github-com-go-openapi-strfmt ; packaged
                        go-github-com-go-openapi-spec
                        go-github-com-go-openapi-runtime ; packaged
                        go-github-com-go-openapi-loads
                        go-github-com-go-openapi-errors ; packaged
                        go-github-com-go-jose-go-jose-v3
                        go-github-com-fatih-camelcase
                        go-github-com-docker-go-connections ; packaged
                        go-github-com-davecgh-go-spew
                        go-github-com-danaugrs-go-tsne
                        go-github-com-buger-jsonparser
                        go-github-com-bmatcuk-doublestar
                        go-cloud-google-com-go-storage))
    (home-page "https://github.com/weaviate/weaviate")
    (synopsis "Overview")
    (description
     "Weaviate is a cloud-native, @@strong{open source vector database} that is
robust, fast, and scalable.")
    (license license:bsd-3)))

(define-public go-github-com-weaviate-weaviate-go-client-v4
  (package
    (name "go-github-com-weaviate-weaviate-go-client-v4")
    (version "4.16.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/weaviate/weaviate-go-client")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11pjk883hqldl9nqip5wbfgv5ph6li593hzg322rp6q59rf3zmr1"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/weaviate/weaviate-go-client/v4"
      #:unpack-path "github.com/weaviate/weaviate-go-client"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-go-nhat-io-grpcmock
                        go-github-com-weaviate-weaviate
                        go-github-com-testcontainers-testcontainers-go-modules-weaviate
                        go-github-com-testcontainers-testcontainers-go
                        go-github-com-stretchr-testify
                        go-github-com-google-uuid
                        go-github-com-go-openapi-strfmt ; packaged
                        go-github-com-docker-go-connections ; packaged
                        ))
    (home-page "https://github.com/weaviate/weaviate-go-client")
    (synopsis "Weaviate go client")
    (description "This package provides a go native client for weaviate.")
    (license license:bsd-3)))

(define-public go-github-com-weppos-publicsuffix-go
  (package
    (name "go-github-com-weppos-publicsuffix-go")
    (version "0.40.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/weppos/publicsuffix-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kzf3jbykkw6xyvg39169qfj5n47nrn54mpmhg5hf3db49yj7h7r"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/weppos/publicsuffix-go"))
    (propagated-inputs (list go-golang-org-x-net
                             go-github-com-google-go-github-v50))
    (home-page "https://github.com/weppos/publicsuffix-go")
    (synopsis "Public Suffix")
    (description "The package provides a Go domain name parser based on the
@@url{http://publicsuffix.org/,Public Suffix List}.")
    (license license:expat)))

(define-public go-github-com-wiggin77-cfg
  (package
    (name "go-github-com-wiggin77-cfg")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/wiggin77/cfg")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0azbry3a8ajd70lfh6q682jdzcw5vlg2w134zdn5ambjpnxbmkzq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/wiggin77/cfg"))
    (propagated-inputs (list go-github-com-wiggin77-merror))
    (home-page "https://github.com/wiggin77/cfg")
    (synopsis "cfg")
    (description
     "Go package for app configuration.  Supports chained configuration sources for
multiple levels of defaults.  Includes APIs for loading Linux style
configuration files (name/value pairs) or INI files, map based properties, or
easily create new configuration sources (e.g. load from database).")
    (license license:expat)))

(define-public go-github-com-wiggin77-merror
  (package
    (name "go-github-com-wiggin77-merror")
    (version "1.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/wiggin77/merror")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1smcr9bd2xw47xass4zwm7nsgbrq9zy2vzyk0dm2ccf2mi3w13hv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/wiggin77/merror"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/wiggin77/merror")
    (synopsis "merror")
    (description "Multiple Error aggregator for Go.")
    (license license:expat)))

(define-public go-github-com-wiggin77-srslog
  (package
    (name "go-github-com-wiggin77-srslog")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/wiggin77/srslog")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09nv758zmhjazdmwkppqaj2j6ij5q6vz338wl8cxv72wvzmsj9xi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/wiggin77/srslog"))
    (home-page "https://github.com/wiggin77/srslog")
    (synopsis "srslog")
    (description
     "Go has a @@code{syslog} package in the standard library, but it has the
following shortcomings:.")
    (license license:bsd-3)))

(define-public go-github-com-willabides-kongplete
  (package
    (name "go-github-com-willabides-kongplete")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/WillAbides/kongplete")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "153nrxwnnfzdhyxyxcb8p1mp5cd4a9254mbwpzx7d2gyia1wfa7b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/willabides/kongplete"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-riywo-loginshell
                             go-github-com-posener-complete
                             go-github-com-alecthomas-kong))
    (home-page "https://github.com/willabides/kongplete")
    (synopsis "kongplete")
    (description
     "Package kongplete lets you generate shell completions for your command-line
programs using github.com/alecthomas/kong and github.com/posener/complete.")
    (license license:expat)))

(define-public go-github-com-willf-bitset
  (package
    (name "go-github-com-willf-bitset")
    (version "1.20.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bits-and-blooms/bitset")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m1rk1bf6i1jnhjxm774i3rhg8n8s88a3n5pnhg5a9gf34y7r8az"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/willf/bitset"))
    (home-page "https://github.com/willf/bitset")
    (synopsis "bitset")
    (description
     "Package bitset implements bitsets, a mapping between non-negative integers and
boolean values.  It should be more efficient than map[uint] bool.")
    (license license:bsd-3)))

(define-public go-github-com-willf-bloom
  (package
    (name "go-github-com-willf-bloom")
    (version "2.0.3+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/bits-and-blooms/bloom")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ygan8pgcay7wx3cs3ja8rdqj7nly7v3and97ddcc66020jxchzg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/willf/bloom"))
    (home-page "https://github.com/willf/bloom")
    (synopsis "Bloom filters")
    (description
     "Package bloom provides data structures and methods for creating Bloom filters.")
    (license license:bsd-2)))

(define-public go-github-com-willscott-go-nfs
  (package
    (name "go-github-com-willscott-go-nfs")
    (version "0.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/willscott/go-nfs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13iqjvy9daslg5a7lxafj1xad0ps5d2vcv9076sfa6fljzd6hzb6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/willscott/go-nfs"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-github-com-willscott-memphis
                             go-github-com-willscott-go-nfs-client
                             go-github-com-rasky-go-xdr
                             go-github-com-hashicorp-golang-lru-v2 ; packaged
                             go-github-com-google-uuid
                             go-github-com-go-git-go-billy-v5))
    (home-page "https://github.com/willscott/go-nfs")
    (synopsis "Golang Network File Server")
    (description "NFSv3 protocol implementation in pure Golang.")
    (license license:asl2.0)))

(define-public go-github-com-willscott-go-nfs-client
  (package
    (name "go-github-com-willscott-go-nfs-client")
    (version "0.0.0-20240104095149-b44639837b00")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/willscott/go-nfs-client")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bzjnhvywchys84n09qg4ykr40i10msfyss9w1f0nb0wy9vphfxr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/willscott/go-nfs-client"))
    (propagated-inputs (list go-github-com-rasky-go-xdr))
    (home-page "https://github.com/willscott/go-nfs-client")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-willscott-memphis
  (package
    (name "go-github-com-willscott-memphis")
    (version "0.0.0-20241203204924-a148a489d367")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/willscott/memphis")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16wqmz8dzjr0nfh1v6j16jsw0k1831zf4f0na7m86kngrm6jrckk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/willscott/memphis"))
    (propagated-inputs (list go-github-com-polydawn-rio
                             go-github-com-go-git-go-billy-v5))
    (home-page "https://github.com/willscott/memphis")
    (synopsis "Memphis")
    (description "Status: Minimum Viable.")
    (license license:asl2.0)))

(define-public go-github-com-winfsp-cgofuse
  (package
    (name "go-github-com-winfsp-cgofuse")
    (version "1.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/winfsp/cgofuse")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0wqxn3plbp6rabmyfyxamjl0ilm0n5pkiwhsvnbrx9pcpmlc1b0p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/winfsp/cgofuse"))
    (home-page "https://github.com/winfsp/cgofuse")
    (synopsis "Cross-platform FUSE library for Go")
    (description
     "User mode file systems are expected to implement
@@code{fuse.@code{FileSystemInterface}}.  To make implementation simpler a file
system can embed (\"inherit\") a @@code{fuse.@code{FileSystemBase}} which provides
default implementations for all operations.  To mount a file system one must
instantiate a @@code{fuse.@code{FileSystemHost}} using
@@code{fuse.@code{NewFileSystemHost}}.")
    (license license:expat)))

(define-public go-github-com-withfig-autocomplete-tools-integrations-cobra
  (package
    (name "go-github-com-withfig-autocomplete-tools-integrations-cobra")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/withfig/autocomplete-tools")
             (commit (go-version->git-ref version
                                          #:subdir "integrations/cobra"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10p71qqhivf69qw0ixv7q7nvvpl0fjsw9mxxndx5zkgf38lsrz9z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/withfig/autocomplete-tools/integrations/cobra"
      #:unpack-path "github.com/withfig/autocomplete-tools"))
    (propagated-inputs (list go-github-com-spf13-pflag
                             go-github-com-spf13-cobra))
    (home-page "https://github.com/withfig/autocomplete-tools")
    (synopsis "Fig // Cobra CLI")
    (description
     "This Go package is Fig's integration with popular CLI framework
@@url{https://cobra.dev/,Cobra}.")
    (license license:expat)))

(define-public go-github-com-wk8-go-ordered-map-v2
  (package
    (name "go-github-com-wk8-go-ordered-map-v2")
    (version "2.1.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/wk8/go-ordered-map")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0vzl2j6m9pz8ckikf9z2da9zxdbi7fwhcwq8rmzpmf34zl8cjn1g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/wk8/go-ordered-map/v2"
      #:unpack-path "github.com/wk8/go-ordered-map"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-github-com-stretchr-testify
                             go-github-com-mailru-easyjson
                             go-github-com-buger-jsonparser
                             go-github-com-bahlo-generic-list-go))
    (home-page "https://github.com/wk8/go-ordered-map")
    (synopsis "Golang Ordered Maps")
    (description
     "Package orderedmap implements an ordered map, i.e.  a map that also keeps track
of the order in which keys were inserted.")
    (license license:asl2.0)))

(define-public go-github-com-writeas-go-strip-markdown
  (package
    (name "go-github-com-writeas-go-strip-markdown")
    (version "2.0.1+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/writeas/go-strip-markdown")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1c9xlrdpnl1wkm4z5vwqplw7sqf8n7gdah6xm58z2kh0ry5hm325"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/writeas/go-strip-markdown"))
    (home-page "https://github.com/writeas/go-strip-markdown")
    (synopsis "go-strip-markdown")
    (description "Package stripmd strips Markdown from text.")
    (license license:expat)))

(define-public go-github-com-x-cray-logrus-prefixed-formatter
  (package
    (name "go-github-com-x-cray-logrus-prefixed-formatter")
    (version "0.5.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/x-cray/logrus-prefixed-formatter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mqcdiix0bw0hj6yksiyn4rmgnzblj3x4wdzvf03y0d9vg1zr1na"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/x-cray/logrus-prefixed-formatter"))
    (home-page "https://github.com/x-cray/logrus-prefixed-formatter")
    (synopsis "Logrus Prefixed Log Formatter")
    (description
     "@@url{https://github.com/sirupsen/logrus,Logrus} formatter mainly based on
original @@code{logrus.@code{TextFormatter}} but with slightly modified colored
output and support for log entry prefixes, e.g. message source followed by a
colon.  In addition, custom color themes are supported.")
    (license license:expat)))

(define-public go-github-com-xen0n-gosmopolitan
  (package
    (name "go-github-com-xen0n-gosmopolitan")
    (version "1.2.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/xen0n/gosmopolitan")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qywv8fg7fhz3ymn6laclnj426b0n3681kw3pfv0n605mb0x5d0v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/xen0n/gosmopolitan"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-text))
    (home-page "https://github.com/xen0n/gosmopolitan")
    (synopsis "gosmopolitan")
    (description
     "@@code{gosmopolitan} checks your Go codebase for code smells that may prove to
be hindrance to internationalization (\"i18n\") and/or localization (\"l10n\").")
    (license license:gpl3)))

(define-public go-github-com-xiang90-probing
  (package
    (name "go-github-com-xiang90-probing")
    (version "0.0.0-20221125231312-a49e3df8f510")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/xiang90/probing")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1w0pwy8fzxfqnsjzl28jy08di58kwag48vlj4yj9hls77qgbr9ar"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/xiang90/probing"))
    (home-page "https://github.com/xiang90/probing")
    (synopsis "Getting Started")
    (description "We first need to serve the probing HTTP handler.")
    (license license:expat)))

(define-public go-github-com-xitongsys-parquet-go
  (package
    (name "go-github-com-xitongsys-parquet-go")
    (version "1.6.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/xitongsys/parquet-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lx8r5jz18m7g9n07aqwbwn3m3y44h3g8ijams7cz5m2zp32sqr5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/xitongsys/parquet-go"))
    (propagated-inputs (list go-github-com-xitongsys-parquet-go-source
                             go-github-com-stretchr-testify
                             go-github-com-pierrec-lz4-v4
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-golang-snappy
                             go-github-com-aws-aws-sdk-go
                             go-github-com-apache-thrift
                             go-github-com-apache-arrow-go-arrow))
    (home-page "https://github.com/xitongsys/parquet-go")
    (synopsis "parquet-go")
    (description
     "parquet-go is a pure-go implementation of reading and writing the parquet format
file.")
    (license license:asl2.0)))

(define-public go-github-com-xitongsys-parquet-go-source
  (package
    (name "go-github-com-xitongsys-parquet-go-source")
    (version "0.0.0-20241021075129-b732d2ac9c9b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/xitongsys/parquet-go-source")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12f0gabhalxaz19fb3pkap6y6b592h6cwf3amz0bcy39ifc3w9il"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/xitongsys/parquet-go-source"))
    (propagated-inputs (list go-gocloud-dev
                        go-github-com-xitongsys-parquet-go
                        go-github-com-stretchr-testify
                        go-github-com-spf13-afero
                        go-github-com-pkg-errors
                        go-github-com-ncw-swift
                        go-github-com-minio-minio-go-v7 ; packaged
                        go-github-com-golang-mock ; packaged
                        go-github-com-colinmarc-hdfs-v2
                        go-github-com-bobg-gcsobj
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-aws-aws-sdk-go-v2-feature-s3-manager
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-aws-aws-sdk-go
                        go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore
                        go-cloud-google-com-go-storage))
    (home-page "https://github.com/xitongsys/parquet-go-source")
    (synopsis "parquet-go-source")
    (description
     "parquet-go-source is a source provider for parquet-go.  Your source must
implement @code{ParquetFile} interface:.")
    (license license:asl2.0)))

(define-public go-github-com-xtaci-kcp-go
  (package
    (name "go-github-com-xtaci-kcp-go")
    (version "4.3.4+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/xtaci/kcp-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yb6rgd6x4jlfpvdhgxnxvaq64x70m410h47hiq0ij7vsssv791x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/xtaci/kcp-go"))
    (home-page "https://github.com/xtaci/kcp-go")
    (synopsis "Introduction")
    (description "Package kcp-go is a Reliable-UDP library for golang.")
    (license license:expat)))

(define-public go-github-com-yaegashi-msgraph-go
  (package
    (name "go-github-com-yaegashi-msgraph-go")
    (version "0.1.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yaegashi/msgraph.go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14d6h1cj4ynpy9wg2j27vzgxv2625dbaj3169jkxxp2pjly5kbbc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yaegashi/msgraph.go"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-oauth2
                             go-github-com-yaegashi-wtz-go
                             go-github-com-rickb777-date
                             go-github-com-google-uuid))
    (home-page "https://github.com/yaegashi/msgraph.go")
    (synopsis "msgraph.go")
    (description
     "(The online references at pkg.go.dev above are not shown due to huge size of
packages - @@url{https://github.com/yaegashi/msgraph.go/issues/23,#23}).")
    (license license:asl2.0)))

(define-public go-github-com-yaegashi-wtz-go
  (package
    (name "go-github-com-yaegashi-wtz-go")
    (version "0.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yaegashi/wtz.go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0anbrqvsaqpjyrhvw0asa0j3br499gk5j49v1wwhrckgaahphygs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yaegashi/wtz.go"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/yaegashi/wtz.go")
    (synopsis "wtz.go")
    (description
     "Package wtz is a portable library to handle the time zone names used in Windows.
 You can translate them to/from the IANA (Go native) time zone names.  The
mapping table is based on Unicode CLDR.")
    (license license:bsd-3)))

(define-public go-github-com-yagipy-maintidx
  (package
    (name "go-github-com-yagipy-maintidx")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yagipy/maintidx")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0y4372r9j5izwvq4gcc4sm9qrq8qv2l81ywibm1wm95avw62cj55"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yagipy/maintidx"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://github.com/yagipy/maintidx")
    (synopsis "maintidx")
    (description
     "@@code{maintidx} measures the maintainability index of each function.
@@url{https://docs.microsoft.com/en-us/visualstudio/code-quality/code-metrics-maintainability-index-range-and-meaning,https://docs.microsoft.com/en-us/visualstudio/code-quality/code-metrics-maintainability-index-range-and-meaning}.")
    (license license:expat)))

(define-public go-github-com-yalp-jsonpath
  (package
    (name "go-github-com-yalp-jsonpath")
    (version "0.0.0-20180802001716-5cc68e5049a0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yalp/jsonpath")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0kkyxp1cg3kfxy5hhwzxg132jin4xb492z5jpqq94ix15v6rdf4b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yalp/jsonpath"))
    (home-page "https://github.com/yalp/jsonpath")
    (synopsis "jsonpath")
    (description
     "Package jsonpath implements Stefan Goener's JSONPath
@@url{http://goessner.net/articles/@code{JsonPath/,http://goessner.net/articles/JsonPath}/}.")
    (license license:bsd-3)))

(define-public go-github-com-yandex-cloud-go-genproto
  (package
    (name "go-github-com-yandex-cloud-go-genproto")
    (version "0.0.0-20241220122821-aeb3b05efd1c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yandex-cloud/go-genproto")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f6xpxnq3inzb1y07q06alsgh0bdyripp6svc0f0id92d6f6rq7a"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yandex-cloud/go-genproto"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto))
    (home-page "https://github.com/yandex-cloud/go-genproto")
    (synopsis "Go generated proto packages")
    (description
     "This repository contains the generated Go packages for Yandex.Cloud API.")
    (license license:expat)))

(define-public go-github-com-yandex-cloud-go-sdk
  (package
    (name "go-github-com-yandex-cloud-go-sdk")
    (version "0.0.0-20241220131134-2393e243c134")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yandex-cloud/go-sdk")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "096fsg8xbcg0306bfrjn7w1b978k3m75pbxq6nd0sjjsrs1xvbdz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yandex-cloud/go-sdk"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-golang-org-x-net
                             go-github-com-yandex-cloud-go-genproto
                             go-github-com-stretchr-testify
                             go-github-com-mitchellh-go-testing-interface
                             go-github-com-hashicorp-go-multierror
                             go-github-com-google-uuid
                             go-github-com-golang-jwt-jwt-v4
                             go-github-com-ghodss-yaml ; packaged
                             go-github-com-c2h5oh-datasize))
    (home-page "https://github.com/yandex-cloud/go-sdk")
    (synopsis "Yandex.Cloud Go SDK")
    (description "Go SDK for Yandex.Cloud services.")
    (license license:expat)))

(define-public go-github-com-yashtewari-glob-intersection
  (package
    (name "go-github-com-yashtewari-glob-intersection")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yashtewari/glob-intersection")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sw3dag2qwx14z0pj1l0v33majk82s1vx9fsnjr3l69dq7jf212b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yashtewari/glob-intersection"))
    (home-page "https://github.com/yashtewari/glob-intersection")
    (synopsis "glob-intersection")
    (description
     "Package gintersect provides methods to check whether the intersection of several
globs matches a non-empty set of strings.")
    (license license:asl2.0)))

(define-public go-github-com-yeya24-promlinter
  (package
    (name "go-github-com-yeya24-promlinter")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yeya24/promlinter")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0flmi0adwqhr6cbq2l73sngwpri37gdmi74lymz0w382pwhfyri1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yeya24/promlinter"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-gopkg-in-alecthomas-kingpin-v2
                             go-github-com-stretchr-testify
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged
))
    (home-page "https://github.com/yeya24/promlinter")
    (synopsis "promlinter")
    (description
     "This package provides a linter for checking Prometheus metrics name via
promlint.")
    (license license:asl2.0)))

(define-public go-github-com-ykadowak-zerologlint
  (package
    (name "go-github-com-ykadowak-zerologlint")
    (version "0.1.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ykadowak/zerologlint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0l5qy8g9sz79z4vbf2f02b9mcfppyrd4h550x4vgh2vm7lnrvhy6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ykadowak/zerologlint"))
    (propagated-inputs (list go-golang-org-x-tools
                             go-github-com-gostaticanalysis-testutil
                             go-github-com-gostaticanalysis-comment))
    (home-page "https://github.com/ykadowak/zerologlint")
    (synopsis "zerologlint")
    (description
     "@@code{zerologlint} is a linter for @@url{https://github.com/rs/zerolog,zerolog}
that can be run with @@code{go vet} or through
@@url{https://golangci-lint.run/,golangci-lint} since @@code{v1.53.0}.  It
detects the wrong usage of @@code{zerolog} that a user forgets to dispatch
@@code{zerolog.Event} with @@code{Send} or @@code{Msg} like functions, in which
case nothing will be logged.  For more detailed explanations of the cases it
detects, see @@url{#readme-Example,Examples}.")
    (license license:expat)))

(define-public go-github-com-yohcop-openid-go
  (package
    (name "go-github-com-yohcop-openid-go")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yohcop/openid-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dkxsivwlv7zmk44iwhphrqx2fv2sighlf6vz451m9lap47851s9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yohcop/openid-go"))
    (propagated-inputs (list go-golang-org-x-net))
    (home-page "https://github.com/yohcop/openid-go")
    (synopsis "openid.go")
    (description
     "This is a consumer (Relying party) implementation of @code{OpenId} 2.0, written
in Go.")
    (license license:asl2.0)))

(define-public go-github-com-yosssi-ace
  (package
    (name "go-github-com-yosssi-ace")
    (version "0.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yosssi/ace")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1kbvbc56grrpnl65grygd23gyn3nkkhxdg8awhzkjmd0cvki8w1f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yosssi/ace"))
    (home-page "https://github.com/yosssi/ace")
    (synopsis "Ace - HTML template engine for Go")
    (description "Package ace provides an HTML template engine.")
    (license license:expat)))

(define-public go-github-com-ysmood-fetchup
  (package
    (name "go-github-com-ysmood-fetchup")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ysmood/fetchup")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ncjygnjf2fnjpvgl2y2hl6iyrxc64syvmw9svbf0azfy0qsvx0l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ysmood/fetchup"))
    (propagated-inputs (list go-github-com-ysmood-got))
    (home-page "https://github.com/ysmood/fetchup")
    (synopsis "Overview")
    (description
     "This package provides a lib to fetch the target file from remote.  It will auto
choose the fastest url to download and decompress the file.")
    (license license:expat)))

(define-public go-github-com-ysmood-goob
  (package
    (name "go-github-com-ysmood-goob")
    (version "0.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ysmood/goob")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z4632i1mx9rxslq7b9jd4zg600wangxyirh99fxsv0i2jprak53"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ysmood/goob"))
    (propagated-inputs (list go-github-com-ysmood-gotrace))
    (home-page "https://github.com/ysmood/goob")
    (synopsis "Overview")
    (description
     "This package provides a lightweight observable lib.  Go channel doesn't support
unlimited buffer size, it's a pain to decide what size to use, this lib will
handle it dynamically.")
    (license license:expat)))

(define-public go-github-com-ysmood-gop
  (package
    (name "go-github-com-ysmood-gop")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ysmood/gop")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d90p476k6qpr2wbxblcfa7fk405m3ci2by83kihljp8220qqigg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ysmood/gop"))
    (home-page "https://github.com/ysmood/gop")
    (synopsis "Go Pretty Print Value")
    (description "Package gop ...")
    (license license:expat)))

(define-public go-github-com-ysmood-got
  (package
    (name "go-github-com-ysmood-got")
    (version "0.40.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ysmood/got")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09wfjgbyw60bja4iqq0m0yzfih4wnbdy1v4b3q4cslq3f20a6mh3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ysmood/got"))
    (propagated-inputs (list go-github-com-ysmood-gop))
    (home-page "https://github.com/ysmood/got")
    (synopsis "Overview")
    (description "Package got is an enjoyable golang test framework.")
    (license license:expat)))

(define-public go-github-com-ysmood-gotrace
  (package
    (name "go-github-com-ysmood-gotrace")
    (version "0.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ysmood/gotrace")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06jzxbi27mknkx5kp5zramca16r9i423dhmlp17r4r75znhklgaz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ysmood/gotrace"))
    (home-page "https://github.com/ysmood/gotrace")
    (synopsis "Overview")
    (description
     "This package provides a lib for monitoring runtime goroutine stack.  Such as
wait for goroutines to exit, leak detection, etc.")
    (license license:expat)))

(define-public go-github-com-ysmood-gson
  (package
    (name "go-github-com-ysmood-gson")
    (version "0.7.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ysmood/gson")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ha7w3igak5mfk4dgr0wdvn9sv9xdxwymihfin1d4ajgi975qzhf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ysmood/gson"))
    (home-page "https://github.com/ysmood/gson")
    (synopsis "Overview")
    (description
     "Package gson A tiny JSON lib to read and alter a JSON value.")
    (license license:expat)))

(define-public go-github-com-ysmood-leakless
  (package
    (name "go-github-com-ysmood-leakless")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ysmood/leakless")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13yas5q77apk3zjp532pms4005zpzqlb0bbhvw6m0ky5cxpz4rww"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ysmood/leakless"))
    (home-page "https://github.com/ysmood/leakless")
    (synopsis "leakless")
    (description
     "Run sub-process and make sure to kill it when the parent process exits.  The way
how it works is to output a standalone executable file to guard the subprocess
and check parent TCP connection with a UUID. So that it works consistently on
Linux, Mac, and Windows.")
    (license license:expat)))

(define-public go-github-com-yuin-goldmark-highlighting-v2
  (package
    (name "go-github-com-yuin-goldmark-highlighting-v2")
    (version "2.0.0-20230729083705-37449abec8cc")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yuin/goldmark-highlighting")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "163jbi8si9qxcabzni39qypj495y48rabkkchc03ay68p19v160y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yuin/goldmark-highlighting/v2"
      #:unpack-path "github.com/yuin/goldmark-highlighting"))
    (propagated-inputs (list go-github-com-yuin-goldmark
                             go-github-com-alecthomas-chroma-v2))
    (home-page "https://github.com/yuin/goldmark-highlighting")
    (synopsis "goldmark-highlighting")
    (description
     "package highlighting is a extension for the
goldmark(@@url{http://github.com/yuin/goldmark,http://github.com/yuin/goldmark}).")
    (license license:expat)))

(define-public go-github-com-yuin-goldmark-meta
  (package
    (name "go-github-com-yuin-goldmark-meta")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/yuin/goldmark-meta")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07dnwpkcifk9lw25ncflwdzmp8xqwbsbq0bnw3v7ljz9i8zi3ya3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yuin/goldmark-meta"))
    (propagated-inputs (list go-gopkg-in-yaml-v2 go-github-com-yuin-goldmark))
    (home-page "https://github.com/yuin/goldmark-meta")
    (synopsis "goldmark-meta")
    (description
     "package meta is a extension for the
goldmark(@@url{http://github.com/yuin/goldmark,http://github.com/yuin/goldmark}).")
    (license license:expat)))

(define-public go-github-com-yunify-qingstor-sdk-go-v3
  (package
    (name "go-github-com-yunify-qingstor-sdk-go-v3")
    (version "3.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/qingstor/qingstor-sdk-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m7lnvkvn66r50gjhlfymhw3cslqa9q815y6vwad4gdwnj7bhfwl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/yunify/qingstor-sdk-go/v3"
      #:unpack-path "github.com/yunify/qingstor-sdk-go"))
    (propagated-inputs (list go-gopkg-in-yaml-v2
                             go-github-com-stretchr-testify
                             go-github-com-pengsrc-go-shared))
    (home-page "https://github.com/yunify/qingstor-sdk-go")
    (synopsis "QingStor SDK for Go")
    (description
     "Package sdk is the official @code{QingStor} SDK for the Go programming language.")
    (license license:asl2.0)))

(define-public go-github-com-zclconf-go-cty-debug
  (package
    (name "go-github-com-zclconf-go-cty-debug")
    (version "0.0.0-20240509010212-0d6042c53940")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zclconf/go-cty-debug")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0izkqnciir10zamr1ca32bmyir1d5hfyxh84dj2q39bw1sj3fs7j"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zclconf/go-cty-debug"))
    (propagated-inputs (list go-github-com-zclconf-go-cty
                             go-github-com-google-go-cmp))
    (home-page "https://github.com/zclconf/go-cty-debug")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-github-com-zeebo-admission-v3
  (package
    (name "go-github-com-zeebo-admission-v3")
    (version "3.0.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/admission")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lvgpdnz7iapq5gzm2xbr6pz05wd1ackmy0z102sh72fzv9d5w6x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/admission/v3"
      #:unpack-path "github.com/zeebo/admission"))
    (propagated-inputs (list go-github-com-zeebo-incenc
                             go-github-com-zeebo-float16
                             go-github-com-zeebo-errs
                             go-github-com-zeebo-assert
                             go-github-com-spacemonkeygo-monkit-v3))
    (home-page "https://github.com/zeebo/admission")
    (synopsis #f)
    (description "package admission is a fast way to ingest/send metrics.")
    (license license:asl2.0)))

(define-public go-github-com-zeebo-errs
  (package
    (name "go-github-com-zeebo-errs")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/errs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bvmqpxr7gk38yl1wz6llwjgd5ys3ls0m150wjmmr61nggb5n7dy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/errs"))
    (home-page "https://github.com/zeebo/errs")
    (synopsis "errs")
    (description
     "Package errs provides a simple error package with stack traces.")
    (license license:expat)))

(define-public go-github-com-zeebo-errs-v2
  (package
    (name "go-github-com-zeebo-errs-v2")
    (version "2.0.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/errs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1121d876l002d7vd8816fzymdv90q6x04lcjgxgr0rkczzlzbynp"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/errs/v2"
      #:unpack-path "github.com/zeebo/errs"))
    (propagated-inputs (list go-github-com-zeebo-assert))
    (home-page "https://github.com/zeebo/errs")
    (synopsis "errs/v2")
    (description
     "Package errs provides a simple error package with stack traces.")
    (license license:expat)))

(define-public go-github-com-zeebo-float16
  (package
    (name "go-github-com-zeebo-float16")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/float16")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06qh3fchm5a12lx8kq7nlmfjfvla9smh3zz8s7w083rjlgpyanyl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/float16"))
    (home-page "https://github.com/zeebo/float16")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-zeebo-goof
  (package
    (name "go-github-com-zeebo-goof")
    (version "0.0.0-20240528180144-f1d11ca928f2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/goof")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zckl852npidlwdz0nrj4p418hg910skl9qipr6n9fjg7zljjwnk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/goof"))
    (propagated-inputs (list go-github-com-zeebo-errs))
    (home-page "https://github.com/zeebo/goof")
    (synopsis "Goof")
    (description "package goof is something you should never import.")
    (license license:asl2.0)))

(define-public go-github-com-zeebo-incenc
  (package
    (name "go-github-com-zeebo-incenc")
    (version "0.0.0-20180505221441-0d92902eec54")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/incenc")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yzyrcgw65lb8rmgbqid4czrarakm4mbzr89qws8dpywq93i2wd2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/incenc"))
    (home-page "https://github.com/zeebo/incenc")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-zeebo-mwc
  (package
    (name "go-github-com-zeebo-mwc")
    (version "0.0.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/mwc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lzgyhm51vprz86nd0c15ffgk01xphxnfffhj8dc12c9yly38g8v"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/mwc"))
    (propagated-inputs (list go-github-com-zeebo-assert))
    (home-page "https://github.com/zeebo/mwc")
    (synopsis #f)
    (description #f)
    (license license:cc0)))

(define-public go-github-com-zeebo-structs
  (package
    (name "go-github-com-zeebo-structs")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/structs")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hjhjsyrnkm50d1xw66ar7sxcy0sgjs9x7qxf92hw7ysfm13yn7l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/structs"))
    (propagated-inputs (list go-github-com-zeebo-errs
                             go-github-com-zeebo-assert
                             go-github-com-spf13-cast))
    (home-page "https://github.com/zeebo/structs")
    (synopsis "Structs")
    (description "Option controls the operation of a Decode.")
    (license license:expat)))

(define-public go-github-com-zeebo-sudo
  (package
    (name "go-github-com-zeebo-sudo")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/sudo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ih2cx823vdc5g4pvq3bqjir0x9lyn3dx8ka4gkmr9mbxqak1sb5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/sudo"))
    (home-page "https://github.com/zeebo/sudo")
    (synopsis "Sudo")
    (description
     "sudo is a package to make reflect more powerful (and dangerous).")
    (license license:expat)))

(define-public go-github-com-zeebo-xxh3
  (package
    (name "go-github-com-zeebo-xxh3")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zeebo/xxh3")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gy666r5v1d1n2cfig9plhyp7z09f06k6mr5lrf0mk6psk6bnwgi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zeebo/xxh3"))
    (propagated-inputs (list go-github-com-zeebo-assert
                             go-github-com-klauspost-cpuid-v2))
    (home-page "https://github.com/zeebo/xxh3")
    (synopsis "XXH3")
    (description
     "This package is a port of the
@@url{https://github.com/Cyan4973/@code{xxHash,xxh3}} library to Go.")
    (license license:bsd-2)))

(define-public go-github-com-zfjagann-golang-ring
  (package
    (name "go-github-com-zfjagann-golang-ring")
    (version "0.0.0-20220330170733-19bcea1b6289")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zealws/golang-ring")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1x8bqmcn2iwv0m5zsgr2ycmii5swk90hm8xbmjy0bi8hjd7qlcxx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zfjagann/golang-ring"))
    (home-page "https://github.com/zfjagann/golang-ring")
    (synopsis "ring")
    (description
     "Package ring provides a simple implementation of a ring buffer.")
    (license license:bsd-3)))

(define-public go-github-com-ziutek-mymysql
  (package
    (name "go-github-com-ziutek-mymysql")
    (version "1.5.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ziutek/mymysql")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "172s7sv5bgc40x81k18hypf9c4n8hn9v5w5zwyr4mi5prbavqcci"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/ziutek/mymysql"))
    (home-page "https://github.com/ziutek/mymysql")
    (synopsis "MyMySQL v1.5.4 (2015-01-08)")
    (description
     "Sorry for my poor English.  If you can help with improving the English in this
documentation, please contact me.")
    (license license:bsd-3)))

(define-public go-github-com-ziutek-telnet
  (package
    (name "go-github-com-ziutek-telnet")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ziutek/telnet")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0w0zn8yhpmhrph41dlf9pn5h1zzhgajxwbx85fk4d0m55xp0r680"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "github.com/ziutek/telnet"))
    (home-page "https://github.com/ziutek/telnet")
    (synopsis #f)
    (description
     "Package telnet provides simple interface for interacting with Telnet connection.")
    (license license:bsd-3)))

(define-public go-github-com-zmap-rc2
  (package
    (name "go-github-com-zmap-rc2")
    (version "0.0.0-20190804163417-abaa70531248")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zmap/rc2")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ghg9k628a32iivpb5bd8xx5cjbxsbbm3rnmi3qjjbywb1y9kk68"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zmap/rc2"))
    (home-page "https://github.com/zmap/rc2")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-github-com-zmap-zcertificate
  (package
    (name "go-github-com-zmap-zcertificate")
    (version "0.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zmap/zcertificate")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lxayyxb0gvls1l05jglqdf8b7zxz3gw94kwbgxvshs7lc0s6hnw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zmap/zcertificate"))
    (propagated-inputs (list go-github-com-zmap-zlint-v3
                             go-github-com-zmap-zcrypto
                             go-github-com-sirupsen-logrus
                             ))
    (home-page "https://github.com/zmap/zcertificate")
    (synopsis "ZCertificate")
    (description "ZCertificate parses X.509 certificates and runs
@@url{https://github.com/zmap/zlint,ZLint}.")
    (license license:asl2.0)))

(define-public go-github-com-zmap-zcrypto
  (package
    (name "go-github-com-zmap-zcrypto")
    (version "0.0.0-20241218205341-e47c4f4da3a4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zmap/zcrypto")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0i8wgwygjj9c9jc3w3pnq8an8jfxbi2jp8c9czhrc74jl70vnjsm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zmap/zcrypto"))
    (propagated-inputs (list go-gopkg-in-check-v1
                             go-golang-org-x-net
                             go-golang-org-x-crypto
                             go-github-com-zmap-zcertificate
                             go-github-com-zmap-rc2
                             go-github-com-weppos-publicsuffix-go
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-op-go-logging
                             go-github-com-mreiferson-go-httpclient))
    (home-page "https://github.com/zmap/zcrypto")
    (synopsis "ZCrypto")
    (description
     "ZCrypto is a research and data collection cryptography library, designed to be
used for measuring and analyzing cryptographic deployments on the Internet.  It
is largely centered around the @code{WebPKI}.")
    (license license:expat))) ; check-license

(define-public go-github-com-zmap-zlint-v3
  (package
    (name "go-github-com-zmap-zlint-v3")
    (version "3.6.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zmap/zlint")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gczd1qg958zarxlrmvfccccraz7yvicngaviskq16vgwd302n0l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "github.com/zmap/zlint/v3"
      #:unpack-path "github.com/zmap/zlint"))
    (propagated-inputs (list go-golang-org-x-text
                             go-golang-org-x-net
                             go-golang-org-x-crypto
                             go-github-com-zmap-zcrypto
                             go-github-com-sirupsen-logrus
                             go-github-com-pelletier-go-toml))
    (home-page "https://github.com/zmap/zlint")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-github-com-zricethezav-gitleaks-v8
  (package
    (name "go-github-com-zricethezav-gitleaks-v8")
    (version "8.22.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gitleaks/gitleaks")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19mz0z5l04wv18mwgnhbmj2b0yvcwahv71qgdc8qhkmzima375rw"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "github.com/zricethezav/gitleaks/v8"
      #:unpack-path "github.com/zricethezav/gitleaks"))
    (propagated-inputs (list go-github-com-wasilibs-go-re2
                             go-github-com-lucasjones-reggen
                             go-golang-org-x-exp
                             go-github-com-stretchr-testify
                             go-github-com-spf13-viper
                             go-github-com-spf13-cobra
                             go-github-com-rs-zerolog ; packaged
                             go-github-com-h2non-filetype ; packaged
                             go-github-com-google-go-cmp
                             go-github-com-gitleaks-go-gitdiff
                             go-github-com-fatih-semgroup
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-masterminds-sprig-v3
                             go-github-com-bobusumisu-aho-corasick))
    (home-page "https://github.com/zricethezav/gitleaks")
    (synopsis "Gitleaks")
    (description
     "Gitleaks is a tool for @@strong{detecting} secrets like passwords, API keys, and
tokens in git repos, files, and whatever else you wanna throw at it via
@@code{stdin}.")
    (license license:expat)))

(define-public go-gitlab-com-bosi-decorder
  (package
    (name "go-gitlab-com-bosi-decorder")
    (version "0.4.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/bosi/decorder.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0g9x5f7mhvdzwki57902qgb4ih2gipkg255nf9hjv30flfnl2294"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/bosi/decorder"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://gitlab.com/bosi/decorder")
    (synopsis "Decorder")
    (description
     "This package provides a declaration order linter for Go.  In case of this tool
declarations are @@code{type}, @@code{const}, @@code{var} and @@code{func}.")
    (license license:expat)))

(define-public go-gitlab-com-digitalxero-go-conventional-commit
  (package
    (name "go-gitlab-com-digitalxero-go-conventional-commit")
    (version "1.0.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/digitalxero/go-conventional-commit.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1191j3k9ma5sv8w2zsw8gb1407561zll0ca8hwy0dja6s0b3z0xy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/digitalxero/go-conventional-commit"))
    (home-page "https://gitlab.com/digitalxero/go-conventional-commit")
    (synopsis "go-conventional-commit")
    (description
     "golang parser for conventional-commit messages
@@url{https://www.conventionalcommits.org/,https://www.conventionalcommits.org/}.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-fleeting-fleeting
  (package
    (name "go-gitlab-com-gitlab-org-fleeting-fleeting")
    (version "0.0.0-20241205014612-e4f2f6fcf29e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/fleeting/fleeting.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wahnh8j925vmhbsj1fnw0ng2fgi5zsiph8z76jdss08bfjh22hk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/gitlab-org/fleeting/fleeting"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-mod
                             go-golang-org-x-crypto
                             go-github-com-stretchr-testify
                             go-github-com-masterzen-winrm
                             go-github-com-hashicorp-go-plugin
                             go-github-com-hashicorp-go-hclog
                             go-github-com-microsoft-go-winio))
    (home-page "https://gitlab.com/gitlab-org/fleeting/fleeting")
    (synopsis "Fleeting")
    (description
     "Fleeting is an abstraction for cloud providers instance groups.  It allows for
the provisioning of multiple identical instances with a minimal API focused on
just creation, connection and deletion.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-fleeting-fleeting-artifact
  (package
    (name "go-gitlab-com-gitlab-org-fleeting-fleeting-artifact")
    (version "0.0.0-20241018172108-3f6e6586dc5c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url
              "https://gitlab.com/gitlab-org/fleeting/fleeting-artifact.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0r04adv91y5vjxn6mxb7vzpig106w8lf6w66qijp9zazx7psz8a4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/gitlab-org/fleeting/fleeting-artifact"))
    (propagated-inputs (list go-golang-org-x-mod
                             go-github-com-google-go-containerregistry
                             go-github-com-docker-cli
                             go-github-com-containerd-platforms ; packaged
                             ))
    (home-page "https://gitlab.com/gitlab-org/fleeting/fleeting-artifact")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-gitlab-com-gitlab-org-fleeting-fleeting-metrics-prometheus
  (package
    (name "go-gitlab-com-gitlab-org-fleeting-fleeting-metrics-prometheus")
    (version "0.0.0-20241205014612-e4f2f6fcf29e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/fleeting/fleeting.git")
             (commit (go-version->git-ref version
                                          #:subdir "metrics/prometheus"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1wahnh8j925vmhbsj1fnw0ng2fgi5zsiph8z76jdss08bfjh22hk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "gitlab.com/gitlab-org/fleeting/fleeting/metrics/prometheus"
      #:unpack-path "gitlab.com/gitlab-org/fleeting/fleeting"))
    (propagated-inputs (list go-github-com-prometheus-client-golang ; packaged
))
    (home-page "https://gitlab.com/gitlab-org/fleeting/fleeting")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-fleeting-nesting
  (package
    (name "go-gitlab-com-gitlab-org-fleeting-nesting")
    (version "0.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/fleeting/nesting.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z1nzlzb1ygjmxhd1cvv4dbs8cxnxn80fscf835vabflkb631678"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/gitlab-org/fleeting/nesting"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-net
                             go-github-com-stretchr-testify
                             go-github-com-klauspost-compress ; packaged
                             go-github-com-code-hex-vz-v3
                             go-github-com-code-hex-gvisor-vmnet))
    (home-page "https://gitlab.com/gitlab-org/fleeting/nesting")
    (synopsis "nesting")
    (description
     "@@code{nesting} is a basic and opinionated daemon that sits in front of
virtualization platforms.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-fleeting-taskscaler
  (package
    (name "go-gitlab-com-gitlab-org-fleeting-taskscaler")
    (version "0.0.0-20241015171421-f3cdb5de12a4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/fleeting/taskscaler.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mlavdqv635yfk28s167bpqcdyphgrn03a71j0svch6bpcwkfwcg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "gitlab.com/gitlab-org/fleeting/taskscaler"))
    (propagated-inputs (list go-golang-org-x-time
                             go-gitlab-com-gitlab-org-fleeting-fleeting
                             go-github-com-stretchr-testify
                             go-github-com-hashicorp-go-hclog))
    (home-page "https://gitlab.com/gitlab-org/fleeting/taskscaler")
    (synopsis "Taskscaler")
    (description
     "Taskscaler is an autoscaler for provisioning instances (via fleeting) and
allocating and assigning tasks to them.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-fleeting-taskscaler-metrics-prometheus
  (package
    (name "go-gitlab-com-gitlab-org-fleeting-taskscaler-metrics-prometheus")
    (version "0.0.0-20241015171421-f3cdb5de12a4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/fleeting/taskscaler.git")
             (commit (go-version->git-ref version
                                          #:subdir "metrics/prometheus"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mlavdqv635yfk28s167bpqcdyphgrn03a71j0svch6bpcwkfwcg"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path
      "gitlab.com/gitlab-org/fleeting/taskscaler/metrics/prometheus"
      #:unpack-path "gitlab.com/gitlab-org/fleeting/taskscaler"))
    (propagated-inputs (list go-github-com-prometheus-client-golang ; packaged
))
    (home-page "https://gitlab.com/gitlab-org/fleeting/taskscaler")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-gitlab-runner
  (package
    (name "go-gitlab-com-gitlab-org-gitlab-runner")
    (version "17.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/gitlab-runner.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gncplyc7png0dr88vpfpdg99dzyb12m9arqqzjyn6rzv6g6bysr"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/gitlab-org/gitlab-runner"))
    (native-inputs
     (list go-cloud-google-com-go-compute-metadata     ; packaged
           go-cloud-google-com-go-iam
           go-cloud-google-com-go-secretmanager
           go-cloud-google-com-go-storage
           go-dario-cat-mergo
           go-github-com-akeylesslabs-akeyless-go-cloud-id
           go-github-com-akeylesslabs-akeyless-go-v3
           go-github-com-alexflint-go-arg
           go-github-com-aws-aws-sdk-go-v2
           go-github-com-aws-aws-sdk-go-v2-config
           go-github-com-aws-aws-sdk-go-v2-credentials
           go-github-com-aws-aws-sdk-go-v2-service-s3
           go-github-com-aws-aws-sdk-go-v2-service-sts
           go-github-com-azure-azure-sdk-for-go-sdk-azcore
           go-github-com-azure-azure-sdk-for-go-sdk-azidentity
           go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
           go-github-com-bmatcuk-doublestar-v4
           go-github-com-burntsushi-toml               ; packaged
           go-github-com-creack-pty                    ; packaged
           go-github-com-denisbrodbeck-machineid
           go-github-com-docker-cli
           go-github-com-docker-distribution
           go-github-com-docker-docker
           go-github-com-docker-go-connections ; packaged
           go-github-com-docker-go-units               ; packaged
           go-github-com-docker-machine
           go-github-com-evanphx-json-patch
           go-github-com-fatih-color
           go-github-com-fullsailor-pkcs7
           go-github-com-getsentry-sentry-go           ; packaged
           go-github-com-go-http-utils-headers
           go-github-com-golang-mock ; packaged
           go-github-com-googleapis-gax-go-v2
           go-github-com-gorhill-cronexpr
           go-github-com-gorilla-websocket
           go-github-com-hashicorp-go-hclog
           go-github-com-hashicorp-go-multierror
           go-github-com-hashicorp-go-version
           go-github-com-hashicorp-vault-api
           go-github-com-in-toto-in-toto-golang
           go-github-com-invopop-jsonschema
           go-github-com-jedib0t-go-pretty-v6
           go-github-com-johannesboyne-gofakes3
           go-github-com-jpillora-backoff
           go-github-com-kardianos-service             ; packaged
           go-github-com-kelseyhightower-envconfig
           go-github-com-kimmachinegun-automemlimit    ; packaged
           go-github-com-klauspost-compress            ; packaged
           go-github-com-klauspost-pgzip
           go-github-com-magefile-mage
           go-github-com-minio-minio-go-v7             ; packaged
           go-github-com-opencontainers-image-spec ; packaged
           go-github-com-prometheus-client-golang ; packaged
 ; packaged
           go-github-com-prometheus-client-model       ; packaged
           go-github-com-prometheus-common             ; packaged
           go-github-com-prometheus-procfs
           go-github-com-samber-lo                     ; packaged
           go-github-com-santhosh-tekuri-jsonschema-v5 ; packaged
           go-github-com-saracen-fastzip
           go-github-com-sirupsen-logrus
           go-github-com-sourcegraph-conc              ; packaged
           go-github-com-stretchr-testify              ; packaged
           go-github-com-urfave-cli                    ;; packaged
           go-gitlab-com-gitlab-org-fleeting-fleeting
           go-gitlab-com-gitlab-org-fleeting-fleeting-artifact
           go-gitlab-com-gitlab-org-fleeting-fleeting-metrics-prometheus
           go-gitlab-com-gitlab-org-fleeting-nesting
           go-gitlab-com-gitlab-org-fleeting-taskscaler
           go-gitlab-com-gitlab-org-fleeting-taskscaler-metrics-prometheus
           go-gitlab-com-gitlab-org-gitlab-terminal
           go-gitlab-com-gitlab-org-golang-cli-helpers
           go-gitlab-com-gitlab-org-labkit
           go-gitlab-com-gitlab-org-step-runner
           go-go-uber-org-automaxprocs                 ; packaged
           go-gocloud-dev
           go-golang-org-x-crypto                      ; packaged
           go-golang-org-x-net                         ; packaged
           go-golang-org-x-oauth2                      ; packaged
           go-golang-org-x-sync                        ; packaged
           go-golang-org-x-sys                         ; packaged
           go-golang-org-x-text                        ; packaged
           go-google-golang-org-api
           go-google-golang-org-grpc                   ; packaged
           go-google-golang-org-protobuf               ; packaged
           go-gopkg-in-yaml-v2                         ; packaged
           go-k8s-io-api
           go-k8s-io-apimachinery
           go-k8s-io-client-go
           go-mvdan-cc-sh-v3 ; packaged
           go-sigs-k8s-io-yaml))
    (home-page "https://gitlab.com/gitlab-org/gitlab-runner")
    (synopsis "GitLab Runner")
    (description
     "This is the repository of the official @code{GitLab} Runner written in Go.  It
runs tests and sends the results to @code{GitLab}.
@@url{https://about.gitlab.com/gitlab-ci,@code{GitLab} CI} is the open-source
continuous integration service included with @code{GitLab} that coordinates the
testing.  The old name of this project was @code{GitLab} CI Multi Runner but
please use \"@code{GitLab} Runner\" (without CI) from now on.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-gitlab-terminal
  (package
    (name "go-gitlab-com-gitlab-org-gitlab-terminal")
    (version "0.0.0-20230425165333-62e9b619707c")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/gitlab-terminal.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1lr5mfm1yjiy08y62g29397q3655ch97h11aplc93fxk8y27ij6y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/gitlab-org/gitlab-terminal"))
    (propagated-inputs (list go-golang-org-x-text
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-gorilla-websocket))
    (home-page "https://gitlab.com/gitlab-org/gitlab-terminal")
    (synopsis "Gitlab Terminal")
    (description
     "This Go library contains the code that powers the web terminal implementation of
Gitlab for environments and CI jobs.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-go-reopen
  (package
    (name "go-gitlab-com-gitlab-org-go-reopen")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/go/reopen.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f0dpdbmvk7w518c6zjhlmp65y55vvx47x4lq9pgzvcbsvjsf18s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/gitlab-org/go/reopen"))
    (home-page "https://gitlab.com/gitlab-org/go/reopen")
    (synopsis #f)
    (description
     "Makes a standard os.File a \"reopenable writer\" and allows SIGHUP signals to
reopen log files, as needed by
@@url{https://fedorahosted.org/logrotate/,logrotated}.  This is inspired by the
C/Posix
@@url{http://pubs.opengroup.org/onlinepubs/009695399/functions/freopen.html,freopen}.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-golang-cli-helpers
  (package
    (name "go-gitlab-com-gitlab-org-golang-cli-helpers")
    (version "0.0.0-20220124161940-198f30295e7e")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/golang-cli-helpers.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1rifbk37jkx0m5gjl4a18yjb7v874ygqnw9dv86hbkiqhq0hxrik"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/gitlab-org/golang-cli-helpers"))
    (home-page "https://gitlab.com/gitlab-org/golang-cli-helpers")
    (synopsis "License")
    (description "MIT.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-labkit
  (package
    (name "go-gitlab-com-gitlab-org-labkit")
    (version "1.21.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/labkit.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0j07vj4ir70f22z212fzfx0v9k0fzvrgsfgivndb6jmq7k7bzm0y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/gitlab-org/labkit"))
    (propagated-inputs (list go-gopkg-in-datadog-dd-trace-go-v1
                             go-google-golang-org-grpc
                             go-google-golang-org-api
                             go-go-opencensus-io ; packaged
                             go-gitlab-com-gitlab-org-go-reopen
                             go-github-com-uber-jaeger-client-go
                             go-github-com-stretchr-testify
                             go-github-com-sirupsen-logrus
                             go-github-com-sebest-xff ; packaged
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-opentracing-opentracing-go
                             go-github-com-oklog-ulid-v2
                             go-github-com-lightstep-lightstep-tracer-go
                             go-github-com-grpc-ecosystem-go-grpc-middleware
                             go-github-com-getsentry-sentry-go ; packaged
                             ;; go-github-com-getsentry-raven-go ; deprecated
                             go-contrib-go-opencensus-io-exporter-stackdriver
                             go-cloud-google-com-go-profiler))
    (home-page "https://gitlab.com/gitlab-org/labkit")
    (synopsis "LabKit 🧪 🔬 🥼 🥽 🦠 🧫 🧬 💉")
    (description
     "Package labkit is a minimalist library to provide functionality for Go services
at @code{GitLab}.")
    (license license:expat)))

(define-public go-gitlab-com-gitlab-org-step-runner
  (package
    (name "go-gitlab-com-gitlab-org-step-runner")
    (version "0.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/gitlab-org/step-runner.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ds2l5ppsq28rrz093fi6mwcyl5gs1bmfbjk2hxiywh2m6gq605q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "gitlab.com/gitlab-org/step-runner"))
    (native-inputs
     (list go-github-com-spf13-cobra ; for CLI
           go-github-com-stretchr-testify))
    (propagated-inputs
     (list go-github-com-containerd-platforms
           go-github-com-distribution-distribution-v3
           go-github-com-go-git-go-billy-v5
           go-github-com-go-git-go-git-v5
           go-github-com-google-go-containerregistry
           go-github-com-joho-godotenv ; packaged
           go-github-com-santhosh-tekuri-jsonschema-v5
           go-golang-org-x-exp
           go-golang-org-x-mod
           go-golang-org-x-net
           go-golang-org-x-sync
           go-google-golang-org-grpc
           go-google-golang-org-protobuf
           go-gopkg-in-yaml-v3))
    (home-page "https://gitlab.com/gitlab-org/step-runner")
    (synopsis "GitLab Step Runner")
    (description
     "Step Runner is an RFC implementation for
@url{https://docs.gitlab.com/ee/architecture/blueprints/gitlab_steps/, GitLab
Steps}, a CI/CD feature to define and use reusable components within a single
job execution context.")
    (license license:expat)))

(define-public go-gitlab-com-golang-commonmark-html
  (package
    (name "go-gitlab-com-golang-commonmark-html")
    (version "0.0.0-20191124015941-a22733972181")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/golang-commonmark/html.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ack52gzdndwna4673yqh7am62riq75dhn6kf619lpaivpd8d8sb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/golang-commonmark/html"))
    (home-page "https://gitlab.com/golang-commonmark/html")
    (synopsis "html")
    (description
     "Package html provides functions for escaping/unescaping HTML text and for
parsing HTML entities.")
    (license license:bsd-2)))

(define-public go-gitlab-com-golang-commonmark-linkify
  (package
    (name "go-gitlab-com-golang-commonmark-linkify")
    (version "0.0.0-20200225224916-64bca66f6ad3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/golang-commonmark/linkify.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bwlqda7man8z4230mj5z09gq004xk0s1vk2b3axi1yzhql1lzgs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/golang-commonmark/linkify"))
    (home-page "https://gitlab.com/golang-commonmark/linkify")
    (synopsis "linkify")
    (description "Package linkify provides a way to find links in plain text.")
    (license license:bsd-2)))

(define-public go-gitlab-com-golang-commonmark-markdown
  (package
    (name "go-gitlab-com-golang-commonmark-markdown")
    (version "0.0.0-20211110145824-bf3e522c626a")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/golang-commonmark/markdown.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0lvg26gr0g45kh2w9ccl2m7r8xiysv5zlzhgmgklddrgbihnr8wc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/golang-commonmark/markdown"))
    (propagated-inputs (list go-gitlab-com-opennota-wd
                             go-gitlab-com-golang-commonmark-puny
                             go-gitlab-com-golang-commonmark-mdurl
                             go-gitlab-com-golang-commonmark-linkify
                             go-gitlab-com-golang-commonmark-html
                             go-github-com-russross-blackfriday-v2))
    (home-page "https://gitlab.com/golang-commonmark/markdown")
    (synopsis "markdown")
    (description
     "Package markdown provides @code{CommonMark-compliant} markdown parser and
renderer.")
    (license license:bsd-2)))

(define-public go-gitlab-com-golang-commonmark-mdurl
  (package
    (name "go-gitlab-com-golang-commonmark-mdurl")
    (version "0.0.0-20191124015652-932350d1cb84")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/golang-commonmark/mdurl.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ryh2df50hhd2hixd66x4w2jbici5lx75xb23x7vaj24c0s9cis0"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/golang-commonmark/mdurl"))
    (home-page "https://gitlab.com/golang-commonmark/mdurl")
    (synopsis "mdurl")
    (description
     "Package url provides functions for parsing, decoding and encoding URLs.")
    (license license:bsd-2)))

(define-public go-gitlab-com-golang-commonmark-puny
  (package
    (name "go-gitlab-com-golang-commonmark-puny")
    (version "0.0.0-20191124015043-9f83538fa04f")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/golang-commonmark/puny.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jdirr1prkhssf3vc6g5rhs9gs1z8yf8g4l9qzx54i2zml27r7gq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/golang-commonmark/puny"))
    (home-page "https://gitlab.com/golang-commonmark/puny")
    (synopsis "puny")
    (description
     "Package puny provides functions for encoding/decoding to/from punycode.")
    (license license:bsd-2)))

(define-public go-gitlab-com-opennota-wd
  (package
    (name "go-gitlab-com-opennota-wd")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/opennota/wd.git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q8qwlqkc25k4ab2cldfdsjq9c3z0cnjpxngspzkzkf2fr7fkj23"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gitlab.com/opennota/wd"))
    (home-page "https://gitlab.com/opennota/wd")
    (synopsis "wd")
    (description
     "Package wd implements coloured diffs on a word per word basis.")
    (license license:gpl3)))

(define-public go-go-einride-tech-aip
  (package
    (name "go-go-einride-tech-aip")
    (version "0.68.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/einride/aip-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dd0h23gccnpl9rpkq2pqr9036qvcg7dm0hc5sp71as5lnxhs1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.einride.tech/aip"))
    (propagated-inputs (list go-gotest-tools-v3 ; packaged
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-google-golang-org-genproto
                             go-github-com-stoewer-go-strcase
                             go-github-com-google-uuid))
    (home-page "https://go.einride.tech/aip")
    (synopsis "AIP Go")
    (description
     "Package aip provides primitives for implementing API Improvement Proposals
(AIP).")
    (license license:expat)))

(define-public go-go-etcd-io-etcd-v3
  (package
    (name "go-go-etcd-io-etcd-v3")
    (version "3.5.17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/etcd-io/etcd")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13s7650f465q2m6qqw2nadvc18q9hn2g452zy5byag7crm5bnl06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "go.etcd.io/etcd/v3"
      #:unpack-path "go.etcd.io/etcd"))
    (propagated-inputs (list go-gopkg-in-cheggaaa-pb-v1
                             go-google-golang-org-grpc
                             go-golang-org-x-time
                             go-go-uber-org-zap
                             go-go-etcd-io-bbolt
                             go-github-com-spf13-cobra
                             go-github-com-dustin-go-humanize ; packaged
                             go-github-com-bgentry-speakeasy))
    (home-page "https://go.etcd.io/etcd")
    (synopsis "etcd")
    (description
     "@@strong{Note}: The @@code{main} branch may be in an during development.  For
stable versions, see @@url{https://github.com/etcd-io/etcd/releases,releases}.")
    (license license:asl2.0)))

(define-public go-go-etcd-io-etcd-api-v3
  (package
    (name "go-go-etcd-io-etcd-api-v3")
    (version "3.5.17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/etcd-io/etcd")
             (commit (go-version->git-ref version
                                          #:subdir "api"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13s7650f465q2m6qqw2nadvc18q9hn2g452zy5byag7crm5bnl06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "go.etcd.io/etcd/api/v3"
      #:unpack-path "go.etcd.io/etcd"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-github-com-grpc-ecosystem-grpc-gateway
                             go-github-com-golang-protobuf
                             go-github-com-gogo-protobuf
                             go-github-com-coreos-go-semver ; packaged
                             ))
    (home-page "https://go.etcd.io/etcd")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-go-etcd-io-etcd-client-v2
  (package
    (name "go-go-etcd-io-etcd-client-v2")
    (version "2.305.17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/etcd-io/etcd")
             (commit (go-version->git-ref version
                                          #:subdir "client"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13s7650f465q2m6qqw2nadvc18q9hn2g452zy5byag7crm5bnl06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "go.etcd.io/etcd/client/v2"
      #:unpack-path "go.etcd.io/etcd"))
    (propagated-inputs (list go-github-com-modern-go-reflect2
                             go-github-com-json-iterator-go
                             ))
    (home-page "https://go.etcd.io/etcd")
    (synopsis "etcd/client")
    (description "Package client provides bindings for the etcd APIs.")
    (license license:asl2.0)))

(define-public go-go-etcd-io-etcd-client-v3
  (package
    (name "go-go-etcd-io-etcd-client-v3")
    (version "3.5.17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/etcd-io/etcd")
             (commit (go-version->git-ref version
                                          #:subdir "client"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13s7650f465q2m6qqw2nadvc18q9hn2g452zy5byag7crm5bnl06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "go.etcd.io/etcd/client/v3"
      #:unpack-path "go.etcd.io/etcd"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-google-golang-org-grpc
                             go-go-uber-org-zap
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-grpc-ecosystem-go-grpc-prometheus ; packaged
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://go.etcd.io/etcd")
    (synopsis "etcd/clientv3")
    (description
     "Package clientv3 implements the official Go etcd client for v3.")
    (license license:asl2.0)))

(define-public go-go-etcd-io-etcd-client-pkg-v3
  (package
    (name "go-go-etcd-io-etcd-client-pkg-v3")
    (version "3.5.17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/etcd-io/etcd")
             (commit (go-version->git-ref version
                                          #:subdir "client/pkg"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13s7650f465q2m6qqw2nadvc18q9hn2g452zy5byag7crm5bnl06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "go.etcd.io/etcd/client/pkg/v3"
      #:unpack-path "go.etcd.io/etcd"))
    (propagated-inputs (list go-golang-org-x-sys go-go-uber-org-zap
                             go-github-com-stretchr-testify
                             go-github-com-coreos-go-systemd-v22))
    (home-page "https://go.etcd.io/etcd")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-go-etcd-io-etcd-etcdctl-v3
  (package
    (name "go-go-etcd-io-etcd-etcdctl-v3")
    (version "3.5.17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/etcd-io/etcd")
             (commit (go-version->git-ref version
                                          #:subdir "etcdctl"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13s7650f465q2m6qqw2nadvc18q9hn2g452zy5byag7crm5bnl06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "go.etcd.io/etcd/etcdctl/v3"
      #:unpack-path "go.etcd.io/etcd"))
    (propagated-inputs (list go-gopkg-in-cheggaaa-pb-v1
                             go-google-golang-org-grpc
                             go-golang-org-x-time
                             go-go-uber-org-zap
                             go-github-com-urfave-cli
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-olekukonko-tablewriter
                             go-github-com-dustin-go-humanize ; packaged
                             go-github-com-bgentry-speakeasy))
    (home-page "https://go.etcd.io/etcd")
    (synopsis "etcdctl")
    (description "etcdctl is a command line application that controls etcd.")
    (license license:asl2.0)))

(define-public go-go-etcd-io-etcd-server-v3
  (package
    (name "go-go-etcd-io-etcd-server-v3")
    (version "3.5.17")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/etcd-io/etcd")
             (commit (go-version->git-ref version
                                          #:subdir "server"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "13s7650f465q2m6qqw2nadvc18q9hn2g452zy5byag7crm5bnl06"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "go.etcd.io/etcd/server/v3"
      #:unpack-path "go.etcd.io/etcd"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                        go-gopkg-in-natefinch-lumberjack-v2
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto-googleapis-api ; packaged
                        go-golang-org-x-time
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-go-uber-org-zap
                        go-go-uber-org-multierr ; packaged
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
                        go-go-etcd-io-bbolt
                        go-github-com-xiang90-probing
                        go-github-com-tmc-grpc-websocket-proxy
                        go-github-com-stretchr-testify
                        go-github-com-spf13-cobra
                        go-github-com-soheilhy-cmux
                        go-github-com-prometheus-client-model ; packaged
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-jonboulle-clockwork
                        go-github-com-grpc-ecosystem-grpc-gateway
                        go-github-com-grpc-ecosystem-go-grpc-prometheus ; packaged
                        go-github-com-grpc-ecosystem-go-grpc-middleware
                        go-github-com-google-go-cmp
                        go-github-com-google-btree
                        go-github-com-golang-protobuf
                        go-github-com-golang-groupcache ; packaged
                        go-github-com-golang-jwt-jwt-v4
                        go-github-com-gogo-protobuf
                        go-github-com-dustin-go-humanize ; packaged
                        go-github-com-coreos-go-systemd-v22
                        go-github-com-coreos-go-semver ; packaged
                        ))
    (home-page "https://go.etcd.io/etcd")
    (synopsis #f)
    (description
     "Package main is a simple wrapper of the real etcd entrypoint package (located at
go.etcd.io/etcd/etcdmain) to ensure that etcd is still \"go getable\"; e.g. `go
get go.etcd.io/etcd` works as expected and builds a binary in $GOBIN/etcd.")
    (license license:asl2.0)))

(define-public go-go-lsp-dev-jsonrpc2
  (package
    (name "go-go-lsp-dev-jsonrpc2")
    (version "0.10.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-language-server/jsonrpc2")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0mx7h0bak0kr3v18yqaqiq6ya9paw6lv3vqf30k55jsmwmrx5647"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.lsp.dev/jsonrpc2"))
    (propagated-inputs (list go-github-com-segmentio-encoding))
    (home-page "https://go.lsp.dev/jsonrpc2")
    (synopsis "jsonrpc2")
    (description
     "Package jsonrpc2 is an implementation of the JSON-RPC 2 specification for Go.")
    (license license:bsd-3)))

(define-public go-go-lsp-dev-pkg
  (package
    (name "go-go-lsp-dev-pkg")
    (version "0.0.0-20210717090340-384b27a52fb2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-language-server/pkg")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0n6mskf5g4m1h6hc12rwl622mn21a695kk7f2ldb5hdmlwib852g"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.lsp.dev/pkg"))
    (home-page "https://go.lsp.dev/pkg")
    (synopsis "pkg")
    (description #f)
    (license license:bsd-3)))

(define-public go-go-lsp-dev-protocol
  (package
    (name "go-go-lsp-dev-protocol")
    (version "0.12.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-language-server/protocol")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14n0s7bs4xcsdp8m7fq9ridrh2nxsh5l80wg6xprgsr984dicpr8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.lsp.dev/protocol"))
    (propagated-inputs (list go-go-uber-org-zap
                             go-go-lsp-dev-uri
                             go-go-lsp-dev-pkg
                             go-go-lsp-dev-jsonrpc2
                             go-github-com-segmentio-encoding
                             go-github-com-google-go-cmp))
    (home-page "https://go.lsp.dev/protocol")
    (synopsis "protocol")
    (description
     "Package protocol implements Language Server Protocol specification in Go.")
    (license license:bsd-3)))

(define-public go-go-lsp-dev-uri
  (package
    (name "go-go-lsp-dev-uri")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-language-server/uri")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mz1jnbf46rzs3iy8a601rdfmify6x56jsw2wsjvmyczn4vz8qwc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.lsp.dev/uri"))
    (propagated-inputs (list go-github-com-google-go-cmp))
    (home-page "https://go.lsp.dev/uri")
    (synopsis "uri")
    (description
     "Package uri is an implementation of the URI Uniform Resource Identifier(RFC3986)
specification for Go.")
    (license license:bsd-3)))

(define-public go-go-mongodb-org-mongo-driver-v2
  (package
    (name "go-go-mongodb-org-mongo-driver-v2")
    (version "2.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mongodb/mongo-go-driver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "11sncdv5czxwz7rjr8b66vk1nlwvfwfpnxzzh8rvarvqfi6a4ai4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.mongodb.org/mongo-driver/v2"
      #:unpack-path "go.mongodb.org/mongo-driver"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-golang-org-x-crypto
                             go-github-com-youmark-pkcs8
                             go-github-com-xdg-go-stringprep
                             go-github-com-xdg-go-scram
                             go-github-com-klauspost-compress
                             go-github-com-google-go-cmp
                             go-github-com-golang-snappy
                             go-github-com-davecgh-go-spew))
    (home-page "https://go.mongodb.org/mongo-driver")
    (synopsis "MongoDB Go Driver")
    (description "The @code{MongoDB} supported driver for Go.")
    (license license:asl2.0)))

(define-public go-go-mozilla-org-mozlog
  (package
    (name "go-go-mozilla-org-mozlog")
    (version "0.0.0-20170222151521-4bb13139d403")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/mozilla-services/go-mozlog")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "197754z5z3ixdasymw6ks51b7vmfv3q3skiz5yn2mzgw9hlgphkq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.mozilla.org/mozlog"))
    (home-page "https://go.mozilla.org/mozlog")
    (synopsis "mozlog")
    (description
     "This package provides a logging library which conforms to
@@url{https://wiki.mozilla.org/Firefox/Services/Logging,Mozilla's logging
standard}.")
    (license license:mpl2.0)))

(define-public go-go-nhat-io-aferomock
  (package
    (name "go-go-nhat-io-aferomock")
    (version "0.7.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nhatthm/aferomock")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00awjqc0j74l56sk5gc80gjpl0j6mqskwwkwxvhn3cc98cf3fwlj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.nhat.io/aferomock"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-spf13-afero))
    (home-page "https://go.nhat.io/aferomock")
    (synopsis "Mock for")
    (description "Package aferomock provides mock for spf13/afero.")
    (license license:expat)))

(define-public go-go-nhat-io-grpcmock
  (package
    (name "go-go-nhat-io-grpcmock")
    (version "0.28.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nhatthm/grpcmock")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bpay2sdh0pab0fq69kg3b8inhq0hipdpsrnlaj613gj5irqngzx"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.nhat.io/grpcmock"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-go-nhat-io-wait
                             go-go-nhat-io-matcher-v2
                             go-go-nhat-io-aferomock
                             go-github-com-swaggest-assertjson
                             go-github-com-stretchr-testify
                             go-github-com-spf13-afero
                             go-github-com-grpc-ecosystem-go-grpc-middleware))
    (home-page "https://go.nhat.io/grpcmock")
    (synopsis "gRPC Test Utilities for Golang")
    (description
     "Package grpcmock provides functionalities for testing grpc client and server.")
    (license license:expat)))

(define-public go-go-nhat-io-matcher-v2
  (package
    (name "go-go-nhat-io-matcher-v2")
    (version "2.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nhatthm/go-matcher")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0rpq9jqparlxgfi0alxp451rplh68d3ks3zwqyj20fpz8kcpw4yv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.nhat.io/matcher/v2"
      #:unpack-path "go.nhat.io/matcher"))
    (propagated-inputs (list go-github-com-swaggest-assertjson
                             go-github-com-stretchr-testify))
    (home-page "https://go.nhat.io/matcher")
    (synopsis "Just some random matchers")
    (description "Package matcher provides value matchers.")
    (license license:expat)))

(define-public go-go-nhat-io-wait
  (package
    (name "go-go-nhat-io-wait")
    (version "0.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nhatthm/go-wait")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z51zcwykl7nry6lbz0xigh3b9rnwa7h75vzaihn62syrlnpy06w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.nhat.io/wait"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://go.nhat.io/wait")
    (synopsis "Wait")
    (description
     "Package wait provides functionalities for waiting for a condition.")
    (license license:expat)))

(define-public go-go-opentelemetry-io-collector-pdata
  (package
    (name "go-go-opentelemetry-io-collector-pdata")
    (version "1.22.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-collector")
             (commit (go-version->git-ref version
                                          #:subdir "pdata"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "109vnxj3gq4957rx5c8v94nhxc0644qxkfpd257jndz22rwln0fp"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/collector/pdata"
      #:unpack-path "go.opentelemetry.io/collector"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-go-uber-org-multierr ; packaged
                             go-go-uber-org-goleak ; packaged
                             go-github-com-stretchr-testify ; packaged
                             go-github-com-json-iterator-go
                             go-github-com-gogo-protobuf))
    (home-page "https://go.opentelemetry.io/collector")
    (synopsis "Pipeline data (pdata)")
    (description
     "Pipeline data (pdata) implements data structures that represent telemetry data
in-memory.  All data received is converted into this format, travels through the
pipeline in this format, and is converted from this format by exporters when
sending.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-collector-semconv
  (package
    (name "go-go-opentelemetry-io-collector-semconv")
    (version "0.116.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-collector")
             (commit (go-version->git-ref version
                                          #:subdir "semconv"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "109vnxj3gq4957rx5c8v94nhxc0644qxkfpd257jndz22rwln0fp"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/collector/semconv"
      #:unpack-path "go.opentelemetry.io/collector"))
    (propagated-inputs (list go-go-uber-org-goleak
                             go-github-com-stretchr-testify
                             go-github-com-hashicorp-go-version))
    (home-page "https://go.opentelemetry.io/collector")
    (synopsis "Semantic Convention Constants")
    (description
     "This package contains constants representing the @code{OpenTelemetry} semantic
conventions.  They are automatically generated from definitions in the
specification.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-contrib-detectors-gcp
  (package
    (name "go-go-opentelemetry-io-contrib-detectors-gcp")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go-contrib")
             (commit (go-version->git-ref version
                                          #:subdir "detectors/gcp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f37x89xjm9qlrhvf48gnq8narb0lkygycdb1qrcs9jpn1b7bhyn"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/contrib/detectors/gcp"
      #:unpack-path "go.opentelemetry.io/contrib"))
    (propagated-inputs (list go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel
                        go-github-com-stretchr-testify
                        go-github-com-google-go-cmp
                        go-github-com-googlecloudplatform-opentelemetry-operations-go-detectors-gcp
                        go-cloud-google-com-go-compute-metadata))
    (home-page "https://go.opentelemetry.io/contrib")
    (synopsis "GCP Resource detector")
    (description "The GCP resource detector supports detecting resources on:.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-contrib-exporters-autoexport
  (package
    (name "go-go-opentelemetry-io-contrib-exporters-autoexport")
    (version "0.58.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go-contrib")
             (commit (go-version->git-ref version
                                          #:subdir "exporters/autoexport"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f37x89xjm9qlrhvf48gnq8narb0lkygycdb1qrcs9jpn1b7bhyn"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/contrib/exporters/autoexport"
      #:unpack-path "go.opentelemetry.io/contrib"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-go-uber-org-goleak
                        go-go-opentelemetry-io-proto-otlp ; packaged
                        go-go-opentelemetry-io-otel-sdk-metric
                        go-go-opentelemetry-io-otel-sdk-log
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-stdout-stdouttrace
                        go-go-opentelemetry-io-otel-exporters-stdout-stdoutmetric
                        go-go-opentelemetry-io-otel-exporters-stdout-stdoutlog
                        go-go-opentelemetry-io-otel-exporters-prometheus
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracehttp
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
                        go-go-opentelemetry-io-otel-exporters-otlp-otlpmetric-otlpmetrichttp
                        go-go-opentelemetry-io-otel-exporters-otlp-otlpmetric-otlpmetricgrpc
                        go-go-opentelemetry-io-otel-exporters-otlp-otlplog-otlploghttp
                        go-go-opentelemetry-io-otel-exporters-otlp-otlplog-otlploggrpc
                        go-go-opentelemetry-io-otel
                        go-github-com-stretchr-testify
                        go-github-com-prometheus-client-golang ; packaged
))
    (home-page "https://go.opentelemetry.io/contrib")
    (synopsis #f)
    (description
     "Package autoexport provides @code{OpenTelemetry} exporter factory functions with
defaults and environment variable support as defined by the @code{OpenTelemetry}
specification.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
  (package
    (name
     "go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc")
    (version "0.58.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go-contrib")
             (commit (go-version->git-ref version
                      #:subdir
                      "instrumentation/google.golang.org/grpc/otelgrpc"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f37x89xjm9qlrhvf48gnq8narb0lkygycdb1qrcs9jpn1b7bhyn"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path
      "go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc"
      #:unpack-path "go.opentelemetry.io/contrib"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel-metric ; packaged
                             go-go-opentelemetry-io-otel
                             go-github-com-stretchr-testify))
    (home-page "https://go.opentelemetry.io/contrib")
    (synopsis #f)
    (description "Package otelgrpc is the instrumentation library for
@@url{/google.golang.org/grpc,google.golang.org/grpc}.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-contrib-instrumentation-net-http-httptrace-otelhttptrace
  (package
    (name
     "go-go-opentelemetry-io-contrib-instrumentation-net-http-httptrace-otelhttptrace")
    (version "0.58.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go-contrib")
             (commit (go-version->git-ref version
                      #:subdir
                      "instrumentation/net/http/httptrace/otelhttptrace"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1f37x89xjm9qlrhvf48gnq8narb0lkygycdb1qrcs9jpn1b7bhyn"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path
      "go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace"
      #:unpack-path "go.opentelemetry.io/contrib"))
    (propagated-inputs (list go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp))
    (home-page "https://go.opentelemetry.io/contrib")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-jaeger
  (package
    (name "go-go-opentelemetry-io-otel-exporters-jaeger")
    (version "1.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                                          #:subdir "exporters/jaeger"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0241rgx3wf4gfk9q0s0r378kv6hs8dii1d2zgp09941dgk59zmp9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.opentelemetry.io/otel/exporters/jaeger"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-github-com-go-logr-stdr
                             go-github-com-go-logr-logr))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "OpenTelemetry-Go Jaeger Exporter")
    (description
     "Package jaeger contains an @code{OpenTelemetry} tracing exporter for Jaeger.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-otlp-otlplog-otlploggrpc
  (package
    (name "go-go-opentelemetry-io-otel-exporters-otlp-otlplog-otlploggrpc")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                      #:subdir "exporters/otlp/otlplog/otlploggrpc"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path
      "go.opentelemetry.io/otel/exporters/otlp/otlplog/otlploggrpc"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-go-opentelemetry-io-proto-otlp ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "OTLP Log gRPC Exporter")
    (description
     "Package otlploggrpc provides an OTLP log exporter using @code{gRPC}.  The
exporter uses @code{gRPC} to transport OTLP protobuf payloads.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-otlp-otlplog-otlploghttp
  (package
    (name "go-go-opentelemetry-io-otel-exporters-otlp-otlplog-otlploghttp")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                      #:subdir "exporters/otlp/otlplog/otlploghttp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path
      "go.opentelemetry.io/otel/exporters/otlp/otlplog/otlploghttp"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-go-opentelemetry-io-proto-otlp ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "OTLP Log HTTP Exporter")
    (description
     "Package otlploghttp provides an OTLP log exporter.  The exporter uses HTTP to
transport OTLP protobuf payloads.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-otlp-otlpmetric-otlpmetricgrpc
  (package
    (name
     "go-go-opentelemetry-io-otel-exporters-otlp-otlpmetric-otlpmetricgrpc")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                      #:subdir "exporters/otlp/otlpmetric/otlpmetricgrpc"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path
      "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-go-opentelemetry-io-proto-otlp ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "OTLP Metric gRPC Exporter")
    (description
     "Package otlpmetricgrpc provides an OTLP metrics exporter using @code{gRPC}.  By
default the telemetry is sent to
@@url{https://localhost:4317,https://localhost:4317}.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-otlp-otlpmetric-otlpmetrichttp
  (package
    (name
     "go-go-opentelemetry-io-otel-exporters-otlp-otlpmetric-otlpmetrichttp")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                      #:subdir "exporters/otlp/otlpmetric/otlpmetrichttp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path
      "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-go-opentelemetry-io-proto-otlp ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "OTLP Metric HTTP Exporter")
    (description
     "Package otlpmetrichttp provides an OTLP metrics exporter using HTTP with
protobuf payloads.  By default the telemetry is sent to
@@url{https://localhost:4318/v1/metrics,https://localhost:4318/v1/metrics}.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-otlp-otlptrace
  (package
    (name "go-go-opentelemetry-io-otel-exporters-otlp-otlptrace")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                                          #:subdir "exporters/otlp/otlptrace"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/otel/exporters/otlp/otlptrace"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-go-opentelemetry-io-proto-otlp ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "OTLP Trace Exporter")
    (description
     "Package otlptrace contains abstractions for OTLP span exporters.  See the
official OTLP span exporter implementations:.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
  (package
    (name "go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                      #:subdir "exporters/otlp/otlptrace/otlptracegrpc"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path
      "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-go-uber-org-goleak
                             go-go-opentelemetry-io-proto-otlp ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "OTLP Trace gRPC Exporter")
    (description
     "Package otlptracegrpc provides an OTLP span exporter using @code{gRPC}.  By
default the telemetry is sent to
@@url{https://localhost:4317,https://localhost:4317}.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracehttp
  (package
    (name "go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracehttp")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                      #:subdir "exporters/otlp/otlptrace/otlptracehttp"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path
      "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-go-opentelemetry-io-proto-otlp ; packaged
                             go-github-com-stretchr-testify
                             go-github-com-cenkalti-backoff-v4 ;packaged
))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "OTLP Trace HTTP Exporter")
    (description
     "Package otlptracehttp provides an OTLP span exporter using HTTP with protobuf
payloads.  By default the telemetry is sent to
@@url{https://localhost:4318/v1/traces,https://localhost:4318/v1/traces}.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-prometheus
  (package
    (name "go-go-opentelemetry-io-otel-exporters-prometheus")
    (version "0.55.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                                          #:subdir "exporters/prometheus"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/otel/exporters/prometheus"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-stretchr-testify
                             go-github-com-prometheus-common
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged
))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "Prometheus Exporter")
    (description
     "Package prometheus provides a Prometheus Exporter that converts OTLP metrics
into the Prometheus exposition format and implements prometheus.Collector to
provide a handler for these metrics.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-stdout-stdoutlog
  (package
    (name "go-go-opentelemetry-io-otel-exporters-stdout-stdoutlog")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "exporters/stdout/stdoutlog"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/otel/exporters/stdout/stdoutlog"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "STDOUT Log Exporter")
    (description
     "Package stdoutlog provides an exporter for @code{OpenTelemetry} log telemetry.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-stdout-stdoutmetric
  (package
    (name "go-go-opentelemetry-io-otel-exporters-stdout-stdoutmetric")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "exporters/stdout/stdoutmetric"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/otel/exporters/stdout/stdoutmetric"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "STDOUT Metric Exporter")
    (description
     "Package stdoutmetric provides an exporter for @code{OpenTelemetry} metric
telemetry.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-exporters-stdout-stdouttrace
  (package
    (name "go-go-opentelemetry-io-otel-exporters-stdout-stdouttrace")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                                          #:subdir
                                          "exporters/stdout/stdouttrace"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/otel/exporters/stdout/stdouttrace"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-github-com-stretchr-testify))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "STDOUT Trace Exporter")
    (description
     "Package stdouttrace contains an @code{OpenTelemetry} exporter for tracing
telemetry to be written to an output destination as JSON.")
    (license license:asl2.0)))

(define-public go-go-opentelemetry-io-otel-trace
  (package
    (name "go-go-opentelemetry-io-otel-trace")
    (version "1.33.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/open-telemetry/opentelemetry-go")
             (commit (go-version->git-ref version
                                          #:subdir "trace"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sb36qyq389fif9qp5iiqp6w41dfcwi95gb0bsbvznvijhd8c1cc"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "go.opentelemetry.io/otel/trace"
      #:unpack-path "go.opentelemetry.io/otel"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-google-go-cmp))
    (home-page "https://go.opentelemetry.io/otel")
    (synopsis "Trace API")
    (description
     "Package trace provides an implementation of the tracing part of the
@code{OpenTelemetry} API.")
    (license license:asl2.0)))

(define-public go-go-shabbyrobe-org-gocovmerge
  (package
    (name "go-go-shabbyrobe-org-gocovmerge")
    (version "0.0.0-20230507111327-fa4f82cfbf4d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.sr.ht/~shabbyrobe/gocovmerge")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sbr6i1m5hjbnlfad8cl8w30949r02c66l85hcmyyd9ka30mqr23"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go.shabbyrobe.org/gocovmerge"))
    (propagated-inputs (list go-golang-org-x-tools))
    (home-page "https://go.shabbyrobe.org/gocovmerge")
    (synopsis "gocovmerge")
    (description
     "Package gocovmerge takes the results from multiple `go test -coverprofile` runs
and merges them into one profile.")
    (license license:bsd-2)))

(define-public go-go-simpler-org-assert
  (package
    (name "go-go-simpler-org-assert")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-simpler/assert")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pg3yhicggby978n8war9n5zzigr95mvnsipnk6zgsjn6gyvjdm5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go-simpler.org/assert"))
    (home-page "https://go-simpler.org/assert")
    (synopsis "assert")
    (description
     "Package assert implements assertions for the standard @@url{/testing,testing}
package.")
    (license license:mpl2.0)))

(define-public go-go-simpler-org-musttag
  (package
    (name "go-go-simpler-org-musttag")
    (version "0.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-simpler/musttag")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1zyj5zgk8ywna1a78bnkg17y7xi6vs0dlbmcx2c26h55dz8fg25f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go-simpler.org/musttag"))
    (propagated-inputs (list go-golang-org-x-tools go-go-simpler-org-assert))
    (home-page "https://go-simpler.org/musttag")
    (synopsis "musttag")
    (description "Package musttag implements the musttag analyzer.")
    (license license:mpl2.0)))

(define-public go-go-step-sm-crypto
  (package
    (name "go-go-step-sm-crypto")
    (version "0.65.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/smallstep/crypto")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1913h6bfn75gp9maxcp6yqjk659px833i505hkfgvz1nf1dnn60p"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "go.step.sm/crypto"))
    (propagated-inputs (list go-modernc-org-sqlite
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-api
                        go-golang-org-x-sys
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-go-uber-org-mock
                        go-github-com-stretchr-testify
                        go-github-com-smallstep-go-attestation
                        go-github-com-schollz-jsonstore
                        go-github-com-pkg-errors
                        go-github-com-peterbourgon-diskv-v3
                        go-github-com-googleapis-gax-go-v2
                        go-github-com-google-go-tpm-tools
                        go-github-com-google-go-tpm
                        go-github-com-go-piv-piv-go-v2
                        go-github-com-go-jose-go-jose-v3
                        go-github-com-aws-aws-sdk-go-v2-service-kms
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-thalesignite-crypto11
                        go-github-com-masterminds-sprig-v3
                        ;; go-github-com-azure-azure-sdk-for-go-sdk-keyvault-azkeys
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore
                        go-filippo-io-edwards25519
                        go-cloud-google-com-go-kms))
    (home-page "https://go.step.sm/crypto")
    (synopsis "crypto")
    (description "Crypto is a collection of packages used in
@@url{https://smallstep.com,smallstep} products.  See:.")
    (license license:asl2.0)))

(define-public go-go4-org-mem
  (package
    (name "go-go4-org-mem")
    (version "0.0.0-20240501181205-ae6ca9944745")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go4org/mem")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1h2bam1h6xi0lx9s0k44fvd28vkb6rh9vndz3srhwi6axvm8ir0s"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go4.org/mem"))
    (home-page "https://go4.org/mem")
    (synopsis "go4.org/mem")
    (description
     "Package mem provides the mem.RO type that allows you to cheaply pass & access
either a read-only []byte or a string.")
    (license license:asl2.0)))

(define-public go-go4-org-netipx
  (package
    (name "go-go4-org-netipx")
    (version "0.0.0-20231129151722-fdeea329fbba")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go4org/netipx")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1g45hmdsgy6c73277j4i0mdi6031qbh5il1i5ab6bkywnpwhy9p4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "go4.org/netipx"))
    (propagated-inputs (list go-honnef-co-go-tools
                             go-github-com-dvyukov-go-fuzz ; packaged
                             ))
    (home-page "https://go4.org/netipx")
    (synopsis "netipx")
    (description
     "Package netipx contains code and types that were left behind when the old
inet.af/netaddr package moved to the standard library in Go 1.18 as net/netip.")
    (license license:bsd-3)))

(define-public go-goa-design-goa-v3
  (package
    (name "go-goa-design-goa-v3")
    (version "3.21.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gopkg.in/goadesign/goa.v2")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0761by9j8fc9vqhwhjhhd4lzk0blbpdw8c45mdfk1s814g0jjf1c"))))
    (build-system go-build-system)
    (arguments
     (list
;; check go-version
      #:import-path "goa.design/goa/v3"
      #:unpack-path "goa.design/goa"))
    (propagated-inputs (list go-gopkg-in-yaml-v3
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-golang-org-x-tools
                             go-golang-org-x-text
                             go-github-com-stretchr-testify
                             go-github-com-pkg-errors
                             go-github-com-manveru-faker
                             go-github-com-gorilla-websocket
                             go-github-com-google-uuid
                             go-github-com-gohugoio-hashstructure
                             go-github-com-go-chi-chi-v5 ; packaged
                             go-github-com-getkin-kin-openapi
                             go-github-com-dimfeld-httppath))
    (home-page "https://goa.design/goa")
    (synopsis "Goa - Design First, Code With Confidence")
    (description
     "Goa transforms how you build APIs and microservices in Go with its powerful
design-first approach.  Instead of writing boilerplate code, you express your
API's intent through a clear, expressive DSL. Goa then automatically generates
production-ready code, comprehensive documentation, and client libraries—all
perfectly aligned with your design.")
    (license license:expat)))

(define-public go-gocloud-dev
  (package
    (name "go-gocloud-dev")
    (version "0.40.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/go-cloud")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0l8pp2fhs2hgdyw2wlv4x7saglcnkr95zvcwzc5jkj7n5qa3cs2y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gocloud.dev"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto
                        go-google-golang-org-api
                        go-golang-org-x-xerrors
                        go-golang-org-x-sync
                        go-golang-org-x-oauth2
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-go-opencensus-io ; packaged

                        go-github-com-lib-pq
                        go-github-com-googleapis-gax-go-v2
                        go-github-com-google-wire
                        go-github-com-google-uuid
                        go-github-com-google-go-replayers-httpreplay
                        go-github-com-google-go-replayers-grpcreplay
                        go-github-com-google-go-cmp
                        go-github-com-go-sql-driver-mysql
                        go-github-com-fsnotify-fsnotify ; packaged
                        go-github-com-aws-smithy-go
                        go-github-com-aws-aws-sdk-go-v2-service-ssm
                        go-github-com-aws-aws-sdk-go-v2-service-sqs
                        go-github-com-aws-aws-sdk-go-v2-service-sns
                        go-github-com-aws-aws-sdk-go-v2-service-secretsmanager
                        go-github-com-aws-aws-sdk-go-v2-service-s3
                        go-github-com-aws-aws-sdk-go-v2-service-kms
                        go-github-com-aws-aws-sdk-go-v2-feature-s3-manager
                        go-github-com-aws-aws-sdk-go-v2-credentials
                        go-github-com-aws-aws-sdk-go-v2-config
                        go-github-com-aws-aws-sdk-go-v2
                        go-github-com-aws-aws-sdk-go
                        go-github-com-googlecloudplatform-cloudsql-proxy
                        go-github-com-azure-go-autorest-autorest-to
                        go-github-com-azure-go-amqp
                        go-github-com-azure-azure-sdk-for-go-sdk-storage-azblob
                        go-github-com-azure-azure-sdk-for-go-sdk-messaging-azservicebus
                        ;go-github-com-azure-azure-sdk-for-go-sdk-keyvault-azkeys
                        go-github-com-azure-azure-sdk-for-go-sdk-azidentity
                        go-github-com-azure-azure-sdk-for-go-sdk-azcore
                        go-github-com-azure-azure-amqp-common-go-v3
                        go-contrib-go-opencensus-io-integrations-ocsql
                        go-contrib-go-opencensus-io-exporter-stackdriver
                        go-contrib-go-opencensus-io-exporter-aws
                        go-cloud-google-com-go-storage
                        go-cloud-google-com-go-secretmanager
                        go-cloud-google-com-go-pubsub
                        go-cloud-google-com-go-kms
                        go-cloud-google-com-go-iam
                        go-cloud-google-com-go-firestore
                        go-cloud-google-com-go-compute-metadata))
    (home-page "https://gocloud.dev")
    (synopsis "The Go Cloud Development Kit (Go CDK)")
    (description
     "Package cloud contains a library and tools for open cloud development in Go.")
    (license license:asl2.0)))

(define-public go-goftp-io-server-v2
  (package
    (name "go-goftp-io-server-v2")
    (version "2.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/goftp/server")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1d311r82mc4s0pvxkg7a2dxkhp1ffw2fi2mkdbr0kkdxa1jm93cl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "goftp.io/server/v2"
      #:unpack-path "goftp.io/server"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-minio-minio-go-v6
                             go-github-com-jlaffaye-ftp))
    (home-page "https://goftp.io/server")
    (synopsis "server")
    (description
     "This package provides a FTP server framework forked from
@@url{http://github.com/yob/graval,github.com/yob/graval} and changed a lot.")
    (license license:expat)))

(define-public go-goji-io
  (package
    (name "go-goji-io")
    (version "2.0.2+incompatible")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/goji/goji")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0sckb1gayxfrlm12kdp33vwqq4gs5irqswr7pm0skkdz66swsvcc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "goji.io"))
    (home-page "https://goji.io")
    (synopsis "Goji")
    (description
     "Package goji is a minimalistic and flexible HTTP request multiplexer.")
    (license license:expat)))

(define-public go-golang-org-x-crypto-x509roots-fallback
  (package
    (name "go-golang-org-x-crypto-x509roots-fallback")
    (version "0.0.0-20241211175049-b4f1988a35de")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://go.googlesource.com/crypto")
             (commit (go-version->git-ref version
                                          #:subdir "x509roots/fallback"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0pd3qipz2wb5wbbb44lgbfygxhf9lq5rknf82p2dmaicszn0rd53"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "golang.org/x/crypto/x509roots/fallback"
      #:unpack-path "golang.org/x/crypto"))
    (home-page "https://golang.org/x/crypto")
    (synopsis #f)
    (description
     "Package fallback embeds a set of fallback X.509 trusted roots in the application
by automatically invoking
@@url{/crypto/x509#@code{SetFallbackRoots,x509.SetFallbackRoots}}.  This allows
the application to work correctly even if the operating system does not provide
a verifier or system roots pool.")
    (license license:bsd-3)))

(define-public go-golang-org-x-exp-shiny
  (package
    (name "go-golang-org-x-exp-shiny")
    (version "0.0.0-20241217172543-b2144cdd0a67")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://go.googlesource.com/exp")
             (commit (go-version->git-ref version
                                          #:subdir "shiny"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01dq7llbqqdybv5s372zwlfiyq2syqpfqs7h4lxvbpqjq0aayf60"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "golang.org/x/exp/shiny"
      #:unpack-path "golang.org/x/exp"))
    (propagated-inputs (list go-golang-org-x-sys
                             go-golang-org-x-mobile
                             go-golang-org-x-image
                             go-github-com-jezek-xgb
                             go-github-com-go-gl-glfw-v3-3-glfw
                             go-dmitri-shuralyov-com-gpu-mtl))
    (home-page "https://golang.org/x/exp")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-golang-org-x-mobile
  (package
    (name "go-golang-org-x-mobile")
    (version "0.0.0-20241213221354-a87c1cf6cf46")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://go.googlesource.com/mobile")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xmx284ycgh6p1xkkydzi690sqzyf4pv1h4bkwnjyc4rc1v2ngpf"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "golang.org/x/mobile"))
    (propagated-inputs (list go-golang-org-x-tools go-golang-org-x-sync
                             go-golang-org-x-mod go-golang-org-x-image
                             go-golang-org-x-exp-shiny))
    (home-page "https://golang.org/x/mobile")
    (synopsis "Go support for Mobile devices")
    (description
     "The Go mobile repository holds packages and build tools for using Go on mobile
platforms.")
    (license license:bsd-3)))

(define-public go-golang-zx2c4-com-wintun
  (package
    (name "go-golang-zx2c4-com-wintun")
    (version "0.0.0-20230126152724-0fa3db229ce2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.zx2c4.com/wintun-go")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16ha3dpwq1bpbxrqfyb2pw09wn25iq27i9p58iaym7m768v0ncvj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "golang.zx2c4.com/wintun"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://golang.zx2c4.com/wintun")
    (synopsis "wintun-go")
    (description
     "This contains bindings to use @@url{https://www.wintun.net,Wintun} from Go.")
    (license license:expat)))

(define-public go-golang-zx2c4-com-wireguard-windows
  (package
    (name "go-golang-zx2c4-com-wireguard-windows")
    (version "0.5.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.zx2c4.com/wireguard-windows")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0grhhgmnllgznk3zjma88kmcsm22fs7rag9xa24kskh1axj24jh3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "golang.zx2c4.com/wireguard/windows"))
    (propagated-inputs (list go-golang-zx2c4-com-wireguard-windows
                             go-golang-zx2c4-com-wireguard-windows
                             go-golang-org-x-text
                             go-golang-org-x-sys
                             go-golang-org-x-net
                             go-golang-org-x-crypto))
    (home-page "https://golang.zx2c4.com/wireguard/windows")
    (synopsis "for Windows")
    (description
     "This is a fully-featured @code{WireGuard} client for Windows that uses
@@url{https://git.zx2c4.com/wireguard-nt/about/,@code{WireGuardNT}}.  It is the
only official and recommended way of using @code{WireGuard} on Windows.")
    (license license:expat)))

(define-public go-gomod-garykim-dev-nc-talk
  (package
    (name "go-gomod-garykim-dev-nc-talk")
    (version "0.3.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gary-kim/go-nc-talk")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1ahxzvr0hq76dbmqqbavbph21yl7lj4yp8xzg19scd1fbh48hpjy"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gomod.garykim.dev/nc-talk"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-monaco-io-request))
    (home-page "https://gomod.garykim.dev/nc-talk")
    (synopsis "Go Library for Nextcloud Talk")
    (description
     "This package provides a Go library that can be used to communicate with
@@url{https://github.com/nextcloud/spreed,Nextcloud Talk} instances.")
    (license license:asl2.0)))

(define-public go-gomodules-xyz-jsonpatch-v2
  (package
    (name "go-gomodules-xyz-jsonpatch-v2")
    (version "2.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gomodules/jsonpatch")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sw8i2dfk902jvab7y1l7bqy42q5dqnd82r0dy6pfi2acapamrq9"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gomodules.xyz/jsonpatch/v2"
      #:unpack-path "gomodules.xyz/jsonpatch"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-github-com-evanphx-json-patch))
    (home-page "https://gomodules.xyz/jsonpatch")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-google-golang-org-api
  (package
    (name "go-google-golang-org-api")
    (version "0.214.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/google-api-go-client")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "16zzvzibi6fh50g30d0cyv4d6ryl2585ky8ykgpjkmx2lby313sm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "google.golang.org/api"))
    (propagated-inputs (list
                        go-cloud-google-com-go-auth
                        go-cloud-google-com-go-auth-oauth2adapt
                        go-cloud-google-com-go-compute-metadata ; packaged
                        go-github-com-google-go-cmp ; packaged
                        go-github-com-google-s2a-go
                        go-github-com-google-uuid ; packaged
                        go-github-com-googleapis-enterprise-certificate-proxy
                        go-github-com-googleapis-gax-go-v2
                        go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-golang-org-x-net ; packaged
                        go-golang-org-x-oauth2 ; packaged
                        go-golang-org-x-sync ; packaged
                        go-golang-org-x-time ; packaged
                        go-google-golang-org-genproto-googleapis-bytestream
                        go-google-golang-org-genproto-googleapis-rpc ; packaged
                        go-google-golang-org-grpc ; packaged
                        go-google-golang-org-protobuf ; packaged
                        ))
    (home-page "https://google.golang.org/api")
    (synopsis "Google APIs Client Library for Go")
    (description
     "Package api is the root of the packages used to access Google Cloud Services.
See
@@url{https://godoc.org/google.golang.org/api,https://godoc.org/google.golang.org/api}
for a full list of sub-packages.")
    (license license:bsd-3)))

(define-public go-google-golang-org-genproto
  (package
    (name "go-google-golang-org-genproto")
    (version "0.0.0-20241230172942-26aa7a208def")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/go-genproto")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19xnkcyhkqqc8win1af7a1z07xsav4ikvnnw5499krv7ak794iq5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "google.golang.org/genproto"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc
                             go-google-golang-org-genproto-googleapis-rpc
                             go-google-golang-org-genproto-googleapis-api ; packaged
                             go-github-com-golang-protobuf
                             go-cloud-google-com-go-workflows
                             go-cloud-google-com-go-websecurityscanner
                             go-cloud-google-com-go-webrisk
                             go-cloud-google-com-go-vpcaccess
                             go-cloud-google-com-go-vmwareengine
                             go-cloud-google-com-go-vmmigration
                             go-cloud-google-com-go-vision-v2
                             go-cloud-google-com-go-videointelligence
                             go-cloud-google-com-go-video
                             go-cloud-google-com-go-translate
                             go-cloud-google-com-go-trace
                             go-cloud-google-com-go-tpu
                             go-cloud-google-com-go-texttospeech
                             go-cloud-google-com-go-talent
                             go-cloud-google-com-go-storagetransfer
                             go-cloud-google-com-go-speech
                             go-cloud-google-com-go-spanner
                             go-cloud-google-com-go-shell
                             go-cloud-google-com-go-servicedirectory
                             go-cloud-google-com-go-securitycenter
                             go-cloud-google-com-go-security
                             go-cloud-google-com-go-secretmanager
                             go-cloud-google-com-go-scheduler
                             go-cloud-google-com-go-run
                             go-cloud-google-com-go-retail
                             go-cloud-google-com-go-resourcesettings
                             go-cloud-google-com-go-resourcemanager
                             go-cloud-google-com-go-redis
                             go-cloud-google-com-go-recommender
                             go-cloud-google-com-go-recommendationengine
                             go-cloud-google-com-go-recaptchaenterprise-v2
                             go-cloud-google-com-go-pubsublite
                             go-cloud-google-com-go-pubsub
                             go-cloud-google-com-go-privatecatalog
                             go-cloud-google-com-go-policytroubleshooter
                             go-cloud-google-com-go-phishingprotection
                             go-cloud-google-com-go-oslogin
                             go-cloud-google-com-go-osconfig
                             go-cloud-google-com-go-orgpolicy
                             go-cloud-google-com-go-orchestration
                             go-cloud-google-com-go-optimization
                             go-cloud-google-com-go-notebooks
                             go-cloud-google-com-go-networksecurity
                             go-cloud-google-com-go-networkmanagement
                             go-cloud-google-com-go-networkconnectivity
                             go-cloud-google-com-go-monitoring
                             go-cloud-google-com-go-metastore
                             go-cloud-google-com-go-memcache
                             go-cloud-google-com-go-mediatranslation
                             go-cloud-google-com-go-maps
                             go-cloud-google-com-go-managedidentities
                             go-cloud-google-com-go-longrunning
                             go-cloud-google-com-go-logging
                             go-cloud-google-com-go-lifesciences
                             go-cloud-google-com-go-language
                             go-cloud-google-com-go-kms
                             go-cloud-google-com-go-iot
                             go-cloud-google-com-go-ids
                             go-cloud-google-com-go-iap
                             go-cloud-google-com-go-iam
                             go-cloud-google-com-go-gsuiteaddons
                             go-cloud-google-com-go-gkemulticloud
                             go-cloud-google-com-go-gkehub
                             go-cloud-google-com-go-gkeconnect
                             go-cloud-google-com-go-gkebackup
                             go-cloud-google-com-go-functions
                             go-cloud-google-com-go-firestore
                             go-cloud-google-com-go-filestore
                             go-cloud-google-com-go-eventarc
                             go-cloud-google-com-go-essentialcontacts
                             go-cloud-google-com-go-errorreporting
                             go-cloud-google-com-go-edgecontainer
                             go-cloud-google-com-go-domains
                             go-cloud-google-com-go-documentai
                             go-cloud-google-com-go-dlp
                             go-cloud-google-com-go-dialogflow
                             go-cloud-google-com-go-deploy
                             go-cloud-google-com-go-datastream
                             go-cloud-google-com-go-datastore
                             go-cloud-google-com-go-dataqna
                             go-cloud-google-com-go-dataproc-v2
                             go-cloud-google-com-go-dataplex
                             go-cloud-google-com-go-datalabeling
                             go-cloud-google-com-go-datafusion
                             go-cloud-google-com-go-dataform
                             go-cloud-google-com-go-dataflow
                             go-cloud-google-com-go-datacatalog
                             go-cloud-google-com-go-containeranalysis
                             go-cloud-google-com-go-container
                             go-cloud-google-com-go-contactcenterinsights
                             go-cloud-google-com-go-compute
                             go-cloud-google-com-go-cloudtasks
                             go-cloud-google-com-go-clouddms
                             go-cloud-google-com-go-cloudbuild
                             go-cloud-google-com-go-channel
                             go-cloud-google-com-go-certificatemanager
                             go-cloud-google-com-go-binaryauthorization
                             go-cloud-google-com-go-billing
                             go-cloud-google-com-go-bigtable
                             go-cloud-google-com-go-bigquery
                             go-cloud-google-com-go-beyondcorp
                             go-cloud-google-com-go-batch
                             go-cloud-google-com-go-baremetalsolution
                             go-cloud-google-com-go-automl
                             go-cloud-google-com-go-assuredworkloads
                             go-cloud-google-com-go-asset
                             go-cloud-google-com-go-artifactregistry
                             go-cloud-google-com-go-area120
                             go-cloud-google-com-go-appengine
                             go-cloud-google-com-go-apigeeregistry
                             go-cloud-google-com-go-apigeeconnect
                             go-cloud-google-com-go-apigateway
                             go-cloud-google-com-go-analytics
                             go-cloud-google-com-go-aiplatform
                             go-cloud-google-com-go-accesscontextmanager
                             go-cloud-google-com-go-accessapproval
                             go-cloud-google-com-go))
    (home-page "https://google.golang.org/genproto")
    (synopsis "Go generated proto packages")
    (description
     "This repository contains the generated Go packages for common protocol buffer
types, and the generated @@url{http://grpc.io,@code{gRPC}} code necessary for
interacting with Google's @code{gRPC} APIs.")
    (license license:asl2.0)))

(define-public go-google-golang-org-genproto-googleapis-bytestream
  (package
    (name "go-google-golang-org-genproto-googleapis-bytestream")
    (version "0.0.0-20241230172942-26aa7a208def")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/googleapis/go-genproto")
             (commit (go-version->git-ref version
                                          #:subdir "googleapis/bytestream"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "19xnkcyhkqqc8win1af7a1z07xsav4ikvnnw5499krv7ak794iq5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "google.golang.org/genproto/googleapis/bytestream"
      #:unpack-path "google.golang.org/genproto"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc))
    (home-page "https://google.golang.org/genproto")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-google-golang-org-grpc-cmd-protoc-gen-go-grpc
  (package
    (name "go-google-golang-org-grpc-cmd-protoc-gen-go-grpc")
    (version "1.5.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc/grpc-go")
             (commit (go-version->git-ref version
                                          #:subdir "cmd/protoc-gen-go-grpc"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0yn1ir5y0wc91q95ngr3dlz2cyhp0wlb9l30hkw2cr34r38hq19w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "google.golang.org/grpc/cmd/protoc-gen-go-grpc"
      #:unpack-path "google.golang.org/grpc"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc))
    (home-page "https://google.golang.org/grpc")
    (synopsis "protoc-gen-go-grpc")
    (description
     "protoc-gen-go-grpc is a plugin for the Google protocol buffer compiler to
generate Go code.  Install it by building this program and making it accessible
within your PATH with the name:.")
    (license license:asl2.0)))

(define-public go-google-golang-org-grpc-examples
  (package
    (name "go-google-golang-org-grpc-examples")
    (version "0.0.0-20241224124116-724f450f77a0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc/grpc-go")
             (commit (go-version->git-ref version
                                          #:subdir "examples"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10kbp02jps9rs9civgya9xkgprf29lq0cxd2qd17l7h7f6m1hq5b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.22
      #:import-path "google.golang.org/grpc/examples"
      #:unpack-path "google.golang.org/grpc"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-google-golang-org-grpc-security-advancedtls
                             go-google-golang-org-grpc-gcp-observability
                             go-google-golang-org-genproto-googleapis-rpc
                             go-golang-org-x-oauth2
                             go-go-opentelemetry-io-otel-sdk-metric
                             go-go-opentelemetry-io-otel-exporters-prometheus
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-cncf-xds-go))
    (home-page "https://google.golang.org/grpc")
    (synopsis "Examples")
    (description
     "The following examples are provided to help users get started with
@code{gRPC-Go}.  They are arranged as follows:.")
    (license license:asl2.0)))

(define-public go-google-golang-org-grpc-gcp-observability
  (package
    (name "go-google-golang-org-grpc-gcp-observability")
    (version "1.0.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc/grpc-go")
             (commit (go-version->git-ref version
                                          #:subdir "gcp/observability"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z58z10bgsm23xx6n046za5km00x5zsxcqwpm1gc6inda5imyjlc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "google.golang.org/grpc/gcp/observability"
      #:unpack-path "google.golang.org/grpc"))
    (propagated-inputs (list go-google-golang-org-grpc-stats-opencensus
                             go-google-golang-org-api
                             go-golang-org-x-oauth2
                             go-go-opencensus-io ; packaged

                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-contrib-go-opencensus-io-exporter-stackdriver
                             go-cloud-google-com-go-logging))
    (home-page "https://google.golang.org/grpc")
    (synopsis #f)
    (description
     "Package observability implements the tracing, metrics, and logging data
collection, and provides controlling knobs via a config file.")
    (license license:asl2.0)))

(define-public go-google-golang-org-grpc-security-advancedtls
  (package
    (name "go-google-golang-org-grpc-security-advancedtls")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc/grpc-go")
             (commit (go-version->git-ref version
                                          #:subdir "security/advancedtls"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1xkqjian41falr0h8sicx2vdajf1zxcrkqiz5p2g7mmm8gcb6l4w"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "google.golang.org/grpc/security/advancedtls"
      #:unpack-path "google.golang.org/grpc"))
    (propagated-inputs (list go-golang-org-x-crypto
                             go-github-com-google-go-cmp))
    (home-page "https://google.golang.org/grpc")
    (synopsis #f)
    (description
     "Package advancedtls provides @code{gRPC} transport credentials that allow easy
configuration of advanced TLS features.  The APIs here give the user more
customizable control to fit their security landscape, thus the \"advanced\"
moniker.  This package provides both interfaces and generally useful
implementations of those interfaces, for example periodic credential reloading,
support for certificate revocation lists, and customizable certificate
verification behaviors.  If the provided implementations do not fit a given use
case, a custom implementation of the interface can be injected.")
    (license license:asl2.0)))

(define-public go-google-golang-org-grpc-stats-opencensus
  (package
    (name "go-google-golang-org-grpc-stats-opencensus")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/grpc/grpc-go")
             (commit (go-version->git-ref version
                                          #:subdir "stats/opencensus"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1nl2l1bsi86bak89ch4326m9cjwlvc7dhb7jzp35fm8lqvm7770x"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "google.golang.org/grpc/stats/opencensus"
      #:unpack-path "google.golang.org/grpc"))
    (propagated-inputs (list go-go-opencensus-io ; packaged
 go-github-com-google-go-cmp))
    (home-page "https://google.golang.org/grpc")
    (synopsis #f)
    (description
     "Package opencensus implements opencensus instrumentation code for @code{gRPC-Go}
clients and servers.")
    (license license:asl2.0)))

(define-public go-gonum-org-v1-plot
  (package
    (name "go-gonum-org-v1-plot")
    (version "0.15.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/datadog/dd-trace-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gonum.org/v1/plot"))
    (home-page "https://github.com/gonum/plot")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-datadog-dd-trace-go-v1
  (package
    (name "go-gopkg-in-datadog-dd-trace-go-v1")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/datadog/dd-trace-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/datadog/dd-trace-go.v1"))
    (home-page "https://github.com/datadog/dd-trace-go")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-cenkalti-backoff-v1
  (package
    (name "go-gopkg-in-cenkalti-backoff-v1")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cenkalti/backoff")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/cenkalti/backoff.v1"))
    (home-page "https://github.com/cenkalti/backoff")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-cheggaaa-pb-v1
  (package
    (name "go-gopkg-in-cheggaaa-pb-v1")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cheggaaa/pb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/cheggaaa/pb.v1"))
    (home-page "https://github.com/cheggaaa/pb")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-gcfg-v1
  (package
    (name "go-gopkg-in-tomb-v2")
    (version "2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-gcfg/gcfg")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/gcfg.v1"))
    (home-page "https://github.com/go-gcfg/gcfg")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-gomail-v2
  (package
    (name "go-gopkg-in-gomail-v2")
    (version "2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-gomail/gomail/tree/v1")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/gomail.v1"))
    (home-page "https://github.com/go-gomail/gomail/tree/v1")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-h2non-gock-v1
  (package
    (name "go-gopkg-in-h2non-gock-v1")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/h2non/gock")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/h2non/gock.v1"))
    (propagated-inputs (list go-github-com-h2non-parth
                             go-github-com-nbio-st))
    (home-page "https://github.com/h2non/gock")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-mail-v2
  (package
    (name "go-gopkg-in-mail-v2")
    (version "2.3.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-mail/mail")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/mail.v2"))
    (home-page "https://github.com/go-mail/mail")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-mgo-v2
  (package
    (name "go-gopkg-in-mgo-v2")
    (version "2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-mgo/mgo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/mgo.v2"))
    (home-page "https://github.com/go-mgo/mgo")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-ns1-ns1-go-v2
  (package
    (name "go-gopkg-in-ns1-ns1-go-v2")
    (version "2.13.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/ns1/ns1-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "https://github.com/ns1/ns1-go"))
    (native-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/ns1/ns1-go")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-olahol-melody-v1
  (package
    (name "go-gopkg-in-olahol-melody-v1")
    (version "1.2.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/olahol/melody")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/olahol/melody.v1"))
    (native-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/olahol/melody")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-olivere-elastic-v6
  (package
    (name "go-gopkg-in-olivere-elastic-v6")
    (version "6.2.37")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/olivere/elastic")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/olivere/elastic.v6"))
    (native-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/olivere/elastic")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-go-playground-colors-v1
  (package
    (name "go-gopkg-in-go-playground-colors-v1")
    (version "6.2.37")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-playground/colors")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/go-playground/colors.v1"))
    (native-inputs (list go-github-com-stretchr-testify))
    (home-page "https://github.com/go-playground/colors")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-rethinkdb-rethinkdb-go-v6
  (package
    (name "go-gopkg-in-rethinkdb-rethinkdb-go-v6")
    (version "3.3.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rethinkdb/rethinkdb-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/rethinkdb/rethinkdb-go.v6"))
    (home-page "https://github.com/rethinkdb/rethinkdb-go")
    (synopsis "api")
    (description
     "")
    (license license:expat)))


;; WE CONTINUE THE DEVELOPMENT AT go-git/go-billy. This repository is abandoned,
;; and no further updates will be done on the code base, nor issue/prs will be
;; answered or attended.
;; https://github.com/go-git/go-billy
(define-public go-gopkg-in-src-d-go-billy-v4
  (package
    (name "go-gopkg-in-src-d-go-billy-v4")
    (version "4.13.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/src-d/go-billy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gopkg.in/src-d/go-billi.v4"))
    (home-page "https://github.com/src-d/go-billy")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

;; This repository has been archived by the owner on Sep 11, 2020. It is now read-only.
;;
;; WE CONTINUE THE DEVELOPMENT AT go-git/go-git. This repository is abandoned,
;; and no further updates will be done on the code base, nor issue/prs will be
;; answered or attended.
;; https://github.com/go-git/go-git
(define-public go-gopkg-in-src-d-go-git-v4
  (package
    (name "go-gopkg-in-src-d-go-git-v4")
    (version "4.13.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/src-d/go-git")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gopkg.in/src-d/go-git.v4"))
    (home-page "https://github.com/src-d/go-git")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-telebot-v3
  (package
    (name "go-gopkg-in-telebot-v3")
    (version "3.3.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-telebot/telebot")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/telebot.v3"))
    (home-page "https://github.com/go-telebot/telebot")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-tomb-v2
  (package
    (name "go-gopkg-in-tomb-v2")
    (version "2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-tomb/tomb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/tomb.v2"))
    (home-page "https://github.com/go-tomb/tomb")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gopkg-in-validator-v2
  (package
    (name "go-gopkg-in-validator-v2")
    (version "2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-validator/validator")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gopkg.in/validator.v2"))
    (home-page "https://github.com/go-validator/validator")
    (synopsis "api")
    (description
     "")
    (license license:expat)))

(define-public go-gorm-io-driver-postgres
  (package
    (name "go-gorm-io-driver-postgres")
    (version "1.5.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-gorm/postgres")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15m9jgrzabknbpj9f2rwx5jlis2877q3h8hybmvmcflmwbvaib69"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gorm.io/driver/postgres"))
    (propagated-inputs (list go-gorm-io-gorm go-github-com-jackc-pgx-v5))
    (home-page "https://gorm.io/driver/postgres")
    (synopsis "GORM PostgreSQL Driver")
    (description
     "Checkout @@url{https://gorm.io,https://gorm.io} for details.")
    (license license:expat)))

(define-public go-gorm-io-gorm
  (package
    (name "go-gorm-io-gorm")
    (version "1.25.12")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/go-gorm/gorm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0dy1nxnjm2wr27q9ys17q06c9n84c286ha3715xjhyjbv7khiqzv"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gorm.io/gorm"))
    (propagated-inputs (list go-golang-org-x-text go-github-com-jinzhu-now
                             go-github-com-jinzhu-inflection))
    (home-page "https://gorm.io/gorm")
    (synopsis "GORM")
    (description
     "The fantastic ORM library for Golang, aims to be developer friendly.")
    (license license:expat)))

(define-public go-gotest-tools
  (package
    (name "go-gotest-tools")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/gotestyourself/gotest.tools")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0ykgj2rpi3yha9rd23abx2885rm72jarhpgw1hkasmrb9i7j6nqk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "gotest.tools"))
    (home-page "https://gotest.tools")
    (synopsis "gotest.tools")
    (description
     "Package gotesttools is a collection of packages to augment `testing` and support
common patterns.")
    (license license:asl2.0)))

(define-public go-gvisor-dev-gvisor
  (package
    (name "go-gvisor-dev-gvisor")
    (version "0.0.0-20241230214704-4dbba85b072b")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/google/gvisor")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1pqy0xq6gqyw1v76wzdnz736l5kmm7dikm3lvs7l8k3a05fgm25f"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "gvisor.dev/gvisor"))
    (propagated-inputs (list go-k8s-io-client-go
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-google-golang-org-protobuf
                             go-golang-org-x-tools
                             go-golang-org-x-time
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-mod
                             go-github-com-vishvananda-netlink
                             go-github-com-syndtr-gocapability
                             go-github-com-sirupsen-logrus
                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-mohae-deepcopy
                             go-github-com-mattbaird-jsonpatch
                             go-github-com-kr-pty
                             go-github-com-google-subcommands
                             go-github-com-google-btree
                             go-github-com-gogo-protobuf
                             go-github-com-gofrs-flock
                             go-github-com-godbus-dbus-v5
                             go-github-com-coreos-go-systemd-v22
                             go-github-com-containerd-typeurl
                             go-github-com-containerd-go-runc
                             go-github-com-containerd-fifo
                             go-github-com-containerd-containerd
                             go-github-com-containerd-console ; packaged
                             go-github-com-containerd-cgroups
                             go-github-com-cilium-ebpf
                             go-github-com-cenkalti-backoff
                             go-github-com-bazelbuild-rules-go
                             go-github-com-burntsushi-toml))
    (home-page "https://gvisor.dev/gvisor")
    (synopsis "What is gVisor?")
    (description
     "@@strong{@code{gVisor}} provides a strong layer of isolation between running
applications and the host operating system.  It is an application kernel that
implements a
@@url{https://en.wikipedia.org/wiki/Linux_kernel_interfaces,Linux-like
interface}.  Unlike Linux, it is written in a memory-safe language (Go) and runs
in userspace.")
    (license license:expat))) ; check-license

(define-public go-k8s-io-api
  (package
    (name "go-k8s-io-api")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/api")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1sv43cbncns87jb644x4zxc8n25i006l5jyz2k8riqzikhwwnizk"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "k8s.io/api"))
    (propagated-inputs (list go-k8s-io-apimachinery
                             go-github-com-gogo-protobuf ; packaged
                             ))
    (home-page "https://k8s.io/api")
    (synopsis "api")
    (description
     "Schema of the external API types that are served by the Kubernetes API server.")
    (license license:asl2.0)))

(define-public go-k8s-io-apiextensions-apiserver
  (package
    (name "go-k8s-io-apiextensions-apiserver")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/apiextensions-apiserver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05fvlaxfaba9payzjwrzfj9bdawy3p475s2y9958823hb9bv8irr"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "k8s.io/apiextensions-apiserver"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-sigs-k8s-io-structured-merge-diff-v4 ; packaged
                             go-sigs-k8s-io-json ; packaged
                             go-k8s-io-utils
                             go-k8s-io-kube-openapi ; packaged
                             go-k8s-io-klog-v2
                             go-k8s-io-component-base
                             go-k8s-io-code-generator
                             go-k8s-io-client-go
                             go-k8s-io-apiserver
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-gopkg-in-evanphx-json-patch-v4 ; packaged
                             go-google-golang-org-protobuf
                             go-google-golang-org-grpc ; packaged
                             go-go-opentelemetry-io-otel-trace
                             go-go-opentelemetry-io-otel
                             go-go-etcd-io-etcd-client-v3
                             go-go-etcd-io-etcd-client-pkg-v3
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-google-uuid
                             go-github-com-google-gofuzz
                             go-github-com-google-go-cmp
                             go-github-com-google-gnostic-models ; packaged
                             go-github-com-google-cel-go ; packaged
                             go-github-com-gogo-protobuf
                             go-github-com-fxamacker-cbor-v2
                             go-github-com-emicklei-go-restful-v3))
    (home-page "https://k8s.io/apiextensions-apiserver")
    (synopsis "apiextensions-apiserver")
    (description
     "Implements:
@@url{https://github.com/kubernetes/design-proposals-archive/blob/main/api-machinery/thirdpartyresources.md,https://github.com/kubernetes/design-proposals-archive/blob/main/api-machinery/thirdpartyresources.md}.")
    (license license:asl2.0)))

(define-public go-k8s-io-apiserver
  (package
    (name "go-k8s-io-apiserver")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/apiserver")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1dqa3y9wz5j5i99h40vviby6f9vx7f9w9kgax4k3ms5vc7x5zx72"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "k8s.io/apiserver"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                        go-sigs-k8s-io-structured-merge-diff-v4 ; packaged
                        go-sigs-k8s-io-json ; packaged
                        go-sigs-k8s-io-apiserver-network-proxy-konnectivity-client
                        go-k8s-io-utils
                        go-k8s-io-kube-openapi ; packaged
                        go-k8s-io-kms
                        go-k8s-io-klog-v2
                        go-k8s-io-component-base
                        go-k8s-io-client-go
                        go-k8s-io-apimachinery
                        go-k8s-io-api
                        ;go-gopkg-in-square-go-jose-v2
                        go-gopkg-in-natefinch-lumberjack-v2
                        go-gopkg-in-evanphx-json-patch-v4 ; packaged
                        go-google-golang-org-protobuf
                        go-google-golang-org-grpc
                        go-google-golang-org-genproto-googleapis-api ; packaged
                        go-golang-org-x-time
                        go-golang-org-x-sys
                        go-golang-org-x-sync
                        go-golang-org-x-net
                        go-golang-org-x-crypto
                        go-go-uber-org-zap
                        go-go-opentelemetry-io-otel-trace
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-metric ; packaged
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-go-opentelemetry-io-contrib-instrumentation-google-golang-org-grpc-otelgrpc
                        go-go-etcd-io-etcd-server-v3
                        go-go-etcd-io-etcd-client-v3
                        go-go-etcd-io-etcd-client-pkg-v3
                        go-go-etcd-io-etcd-api-v3
                        go-github-com-stretchr-testify
                        go-github-com-spf13-pflag
                        go-github-com-mxk-go-flowrate
                        go-github-com-munnerz-goautoneg
                        go-github-com-grpc-ecosystem-go-grpc-prometheus ; packaged
                        go-github-com-gorilla-websocket
                        go-github-com-google-uuid
                        go-github-com-google-gofuzz
                        go-github-com-google-go-cmp
                        go-github-com-google-gnostic-models ; packaged
                        go-github-com-google-cel-go ; packaged
                        go-github-com-google-btree
                        go-github-com-gogo-protobuf
                        go-github-com-go-logr-logr
                        go-github-com-fsnotify-fsnotify ; packaged
                        go-github-com-emicklei-go-restful-v3
                        go-github-com-coreos-go-systemd-v22
                        go-github-com-coreos-go-oidc
                        go-github-com-blang-semver-v4
                        go-github-com-asaskevich-govalidator))
    (home-page "https://k8s.io/apiserver")
    (synopsis "apiserver")
    (description
     "Generic library for building a Kubernetes aggregated API server.")
    (license license:asl2.0)))

(define-public go-k8s-io-cli-runtime
  (package
    (name "go-k8s-io-cli-runtime")
    (version "0.32.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/cli-runtime")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0bfi5d5b6gh68v0jz0n3y7ml9ngxr73i47ml5vh1pp340vxi0qf0"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "k8s.io/cli-runtime"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-sigs-k8s-io-kustomize-kyaml ; packaged
                             go-sigs-k8s-io-kustomize-api
                             go-k8s-io-utils
                             go-k8s-io-kube-openapi ; packaged
                             go-k8s-io-klog-v2
                             go-k8s-io-client-go
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-gopkg-in-evanphx-json-patch-v4 ; packaged
                             go-golang-org-x-text
                             go-golang-org-x-sync
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-moby-term ; packaged
                             go-github-com-liggitt-tabwriter
                             go-github-com-google-uuid
                             go-github-com-google-go-cmp
                             go-github-com-google-gnostic-models ; packaged
                             ))
    (home-page "https://k8s.io/cli-runtime")
    (synopsis "cli-runtime")
    (description
     "Set of helpers for creating kubectl commands, as well as kubectl plugins.")
    (license license:asl2.0)))

(define-public go-k8s-io-client-go
  (package
    (name "go-k8s-io-client-go")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/client-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jyvks1fmbk5v1mqf1q4fwsqmv9dffppvpbhk4yp1fwy7j9hd447"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "k8s.io/client-go"))
    (propagated-inputs (list go-sigs-k8s-io-yaml ; packaged
                             go-sigs-k8s-io-structured-merge-diff-v4 ; packaged
                             go-sigs-k8s-io-json ; packaged
                             go-k8s-io-utils
                             go-k8s-io-kube-openapi ; packaged
                             go-k8s-io-klog-v2
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-gopkg-in-evanphx-json-patch-v4 ; packaged
                             go-google-golang-org-protobuf
                             go-golang-org-x-time
                             go-golang-org-x-term
                             go-golang-org-x-oauth2
                             go-golang-org-x-net
                             go-go-uber-org-goleak
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-peterbourgon-diskv
                             go-github-com-munnerz-goautoneg
                             go-github-com-gregjones-httpcache
                             go-github-com-gorilla-websocket
                             go-github-com-google-uuid
                             go-github-com-google-gofuzz
                             go-github-com-google-go-cmp
                             go-github-com-google-gnostic-models ; packaged
                             go-github-com-golang-protobuf
                             go-github-com-gogo-protobuf))
    (home-page "https://k8s.io/client-go")
    (synopsis "client-go")
    (description
     "Go clients for talking to a @@url{http://kubernetes.io/,kubernetes} cluster.")
    (license license:asl2.0)))

(define-public go-k8s-io-code-generator
  (package
    (name "go-k8s-io-code-generator")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/code-generator")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "10v67idic0qnln5ysl0myy0c8470cdymk0xbcagzx6c5isnq4gr8"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "k8s.io/code-generator"))
    (propagated-inputs (list go-sigs-k8s-io-yaml ; packaged
                             go-k8s-io-kube-openapi ; packaged
                             go-k8s-io-klog-v2
                             go-k8s-io-gengo-v2
                             go-k8s-io-apimachinery
                             go-golang-org-x-text
                             go-github-com-spf13-pflag
                             go-github-com-google-gofuzz
                             go-github-com-google-go-cmp
                             go-github-com-google-gnostic-models ; packaged
                             go-github-com-gogo-protobuf))
    (home-page "https://k8s.io/code-generator")
    (synopsis "code-generator")
    (description
     "Golang code-generators used to implement
@@url{https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md,Kubernetes-style
API types}.")
    (license license:asl2.0)))

(define-public go-k8s-io-component-base
  (package
    (name "go-k8s-io-component-base")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/component-base")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bizvkzvm2y577xxgxp1brvznrgrvs3bgk128gspkr94wnj1hsrw"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "k8s.io/component-base"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                        go-sigs-k8s-io-json ; packaged
                        go-k8s-io-utils
                        go-k8s-io-klog-v2
                        go-k8s-io-client-go
                        go-k8s-io-apimachinery
                        go-golang-org-x-sys
                        go-go-uber-org-zap
                        go-go-opentelemetry-io-otel-trace
                        go-go-opentelemetry-io-otel-sdk
                        go-go-opentelemetry-io-otel-exporters-otlp-otlptrace-otlptracegrpc
                        go-go-opentelemetry-io-otel
                        go-go-opentelemetry-io-contrib-instrumentation-net-http-otelhttp ; packaged
                        go-github-com-stretchr-testify
                        go-github-com-spf13-pflag
                        go-github-com-spf13-cobra
                        go-github-com-prometheus-procfs
                        go-github-com-prometheus-common
                        go-github-com-prometheus-client-model ; packaged
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-munnerz-goautoneg
                        go-github-com-moby-term ; packaged
                        go-github-com-google-go-cmp
                        go-github-com-go-logr-zapr
                        go-github-com-go-logr-logr
                        go-github-com-blang-semver-v4))
    (home-page "https://k8s.io/component-base")
    (synopsis "component-base")
    (description
     "Implement KEP 32:
@@url{https://github.com/kubernetes/enhancements/blob/master/keps/sig-cluster-lifecycle/wgs/783-component-base/README.md,https://github.com/kubernetes/enhancements/blob/master/keps/sig-cluster-lifecycle/wgs/783-component-base/README.md}.")
    (license license:asl2.0)))

(define-public go-k8s-io-component-helpers
  (package
    (name "go-k8s-io-component-helpers")
    (version "0.32.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/component-helpers")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1879zgkv108w5y9r561rybjgx1pv0k2cxs7nwijqd052x82c6032"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "k8s.io/component-helpers"))
    (propagated-inputs (list go-k8s-io-utils
                             go-k8s-io-klog-v2
                             go-k8s-io-client-go
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-github-com-stretchr-testify
                             go-github-com-google-go-cmp))
    (home-page "https://k8s.io/component-helpers")
    (synopsis "component-helpers")
    (description
     "This repository provides helpers primarily for core components (core components
as described in
@@url{https://github.com/kubernetes/enhancements/blob/master/keps/sig-cluster-lifecycle/wgs/783-component-base/README.md#component-definition,Create
a k8s.io/component-base repo}) which are required by at least two separate
binaries in kubernetes org.  Yet, still with a high level of abstraction.")
    (license license:asl2.0)))

(define-public go-k8s-io-kms
  (package
    (name "go-k8s-io-kms")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/kms")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1gfy4hfg4683hfjzrp1jg0k3mk3lld15mia9jhxcyj4yas5zrsxn"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "k8s.io/kms"))
    (propagated-inputs (list go-google-golang-org-grpc
                             go-github-com-gogo-protobuf))
    (home-page "https://k8s.io/kms")
    (synopsis "KMS")
    (description "Package kms contains the proto definitions for the kms API.")
    (license license:asl2.0)))

(define-public go-k8s-io-kubectl
  (package
    (name "go-k8s-io-kubectl")
    (version "0.32.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/kubectl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "104fz10s8g0i3by70pm35478jq3h3z6hdd4zh19y5n6w1aaq3jbq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "k8s.io/kubectl"))
    (propagated-inputs (list go-sigs-k8s-io-yaml ; packaged
                             go-sigs-k8s-io-structured-merge-diff-v4 ; packaged
                             go-sigs-k8s-io-kustomize-kyaml ; packaged
                             go-sigs-k8s-io-kustomize-kustomize-v5
                             go-sigs-k8s-io-json ; packaged
                             go-k8s-io-utils
                             go-k8s-io-metrics
                             go-k8s-io-kube-openapi ; packaged
                             go-k8s-io-klog-v2
                             go-k8s-io-component-helpers
                             go-k8s-io-component-base
                             go-k8s-io-client-go
                             go-k8s-io-cli-runtime
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-gopkg-in-evanphx-json-patch-v4 ; packaged
                             go-golang-org-x-sys
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-russross-blackfriday-v2
                             go-github-com-pkg-errors ; packaged
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo-v2
                             go-github-com-moby-term ; packaged
                             go-github-com-mitchellh-go-wordwrap
                             go-github-com-lithammer-dedent
                             go-github-com-liggitt-tabwriter
                             go-github-com-jonboulle-clockwork
                             go-github-com-google-go-cmp
                             go-github-com-google-gnostic-models ; packaged
                             go-github-com-go-openapi-jsonreference
                             go-github-com-fatih-camelcase
                             go-github-com-exponent-io-jsonpath
                             go-github-com-distribution-reference
                             go-github-com-chai2010-gettext-go
                             go-github-com-makenowjust-heredoc))
    (home-page "https://k8s.io/kubectl")
    (synopsis "Kubectl")
    (description
     "The @@code{k8s.io/kubectl} repo is used to track issues for the kubectl cli
distributed with @@code{k8s.io/kubernetes}.  It also contains packages intended
for use by client programs.  E.g.  these packages are vendored into
@@code{k8s.io/kubernetes} for use in the
@@url{https://github.com/kubernetes/kubernetes/tree/master/cmd/kubectl,kubectl}
cli client.  That client will eventually move here too.")
    (license license:asl2.0)))

(define-public go-k8s-io-kubelet
  (package
    (name "go-k8s-io-kubelet")
    (version "0.32.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/kubelet")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0847rlgyl7000ga4gh16h3nnszqgiibkpna1fpq7si1sg40ml58v"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "k8s.io/kubelet"))
    (propagated-inputs (list go-k8s-io-utils
                             go-k8s-io-klog-v2
                             go-k8s-io-cri-api ; packaged
                             go-k8s-io-component-base
                             go-k8s-io-client-go
                             go-k8s-io-apiserver
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-google-golang-org-grpc
                             go-github-com-stretchr-testify
                             go-github-com-gogo-protobuf
                             go-github-com-emicklei-go-restful-v3))
    (home-page "https://k8s.io/kubelet")
    (synopsis "kubelet")
    (description
     "This package implements
@@url{https://git.k8s.io/enhancements/keps/sig-cluster-lifecycle/wgs/115-componentconfig/README.md#kubelet-changes,KEP
14 - Moving @code{ComponentConfig} API types to staging repos}.")
    (license license:asl2.0)))

(define-public go-k8s-io-metrics
  (package
    (name "go-k8s-io-metrics")
    (version "0.32.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes/metrics")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1z0bf3cd4mfi2yic15yf6ypwxfd8zqldf67k05q25ljwgggkg78m"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "k8s.io/metrics"))
    (propagated-inputs (list go-k8s-io-code-generator
                             go-k8s-io-client-go
                             go-k8s-io-apimachinery
                             go-k8s-io-api
                             go-github-com-stretchr-testify
                             go-github-com-gogo-protobuf))
    (home-page "https://k8s.io/metrics")
    (synopsis "metrics")
    (description "Kubernetes metrics API type definitions and clients.")
    (license license:asl2.0)))

(define-public go-kernel-org-pub-linux-libs-security-libcap-cap
  (package
    (name "go-kernel-org-pub-linux-libs-security-libcap-cap")
    (version "1.2.76")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://git.kernel.org/pub/scm/libs/libcap/libcap.git")
             (commit (go-version->git-ref version
                                          #:subdir "cap"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0va0bkq5kxf0ccsdpw598vsmk4kdzhaafjvym0g5b2n49c5sn59b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "kernel.org/pub/linux/libs/security/libcap/cap"
      #:unpack-path "kernel.org/pub/linux/libs/security/libcap"))
    (propagated-inputs
     (list go-kernel-org-pub-linux-libs-security-libcap-psx))
    ;; Redirects from <https://kernel.org/pub/linux/libs/security/libcap>
    (home-page "https://sites.google.com/site/fullycapable")
    (synopsis "Golang API for working with POSIX capabilities")
    (description
     "Package cap provides all the Linux Capabilities userspace library API
bindings in native Go.")
    (license license:gpl2)))

(define-public go-layeh-com-gopus
  (package
    (name "go-layeh-com-gopus")
    (version "0.0.0-20210501142526-1ee02d434e32")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/layeh/gopus")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "05giw62gga6lgni5ri54rh30d6swb4lf76vwcy5zjkba7c8pjlwb"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "layeh.com/gopus"))
    (home-page "https://layeh.com/gopus")
    (synopsis "gopus")
    (description
     "gopus is a Go binding for the @@url{http://www.opus-codec.org/,Opus} audio
codec.")
    (license license:unlicense)))

(define-public go-layeh-com-gumble
  (package
    (name "go-layeh-com-gumble")
    (version "0.0.0-20221205141517-d1df60a3cc14")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/layeh/gumble")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1h4wra73yz8kmk7gqrx4p8cr3dmbj563dl1mk69wshnx7n2b680q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "layeh.com/gumble"))
    (propagated-inputs (list go-layeh-com-gopus go-github-com-golang-protobuf
                             go-github-com-dchote-go-openal))
    (home-page "https://layeh.com/gumble")
    (synopsis "gumble")
    (description
     "gumble is a @@url{https://mumble.info/,Mumble} client implementation in Go.")
    (license license:mpl2.0)))

(define-public go-mellium-im-sasl
  (package
    (name "go-mellium-im-sasl")
    (version "0.3.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://codeberg.org/mellium/sasl")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "08xix4y8p4f1zhbykg7yar1jvd82yc6pypmamdv1wmbif8dis4ib"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "mellium.im/sasl"))
    (propagated-inputs (list go-golang-org-x-crypto))
    (home-page "https://mellium.im/sasl")
    (synopsis "SASL")
    (description
     "Package sasl implements the Simple Authentication and Security Layer (SASL) as
defined by @@url{https://rfc-editor.org/rfc/rfc4422.html,RFC 4422}.")
    (license license:bsd-2)))

(define-public go-modernc-org-b
  (package
    (name "go-modernc-org-b")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/b")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0p8gnmjvg05avw18k78p643fc0b0yzjyg6nns0v7z4jcg7wxm3i3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/b"))
    (propagated-inputs (list go-modernc-org-strutil go-modernc-org-mathutil
                             go-modernc-org-fileutil))
    (home-page "https://modernc.org/b")
    (synopsis "b")
    (description "Package b implements the B+tree flavor of a BTree.")
    (license license:bsd-3)))

(define-public go-modernc-org-cc-v3
  (package
    (name "go-modernc-org-cc-v3")
    (version "3.41.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/cc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0khw9qsaz4ab0vb4kazgfm481cjpcyxj6ld2ma4d9hva3ca9h8ji"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/cc/v3"
      #:unpack-path "modernc.org/cc"))
    (propagated-inputs (list go-modernc-org-token
                             go-modernc-org-strutil
                             go-modernc-org-mathutil
                             go-lukechampine-com-uint128
                             go-github-com-google-go-cmp
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://modernc.org/cc")
    (synopsis "cc/v3")
    (description "Package cc is a C99 compiler front end (Work in progress).")
    (license license:bsd-3)))

(define-public go-modernc-org-cc-v4
  (package
    (name "go-modernc-org-cc-v4")
    (version "4.24.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/cc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18kxly8vlz0ywfb4m9bnkdbc07fvp6h3x6588jmvd5cik74c4j8l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/cc/v4"
      #:unpack-path "modernc.org/cc"))
    (propagated-inputs (list go-modernc-org-token
                             go-modernc-org-strutil
                             go-modernc-org-sortutil
                             go-modernc-org-opt
                             go-modernc-org-mathutil
                             go-modernc-org-ccorpus2
                             go-github-com-pmezard-go-difflib
                             go-github-com-pbnjay-memory ; packaged
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://modernc.org/cc")
    (synopsis #f)
    (description "Package cc is a C99 compiler front end.")
    (license license:bsd-3)))

(define-public go-modernc-org-ccgo-v3
  (package
    (name "go-modernc-org-ccgo-v3")
    (version "3.17.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/ccgo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0zkxzhmkm5pgalcnlhw0whiii6vhdpnnnpwkx9b5ah21ajk6qqlc"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/ccgo/v3"
      #:unpack-path "modernc.org/ccgo"))
    (propagated-inputs (list go-modernc-org-opt
                             go-modernc-org-mathutil
                             go-modernc-org-libc
                             go-modernc-org-ccorpus
                             go-modernc-org-ccgo-v4
                             go-modernc-org-cc-v3
                             go-golang-org-x-tools
                             go-golang-org-x-sys
                             go-github-com-pmezard-go-difflib
                             go-github-com-kballard-go-shellquote ; packaged
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://modernc.org/ccgo")
    (synopsis "ccgo/v3")
    (description "Package ccgo translates C to Go source code.")
    (license license:bsd-3)))

(define-public go-modernc-org-ccgo-v4
  (package
    (name "go-modernc-org-ccgo-v4")
    (version "4.23.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/ccgo")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1j94kkk2j30v67jr4h2rdq0ryscvx9y0vxba87j69imrj3xmssjm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/ccgo/v4"
      #:unpack-path "modernc.org/ccgo"))
    (propagated-inputs (list go-modernc-org-strutil
                             go-modernc-org-opt
                             go-modernc-org-mathutil
                             go-modernc-org-libc
                             go-modernc-org-gc-v2
                             go-modernc-org-fileutil
                             go-modernc-org-ccorpus2
                             go-modernc-org-ccgo-v3
                             go-modernc-org-cc-v4
                             go-golang-org-x-tools
                             go-golang-org-x-mod
                             go-github-com-pmezard-go-difflib
                             go-github-com-pbnjay-memory ; packaged
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://modernc.org/ccgo")
    (synopsis #f)
    (description "Command ccgo is a C compiler producing Go code.")
    (license license:bsd-3)))

(define-public go-modernc-org-ccorpus
  (package
    (name "go-modernc-org-ccorpus")
    (version "1.11.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/ccorpus")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18d5npw8aw5qzy6qcrlrili2zxvmc2v4kkwjps6c3ayvi7aj7j09"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/ccorpus"))
    (propagated-inputs (list go-modernc-org-httpfs))
    (home-page "https://modernc.org/ccorpus")
    (synopsis "ccorpus")
    (description "Package ccorpus provides a test corpus of C code.")
    (license license:bsd-3)))

(define-public go-modernc-org-db
  (package
    (name "go-modernc-org-db")
    (version "1.0.11")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/db")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "07q86ilf2kdr401cm18ncshc069wd3rklidvfi5073fqc5fg2gvl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/db"))
    (propagated-inputs (list go-modernc-org-strutil go-modernc-org-mathutil
                             go-modernc-org-internal go-modernc-org-file))
    (home-page "https://modernc.org/db")
    (synopsis "db")
    (description
     "Package db implements selected data structures found in database
implementations.")
    (license license:bsd-3)))

(define-public go-modernc-org-exp
  (package
    (name "go-modernc-org-exp")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/exp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1jsr28s80i8xl53yl2kzinc609ym2rba8zijs35513p8hpj5kbbs"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/exp"))
    (home-page "https://modernc.org/exp")
    (synopsis #f)
    (description #f)
    (license #f)))

(define-public go-modernc-org-file
  (package
    (name "go-modernc-org-file")
    (version "1.0.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/file")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "12v6fykg088ii1ldb4r9aagjpa4rcvw7fk9il6hhfb6svli8dh5b"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/file"))
    (propagated-inputs (list go-modernc-org-mathutil go-modernc-org-internal))
    (home-page "https://modernc.org/file")
    (synopsis "file")
    (description
     "Package file handles write-ahead logs and space management of os.File-like
entities.")
    (license license:bsd-3)))

(define-public go-modernc-org-gc-v2
  (package
    (name "go-modernc-org-gc-v2")
    (version "2.6.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/gc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0000000000000000000000000000000000000000000000000000"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/gc/v2"
      #:unpack-path "modernc.org/gc"))
    (propagated-inputs (list go-modernc-org-token go-modernc-org-scannertest
                             go-github-com-pmezard-go-difflib
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://modernc.org/gc")
    (synopsis "gc")
    (description
     "Package GC is a Go compiler front end. (Work in progress, API unstable).")
    (license license:bsd-3)))

(define-public go-modernc-org-gc-v3
  (package
    (name "go-modernc-org-gc-v3")
    (version "3.0.0-20241223112719-96e2e1e4408d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/gc")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hd7mi73f241s13sw1853vw5v0d5imd8i31ygws8sjgnfa599a5f"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "modernc.org/gc/v3"
      #:unpack-path "modernc.org/gc"))
    (propagated-inputs (list go-modernc-org-token
                             go-modernc-org-strutil
                             go-modernc-org-mathutil
                             go-golang-org-x-tools
                             go-golang-org-x-exp
                             go-github-com-pmezard-go-difflib
                             go-github-com-hashicorp-golang-lru-v2 ; packaged
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://modernc.org/gc")
    (synopsis #f)
    (description #f)
    (license license:bsd-3)))

(define-public go-modernc-org-golex
  (package
    (name "go-modernc-org-golex")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/golex")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01izinzm5j5210z09r6k8rygybw7s442hrhk0kv726ig9l9si7fi"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/golex"))
    (propagated-inputs (list go-modernc-org-lexer go-modernc-org-lex))
    (home-page "https://modernc.org/golex")
    (synopsis #f)
    (description
     "Golex is a lex/flex like (not fully POSIX lex compatible) utility.  It renders
.l formated data
(@@url{https://westes.github.io/flex/manual/Format.html#Format,https://westes.github.io/flex/manual/Format.html#Format})
to Go source code.  The .l data can come from a file named in a command line
argument.  If no non-opt args are given, golex reads stdin.")
    (license license:bsd-3)))

(define-public go-modernc-org-internal
  (package
    (name "go-modernc-org-internal")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/internal")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0000000000000000000000000000000000000000000000000000"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/internal"))
    (propagated-inputs (list go-modernc-org-mathutil go-modernc-org-fileutil
                             go-github-com-edsrzf-mmap-go))
    (home-page "https://modernc.org/internal")
    (synopsis "internal")
    (description "Things that cannot be imported by 3rd party packages.")
    (license license:bsd-3)))

(define-public go-modernc-org-kv
  (package
    (name "go-modernc-org-kv")
    (version "1.0.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/kv")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1vnbxqp6i9z254133x2j19jfkpragdyk643jn0z4psm6gd1xs44a"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/kv"))
    (propagated-inputs (list go-modernc-org-mathutil go-modernc-org-lldb
                             go-modernc-org-internal go-modernc-org-fileutil
                             go-modernc-org-exp))
    (home-page "https://modernc.org/kv")
    (synopsis "kv")
    (description
     "Package kv implements a simple and easy to use persistent key/value (KV) store.")
    (license license:bsd-3)))

(define-public go-modernc-org-lex
  (package
    (name "go-modernc-org-lex")
    (version "1.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/lex")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1fad093cdkgdwk3sf0vklk05qzkis1ivri3hig1wigv4z908nmdj"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/lex"))
    (propagated-inputs (list go-modernc-org-lexer go-modernc-org-fileutil))
    (home-page "https://modernc.org/lex")
    (synopsis #f)
    (description
     "Package lex provides support for a *nix (f)lex like tool on .l sources.  The
syntax is similar to a subset of (f)lex, see also:
@@url{http://flex.sourceforge.net/manual/Format.html#Format,http://flex.sourceforge.net/manual/Format.html#Format}.")
    (license license:bsd-3)))

(define-public go-modernc-org-libc
  (package
    (name "go-modernc-org-libc")
    (version "1.61.6")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/libc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1c1vpxgvnl7dm18rydf96620s1fdkfdl7nzwp9m6pxlmhmdqn8nz"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/libc"))
    (propagated-inputs (list go-modernc-org-memory
                             go-modernc-org-mathutil
                             go-modernc-org-fileutil
                             go-modernc-org-ccgo-v4
                             go-modernc-org-cc-v4
                             go-golang-org-x-sys
                             go-golang-org-x-exp
                             go-github-com-ncruces-go-strftime
                             go-github-com-mattn-go-isatty
                             go-github-com-google-uuid
                             go-github-com-dustin-go-humanize ; packaged
))
    (home-page "https://modernc.org/libc")
    (synopsis "libc")
    (description
     "Package libc provides run time support for programs generated by the
@@url{http://modernc.org/ccgo/v4,ccgo} C to Go transpiler, version 4 or later.")
    (license license:bsd-3)))

(define-public go-modernc-org-lldb
  (package
    (name "go-modernc-org-lldb")
    (version "1.0.8")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/lldb")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0hcb7c1r9gmnvwldd87lsyrpb9ch3z6410ql8wf1fj1krn9d7r5p"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/lldb"))
    (propagated-inputs (list go-modernc-org-zappy go-modernc-org-sortutil
                             go-modernc-org-mathutil go-modernc-org-internal
                             go-modernc-org-fileutil))
    (home-page "https://modernc.org/lldb")
    (synopsis "lldb")
    (description
     "Package lldb implements a low level database engine.  The database model used
could be considered a specific implementation of some small(est) intersection of
models listed in [1].  As a settled term is lacking, it'll be called here a
Virtual memory model (VMM).")
    (license license:bsd-3)))

(define-public go-modernc-org-ql
  (package
    (name "go-modernc-org-ql")
    (version "1.4.7")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/ql")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1qip7wx75699fraj2icgy0pxbaib3765lnk8lrd2wa4lr0zdlmhf"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/ql"))
    (propagated-inputs (list go-modernc-org-strutil
                             go-modernc-org-mathutil
                             go-modernc-org-lldb
                             go-modernc-org-internal
                             go-modernc-org-golex
                             go-modernc-org-file
                             go-modernc-org-db
                             go-modernc-org-b))
    (home-page "https://modernc.org/ql")
    (synopsis #f)
    (description
     "Package ql implements a pure Go embedded SQL database engine.")
    (license license:bsd-3)))

(define-public go-modernc-org-scannertest
  (package
    (name "go-modernc-org-scannertest")
    (version "1.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/scannertest")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06hk8pqaihhmfxfprg1fmdl2y8ffvrblm10z7qq3l921jjxc1ch7"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/scannertest"))
    (propagated-inputs (list go-modernc-org-lexer go-modernc-org-lex))
    (home-page "https://modernc.org/scannertest")
    (synopsis #f)
    (description #f)
    (license license:expat))) ; check-license

(define-public go-modernc-org-sqlite
  (package
    (name "go-modernc-org-sqlite")
    (version "1.34.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/sqlite")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "085fqhk2cbr7jx7hjhyhc84fwb24bj0zjnmr21qckp1dviz011v4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/sqlite"))
    (propagated-inputs (list go-modernc-org-mathutil
                             go-modernc-org-libc
                             go-modernc-org-gc-v3
                             go-modernc-org-fileutil
                             go-golang-org-x-sys
                             go-github-com-google-pprof))
    (home-page "https://modernc.org/sqlite")
    (synopsis #f)
    (description
     "Package sqlite is a sql/database driver using a CGo-free port of the C SQLite3
library.")
    (license license:bsd-3)))

(define-public go-modernc-org-zappy
  (package
    (name "go-modernc-org-zappy")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitlab.com/cznic/zappy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "15wpzzmds33bkwpj4km9lhbzy2n2agldjq7g8lixkxjbv5lzv6rl"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "modernc.org/zappy"))
    (propagated-inputs (list go-modernc-org-internal
                             go-github-com-golang-snappy))
    (home-page "https://modernc.org/zappy")
    (synopsis "zappy")
    (description
     "Package zappy implements the zappy block-based compression format.  It aims for
a combination of good speed and reasonable compression.")
    (license license:bsd-3)))

(define-public go-oras-land-oras-go-v2
  (package
    (name "go-oras-land-oras-go-v2")
    (version "2.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/oras-project/oras-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1q1qgd8ys2lh2xldg387b5z67zhl9z4pck8a3lr2ki9iywx4h9l5"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "oras.land/oras-go/v2"
      #:unpack-path "oras.land/oras-go"))
    (propagated-inputs (list go-golang-org-x-sync
                             go-github-com-opencontainers-image-spec ; packaged
                             go-github-com-opencontainers-go-digest))
    (home-page "https://oras.land/oras-go")
    (synopsis "ORAS Go library")
    (description
     "The ORAS Go library follows @@url{https://semver.org/,Semantic Versioning},
where breaking changes are reserved for MAJOR releases, and MINOR and PATCH
releases must be 100% backwards compatible.")
    (license license:asl2.0)))

(define-public go-pack-ag-tftp
  (package
    (name "go-pack-ag-tftp")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/vcabbage/go-tftp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "06sds166nw8486i81v5divclzj3ngfc91ii552xda82dvvy06g0z"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "pack.ag/tftp"))
    (home-page "https://pack.ag/tftp")
    (synopsis #f)
    (description
     "Package tftp provides TFTP client and server implementations.")
    (license license:expat)))

(define-public go-perkeep-org
  (package
    (name "go-perkeep-org")
    (version "0.0.0-20240423032045-bb15e6eb48bc")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/perkeep/perkeep")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "145x5v4pcpd15392zlfvh4sllzknq3yinsx8d4rma7aq1hxgwjhm"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "perkeep.org"))
    (propagated-inputs (list go-tailscale-com
                             go-rsc-io-qr
                             go-rsc-io-pdf
                             go-modernc-org-sqlite
                             go-modernc-org-kv
                             go-honnef-co-go-tools
                             go-gopkg-in-mgo-v2
                             go-google-golang-org-api
                             go-golang-org-x-time ; packaged
                             go-golang-org-x-sys ; packaged
                             go-golang-org-x-sync ; packaged
                             go-golang-org-x-oauth2 ; packaged
                             go-golang-org-x-net ; packaged
                             go-golang-org-x-image ; packaged
                             go-golang-org-x-crypto ; packaged
                             go-go4-org  ; packaged
                             go-github-com-tgulacsi-picago
                             go-github-com-syndtr-goleveldb
                             go-github-com-rwcarlsen-goexif ; packaged
                             go-github-com-russross-blackfriday
                             go-github-com-plaid-plaid-go
                             go-github-com-pkg-sftp
                             go-github-com-nf-cr2
                             go-github-com-mattn-go-mastodon ; packaged
                             go-github-com-lib-pq
                             go-github-com-hjfreyer-taglib-go
                             go-github-com-gorilla-websocket
                             go-github-com-gopherjs-jquery
                             go-github-com-gopherjs-gopherjs
                             go-github-com-go-sql-driver-mysql
                             go-github-com-garyburd-go-oauth
                             go-github-com-bradfitz-latlong
                             go-github-com-aws-aws-sdk-go
                             go-filippo-io-age
                             go-cloud-google-com-go-storage
                             go-cloud-google-com-go-logging
                             go-cloud-google-com-go-compute-metadata
                             go-bazil-org-fuse))
    (home-page "https://perkeep.org")
    (synopsis "Perkeep is your personal storage system.")
    (description
     "It's a way to store, sync, share, import, model, and back up content.  Keep your
stuff for life.")
    (license license:asl2.0)))

(define-public go-pkg-nimblebun-works-go-lsp
  (package
    (name "go-pkg-nimblebun-works-go-lsp")
    (version "1.1.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/nimblebun/go-lsp")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14hdbk0h85930phnsih5k33dj2qx9b3j4vvsf24g6v3qqjvbp54q"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "pkg.nimblebun.works/go-lsp"))
    (home-page "https://pkg.nimblebun.works/go-lsp")
    (synopsis "Language Server Protocol types for Go")
    (description
     "Package lsp contains type definitions and documentation for the Language Server
Protocol.")
    (license license:expat)))

(define-public go-pluginrpc-com-pluginrpc
  (package
    (name "go-pluginrpc-com-pluginrpc")
    (version "0.5.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/pluginrpc/pluginrpc-go")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1g539k0zmywwdk8mnhla489zif1s0v6vh4xgiwfrwcr07hmg4i2l"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "pluginrpc.com/pluginrpc"))
    (propagated-inputs (list go-google-golang-org-protobuf
                        go-github-com-stretchr-testify
                        go-github-com-spf13-pflag
                        go-github-com-mattn-go-isatty
                        go-buf-build-gen-go-pluginrpc-pluginrpc-protocolbuffers-go))
    (home-page "https://pluginrpc.com/pluginrpc")
    (synopsis "pluginrpc-go")
    (description "Package pluginrpc implements an RPC framework for plugins.")
    (license license:asl2.0)))

(define-public go-rsc-io-pdf
  (package
    (name "go-rsc-io-pdf")
    (version "0.1.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rsc/pdf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "01qjjwa8nn5a2jzd360xqg5zc8s0i2fpwcn2w2g6y2jgn9wl8x84"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "rsc.io/pdf"))
    (home-page "https://rsc.io/pdf")
    (synopsis #f)
    (description "Package pdf implements reading of PDF files.")
    (license license:bsd-3)))

(define-public go-rsc-io-qr
  (package
    (name "go-rsc-io-qr")
    (version "0.2.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/rsc/qr")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "04yx493g0fqp8i59zjxnl4k3s0cl0kr5m8xh0ph8m10r1hkw0xr3"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "rsc.io/qr"))
    (home-page "https://rsc.io/qr")
    (synopsis #f)
    (description "Package qr encodes QR codes.")
    (license license:bsd-3)))

(define-public go-sigs-k8s-io-apiserver-network-proxy-konnectivity-client
  (package
    (name "go-sigs-k8s-io-apiserver-network-proxy-konnectivity-client")
    (version "0.31.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes-sigs/apiserver-network-proxy")
             (commit (go-version->git-ref version
                                          #:subdir "konnectivity-client"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1m0r17akp192w2i4d730r6k2ksnbpyrflg0y3a96xhpakwj8cvji"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "sigs.k8s.io/apiserver-network-proxy/konnectivity-client"
      #:unpack-path "sigs.k8s.io/apiserver-network-proxy"))
    (propagated-inputs (list go-k8s-io-klog-v2 go-google-golang-org-protobuf
                             go-google-golang-org-grpc go-go-uber-org-goleak
                             go-github-com-prometheus-client-golang ; packaged
))
    (home-page "https://sigs.k8s.io/apiserver-network-proxy")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-sigs-k8s-io-controller-runtime
  (package
    (name "go-sigs-k8s-io-controller-runtime")
    (version "0.19.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes-sigs/controller-runtime")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "00wwf6c9q6dayxyrlnhnfvwzyq6ha085m0ah3b8w3zq3p18a87pq"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "sigs.k8s.io/controller-runtime"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-k8s-io-utils
                             go-k8s-io-klog-v2
                             go-k8s-io-client-go
                             go-k8s-io-apiserver
                             go-k8s-io-apimachinery
                             go-k8s-io-apiextensions-apiserver
                             go-k8s-io-api
                             go-gopkg-in-evanphx-json-patch-v4 ; packaged
                             go-gomodules-xyz-jsonpatch-v2
                             go-golang-org-x-sys
                             go-golang-org-x-mod
                             go-golang-org-x-exp
                             go-go-uber-org-zap
                             go-go-uber-org-goleak
                             go-github-com-prometheus-client-model ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo-v2
                             go-github-com-google-gofuzz
                             go-github-com-google-go-cmp
                             go-github-com-go-logr-zapr
                             go-github-com-go-logr-logr
                             go-github-com-evanphx-json-patch-v5))
    (home-page "https://sigs.k8s.io/controller-runtime")
    (synopsis "Kubernetes controller-runtime Project")
    (description
     "Package controllerruntime provides tools to construct Kubernetes-style
controllers that manipulate both Kubernetes CRDs and aggregated/built-in
Kubernetes APIs.")
    (license license:asl2.0)))

(define-public go-sigs-k8s-io-controller-tools
  (package
    (name "go-sigs-k8s-io-controller-tools")
    (version "0.16.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes-sigs/controller-tools")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1391lwvrgz95wv8iqz1jky6iphib14ma21q5cdsca0ynqh5pi2z8"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; check-go-version
      #:import-path "sigs.k8s.io/controller-tools"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-k8s-io-utils
                             go-k8s-io-apimachinery
                             go-k8s-io-apiextensions-apiserver
                             go-k8s-io-api
                             go-gopkg-in-yaml-v3
                             go-gopkg-in-yaml-v2
                             go-golang-org-x-tools
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-onsi-gomega
                             go-github-com-onsi-ginkgo
                             go-github-com-google-go-cmp
                             go-github-com-gobuffalo-flect
                             go-github-com-fatih-color))
    (home-page "https://sigs.k8s.io/controller-tools")
    (synopsis "Kubernetes controller-tools Project")
    (description
     "The Kubernetes controller-tools Project is a set of go libraries for building
Controllers.")
    (license license:asl2.0)))

(define-public go-sigs-k8s-io-knftables
  (package
    (name "go-sigs-k8s-io-knftables")
    (version "0.0.18")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes-sigs/knftables")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "03i92dlsyc2y50nqfznfg54mn976rz4fc1a9pnaadqcy5zi00ak4"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "sigs.k8s.io/knftables"))
    (propagated-inputs (list go-github-com-lithammer-dedent
                             go-github-com-google-go-cmp))
    (home-page "https://sigs.k8s.io/knftables")
    (synopsis "knftables: a golang nftables library")
    (description "This is a library for using nftables from Go.")
    (license license:asl2.0)))

(define-public go-sigs-k8s-io-kustomize-api
  (package
    (name "go-sigs-k8s-io-kustomize-api")
    (version "0.19.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes-sigs/kustomize")
             (commit (go-version->git-ref version
                                          #:subdir "api"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "09ar2vlfhria9bkv3wklfhd27x5w7qjlwy7jhvragglw0jwhkzdg"))))
    (build-system go-build-system)
    (arguments
     (list
      ;; #:go ; check
      #:import-path "sigs.k8s.io/kustomize/api"
      #:unpack-path "sigs.k8s.io/kustomize"))
    (propagated-inputs (list go-sigs-k8s-io-yaml            ; packaged
                             go-sigs-k8s-io-kustomize-kyaml ; packaged
                             go-k8s-io-kube-openapi         ; packaged
                             go-gopkg-in-evanphx-json-patch-v4 ; packaged
                             go-go-uber-org-goleak          ; packaged
                             go-github-com-stretchr-testify ; packaged
                             go-github-com-google-shlex     ; packaged
                             go-github-com-go-errors-errors ; packaged
                             go-github-com-blang-semver-v4
                             ))
    (home-page "https://sigs.k8s.io/kustomize")
    (synopsis #f)
    (description
     "This package provides a dummy main to help with releasing the kustomize API
module.")
    (license license:asl2.0)))

(define-public go-sigs-k8s-io-kustomize-kustomize-v5
  (package
    (name "go-sigs-k8s-io-kustomize-kustomize-v5")
    (version "5.6.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes-sigs/kustomize")
             (commit (go-version->git-ref version
                                          #:subdir "kustomize"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17yc82f09lm0s867f6pvl3vv28vw9lgadpmwb0bfqkw3qai4xira"))))
    (build-system go-build-system)
    (arguments
     (list
;; #:go ; check
      #:import-path "sigs.k8s.io/kustomize/kustomize/v5"
      #:unpack-path "sigs.k8s.io/kustomize"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-sigs-k8s-io-kustomize-kyaml ; packaged
                             go-sigs-k8s-io-kustomize-cmd-config ; packaged
                             go-sigs-k8s-io-kustomize-api
                             go-golang-org-x-text
                             go-github-com-stretchr-testify
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-google-go-cmp))
    (home-page "https://sigs.k8s.io/kustomize")
    (synopsis #f)
    (description "The kustomize CLI.")
    (license license:asl2.0)))

(define-public go-sigs-k8s-io-release-utils
  (package
    (name "go-sigs-k8s-io-release-utils")
    (version "0.11.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/kubernetes-sigs/release-utils")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1mh8a4q3ajv78ippwmzryps861mxfx2ssmaryycn02q0ia9dxvms"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go go-1.23
      #:import-path "sigs.k8s.io/release-utils"))
    (propagated-inputs (list go-k8s-io-utils
                             go-github-com-uwu-tools-magex
                             go-github-com-stretchr-testify
                             go-github-com-spf13-cobra
                             go-github-com-sirupsen-logrus
                             go-github-com-nozzle-throttler
                             go-github-com-moby-term ; packaged
                             go-github-com-maxbrunsfeld-counterfeiter-v6
                             go-github-com-common-nighthawk-go-figure
                             go-github-com-blang-semver-v4
                             go-github-com-avast-retry-go-v4))
    (home-page "https://sigs.k8s.io/release-utils")
    (synopsis "release-utils")
    (description
     "Tiny utilities for use by the Release Engineering subproject and
@@url{https://github.com/kubernetes/release/,kubernetes/release}.")
    (license license:asl2.0)))

(define-public go-src-elv-sh
  (package
    (name "go-src-elv-sh")
    (version "0.21.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/elves/elvish")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1yrah4xbm8jsmr578676bd0yq1n3dc6ahs0hav6csnl7739jpags"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "src.elv.sh"))
    (propagated-inputs (list go-pkg-nimblebun-works-go-lsp
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-go-etcd-io-bbolt
                             go-github-com-sourcegraph-jsonrpc2
                             go-github-com-mattn-go-isatty
                             go-github-com-google-go-cmp
                             go-github-com-creack-pty))
    (home-page "https://src.elv.sh")
    (synopsis "Elvish")
    (description "(Chat rooms are all bridged together thanks to
@@url{https://matrix.org,Matrix}.).")
    (license license:bsd-2)))

(define-public go-storj-io-common
  (package
    (name "go-storj-io-common")
    (version "0.0.0-20250207214808-37afb3c7daeb")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/storj/common")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0xxbihikblhaj6py3fw3awncvpi5r4s4jdxyj2zp116ffnn10gjq"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "storj.io/common"))
    (propagated-inputs (list go-storj-io-picobuf
                             go-storj-io-monkit-jaeger
                             go-storj-io-eventkit
                             go-storj-io-drpc
                             go-gopkg-in-yaml-v2
                             go-golang-org-x-sys
                             go-golang-org-x-sync
                             go-golang-org-x-crypto
                             go-go-uber-org-zap
                             go-github-com-zeebo-structs
                             go-github-com-zeebo-errs
                             go-github-com-zeebo-blake3 ; packaged
                             go-github-com-zeebo-admission-v3
                             go-github-com-stretchr-testify
                             go-github-com-spf13-viper
                             go-github-com-spf13-pflag
                             go-github-com-spf13-cobra
                             go-github-com-spf13-cast
                             go-github-com-spacemonkeygo-monkit-v3
                             go-github-com-shopspring-decimal
                             go-github-com-quic-go-quic-go ; packaged
                             go-github-com-jtolio-noiseconn
                             go-github-com-jtolio-crawlspace-tools
                             go-github-com-jtolio-crawlspace
                             go-github-com-jtolds-tracetagger-v2
                             go-github-com-google-pprof
                             go-github-com-google-gopacket ; packaged
                             go-github-com-gogo-protobuf
                             go-github-com-flynn-noise
                             go-github-com-calebcase-tmpfile
                             go-github-com-bmkessler-fastdiv
                             go-github-com-blang-semver-v4
                             go-cloud-google-com-go-profiler))
    (home-page "https://storj.io/common")
    (synopsis #f)
    (description #f)
    (license license:expat)))

(define-public go-storj-io-drpc
  (package
    (name "go-storj-io-drpc")
    (version "0.0.34")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/storj/drpc")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "14lqij58nj8m84mbad1nv30s2v33l2zbw3nvc903f7bl43rgwdl6"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "storj.io/drpc"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-zeebo-errs
                             go-github-com-zeebo-assert))
    (home-page "https://storj.io/drpc")
    (synopsis #f)
    (description "Package drpc is a light replacement for gprc.")
    (license license:expat)))

(define-public go-storj-io-eventkit
  (package
    (name "go-storj-io-eventkit")
    (version "0.0.0-20241202124130-8c3a47eebc6d")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/storj/eventkit")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1hcpag5km8nysnnvi14hlv8ln8andzfda1v32il3288lniads36c"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "storj.io/eventkit"))
    (propagated-inputs (list go-storj-io-picobuf
                             go-google-golang-org-api
                             go-golang-org-x-sync
                             go-go-uber-org-zap
                             go-github-com-zeebo-errs-v2
                             go-github-com-stretchr-testify
                             go-github-com-spf13-viper
                             go-github-com-spf13-cobra
                             go-github-com-spacemonkeygo-monkit-v3
                             go-github-com-pkg-errors
                             go-github-com-google-gopacket ; packaged
                             go-github-com-elek-bubbles
                             go-github-com-charmbracelet-lipgloss
                             go-github-com-charmbracelet-bubbletea
                             go-cloud-google-com-go-bigquery))
    (home-page "https://storj.io/eventkit")
    (synopsis "eventkit")
    (description
     "a go library for reporting multidimensional events over UDP.")
    (license license:expat)))

(define-public go-storj-io-infectious
  (package
    (name "go-storj-io-infectious")
    (version "0.0.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/storj/infectious")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0065fizv2rqqk21amkcb008pvv1bv69qr6bylaw0bz7l6awxmxq8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "storj.io/infectious"))
    (propagated-inputs (list go-golang-org-x-sys))
    (home-page "https://storj.io/infectious")
    (synopsis "infectious")
    (description
     "Package infectious implements Reed-Solomon forward error correction [1].  It
uses the Berlekamp-Welch [2] error correction algorithm to achieve the ability
to actually correct errors.")
    (license #f))) ; to check

(define-public go-storj-io-monkit-jaeger
  (package
    (name "go-storj-io-monkit-jaeger")
    (version "0.0.0-20240221095020-52b0792fa6cd")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/storj/monkit-jaeger")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "175pzbl3519cicmzyxqfhb3l3fcg5j6n7sf9jlhb092kzavlgiym"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "storj.io/monkit-jaeger"))
    (propagated-inputs (list go-storj-io-common
                             go-golang-org-x-sync
                             go-go-uber-org-zap
                             go-github-com-zeebo-mwc
                             go-github-com-zeebo-errs
                             go-github-com-stretchr-testify
                             go-github-com-spacemonkeygo-monkit-v3
                             go-github-com-apache-thrift))
    (home-page "https://storj.io/monkit-jaeger")
    (synopsis "monkit-jaeger")
    (description
     "Package jaeger provides a monkit plugin for sending traces to Jaeger Agent.")
    (license license:asl2.0)))

(define-public go-storj-io-picobuf
  (package
    (name "go-storj-io-picobuf")
    (version "0.0.4")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/storj/picobuf")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "18h4ashs0i8qikqi7x30yy7y72xkxcc57xdxry6nssdzcjym4w5n"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "storj.io/picobuf"))
    (propagated-inputs (list go-google-golang-org-protobuf
                             go-github-com-zeebo-assert))
    (home-page "https://storj.io/picobuf")
    (synopsis "Picobuf")
    (description
     "Package picobuf is a light replacement for a subset of protobuf.")
    (license license:expat)))

(define-public go-storj-io-uplink
  (package
    (name "go-storj-io-uplink")
    (version "1.13.1")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/storj/uplink")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0294wyyilvf69dk5vza6zbw3imcvp7ph5nrp7d1hchxrysk3g07y"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "storj.io/uplink"))
    (propagated-inputs (list go-storj-io-picobuf
                             go-storj-io-infectious
                             go-storj-io-eventkit
                             go-storj-io-drpc
                             go-storj-io-common
                             go-golang-org-x-sync
                             go-golang-org-x-exp
                             go-github-com-zeebo-sudo
                             go-github-com-zeebo-errs
                             go-github-com-stretchr-testify
                             go-github-com-spacemonkeygo-monkit-v3
                             go-github-com-klauspost-compress ; packaged
))
    (home-page "https://storj.io/uplink")
    (synopsis "Libuplink")
    (description
     "Package uplink is the main entrypoint to interacting with Storj Labs
decentralized storage network.")
    (license license:expat)))

(define-public go-strk-kbt-io-projects-go-libravatar
  (package
    (name "go-strk-kbt-io-projects-go-libravatar")
    (version "0.0.0-20191008002943-06d1c002b251")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://strk.kbt.io/git/go-libravatar.git")
             (commit (go-version->git-ref version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1s5q8iyx0sy5fav7qbivmza755pv5yjjjqh51vhs03pcxcz8fbi1"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "strk.kbt.io/projects/go/libravatar"))
    (home-page "https://strk.kbt.io/projects/go/libravatar")
    (synopsis "Use")
    (description
     "Simple @@url{https://www.golang.org,golang} library for serving
@@url{https://www.libravatar.org,federated avatars}.")
    (license license:expat)))

(define-public go-tags-cncf-io-container-device-interface
  (package
    (name "go-tags-cncf-io-container-device-interface")
    (version "0.8.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cncf-tags/container-device-interface")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1drp1q0naprgphszm8rrkjinwc1mixrnid3hik3bm9w8mrlamh4f"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "tags.cncf.io/container-device-interface"))
    (propagated-inputs (list go-sigs-k8s-io-yaml
                             go-golang-org-x-sys
                             go-golang-org-x-mod
                             go-github-com-xeipuuv-gojsonschema
                             go-github-com-stretchr-testify
                             go-github-com-opencontainers-runtime-tools
                             go-github-com-opencontainers-runtime-spec ; packaged
                             go-github-com-fsnotify-fsnotify ; packaged
                             ))
    (home-page "https://tags.cncf.io/container-device-interface")
    (synopsis "CDI - The Container Device Interface")
    (description
     "@@strong{NOTE:} The API for injecting CDI devices that existed at
@@code{container-device-interface/pkg} has been removed.  Users of this API
should migrate to the one at @@code{container-device-interface/pkg/cdi} as this
is actively maintained.")
    (license license:asl2.0)))

(define-public go-tags-cncf-io-container-device-interface-specs-go
  (package
    (name "go-tags-cncf-io-container-device-interface-specs-go")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/cncf-tags/container-device-interface")
             (commit (go-version->git-ref version
                                          #:subdir "specs-go"))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "187j81adgll5z1lfwfsydshww0k76h34a853grvr35qhlzg9p0w2"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "tags.cncf.io/container-device-interface/specs-go"
      #:unpack-path "tags.cncf.io/container-device-interface"))
    (propagated-inputs (list go-golang-org-x-mod))
    (home-page "https://tags.cncf.io/container-device-interface")
    (synopsis #f)
    (description #f)
    (license license:asl2.0)))

(define-public go-tailscale-com
  (package
    (name "go-tailscale-com")
    (version "1.78.3")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/tailscale/tailscale")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1bn7g6kcmwmig6fl5i747r21x4xcf8xdd659r1d5ycp9w36dwrcz"))))
    (build-system go-build-system)
    (arguments
     (list
                                                              ;; check-go-version
      #:import-path "tailscale.com"))
    (propagated-inputs (list go-k8s-io-utils
                        go-k8s-io-apiextensions-apiserver
                        go-gopkg-in-yaml-v3
                        go-github-com-tailscale-go-winio
                        go-github-com-stretchr-testify
                        go-github-com-prometheus-client-model ; packaged
                        go-github-com-mdlayher-socket
                        go-github-com-gorilla-csrf
                        go-github-com-fsnotify-fsnotify       ; packaged
                        go-github-com-aleksi-pointer
                        go-software-sslmate-com-src-go-pkcs12
                        go-sigs-k8s-io-yaml ; packaged
                        go-sigs-k8s-io-controller-tools
                        go-sigs-k8s-io-controller-runtime
                        go-k8s-io-client-go
                        go-k8s-io-apiserver
                        go-k8s-io-apimachinery
                        go-k8s-io-api
                        go-honnef-co-go-tools
                        go-gvisor-dev-gvisor
                        ;; go-gopkg-in-square-go-jose-v2
                        go-golang-zx2c4-com-wireguard-windows
                        go-golang-zx2c4-com-wintun
                        go-golang-org-x-tools ; packaged
                        go-golang-org-x-time ; packaged
                        go-golang-org-x-term ; packaged
                        go-golang-org-x-sys ; packaged
                        go-golang-org-x-sync ; packaged
                        go-golang-org-x-oauth2 ; packaged
                        go-golang-org-x-net ; packaged
                        go-golang-org-x-mod ; packaged
                        go-golang-org-x-exp ; packaged
                        go-golang-org-x-crypto ; packaged
                        go-go4-org-netipx
                        go-go4-org-mem
                        go-go-uber-org-zap
                        go-github-com-vishvananda-netns
                        go-github-com-u-root-u-root
                        go-github-com-toqueteos-webbrowser
                        go-github-com-tcnksm-go-httpstat
                        go-github-com-tc-hib-winres
                       ;go-github-com-tailscale-xnet
                        go-github-com-tailscale-wireguard-go
                        go-github-com-tailscale-wf
                        go-github-com-tailscale-web-client-prebuilt
                        go-github-com-tailscale-peercred
                        go-github-com-tailscale-netlink
                        go-github-com-tailscale-mkctr
                        go-github-com-tailscale-hujson
                        go-github-com-tailscale-goupnp
                        go-github-com-tailscale-golang-x-crypto
                        go-github-com-tailscale-goexpect
                        go-github-com-tailscale-depaware      ; packaged
                        go-github-com-tailscale-certstore
                        go-github-com-studio-b12-gowebdav
                        go-github-com-skip2-go-qrcode
                        go-github-com-safchain-ethtool
                        go-github-com-prometheus-prometheus
                        go-github-com-prometheus-common
                        go-github-com-prometheus-client-golang ; packaged

                        go-github-com-prometheus-community-pro-bing
                        go-github-com-pkg-sftp
                        go-github-com-pkg-errors
                        go-github-com-peterbourgon-ff-v3      ; packaged
                        go-github-com-mitchellh-go-ps ; packaged
                        go-github-com-miekg-dns
                        go-github-com-mdlayher-sdnotify
                        go-github-com-mdlayher-netlink
                        go-github-com-mdlayher-genetlink
                        go-github-com-mattn-go-isatty
                        go-github-com-mattn-go-colorable
                        go-github-com-kortschak-wol
                        go-github-com-klauspost-compress      ; packaged
                        go-github-com-kballard-go-shellquote  ; packaged
                        go-github-com-jsimonetti-rtnetlink
                        go-github-com-josharian-native
                        go-github-com-jellydator-ttlcache-v3
                        go-github-com-insomniacslk-dhcp       ; packaged
                        go-github-com-inetaf-tcpproxy         ; packaged
                        go-github-com-illarion-gonotify-v2
                        go-github-com-hdevalence-ed25519consensus
                        go-github-com-goreleaser-nfpm-v2
                        go-github-com-google-uuid ; packaged
                        go-github-com-google-nftables
                        go-github-com-google-gopacket         ; packaged
                        go-github-com-google-go-containerregistry
                        go-github-com-google-go-cmp ; packaged
                        go-github-com-golangci-golangci-lint
                        go-github-com-golang-snappy
                        go-github-com-golang-groupcache       ; packaged
                        go-github-com-godbus-dbus-v5 ; packaged
                        go-github-com-go-ole-go-ole
                        go-github-com-go-logr-zapr
                        go-github-com-go-json-experiment-json
                        go-github-com-gaissmai-bart ; packaged
                        go-github-com-fxamacker-cbor-v2
                        go-github-com-frankban-quicktest
                        go-github-com-fogleman-gg
                        go-github-com-evanw-esbuild
                        go-github-com-elastic-crd-ref-docs
                        go-github-com-dsnet-try
                        go-github-com-djherbis-times
                        go-github-com-distribution-reference
                        go-github-com-digitalocean-go-smbios ; packaged
                        go-github-com-dblohm7-wingoes
                        go-github-com-dave-patsy
                        go-github-com-dave-courtney
                        go-github-com-creack-pty
                        go-github-com-coreos-go-systemd
                        go-github-com-coreos-go-iptables
                        go-github-com-coder-websocket
                        go-github-com-cilium-ebpf
                        go-github-com-bramvdbogaerde-go-scp
                        go-github-com-aws-aws-sdk-go-v2-service-ssm
                        go-github-com-aws-aws-sdk-go-v2-service-s3 ; packaged
                        go-github-com-aws-aws-sdk-go-v2-feature-s3-manager ; packaged
                        go-github-com-aws-aws-sdk-go-v2-config ; packaged
                        go-github-com-aws-aws-sdk-go-v2 ; packaged
                        go-github-com-atotto-clipboard        ; packaged
                        go-github-com-anmitsu-go-shlex
                        go-github-com-andybalholm-brotli
                        go-github-com-alexbrainman-sspi
                        go-github-com-akutz-memconn
                        go-fyne-io-systray
                        go-filippo-io-mkcert))
    (home-page "https://tailscale.com")
    (synopsis "Tailscale")
    (description "Package tailscaleroot embeds VERSION.txt into the binary.")
    (license license:bsd-3)))

(define-public go-willnorris-com-go-gifresize
  (package
    (name "go-willnorris-com-go-gifresize")
    (version "1.0.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/willnorris/gifresize")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0f7wjbyam3ah63wwlrvjnxa1air26aiancn1qmkrp310npi7ksyk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "willnorris.com/go/gifresize"))
    (home-page "https://willnorris.com/go/gifresize")
    (synopsis "gifresize")
    (description "Package gifresize resizes animated gifs.")
    (license license:asl2.0)))

(define-public go-willnorris-com-go-imageproxy
  (package
    (name "go-willnorris-com-go-imageproxy")
    (version "0.11.2")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/willnorris/imageproxy")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1i2199ziqaw65chx3bii8a9nwm5hv7whr2j0aa2rbbm94dbfqfil"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "willnorris.com/go/imageproxy"))
    (propagated-inputs (list go-willnorris-com-go-gifresize
                             go-golang-org-x-image
                             go-github-com-rwcarlsen-goexif ; packaged
                             go-github-com-prometheus-client-golang ; packaged

                             go-github-com-peterbourgon-diskv
                             go-github-com-muesli-smartcrop
                             go-github-com-gregjones-httpcache
                             go-github-com-gorilla-mux
                             go-github-com-gomodule-redigo
                             go-github-com-fcjr-aia-transport-go
                             go-github-com-disintegration-imaging
                             go-github-com-die-net-lrucache
                             go-github-com-aws-aws-sdk-go
                             go-github-com-paularoy-azurestoragecache
                             go-cloud-google-com-go-storage))
    (home-page "https://willnorris.com/go/imageproxy")
    (synopsis "imageproxy")
    (description
     "Package imageproxy provides an image proxy server.  For typical use of creating
and using a Proxy, see cmd/imageproxy/main.go.")
    (license license:asl2.0)))

(define-public go-xorm-io-builder
  (package
    (name "go-xorm-io-builder")
    (version "0.3.13")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/xorm/builder")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "1khn5cmrn3my2sk8pldri2i6ymfy8q7bpc65h3pbi6l4grrmkily"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "xorm.io/builder"))
    (propagated-inputs (list go-github-com-stretchr-testify
                             go-gitea-com-xorm-sqlfiddle))
    (home-page "https://xorm.io/builder")
    (synopsis "SQL builder")
    (description
     "Package builder is a simple and powerful sql builder for Go.")
    (license license:bsd-3)))
(define-public go-xorm-io-xorm
  (package
    (name "go-xorm-io-xorm")
    (version "1.3.9")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://gitea.com/xorm/xorm")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0khwhfkxdqq7fyaixqwsx1dv41i6qn148b19s31bcjzfimcsfb38"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "xorm.io/xorm"))
    (propagated-inputs (list go-xorm-io-builder
                             go-modernc-org-sqlite
                             go-github-com-ziutek-mymysql
                             go-github-com-syndtr-goleveldb
                             go-github-com-stretchr-testify
                             go-github-com-shopspring-decimal
                             go-github-com-microsoft-go-mssqldb
                             go-github-com-mattn-go-sqlite3 ; packaged
                             go-github-com-lib-pq
                             go-github-com-json-iterator-go
                             go-github-com-jackc-pgx-v4
                             go-github-com-goccy-go-json
                             go-github-com-go-sql-driver-mysql
                             go-gitee-com-travelliu-dm))
    (home-page "https://xorm.io/xorm")
    (synopsis "xorm")
    (description "Package xorm is a simple and powerful ORM for Go.")
    (license license:bsd-3)))
(define-public go-zombiezen-com-go-sqlite
  (package
    (name "go-zombiezen-com-go-sqlite")
    (version "1.4.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/zombiezen/go-sqlite")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0l8kjxv8ga8r3iazp3k7vzp88bshsnflh1qdcl9bfvf2yjynfmdk"))))
    (build-system go-build-system)
    (arguments
     (list
      #:import-path "zombiezen.com/go/sqlite"))
    (propagated-inputs (list go-modernc-org-sqlite
                             go-modernc-org-libc
                             go-golang-org-x-text
                             go-github-com-google-go-cmp
                             go-github-com-chzyer-readline
                             go-crawshaw-io-iox))
    (home-page "https://zombiezen.com/go/sqlite")
    (synopsis #f)
    (description "Package sqlite provides a Go interface to SQLite 3.")
    (license license:isc)))
